{"version":3,"file":"static/js/main.acd27537.js","mappings":"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","sources":["styles/Colors.tsx","styles/Styles.tsx","components/CustomButtonLogin.tsx","contexts/UsuarioContext.tsx","contexts/globalButonNavbarSelected.tsx","components/CustomButonLoginOptions.tsx","components/CustomTextImputSearch.tsx","services/cerverHost.tsx","contexts/navigationRef.tsx","services/UsuarioServices.tsx","services/AccionesUsuarioServices.tsx","contexts/PermisosNavbarContext.tsx","services/EntradaServices.tsx","components/Navbar.tsx","components/CustomDropDownPicker.tsx","contexts/AuxiliarContextFromModalProductsDates.tsx","contexts/AuxiliarSortProductos.tsx","services/RolPermisosAndRol.tsx","services/TiendaServices.tsx","services/MonedaService.tsx","services/ProductoServices.tsx","components/CustomDropDownPikerFromMover.tsx","services/ImageServices.tsx","services/MovimientosServices.tsx","contexts/AuxiliarContextPaginadoproductos.tsx","components/MyDateTableProductos.tsx","components/MyDateTableModalShowDatesTienda.tsx","components/MyDateTableModalShowDateProveedores.tsx","contexts/NavigationLostContext.tsx","components/CustomRadioButtonsSearch.tsx","Views/ProductosView.tsx","Views/HomeScreen.tsx","components/CustomDropDownDetails.tsx","contexts/AuxiliarContextModalEntradas.tsx","components/MyDateInput.tsx","components/MyDateTableModalDataMoverTiendas.tsx","contexts/AuxiliarSortServicios.tsx","components/MyDateTableServicios.tsx","services/ServiciosServices.tsx","services/TipoServiciosServices.tsx","services/clienteServices.tsx","services/ventasServices.tsx","components/CustomRadioButtonSearch.tsx","services/GarantiaServices.tsx","services/EncargoServices.tsx","services/DeudasServices.tsx","services/PagoDeudaServices.tsx","Views/ServiciosView.tsx","Views/LoginView.tsx","contexts/AuxiliarSortMovimientos.tsx","contexts/AuxiliarContextFromModalProveedores.tsx","contexts/AuxiliarSortEntradas.tsx","contexts/DeleteImagenContext.tsx","services/ProveedorServices.tsx","components/MyDateTableProveedores.tsx","components/MyDateTableModalShowDatesEntradas.tsx","Views/ProveedoresView.tsx","components/MyDataTableEnMyTienda.tsx","Views/EnMyTiendaView.tsx","components/MyDateTableEntradas.tsx","components/MyDateInputVencimiento.tsx","Views/EntradasView.tsx","components/CustomButtonAdministradorView.tsx","Views/AdministracionView.tsx","contexts/AuxiliarContextModalMovimientos.tsx","components/MyDateTableMovimientos.tsx","Views/MovimientosView.tsx","contexts/AuxiliarSortUsuarios.tsx","components/MyDateTableUsuarios.tsx","Views/UsuariosView.tsx","components/MyDateTableTiendasView.tsx","components/CustomDateTimePiker.tsx","Views/TiendasView.tsx","contexts/AuxiliarSortAcciones.tsx","components/MyDateTableAcciones.tsx","Views/AccionesView.tsx","components/MyDateTablePermisos.tsx","Views/PermisosView.tsx","components/MyDateTableTipoServicio.tsx","Views/TipoServicioView.tsx","Views/CambiarMonedaView.tsx","contexts/AuxiliarSortClientes.tsx","components/MyDateTableClientes.tsx","Views/ClientesView.tsx","components/MyDateTableGarantias.tsx","Views/GarantiasView.tsx","components/MydateTableDeudas.tsx","components/MyDateTableShowPagoDeudas.tsx","Views/DeudasView.tsx","components/MyDataTableDiario.tsx","Views/DiarioView.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["export const Colors = {\r\n     negro: \"#000000\",\r\n     blanco: \"#ffffff\",\r\n     azul_Suave: \"#5687d1\",\r\n     azul_Claro: \"#315a98\",\r\n     azul_Oscuro: \"#1a365d\",\r\n     blanco_Suave: \"#F2F2F2\",\r\n     gris_claro: \"#D3D3D3\",\r\n     rojo_oscuro: \"#cd1111\",\r\n     verde_claro: \"#13cf3c\"\r\n}\r\n/*\r\n// Amarillo de Estrella de Oro\r\nexport const Colors = {\r\n     negro: \"#000000\",\r\n     blanco: \"#ffffff\",\r\n     azul_Claro: \"#c09b30\",\r\n     azul_Oscuro: \"#8a7322\",\r\n     azul_Suave: \"#e8d6a3\",\r\n     blanco_Suave: \"#F2F2F2\",\r\n     gris_claro: \"#D3D3D3\",\r\n     rojo_oscuro: \"#cd1111\",\r\n     verde_claro: \"#13cf3c\"\r\n}\r\n*/\r\n/*\r\n// Paleta de colores negra\r\n export const Colors = {\r\n     negro: \"#000000\",\r\n     blanco: \"#ffffff\",\r\n     azul_Suave: \"#c1b5b9\",\r\n     azul_Claro: \"#5d5d5d\",\r\n     azul_Oscuro: \"#090f18\",\r\n     blanco_Suave: \"#F2F2F2\",\r\n     gris_claro: \"#D3D3D3\",\r\n     rojo_oscuro: \"#cd1111\",\r\n     verde_claro: \"#13cf3c\"\r\n}\r\n/*\r\n//Paleta de colores azul\r\nexport const Colors = {\r\n     negro: \"#000000\",\r\n     blanco: \"#ffffff\",\r\n     azul_Suave: \"#5687d1\",\r\n     azul_Claro: \"#315a98\",\r\n     azul_Oscuro: \"#1a365d\",\r\n     blanco_Suave: \"#F2F2F2\",\r\n     gris_claro: \"#D3D3D3\",\r\n     rojo_oscuro: \"#cd1111\",\r\n     verde_claro: \"#13cf3c\"\r\n}\r\n*/\r\n/*\r\n//Palata de colores naranja\r\nexport const Colors = {\r\n     negro: \"#000000\",\r\n     blanco: \"#ffffff\",\r\n     azul_Claro: \"#913d19\",\r\n     azul_Oscuro: \"#853819\",\r\n     azul_Suave: \"#c16a44\",\r\n     blanco_Suave: \"#F2F2F2\",\r\n     gris_claro: \"#D3D3D3\",\r\n     rojo_oscuro: \"#cd1111\",\r\n     verde_claro: \"#13cf3c\"\r\n}\r\n*/\r\n/*\r\n//Paleta de colores verde\r\nexport const Colors = {\r\n     negro: \"#000000\",\r\n     blanco: \"#ffffff\",\r\n     verde_Claro: \"#349270\",\r\n     azul_Oscuro: \"#17593d\",\r\n     azul_Suave: \"#5cbe9a\",\r\n     blanco_Suave: \"#F2F2F2\",\r\n     gris_claro: \"#D3D3D3\",\r\n     rojo_oscuro: \"#cd1111\",\r\n     verde_claro: \"#13cf3c\"\r\n}\r\n*/","import { Platform, StyleSheet } from \"react-native\";\r\nimport { Colors } from \"./Colors\";\r\n\r\nexport const styles = StyleSheet.create({\r\n  radioButtonDesktop: {\r\n    flexDirection: \"row\",\r\n    height: 40,\r\n    width: \"12%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    borderColor: Colors.azul_Claro,\r\n    borderWidth: 3,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginHorizontal: \"1%\",\r\n    backgroundColor: Colors.azul_Suave, // Color de fondo del botón\r\n  },\r\n  radioButtonMovil: {\r\n    flexDirection: \"row\",\r\n    height: 40,\r\n    width: \"50%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    borderColor: Colors.azul_Claro,\r\n    borderWidth: 3,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginRight: \"5%\",\r\n    marginVertical: \"5%\",\r\n    backgroundColor: Colors.azul_Suave, // Color de fondo del botón\r\n  },\r\n  radioButtonSelected: {\r\n    backgroundColor: Colors.azul_Oscuro, // Color de fondo del botón seleccionado\r\n  },\r\n  radioButtonTextDesktop: {\r\n    fontSize: 14,\r\n    color: Colors.blanco, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  radioButtonTextMovil: {\r\n    fontSize: 12,\r\n    color: Colors.blanco, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  labelTextDesktop: {\r\n    fontSize: 16,\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  labelTextModalDesktop: {\r\n    fontSize: 16,\r\n    marginTop: \"3%\",\r\n    marginLeft: \"6%\",\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  labelTextModalMovil: {\r\n    fontSize: 16,\r\n    marginTop: \"3%\",\r\n    marginLeft: \"6%\",\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  labelTextMovil: {\r\n    fontSize: 20,\r\n    marginRight: \"15%\",\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  radioButtonTextSelected: {\r\n    fontWeight: \"bold\", // Texto en negritas para el botón seleccionado\r\n    color: Colors.blanco_Suave, // Color del texto para el botón seleccionado\r\n  },\r\n  selectedText: {\r\n    marginTop: 20,\r\n    fontSize: 18,\r\n    color: \"#333\",\r\n  },\r\n  navbarDekstop: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: 15,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    width: \"100%\",\r\n    zIndex: 1000,\r\n  },\r\n  navbarMobile: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: 15,\r\n    width: \"100%\",\r\n    zIndex: 1000,\r\n  },\r\n  menuIcon: {\r\n    position: \"absolute\",\r\n    left: 15,\r\n    top: 15,\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1, // Permite que el contenido se expanda verticalmente\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10, // Añade algo de padding para mejorar el espaciado\r\n  },\r\n  buttonsContainerDesktop: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\", // Alinea los botones al inicio después de la imagen\r\n    flex: 1, // Ocupa el espacio restante\r\n  },\r\n  buttonContainterMovile: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  searchContainerDesktop: {\r\n    height: \"100%\",\r\n    width: \"20%\",\r\n    marginTop: \"2%\",\r\n    borderRadius: 20,\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  loginContainerStilesDesktop: {\r\n    height: \"70%\",\r\n    width: \"25%\",\r\n    flexDirection: \"column\", // Cambiar a columna aquí\r\n    borderRadius: 20,\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  loginContainerStilesMovil: {\r\n    height: \"70%\",\r\n    width: \"95%\",\r\n    flexDirection: \"column\", // Cambiar a columna aquí\r\n    borderRadius: 20,\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  searchContainerMovil: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    borderRadius: 20,\r\n    marginTop: \"3%\",\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  modalViewMesajeContainerDesktop: {\r\n    width: \"40%\",\r\n    padding: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 5,\r\n  },\r\n  modalViewMesajeContainerMovil: {\r\n    width: \"80%\",\r\n    padding: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 5,\r\n  },\r\n  textSearchDesktop: {\r\n    color: Colors.blanco,\r\n    fontSize: 18,\r\n    marginTop: \"5%\",\r\n    justifyContent: \"center\",\r\n    marginLeft: \"6%\",\r\n    fontWeight: \"bold\", // Para negritas\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  textSearchMovil: {\r\n    color: Colors.blanco,\r\n    fontSize: 16,\r\n    marginTop: \"5%\",\r\n    justifyContent: \"center\",\r\n    marginLeft: \"6%\",\r\n    fontWeight: \"bold\", // Para negritas\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  textNavbarMovil: {\r\n    color: Colors.blanco,\r\n    fontSize: 17,\r\n    justifyContent: \"center\",\r\n    marginLeft: \"6%\",\r\n    fontWeight: \"bold\", // Para negritas\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  textImputLogin: {\r\n    height: 35,\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"90%\",\r\n    marginTop: \"2%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    fontSize: 16, // Tamaño de letra más grande\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  textImputModal: {\r\n    height: 40,\r\n    borderColor: Colors.azul_Oscuro,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"90%\",\r\n    marginTop: \"2%\",\r\n    marginHorizontal: \"5%\",\r\n    backgroundColor: Colors.blanco_Suave,\r\n    borderRadius: 13,\r\n    fontSize: 16, // Tamaño de letra más grande\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  textLabelAsInput: {\r\n    height: 40, // Altura similar al TextInput\r\n    borderColor: Colors.negro,\r\n    borderWidth: 1, // Borde delgado\r\n    shadowColor: Colors.negro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Opacidad de la sombra\r\n    shadowRadius: 14, // Difuminado de la sombra\r\n    width: \"90%\", // Ancho similar al TextInput\r\n    marginTop: \"2%\",\r\n    marginHorizontal: \"5%\",\r\n    backgroundColor: Colors.blanco_Suave,\r\n    borderRadius: 13,\r\n    fontSize: 16, // Tamaño de letra\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno horizontal\r\n    paddingVertical: 10, // Espacio interno vertical (ajusta según sea necesario)\r\n    color: Colors.negro, // Color del texto\r\n    lineHeight: 20, // Altura de línea igual a la altura del contenedor\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  textDescroptionLabelAsInput: {\r\n    height: 150, // Altura similar al TextInput\r\n    borderColor: Colors.negro,\r\n    borderWidth: 1, // Borde delgado\r\n    shadowColor: Colors.negro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Opacidad de la sombra\r\n    shadowRadius: 14, // Difuminado de la sombra\r\n    width: \"90%\", // Ancho similar al TextInput\r\n    marginTop: \"2%\",\r\n    marginHorizontal: \"5%\",\r\n    backgroundColor: Colors.blanco_Suave,\r\n    borderRadius: 13,\r\n    fontSize: 16, // Tamaño de letra\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno horizontal\r\n    paddingVertical: 10, // Espacio interno vertical (ajusta según sea necesario)\r\n    color: Colors.negro, // Color del texto\r\n    lineHeight: 20, // Altura de línea igual a la altura del contenedor\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  textImputModalNOEDITABLE: {\r\n    height: 40,\r\n    borderColor: Colors.negro,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    width: \"90%\",\r\n    marginTop: \"2%\",\r\n    marginHorizontal: \"5%\",\r\n    backgroundColor: Colors.blanco_Suave,\r\n    borderRadius: 13,\r\n    fontSize: 16, // Tamaño de letra más grande\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  customTextImputSearchFullDesktop: {\r\n    height: 30,\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"90%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    marginLeft: \"5%\",\r\n    marginTop: \"4%\",\r\n    fontSize: 16, // Tamaño de letra más grande\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  customTextImputSearchFullMovil: {\r\n    height: 30,\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"90%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    marginLeft: \"5%\",\r\n    marginTop: \"4%\",\r\n    fontSize: 12, // Tamaño de letra más grande\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  customTextImputSearchFiftyDesktop: {\r\n    height: 30,\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"42.5%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    marginLeft: \"5%\",\r\n    marginTop: \"4%\",\r\n    fontSize: 16, // Tamaño de letra más grande\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  customTextImputSearchFiftyMovil: {\r\n    height: 30,\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"42.5%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    marginLeft: \"5%\",\r\n    marginTop: \"4%\",\r\n    fontSize: 12, // Tamaño de letra más grande\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  movilButtonBusqueda: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 15,\r\n    flexDirection: \"row\",\r\n    width: \"70%\", // Ancho fijo para pantallas de escritorio\r\n    height: 50, // Altura fija para pantallas de escritorio\r\n    marginRight: \"2%\",\r\n    marginTop: \"2%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    elevation: 3,\r\n  },\r\n  separatorBlanco: {\r\n    width: \"90%\", // Ancho del separador\r\n    marginLeft: \"5%\",\r\n    marginTop: \"5%\",\r\n    height: 1, // Altura de la línea (grosor)\r\n    backgroundColor: Colors.blanco, // Color blanco\r\n  },\r\n  separatorNegro: {\r\n    width: \"95%\", // Ancho del separador\r\n    marginTop: \"8%\",\r\n    height: 1, // Altura de la línea (grosor)\r\n    backgroundColor: Colors.negro, // Color blanco\r\n  },\r\n});\r\n","import { Colors } from '../styles/Colors';\r\nimport React, { useState } from 'react';\r\nimport { TouchableOpacity, Image, StyleSheet, Text, Animated, View, useWindowDimensions } from 'react-native';\r\n\r\ninterface CustomButtonProps {\r\n  imageSource: any;\r\n  text: any;\r\n  onPress: () => void;\r\n  isSelected: boolean; // Nuevo parámetro para cambiar el color del botón\r\n}\r\n\r\nconst CustomButtonNavbar: React.FC<CustomButtonProps> = ({ imageSource, onPress, text, isSelected }) => {\r\n  const [scale] = useState(new Animated.Value(1));\r\n  const { width } = useWindowDimensions();\r\n\r\n  const isMobile = width < 930;\r\n\r\n  // Estilos condicionales según el parámetro `isSelected`\r\n  const buttonStyles = [\r\n    isMobile ? styles.mobileButton : styles.desktopButton,\r\n    isSelected && { backgroundColor: Colors.azul_Oscuro } // Cambia solo el color si `isSelected` es true\r\n  ];\r\n  const viewStyles = isMobile ? styles.mobileContent : styles.desktopContent;\r\n\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={buttonStyles}\r\n      onPressIn={onPressIn}\r\n      onPressOut={onPressOut}\r\n      onPress={onPress}\r\n    >\r\n      <Animated.View style={{ transform: [{ scale }] }}>\r\n        <View style={viewStyles}>\r\n          <Image source={imageSource} style={styles.image} />\r\n          <Text style={styles.text}>{text}</Text>\r\n        </View>\r\n      </Animated.View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  mobileButton: {\r\n    backgroundColor: Colors.azul_Claro,\r\n    borderRadius: 15,\r\n    height: 80,\r\n    width: \"180%\",\r\n    marginLeft: \"80%\",\r\n    marginVertical: 5,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 3,\r\n  },\r\n  desktopButton: {\r\n    backgroundColor: Colors.azul_Claro,\r\n    borderRadius: 15,\r\n    width: \"4%\",\r\n    minWidth: 120,\r\n    height: 100,\r\n    marginHorizontal: 10,\r\n    marginBottom: 2,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 3,\r\n  },\r\n  desktopContent: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  mobileContent: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  image: {\r\n    width: 50,\r\n    height: 50,\r\n    marginRight: 10,\r\n  },\r\n  text: {\r\n    fontSize: 18,\r\n    color: Colors.blanco,\r\n  },\r\n});\r\n\r\nexport default CustomButtonNavbar;\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { RolPermiso } from \"../services/RolPermisosAndRol\";\r\n\r\n// Define la interfaz del Usuario\r\nexport interface Usuario {\r\n  id_usuario: string;\r\n  nombre: string;\r\n  telefono?: string;\r\n  direccion?: string;\r\n  carnet_identidad?: string;\r\n  detalles_bancarios?: string;\r\n  nombre_usuario: string;\r\n  email: string;\r\n  token: string;\r\n  id_rol: string;\r\n  nombre_rol: string;\r\n  id_tienda: string;\r\n  nombre_tienda: string;\r\n  permisos: RolPermiso[];\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface UsuarioContextType {\r\n  usuario: Usuario | null;\r\n  setUsuario: (usuario: Usuario | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst UsuarioContext = createContext<UsuarioContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const UsuarioProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [usuario, setUsuario] = useState<Usuario | null>(null);\r\n\r\n  return (\r\n    <UsuarioContext.Provider value={{ usuario: usuario, setUsuario: setUsuario }}>\r\n      {children}\r\n    </UsuarioContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useUsuario = () => {\r\n  const context = React.useContext(UsuarioContext);\r\n  if (context === undefined) {\r\n    throw new Error('useUsuario debe usarse dentro de un ProductoUsuario');\r\n  }\r\n  return context;\r\n};","import React, { createContext, useState, ReactNode } from 'react';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SelectedButon {\r\n  butonSelected: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortEntradasContextType {\r\n  selectedButon: SelectedButon | null;\r\n  setSelectedButon: (sortEntradas: SelectedButon | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortEntradasContext = createContext<SortEntradasContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SelectedButonProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [selectedButon, setSelectedButon] = useState<SelectedButon | null>(null);\r\n\r\n  return (\r\n    <SortEntradasContext.Provider value={{ selectedButon: selectedButon, setSelectedButon: setSelectedButon }}>\r\n      {children}\r\n    </SortEntradasContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSelectedButon = () => {\r\n  const context = React.useContext(SortEntradasContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortEntradas debe usarse dentro de un SortEntradas');\r\n  }\r\n  return context;\r\n};","import React, { useState } from 'react';\r\nimport {\r\n  TouchableOpacity,\r\n  Image,\r\n  StyleSheet,\r\n  Text,\r\n  Animated,\r\n  View,\r\n  Modal,\r\n  FlatList,\r\n  useWindowDimensions,\r\n} from 'react-native';\r\nimport { Colors } from '../styles/Colors';\r\n\r\ninterface CustomDropdownProps {\r\n  imageSource: any;\r\n  text: string;\r\n  options: { label: string; value: string; image: any }[]; // Agregar imagen a cada opción\r\n  onSelect: (value: string) => void;\r\n  isSelected: boolean;\r\n}\r\n\r\nconst CustomDropdown: React.FC<CustomDropdownProps> = ({\r\n  imageSource,\r\n  text,\r\n  options,\r\n  onSelect,\r\n  isSelected,\r\n}) => {\r\n  const [scale] = useState(new Animated.Value(1));\r\n  const { width } = useWindowDimensions();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const isMobile = width < 930;\r\n\r\n  const buttonStyles = [\r\n    isMobile ? styles.mobileButton : styles.desktopButton,\r\n    isSelected && { backgroundColor: Colors.azul_Oscuro },\r\n  ];\r\n  const viewStyles = isMobile ? styles.mobileContent : styles.desktopContent;\r\n\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const handleSelect = (value: string) => {\r\n    onSelect(value);\r\n    setModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      {/* Botón para abrir el dropdown */}\r\n      <TouchableOpacity\r\n        style={buttonStyles}\r\n        onPressIn={onPressIn}\r\n        onPressOut={onPressOut}\r\n        onPress={() => setModalVisible(true)}\r\n      >\r\n        <Animated.View style={{ transform: [{ scale }] }}>\r\n          <View style={viewStyles}>\r\n            <Image source={imageSource} style={styles.image} />\r\n            <Text style={styles.text}>{text}</Text>\r\n          </View>\r\n        </Animated.View>\r\n      </TouchableOpacity>\r\n\r\n      {/* Modal para mostrar las opciones */}\r\n      <Modal\r\n        transparent={true}\r\n        animationType=\"fade\"\r\n        visible={modalVisible}\r\n        onRequestClose={() => setModalVisible(false)}\r\n      >\r\n        <TouchableOpacity\r\n          style={styles.modalOverlay}\r\n          onPress={() => setModalVisible(false)}\r\n        >\r\n          <View style={isMobile? styles.modalContentMovil : styles.modalContentDesktop}>\r\n            <FlatList\r\n              data={options}\r\n              keyExtractor={(item) => item.value}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  style={styles.option}\r\n                  onPress={() => handleSelect(item.value)}\r\n                >\r\n                  <Image source={item.image} style={styles.optionImage} /> {/* Imagen antes del label */}\r\n                  <Text style={styles.optionText}>{item.label}</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            />\r\n          </View>\r\n        </TouchableOpacity>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  mobileButton: {\r\n    backgroundColor: Colors.azul_Claro,\r\n    borderRadius: 15,\r\n    height: 80,\r\n    width: \"180%\",\r\n    marginVertical: 5,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 3,\r\n  },\r\n  desktopButton: {\r\n    backgroundColor: Colors.azul_Claro,\r\n    borderRadius: 15,\r\n    width: \"4%\",\r\n    minWidth: 120,\r\n    height: 100,\r\n    marginHorizontal: 10,\r\n    marginBottom: 2,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 3,\r\n  },\r\n  desktopContent: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  mobileContent: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  image: {\r\n    width: 50,\r\n    height: 50,\r\n    marginRight: 10,\r\n  },\r\n  text: {\r\n    fontSize: 18,\r\n    color: Colors.blanco,\r\n  },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  modalContentDesktop: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    width: '30%',\r\n    maxHeight: '50%',\r\n  },\r\n  modalContentMovil: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    width: '80%',\r\n    maxHeight: '50%',\r\n  },\r\n  option: {\r\n    flexDirection: 'row', // Para alinear imagen y texto en línea\r\n    alignItems: 'center',\r\n    paddingVertical: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  optionImage: { // Estilo para la imagen de cada opción\r\n    width: 30,\r\n    height: 30,\r\n    marginRight: 10,\r\n    tintColor: Colors.negro\r\n  },\r\n  optionText: {\r\n    fontSize: 18,\r\n    color: Colors.azul_Oscuro,\r\n  },\r\n});\r\n\r\nexport default CustomDropdown;\r\n","import React, { forwardRef } from \"react\";\r\nimport { TextInput, StyleSheet, TextInputProps } from \"react-native\";\r\n\r\ninterface CustomTextInputProps {\r\n  cursorColor?: string;\r\n  style: any;\r\n  placeholder?: string;\r\n  editable?: boolean;\r\n  value?: string;\r\n  scrollEnabled?: boolean;\r\n  numberOfLines?: number;\r\n  multiline?: boolean;\r\n  onBlur?: () => void;\r\n  onChangeText?: (text: string) => void;\r\n  onKeyPress?: (event: any) => void; // Agregamos onKeyPress como opcional\r\n  autoCapitalize?: \"none\" | \"sentences\" | \"words\" | \"characters\";\r\n  autoCompleteType?:\r\n    | \"off\"\r\n    | \"username\"\r\n    | \"password\"\r\n    | \"email\"\r\n    | \"name\"\r\n    | \"tel\"\r\n    | \"street-address\"\r\n    | \"postal-code\"\r\n    | \"cc-number\"\r\n    | \"cc-csc\"\r\n    | \"cc-exp\"\r\n    | \"cc-exp-month\"\r\n    | \"cc-exp-year\";\r\n  secureTextEntry?: boolean;\r\n  keyboardType?:\r\n    | \"default\"\r\n    | \"email-address\"\r\n    | \"numeric\"\r\n    | \"phone-pad\"\r\n    | \"ascii-capable\"\r\n    | \"numbers-and-punctuation\"\r\n    | \"url\"\r\n    | \"number-pad\"\r\n    | \"name-phone-pad\"\r\n    | \"decimal-pad\"\r\n    | \"twitter\"\r\n    | \"web-search\"\r\n    | \"visible-password\";\r\n}\r\n\r\n// Usa forwardRef para pasar correctamente el ref\r\nconst CustomTextInputSearch = forwardRef<TextInput, CustomTextInputProps>(\r\n  (\r\n    {\r\n      placeholder,\r\n      autoCapitalize,\r\n      autoCompleteType,\r\n      secureTextEntry,\r\n      keyboardType,\r\n      cursorColor,\r\n      onChangeText,\r\n      value,\r\n      onBlur,\r\n      style,\r\n      multiline,\r\n      numberOfLines,\r\n      scrollEnabled,\r\n      editable,\r\n      onKeyPress, // Recibimos onKeyPress\r\n    },\r\n    ref // Aquí forwardRef expone la referencia\r\n  ) => {\r\n    return (\r\n      <TextInput\r\n        style={style}\r\n        editable={editable}\r\n        numberOfLines={numberOfLines}\r\n        placeholder={placeholder}\r\n        placeholderTextColor=\"rgba(255, 255, 255, 0.8)\"\r\n        autoCapitalize={autoCapitalize}\r\n        autoComplete={autoCompleteType}\r\n        secureTextEntry={secureTextEntry}\r\n        keyboardType={keyboardType}\r\n        cursorColor={cursorColor}\r\n        value={value}\r\n        scrollEnabled={scrollEnabled}\r\n        multiline={multiline}\r\n        onBlur={onBlur}\r\n        ref={ref} // Asigna el ref al TextInput\r\n        onChangeText={onChangeText}\r\n        onKeyPress={onKeyPress} // Pasamos onKeyPress al TextInput\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default CustomTextInputSearch;\r\n","\r\nexport const cerverHost = \"http://31.170.165.44:4000\";\r\nexport const cerverHostImages = \"http://31.170.165.44:4000\";\r\n// https://my-leniogestionbackend-w5gc.onrender.com\r\n// http://192.168.1.103 Yunior el del puente yayabo","// navigationRef.ts\r\nimport { createRef } from \"react\";\r\nimport { NavigationContainerRef } from \"@react-navigation/native\";\r\nimport { RootStackParamList } from \"../App\";\r\n\r\n// Define la referencia de navegación global con el tipo correcto\r\nexport const navigationRef = createRef<NavigationContainerRef<RootStackParamList>>();\r\n\r\n// Función de navegación global\r\nexport function navigate<RouteName extends keyof RootStackParamList>(\r\n  name: RouteName,\r\n  params?: RootStackParamList[RouteName]\r\n) {\r\n  // Asegúrate de que los parámetros sean correctamente tipados y pasados\r\n  navigationRef.current?.navigate(name, params as any);\r\n}\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\nimport { UsuarioTabla } from \"../components/MyDateTableUsuarios\";\r\n\r\n// Función para que iniciar seción a los usuarios\r\nexport const iniciarSecionUser = async (userName: String, password: String) => {\r\n    try {\r\n        const response = await axios.post(\r\n          `${cerverHost}/Usuario/auth`,\r\n          {\r\n            nombre_usuario: userName,\r\n            contrasenna: password\r\n          }\r\n        );\r\n\r\n        if(response.data.msg === \"Usuario encontrado\"){\r\n          return response;\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Error al iniciar seción: \", error);\r\n        return false;\r\n      }\r\n}\r\n\r\n// Agregar usuario al sistema\r\nexport const addUsuario = async (\r\n  token: string,\r\n  nombre: string,\r\n  nombre_usuario: string,\r\n  contrasenna: string,\r\n  email: string,\r\n  telefono: string,\r\n  direccion: string,\r\n  carnet_identidad: string,\r\n  detalles_bancarios: string,\r\n  rol: string,\r\n  tienda: string,\r\n  salario_CUP: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Usuario/createUsuario`,\r\n      {\r\n        nombre: nombre,\r\n        nombre_usuario: nombre_usuario,\r\n        contrasenna: contrasenna,\r\n        email: email,\r\n        telefono: telefono,\r\n        direccion: direccion,\r\n        carnet_identidad: (carnet_identidad === \"\")? null : carnet_identidad,\r\n        detalles_bancarios: detalles_bancarios,\r\n        salario_CUP: salario_CUP,\r\n        rol: {\"id_rol\": rol},\r\n        tienda: {\"id_tienda\": tienda}\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error incertar el usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Usuario del sistema\r\nexport const deleteUsuario = async (token: String, id_usuario:string) => {\r\n  try {\r\n    const response = await axios.delete(`${cerverHost}/Usuario/deleteUsuario/${id_usuario}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al eliminar el usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar datos de un usuario conociendo la contraeña nueva\r\nexport const actualizarUsuarioConContraseña = async (\r\n  token: string,\r\n  id_usuario: string,\r\n  nombre: string,\r\n  nombre_usuario: string,\r\n  contrasenna: string,\r\n  email: string,\r\n  telefono: string,\r\n  direccion: string,\r\n  carnet_identidad: string,\r\n  detalles_bancarios: string,\r\n  rol: string,\r\n  tienda: string,\r\n  activo: boolean,\r\n  salario_CUP: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Usuario/updateUsuario/${id_usuario}`,\r\n      {\r\n        nombre: nombre,\r\n        nombre_usuario: nombre_usuario,\r\n        contrasenna: contrasenna,\r\n        email: email,\r\n        telefono: telefono,\r\n        direccion: direccion,\r\n        carnet_identidad: carnet_identidad,\r\n        detalles_bancarios: detalles_bancarios,\r\n        activo: activo,\r\n        salario_CUP: salario_CUP,\r\n        rol: {\"id_rol\": rol},\r\n        tienda: {\"id_tienda\": tienda}\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error modificar el usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar datos de un usuario sin conociendo la contraeña nueva\r\nexport const actualizarUsuarioSinContraseña = async (\r\n  token: string,\r\n  id_usuario: string,\r\n  nombre: string,\r\n  nombre_usuario: string,\r\n  email: string,\r\n  telefono: string,\r\n  direccion: string,\r\n  carnet_identidad: string,\r\n  detalles_bancarios: string,\r\n  rol: string,\r\n  tienda: string,\r\n  activo: boolean,\r\n  salario_CUP: string\r\n  \r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Usuario/updateUsuario/${id_usuario}`,\r\n      {\r\n        nombre: nombre,\r\n        nombre_usuario: nombre_usuario,\r\n        email: email,\r\n        telefono: telefono,\r\n        direccion: direccion,\r\n        carnet_identidad: carnet_identidad,\r\n        detalles_bancarios: detalles_bancarios,\r\n        activo: activo,\r\n        salario_CUP: salario_CUP,\r\n        rol: {\"id_rol\": rol},\r\n        tienda: {\"id_tienda\": tienda}\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error modificar el usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Función para obtener algunos datos de un usuario específico\r\nexport const getUsuarioById = async (token: String, id_user: String) => {\r\n  try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Usuario/${id_user}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          }\r\n        }\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error en la solicitud de datos de el usuario:', error);\r\n      alert(error);\r\n      return false;\r\n    }\r\n}\r\n\r\n// Optener todos los datos de todos los usuarios\r\nexport const getAllUsuarios = async (token: String) => {\r\n  try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Usuario`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          }\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.error('Error en la solicitud de datos de los usuarios:', error);\r\n      alert(error);\r\n      return false;\r\n    }\r\n}\r\n\r\n// Función para obtener los permisos de un usuario específico\r\nexport const allPermises = async (token: String, id_user: String) => {\r\n  try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Usuario/${id_user}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          }\r\n        }\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.error('Error en la solicitud de datos de el usuario:', error);\r\n      alert(error);\r\n      return false;\r\n    }\r\n}\r\n\r\n// Filtrar usuarios\r\nexport const filtrarUsuario = async (\r\n  token: string,\r\n  nombre_usuario: string,\r\n  email: string,\r\n  telefono: string,\r\n  id_rol: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Usuario/api/filtrar`,\r\n      {\r\n        nombre_usuario: nombre_usuario,\r\n        email: email,\r\n        telefono: telefono,\r\n        id_rol: id_rol,\r\n        id_tienda: id_tienda\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrar usuarios: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar usuarios\r\nexport const ordenarUsuarios = async (\r\n  token: string,\r\n  items: UsuarioTabla[],\r\n  criterio: string,\r\n  ascendente: boolean\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Usuario/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar los usuarios: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Cambiar contraseña\r\nexport const cambiarContrasennaUsuarios = async (\r\n  token: string,\r\n  contrasenna_vieja: string,\r\n  contrasenna_nueva1: string,\r\n  contrasenna_nueva2: string,\r\n  nombre_usuario: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Usuario/change/pass`,\r\n      {\r\n        contrasenna_vieja: contrasenna_vieja,\r\n        contrasenna_nueva1: contrasenna_nueva1,\r\n        contrasenna_nueva2: contrasenna_nueva2,\r\n        nombre_usuario: nombre_usuario\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al cambiar la contraseña del usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\nimport { Accion } from \"../components/MyDateTableAcciones\";\r\n\r\n// Obtener todas las acciones\r\nexport const getAllAcciones = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Accion`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de todas las acciones: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener una accion especifica segun el id\r\nexport const getAccionByID = async (token: String, id_accion: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Accion/${id_accion}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de una acción en específico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Traza de usuario\r\nexport const addAccionUsuario = async (\r\n  token: string,\r\n  descripcion: string,\r\n  fecha: string,\r\n  id_usuario: string,\r\n  id_tipo_accion: number\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Accion/createAccion`,\r\n      {\r\n        descripcion: descripcion,\r\n        fecha: fecha,\r\n        usuario: {\"id_usuario\": id_usuario},\r\n        tipo_accion: {\"id_tipo_accion\": id_tipo_accion},\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al agregar acción de usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todos los tipos de accion\r\nexport const getAllTiposAccion = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Tipo_accion`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de todas los tipos de acción: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar acciones\r\nexport const filtrarAcciones = async (\r\n  token: string,\r\n  id_tipo_accion: string,\r\n  nombre_usuario: string,\r\n  descripcion: string,\r\n  fecha_limsup: string,\r\n  fecha_liminf: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Accion/api/filtrar`,\r\n      {\r\n        id_tipo_accion: id_tipo_accion,\r\n        nombre_usuario: nombre_usuario,\r\n        descripcion: descripcion,\r\n        fecha_limsup: fecha_liminf,\r\n        fecha_liminf: fecha_limsup,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al filtrar acciones: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar acciones\r\nexport const ordenarAcciones = async (\r\n  token: string,\r\n  items: Accion[],\r\n  criterio: string,\r\n  ascendente: boolean\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Accion/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar las acciones: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface PermisosUsuario {\r\n    resultProductoView: boolean; //9\r\n    resultProveedorView: boolean; //38\r\n    resultEntradaView: boolean; //13\r\n    resultMovimientoLocalView: boolean; //30\r\n    resultMovimientoGeneralView: boolean; //31\r\n    resultAgregarUsuario: boolean; //1\r\n    resultModificarUsuario: boolean; //2\r\n    resultEliminarUsuario: boolean; //3\r\n    resultAccionesView: boolean; //15\r\n    resultTipoServicio: boolean; // 20, 21, 22\r\n    resultClienteView: boolean; // 16, 17, 18, 19\r\n    resultGarantiaView: boolean; // 32, 33, 34\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface PermisosUsuarioContextType {\r\n  permisosUsuarioNavbar: PermisosUsuario | null;\r\n  setPermisosUsuarioNavbar: (permisosUsuario: PermisosUsuario | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst PermisosUsuarioContext = createContext<PermisosUsuarioContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const PermisosUsuarioProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [permisosUsuario, setPermisosUsuario] = useState<PermisosUsuario | null>(null);\r\n\r\n  return (\r\n    <PermisosUsuarioContext.Provider value={{ permisosUsuarioNavbar: permisosUsuario, setPermisosUsuarioNavbar: setPermisosUsuario }}>\r\n      {children}\r\n    </PermisosUsuarioContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const usePermisosUsuario = () => {\r\n  const context = React.useContext(PermisosUsuarioContext);\r\n  if (context === undefined) {\r\n    throw new Error('usePermisosUsuario debe usarse dentro de un PermisosUsuario');\r\n  }\r\n  return context;\r\n};","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { Entrada } from \"../components/MyDateTableEntradas\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todas las entradas\r\nexport const getAllEntradas = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Entrada`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de todas las entradas: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener una entrada especifica segun el id\r\nexport const getEntradaByID = async (token: String, id_entrada: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Entrada/${id_entrada}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de una entrada en específico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Entrada\r\nexport const addEntrada = async (\r\n  token: string,\r\n  costo: string,\r\n  cantidad: string,\r\n  fecha: string,\r\n  fecha_vencimiento: string | null,\r\n  id_proveedor: number,\r\n  id_producto: number,\r\n  id_tienda: number,\r\n  costo_cup: number\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Entrada/createEntrada`,\r\n      {\r\n        costo: costo,\r\n        cantidad: cantidad,\r\n        fecha: fecha,\r\n        costo_cup: costo_cup,\r\n        fecha_vencimiento: fecha_vencimiento,\r\n        proveedor: { id_proveedor: id_proveedor },\r\n        producto: { id_producto: id_producto },\r\n        tienda: { id_tienda: id_tienda },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar la entrada: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todas las entradas segun el id del producto\r\nexport const getAllEntradasByProductoId = async (\r\n  token: string,\r\n  id_producto: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Entrada/Producto/${id_producto}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener todos las entradas según el producto: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todas las entradas segun el id del proveedor\r\nexport const getAllEntradasByProveedorId = async (\r\n  token: string,\r\n  id_proveedor: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Entrada/getProveedores/${id_proveedor}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener todos las entradas según el proveedor: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Entrada\r\nexport const modificarEntrada = async (\r\n  token: string,\r\n  id_entrada: string,\r\n  costo: string,\r\n  cantidad: string,\r\n  fecha: string,\r\n  fecha_vencimiento: string | null,\r\n  id_proveedor: number,\r\n  id_producto: number,\r\n  id_tienda: number,\r\n  costo_cup: number\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Entrada/updateEntrada/${id_entrada}`,\r\n      {\r\n        costo: costo,\r\n        cantidad: cantidad,\r\n        fecha: fecha,\r\n        costo_cup: costo_cup,\r\n        fecha_vencimiento: fecha_vencimiento,\r\n        proveedor: { id_proveedor: id_proveedor },\r\n        producto: { id_producto: id_producto },\r\n        tienda: { id_tienda: id_tienda },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar la entrada: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Entrada\r\nexport const deleteEntrada = async (token: string, id_entrada: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Entrada/deleteEntrada/${id_entrada}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar la entrada: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar Entradas\r\nexport const filtrarEntrada = async (\r\n  token: string,\r\n  nombre_proveedor: string,\r\n  nombre_producto: string,\r\n  costo_liminf: string,\r\n  costo_limsup: string,\r\n  fecha_liminf: string,\r\n  fecha_limsup: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Entrada/api/filtrar`,\r\n      {\r\n        nombre_producto: nombre_producto,\r\n        nombre_proveedor: nombre_proveedor,\r\n        costo_liminf: costo_liminf,\r\n        costo_limsup: costo_limsup,\r\n        fecha_liminf: fecha_liminf,\r\n        fecha_limsup: fecha_limsup,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al filtrar los datos: \", error);\r\n    return false;\r\n  }\r\n};\r\n// Ordenar entradas\r\nexport const ordenarEntradas = async (\r\n  token: string,\r\n  items: Entrada[],\r\n  criterio: string,\r\n  ascendente: boolean\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Entrada/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al ordenar las entradas: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener entradas proxims a vencimiento\r\nexport const getEntradasPorVencer = async (token: String, fechaLimVencimiento: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Entrada/vencimiento/${fechaLimVencimiento}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de las entradas que estan proximas a vencer \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Button,\r\n  StyleSheet,\r\n  Image,\r\n  useWindowDimensions,\r\n  Animated,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Modal,\r\n  TouchableWithoutFeedback,\r\n} from \"react-native\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport CustomButtonNavbar from \"./CustomButtonLogin\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport \"../styles/ScrollView.css\";\r\nimport { useSelectedButon } from \"../contexts/globalButonNavbarSelected\";\r\nimport CustomDropdownProvicional from \"./CustomButonLoginOptions\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\nimport { cambiarContrasennaUsuarios } from \"../services/UsuarioServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport { usePermisosUsuario as usePermisosUsuarioNavbar } from \"../contexts/PermisosNavbarContext\";\r\nimport { getEntradasPorVencer } from \"../services/EntradaServices\";\r\n\r\nconst Navbar = () => {\r\n  // Para poder navegar entre vistas\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Estado para controlar si el menú está expandido\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const [modalUsuarioDetails, setModalUsuarioDetails] = useState(false);\r\n\r\n  const [contrasennaVieja, setContrasennaVieja] = useState(\"\");\r\n  const [contrasennaNueva1, setContrasennaNueva1] = useState(\"\");\r\n  const [contrasennaNueva2, setContrasennaNueva2] = useState(\"\");\r\n\r\n  const [hasPermisoViewProducto, setHasPermisoViewProducto] = useState(false);\r\n  const [hasPermisoViewTipoServicio, setHasPermisoViewTipoServicio] =\r\n    useState(false);\r\n  const [hasPermisoViewUsuario, setHasPermisoViewUsuario] = useState(false);\r\n  const [hasPermisoViewTienda, setHasPermisoViewTienda] = useState(false);\r\n  const [hasPermisoViewAccion, setHasPermisoViewAccion] = useState(false);\r\n  const [hasPermisoViewEntrada, setHasPermisoViewEntrada] = useState(false);\r\n  const [hasPermisoViewProveedor, setHasPermisoViewProveedor] = useState(false);\r\n  const [hasPermisoViewMovimiento, setHasPermisoViewMovimiento] =\r\n    useState(false);\r\n  const [hasPermisoViewCliente, setHasPermisoViewCliente] = useState(false);\r\n  const [hasPermisoViewGarantia, setHasPermisoViewGarantia] = useState(false);\r\n  const nombreProductoRef = useRef(null);\r\n  const { setUsuario, usuario } = useUsuario();\r\n  const { permisosUsuarioNavbar, setPermisosUsuarioNavbar } =\r\n    usePermisosUsuarioNavbar();\r\n  const { setSelectedButon, selectedButon } = useSelectedButon();\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [notificacionesPendientes, setNotificacionesPendientes] = useState(0);\r\n  const [entradasProximasVencer, setEntradasProximasVencer] = useState<\r\n    unknown[]\r\n  >([]);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  const [selectedOption, setSelectedOption] = useState<string | null>(null);\r\n\r\n  const handleSelect = (value: any) => {\r\n    setSelectedButon({\r\n      butonSelected: \"Administración\",\r\n    });\r\n    if (value === \"1\") {\r\n      navigation.navigate(\"Usuarios\");\r\n    } else if (value === \"3\") {\r\n      navigation.navigate(\"Tiendas\");\r\n    } else if (value === \"2\") {\r\n      navigation.navigate(\"Acciones\");\r\n    } else if (value === \"4\") {\r\n      navigation.navigate(\"Permisos\");\r\n    } else if (value === \"5\") {\r\n      navigation.navigate(\"Tipo de Servicio\");\r\n    } else if (value === \"6\") {\r\n      navigation.navigate(\"Cambiar Moneda\");\r\n    }\r\n    setSelectedOption(value);\r\n  };\r\n\r\n  const [options, setOptions] = useState<\r\n    { label: string; value: string; image: any }[]\r\n  >([]);\r\n  useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        setHasPermisoViewEntrada(\r\n          permisosUsuarioNavbar?.resultEntradaView ?? false\r\n        );\r\n        setHasPermisoViewProducto(\r\n          permisosUsuarioNavbar?.resultProductoView ?? false\r\n        );\r\n        setHasPermisoViewProveedor(\r\n          permisosUsuarioNavbar?.resultProveedorView ?? false\r\n        );\r\n        setHasPermisoViewAccion(\r\n          permisosUsuarioNavbar?.resultAccionesView ?? false\r\n        );\r\n        setHasPermisoViewMovimiento(\r\n          (permisosUsuarioNavbar?.resultMovimientoLocalView ?? false) ||\r\n            (permisosUsuarioNavbar?.resultMovimientoGeneralView ?? false)\r\n        );\r\n        setHasPermisoViewUsuario(\r\n          (permisosUsuarioNavbar?.resultAgregarUsuario ?? false) ||\r\n            (permisosUsuarioNavbar?.resultModificarUsuario ?? false) ||\r\n            (permisosUsuarioNavbar?.resultEliminarUsuario ?? false)\r\n        );\r\n        setHasPermisoViewTienda(parseInt(usuario.id_usuario) === 1);\r\n        setHasPermisoViewCliente(\r\n          permisosUsuarioNavbar?.resultClienteView ?? false\r\n        );\r\n        setHasPermisoViewGarantia(\r\n          permisosUsuarioNavbar?.resultGarantiaView ?? false\r\n        );\r\n\r\n        const newOptions = [];\r\n        if (\r\n          (permisosUsuarioNavbar?.resultAgregarUsuario ?? false) ||\r\n          (permisosUsuarioNavbar?.resultModificarUsuario ?? false) ||\r\n          (permisosUsuarioNavbar?.resultEliminarUsuario ?? false)\r\n        ) {\r\n          newOptions.push({\r\n            label: \"Usuarios\",\r\n            value: \"1\",\r\n            image: require(\"../images/usuarios.png\"),\r\n          });\r\n        }\r\n        if (permisosUsuarioNavbar?.resultAccionesView ?? false) {\r\n          newOptions.push({\r\n            label: \"Acciones\",\r\n            value: \"2\",\r\n            image: require(\"../images/acción.png\"),\r\n          });\r\n        }\r\n        if (parseInt(usuario.id_rol) === 1) {\r\n          newOptions.push({\r\n            label: \"Tiendas\",\r\n            value: \"3\",\r\n            image: require(\"../images/tienda.png\"),\r\n          });\r\n        }\r\n        /*\r\n        newOptions.push({\r\n          label: \"Permisos\",\r\n          value: \"4\",\r\n          image: require(\"../images/tienda.png\")\r\n        })\r\n          */\r\n        if (permisosUsuarioNavbar?.resultTipoServicio) {\r\n          newOptions.push({\r\n            label: \"Tipos de Servicios\",\r\n            value: \"5\",\r\n            image: require(\"../images/Tipo_Servicio.png\"),\r\n          });\r\n        }\r\n        if (parseInt(usuario.id_rol) === 1 && false) {\r\n          newOptions.push({\r\n            label: \"Cambiar  moneda\",\r\n            value: \"6\",\r\n            image: require(\"../images/Cambio_moneda.png\"),\r\n          });\r\n        }\r\n\r\n        // Actualiza el estado de options\r\n        setOptions(newOptions);\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, [permisosUsuarioNavbar]);\r\n\r\n  // Estilos condicionales\r\n  const buttonStyles = isMobile ? true : false;\r\n  const buttonsContainerStyles = isMobile\r\n    ? styles.buttonContainterMovile\r\n    : styles.buttonsContainerDesktop;\r\n\r\n  const fechaActual = new Date();\r\n  const proximoMes = new Date(\r\n    fechaActual.getFullYear(),\r\n    fechaActual.getMonth() + 1,\r\n    fechaActual.getDate()\r\n  );\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      const fetchData = async () => {\r\n        // Código que se ejecutará cuando la pantalla esté enfocada\r\n  \r\n        // Llamada a la función asíncrona\r\n        if (usuario?.token && parseInt(usuario.id_rol) !== 4) {\r\n          let result\r\n          if (localStorage.getItem(\"entradasProximasVencer\") === null) {\r\n              result = await getEntradasPorVencer(\r\n              usuario.token,\r\n              proximoMes.toISOString()\r\n            );\r\n            setNotificacionesPendientes(result.length);\r\n            setEntradasProximasVencer(result);\r\n            localStorage.setItem(\r\n              \"entradasProximasVencer\",\r\n              JSON.stringify(result)\r\n            );\r\n          } else {\r\n            const entradasProximasVencer = JSON.parse(\r\n              localStorage.getItem(\"entradasProximasVencer\")\r\n            );\r\n            setNotificacionesPendientes(entradasProximasVencer.length);\r\n            setEntradasProximasVencer(entradasProximasVencer);\r\n          }\r\n        }\r\n      };\r\n  \r\n      fetchData();\r\n  \r\n      // Si necesitas limpiar algo cuando la pantalla pierde el foco, puedes retornar una función de limpieza\r\n      return () => {\r\n        console.log(\"La pantalla de Login perdió el foco\");\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  // Función para cambiar la contraseña\r\n  const changePassword = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL CAMBIAR LA CONTRASEÑA. Comprueve los siguientes parámetros:\\n\";\r\n\r\n      if (contrasennaNueva1 !== contrasennaNueva2) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No ha ingresado bien su contraseña en los campos requeridos.\\n\";\r\n      }\r\n      if (contrasennaNueva1.length < 6) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-La contraseña nueva debe tener más de 6 caracteres.\\n\";\r\n      }\r\n      if (contrasennaNueva1.trim() === \"\" || contrasennaNueva2.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Debe digitar la nueva contraseña en los campos correspondientes.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        const result = cambiarContrasennaUsuarios(\r\n          usuario.token,\r\n          contrasennaVieja,\r\n          contrasennaNueva1,\r\n          contrasennaNueva2,\r\n          usuario.nombre_usuario\r\n        );\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} cambió su contraseña.`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          5\r\n        );\r\n\r\n        setIsModalChekVisible(false);\r\n        setModalMensaje(`La contraseña se cambió con éxito.`);\r\n        setReflechModalMensajeView(false);\r\n        setModalMensajeView(true);\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setReflechModalMensajeView(false);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 300, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  function botones() {\r\n    return (\r\n      <ScrollView\r\n        horizontal={true}\r\n        contentContainerStyle={{\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-start\",\r\n        }}\r\n        showsHorizontalScrollIndicator={true}\r\n      >\r\n        <View style={buttonsContainerStyles}>\r\n          {hasPermisoViewProducto && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/features.png\")}\r\n              text={\"En tu Tienda\"}\r\n              isSelected={selectedButon?.butonSelected === \"Mi Tienda\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Mi Tienda\",\r\n                });\r\n                navigation.navigate(\"Mi Tienda\");\r\n              }}\r\n            />\r\n          )}\r\n          {hasPermisoViewProducto && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/product.png\")}\r\n              text={\"Productos\"}\r\n              isSelected={selectedButon?.butonSelected === \"Productos\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Productos\",\r\n                });\r\n                navigation.navigate(\"Productos\");\r\n              }}\r\n            />\r\n          )}\r\n          {hasPermisoViewProducto && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/public-service.png\")}\r\n              text={\"Ventas\"}\r\n              isSelected={selectedButon?.butonSelected === \"Servicios\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Servicios\",\r\n                });\r\n                navigation.navigate(\"Ventas\");\r\n              }}\r\n            />\r\n          )}\r\n          {hasPermisoViewMovimiento && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/moving.png\")}\r\n              text={\"Movimientos\"}\r\n              isSelected={selectedButon?.butonSelected === \"Movimientos\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Movimientos\",\r\n                });\r\n                navigation.navigate(\"Movimientos\");\r\n              }}\r\n            />\r\n          )}\r\n          {/*hasPermisoViewGarantia && (<CustomButtonNavbar\r\n              imageSource={require(\"../images/reembolso.png\")}\r\n              text={\"Garantias\"}\r\n              isSelected={selectedButon?.butonSelected === \"Garantias\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Garantias\",\r\n                });\r\n                navigation.navigate(\"Garantías\");\r\n              }}\r\n            />)*/}\r\n          {hasPermisoViewCliente && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/nueva-cuenta.png\")}\r\n              text={\"Clientes\"}\r\n              isSelected={selectedButon?.butonSelected === \"Clientes\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Clientes\",\r\n                });\r\n                navigation.navigate(\"Clientes\");\r\n              }}\r\n            />\r\n          )}\r\n          {(parseInt(usuario?.id_rol) === 1 ||\r\n            parseInt(usuario?.id_rol) === 2 ||\r\n            parseInt(usuario?.id_rol) === 3\r\n          ) && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/Deudas.png\")}\r\n              text={\"Deudas\"}\r\n              isSelected={selectedButon?.butonSelected === \"Deudas\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Deudas\",\r\n                });\r\n                navigation.navigate(\"Deudas\");\r\n              }}\r\n            />\r\n          )}\r\n          {hasPermisoViewProveedor && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/gente.png\")}\r\n              text={\"Proveedores\"}\r\n              isSelected={selectedButon?.butonSelected === \"Proveedores\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Proveedores\",\r\n                });\r\n                navigation.navigate(\"Proveedores\");\r\n              }}\r\n            />\r\n          )}\r\n          {hasPermisoViewEntrada && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/entrada.png\")}\r\n              text={\"Entradas\"}\r\n              isSelected={selectedButon?.butonSelected === \"Entradas\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Entradas\",\r\n                });\r\n                navigation.navigate(\"Entradas\");\r\n              }}\r\n            />\r\n          )}\r\n          {/*<CustomButtonNavbar\r\n            imageSource={require(\"../images/informe.png\")}\r\n            text={\"Reportes\"}\r\n            onPress={() => {}}\r\n          />*/}\r\n          {(hasPermisoViewUsuario ||\r\n            hasPermisoViewTienda ||\r\n            hasPermisoViewAccion) && (\r\n            <CustomDropdownProvicional\r\n              imageSource={require(\"../images/gerente.png\")} // Ajusta la ruta de la imagen\r\n              text=\"Administración\"\r\n              options={options}\r\n              onSelect={handleSelect}\r\n              isSelected={selectedButon?.butonSelected === \"Administración\"}\r\n            />\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n    );\r\n  }\r\n\r\n  // Comprobar si se está en desktop o en movil\r\n  if (buttonStyles) {\r\n    return (\r\n      <View style={{ padding: 15 }}>\r\n        <LinearGradient\r\n          colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n          start={[0, 0]}\r\n          end={[1, 0]}\r\n          style={styles.navbarMobile}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => setModalUsuarioDetails(!modalUsuarioDetails)}\r\n          >\r\n            <View\r\n              style={{\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                borderWidth: 1,\r\n                borderColor: Colors.blanco,\r\n                borderRadius: 15,\r\n                width: 300,\r\n                height: 60,\r\n                marginVertical: 10,\r\n              }}\r\n            >\r\n              <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                <Text style={{ fontSize: 20, color: Colors.blanco }}>\r\n                  Usuario\r\n                </Text>\r\n                {notificacionesPendientes > 0 && (\r\n                  <View\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      borderRadius: 10,\r\n                      width: 20,\r\n                      height: 20,\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      marginLeft: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ fontSize: 12, color: Colors.blanco }}>\r\n                      {notificacionesPendientes}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n              </View>\r\n              <View style={styles.separatorBlanco} />\r\n              <Text style={{ fontSize: 16, color: Colors.blanco }}>\r\n                Nombre: {usuario?.nombre}\r\n              </Text>\r\n              <Text style={{ fontSize: 16, color: Colors.blanco }}>\r\n                Usuario: {usuario?.nombre_usuario}\r\n              </Text>\r\n              <TouchableOpacity\r\n                style={{\r\n                  width: \"90%\",\r\n                  height: \"45%\",\r\n                  marginTop: \"5%\",\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n                onPress={() => navigation.navigate(\"Login\")}\r\n              >\r\n                <Text style={{ fontSize: 16, color: Colors.blanco }}>\r\n                  Cerrar Sesión\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 40, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: 35, // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              paddingHorizontal: 15, // Espaciado interno horizontal para separar el contenido del borde\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/menu.png\")}\r\n              style={{ width: 40, height: 40 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Navegación</Text>\r\n          </TouchableOpacity>\r\n        </LinearGradient>\r\n        {/* Vista animada */}\r\n        {isExpanded && (\r\n          <Animated.View style={[{ overflow: \"hidden\" }, animatedStyle]}>\r\n            <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n              {/* Llamada a la función para renderizar los botones */}\r\n              {botones()}\r\n            </ScrollView>\r\n          </Animated.View>\r\n        )}\r\n\r\n        {modalUsuarioDetails && (\r\n          <Modal\r\n            transparent={true}\r\n            visible={modalUsuarioDetails}\r\n            animationType=\"fade\"\r\n            onRequestClose={() => setModalUsuarioDetails(false)}\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"90%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 15,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 10,\r\n                    right: 10,\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    borderRadius: 30,\r\n                    height: 40,\r\n                    width: 40,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                  onPress={() => {\r\n                    setContrasennaVieja(\"\");\r\n                    setContrasennaNueva1(\"\");\r\n                    setContrasennaNueva2(\"\");\r\n                    setModalUsuarioDetails(false);\r\n                  }}\r\n                >\r\n                  <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n                </TouchableOpacity>\r\n\r\n                <View style={styles.separatorNegro} />\r\n                <Text\r\n                  style={{\r\n                    fontSize: 26,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Tus Datos\r\n                </Text>\r\n\r\n                <ScrollView\r\n                  style={{ width: \"100%\" }}\r\n                  contentContainerStyle={{\r\n                    alignItems: \"center\",\r\n                    paddingBottom: 20,\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu nombre: {usuario?.nombre}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu nombre de usuario en el sistema:{\" \"}\r\n                      {usuario?.nombre_usuario}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu rol en el sistema: {usuario?.nombre_rol}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda en la que trabajas: {usuario?.nombre_tienda}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  <View style={styles.separatorNegro} />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 20,\r\n                        color: Colors.negro, // Color del texto\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Cambiar Contraseña\r\n                    </Text>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Contraseña Vieja\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaVieja}\r\n                    onChangeText={setContrasennaVieja}\r\n                    placeholder=\"Contraseña vieja\"\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Contraseña Nueva\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaNueva1}\r\n                    onChangeText={setContrasennaNueva1}\r\n                    placeholder=\"Contraseña nueva\"\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Repita la Nueva Contraseña\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaNueva2}\r\n                    onChangeText={setContrasennaNueva2}\r\n                    placeholder=\"Contraseña nueva\"\r\n                  />\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      marginLeft: \"5%\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                      marginTop: \"3%\", // Margen adicional entre botones\r\n                    }}\r\n                    onPress={() => {\r\n                      setMesajeModalChek(\r\n                        `Estas seguro que deseas cambiar tu contraseña nueva a ${contrasennaNueva1}`\r\n                      );\r\n                      setIsModalChekVisible(true);\r\n                      setModalUsuarioDetails(!modalUsuarioDetails);\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: 16,\r\n                      }}\r\n                    >\r\n                      Cambiar Contraseña\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n\r\n                  {notificacionesPendientes > 0 && (\r\n                    <View\r\n                      style={{\r\n                        width: \"90%\",\r\n                        height: \"50%\",\r\n                        backgroundColor: Colors.blanco_Suave,\r\n                        borderRadius: 15,\r\n                        alignItems: \"center\",\r\n                        shadowColor: \"#000\",\r\n                        shadowOffset: { width: 0, height: 2 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        elevation: 5,\r\n                        marginLeft: 10,\r\n                        marginTop: 10,\r\n                        marginBottom: 10,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 20,\r\n                          color: Colors.negro,\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                          textShadowOffset: { width: 1, height: 1 },\r\n                          textShadowRadius: 2,\r\n                        }}\r\n                      >\r\n                        Notificaciones Pendientes\r\n                      </Text>\r\n                      <ScrollView\r\n                        style={{ width: \"100%\" }}\r\n                        contentContainerStyle={{\r\n                          alignItems: \"center\",\r\n                          paddingBottom: 20,\r\n                        }}\r\n                      >\r\n                        <View\r\n                          style={{\r\n                            marginBottom: 10,\r\n                            marginLeft: \"5%\",\r\n                            marginTop: \"2%\",\r\n                            width: \"100%\",\r\n                            flexDirection: \"row\",\r\n                            justifyContent: \"space-between\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              fontSize: 12,\r\n                              color: Colors.negro,\r\n                              width: \"30%\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            Producto\r\n                          </Text>\r\n                          <Text\r\n                            style={{\r\n                              fontSize: 12,\r\n                              color: Colors.negro,\r\n                              width: \"20%\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            Tienda\r\n                          </Text>\r\n                          <Text\r\n                            style={{\r\n                              fontSize: 12,\r\n                              color: Colors.negro,\r\n                              width: \"20%\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            Días hasta vencimiento\r\n                          </Text>\r\n                          <Text\r\n                            style={{\r\n                              fontSize: 12,\r\n                              color: Colors.negro,\r\n                              width: \"20%\",\r\n                              fontWeight: \"bold\",\r\n                              marginRight: \"4%\"\r\n                            }}\r\n                          >\r\n                            Fecha de vencimiento\r\n                          </Text>\r\n                        </View>\r\n\r\n                        <View style={{\r\n                          width: \"100%\", // Ancho del separador\r\n                          height: 1, // Altura de la línea (grosor)\r\n                          backgroundColor: Colors.negro, // Color blanco\r\n                        }} />\r\n\r\n                        {entradasProximasVencer.map((entrada, index) => (\r\n                          <View\r\n                            key={index}\r\n                            style={{\r\n                              marginBottom: 10,\r\n                              marginLeft: \"5%\",\r\n                              marginTop: \"2%\",\r\n                              width: \"100%\",\r\n                              flexDirection: \"row\",\r\n                              justifyContent: \"space-between\",\r\n                              alignItems: \"center\",\r\n                              borderBottomWidth: 1,\r\n                              borderBottomColor: Colors.gris_claro,\r\n                            }}\r\n                          >\r\n                            <Text\r\n                              style={{\r\n                                fontSize: 12,\r\n                                color: Colors.negro,\r\n                                width: \"30%\",\r\n                              }}\r\n                            >\r\n                              {entrada.producto.nombre}\r\n                            </Text>\r\n                            <Text\r\n                              style={{\r\n                                fontSize: 12,\r\n                                color: Colors.negro,\r\n                                width: \"20%\",\r\n                              }}\r\n                            >\r\n                              {entrada.tienda.nombre}\r\n                            </Text>\r\n                            <Text\r\n                              style={{\r\n                                fontSize: 12,\r\n                                color: Colors.negro,\r\n                                width: \"20%\",\r\n                              }}\r\n                            >\r\n                              {`Faltan ${Math.round(\r\n                                (new Date(entrada.fecha_vencimiento).getTime() -\r\n                                  new Date().getTime()) /\r\n                                  (1000 * 3600 * 24)\r\n                              )} días`}\r\n                            </Text>\r\n                            <Text\r\n                              style={{\r\n                                fontSize: 12,\r\n                                color: Colors.negro,\r\n                                width: \"20%\",\r\n                                marginRight: \"3%\"\r\n                              }}\r\n                            >\r\n                              {entrada.fecha_vencimiento.split(\"T\")[0]}\r\n                            </Text>\r\n                          </View>\r\n                        ))}\r\n                      </ScrollView>\r\n                    </View>\r\n                  )}\r\n                </ScrollView>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n        )}\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => changePassword()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.navigate(\"Login\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <LinearGradient\r\n          colors={[Colors.azul_Claro, Colors.azul_Oscuro]}\r\n          start={[0, 0]}\r\n          end={[1, 0]}\r\n          style={styles.navbarDekstop}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => setModalUsuarioDetails(!modalUsuarioDetails)}\r\n          >\r\n            <View\r\n              style={{\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                borderWidth: 1,\r\n                borderColor: Colors.blanco,\r\n                borderRadius: 15,\r\n                width: 300,\r\n                height: 60,\r\n                marginVertical: 10,\r\n              }}\r\n            >\r\n              <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                <Text style={{ fontSize: 20, color: Colors.blanco }}>\r\n                  Usuario\r\n                </Text>\r\n                {notificacionesPendientes > 0 && (\r\n                  <View\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      borderRadius: 10,\r\n                      width: 20,\r\n                      height: 20,\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      marginLeft: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ fontSize: 12, color: Colors.blanco }}>\r\n                      {notificacionesPendientes}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n              </View>\r\n              <View style={styles.separatorBlanco} />\r\n              <Text style={{ fontSize: 16, color: Colors.blanco }}>\r\n                Nombre: {usuario?.nombre}\r\n              </Text>\r\n              <Text style={{ fontSize: 16, color: Colors.blanco }}>\r\n                Usuario: {usuario?.nombre_usuario}\r\n              </Text>\r\n              <TouchableOpacity\r\n                style={{\r\n                  width: \"90%\",\r\n                  height: \"45%\",\r\n                  marginTop: \"5%\",\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n                onPress={() => navigation.navigate(\"Login\")}\r\n              >\r\n                <Text style={{ fontSize: 16, color: Colors.blanco }}>\r\n                  Cerrar Sesión\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </TouchableOpacity>\r\n          {botones()}\r\n        </LinearGradient>\r\n\r\n        {modalUsuarioDetails && (\r\n          <Modal\r\n            transparent={true}\r\n            visible={modalUsuarioDetails}\r\n            animationType=\"fade\"\r\n            onRequestClose={() => setModalUsuarioDetails(false)}\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: \"60%\",\r\n                  height: \"90%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 15,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 10,\r\n                    right: 10,\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    borderRadius: 30,\r\n                    height: 40,\r\n                    width: 40,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                  onPress={() => {\r\n                    setContrasennaVieja(\"\");\r\n                    setContrasennaNueva1(\"\");\r\n                    setContrasennaNueva2(\"\");\r\n                    setModalUsuarioDetails(false);\r\n                  }}\r\n                >\r\n                  <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n                </TouchableOpacity>\r\n\r\n                <View style={styles.separatorNegro} />\r\n                <Text\r\n                  style={{\r\n                    fontSize: 26,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Tus Datos\r\n                </Text>\r\n\r\n                <ScrollView\r\n                  style={{ width: \"100%\" }}\r\n                  contentContainerStyle={{\r\n                    alignItems: \"center\",\r\n                    paddingBottom: 20,\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu nombre: {usuario?.nombre}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu nombre de usuario en el sistema:{\" \"}\r\n                      {usuario?.nombre_usuario}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu rol en el sistema: {usuario?.nombre_rol}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda en la que trabajas: {usuario?.nombre_tienda}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  <View style={styles.separatorNegro} />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 20,\r\n                        color: Colors.negro, // Color del texto\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Cambiar Contraseña\r\n                    </Text>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Contraseña Vieja\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaVieja}\r\n                    onChangeText={setContrasennaVieja}\r\n                    placeholder=\"Contraseña vieja\"\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Contraseña Nueva\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaNueva1}\r\n                    onChangeText={setContrasennaNueva1}\r\n                    placeholder=\"Contraseña nueva\"\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Repita la Nueva Contraseña\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaNueva2}\r\n                    onChangeText={setContrasennaNueva2}\r\n                    placeholder=\"Contraseña nueva\"\r\n                  />\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      marginLeft: \"5%\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                      marginTop: \"3%\", // Margen adicional entre botones\r\n                    }}\r\n                    onPress={() => {\r\n                      setMesajeModalChek(\r\n                        `Estas seguro que deseas cambiar tu contraseña nueva a ${contrasennaNueva1}`\r\n                      );\r\n                      setIsModalChekVisible(true);\r\n                      setModalUsuarioDetails(!modalUsuarioDetails);\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: 16,\r\n                      }}\r\n                    >\r\n                      Cambiar Contraseña\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n\r\n                  {notificacionesPendientes > 0 && (\r\n                    <View\r\n                      style={{\r\n                        width: \"90%\",\r\n                        height: \"50%\",\r\n                        backgroundColor: Colors.blanco_Suave,\r\n                        borderRadius: 15,\r\n                        alignItems: \"center\",\r\n                        shadowColor: \"#000\",\r\n                        shadowOffset: { width: 0, height: 2 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        elevation: 5,\r\n                        marginLeft: 10,\r\n                        marginTop: 10,\r\n                        marginBottom: 10,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 20,\r\n                          color: Colors.negro,\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                          textShadowOffset: { width: 1, height: 1 },\r\n                          textShadowRadius: 2,\r\n                        }}\r\n                      >\r\n                        Notificaciones Pendientes\r\n                      </Text>\r\n                      <ScrollView\r\n                        style={{ width: \"100%\" }}\r\n                        contentContainerStyle={{\r\n                          alignItems: \"center\",\r\n                          paddingBottom: 20,\r\n                        }}\r\n                      >\r\n                        <View\r\n                          style={{\r\n                            marginBottom: 10,\r\n                            marginLeft: \"5%\",\r\n                            marginTop: \"2%\",\r\n                            width: \"100%\",\r\n                            flexDirection: \"row\",\r\n                            justifyContent: \"space-between\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              fontSize: 16,\r\n                              color: Colors.negro,\r\n                              width: \"30%\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            Producto\r\n                          </Text>\r\n                          <Text\r\n                            style={{\r\n                              fontSize: 14,\r\n                              color: Colors.negro,\r\n                              width: \"20%\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            Tienda\r\n                          </Text>\r\n                          <Text\r\n                            style={{\r\n                              fontSize: 14,\r\n                              color: Colors.negro,\r\n                              width: \"20%\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            Días hasta vencimiento\r\n                          </Text>\r\n                          <Text\r\n                            style={{\r\n                              fontSize: 14,\r\n                              color: Colors.negro,\r\n                              width: \"20%\",\r\n                              fontWeight: \"bold\",\r\n                              marginRight: \"4%\"\r\n                            }}\r\n                          >\r\n                            Fecha de vencimiento\r\n                          </Text>\r\n                        </View>\r\n\r\n                        <View style={{\r\n                          width: \"100%\", // Ancho del separador\r\n                          height: 1, // Altura de la línea (grosor)\r\n                          backgroundColor: Colors.negro, // Color blanco\r\n                        }} />\r\n\r\n                        {entradasProximasVencer.map((entrada, index) => (\r\n                          <View\r\n                            key={index}\r\n                            style={{\r\n                              marginBottom: 10,\r\n                              marginLeft: \"5%\",\r\n                              marginTop: \"2%\",\r\n                              width: \"100%\",\r\n                              flexDirection: \"row\",\r\n                              justifyContent: \"space-between\",\r\n                              alignItems: \"center\",\r\n                              borderBottomWidth: 1,\r\n                              borderBottomColor: Colors.gris_claro,\r\n                            }}\r\n                          >\r\n                            <Text\r\n                              style={{\r\n                                fontSize: 16,\r\n                                color: Colors.negro,\r\n                                width: \"30%\",\r\n                              }}\r\n                            >\r\n                              {entrada.producto.nombre}\r\n                            </Text>\r\n                            <Text\r\n                              style={{\r\n                                fontSize: 14,\r\n                                color: Colors.negro,\r\n                                width: \"20%\",\r\n                              }}\r\n                            >\r\n                              {entrada.tienda.nombre}\r\n                            </Text>\r\n                            <Text\r\n                              style={{\r\n                                fontSize: 14,\r\n                                color: Colors.negro,\r\n                                width: \"20%\",\r\n                              }}\r\n                            >\r\n                              {`Faltan ${Math.round(\r\n                                (new Date(entrada.fecha_vencimiento).getTime() -\r\n                                  new Date().getTime()) /\r\n                                  (1000 * 3600 * 24)\r\n                              )} días`}\r\n                            </Text>\r\n                            <Text\r\n                              style={{\r\n                                fontSize: 14,\r\n                                color: Colors.negro,\r\n                                width: \"20%\",\r\n                              }}\r\n                            >\r\n                              {entrada.fecha_vencimiento.split(\"T\")[0]}\r\n                            </Text>\r\n                          </View>\r\n                        ))}\r\n                      </ScrollView>\r\n                    </View>\r\n                  )}\r\n                </ScrollView>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n        )}\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => changePassword()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() => {\r\n                  setContrasennaVieja(\"\");\r\n                  setContrasennaNueva1(\"\");\r\n                  setContrasennaNueva2(\"\");\r\n                  isReflechModalMensajeView\r\n                    ? navigation.navigate(\"Login\")\r\n                    : setModalMensajeView(!isModalMensajeView);\r\n                }}\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\r\nimport { Colors } from '../styles/Colors';\r\n\r\n// Definir la interfaz para los props\r\ninterface DropdownItem {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface DropdownProps {\r\n  value: string | null; // Puede ser null si no hay valor seleccionado\r\n  setValue: (value: string | null) => void; // Aceptar null como valor\r\n  placeholder: string;\r\n  items: DropdownItem[];\r\n  searchable?: boolean;\r\n  onDropdownOpen?: () => void; // Agregar el nuevo prop\r\n}\r\n\r\nconst CustomDropdown: React.FC<DropdownProps> = ({\r\n  value,\r\n  setValue,\r\n  items,\r\n  placeholder: title,\r\n  searchable = false, // Valor por defecto establecido en false\r\n  onDropdownOpen, // Recibir el nuevo prop\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  const isMobile = width < 1150; // Puedes ajustar este umbral según sea necesario\r\n\r\n  const textStyles = isMobile ? styles.dropdownTextMovil : styles.dropdownTextDesktop;\r\n\r\n  // Efecto para llamar a onDropdownOpen cuando el dropdown se abre\r\n  useEffect(() => {\r\n    if (open && onDropdownOpen) {\r\n      onDropdownOpen(); // Llama a la función cuando se abre el dropdown\r\n    }\r\n  }, [open]); // Este efecto se ejecuta cada vez que 'open' cambia\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <DropDownPicker\r\n        open={open}\r\n        value={value}\r\n        items={items}\r\n        setOpen={setOpen} // Esto ahora es correcto\r\n        setValue={(val) => {\r\n          setValue(val); // Aquí se espera un valor de tipo string | null\r\n          setOpen(false); // Cerrar el dropdown al seleccionar un valor\r\n        }}\r\n        setItems={() => {}} // En este caso no se usa ya que los items se pasan como prop\r\n        placeholder={title}\r\n        style={styles.dropdown}\r\n        textStyle={textStyles}\r\n        dropDownContainerStyle={styles.dropdownContainer}\r\n        searchable={searchable}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginLeft: '5%',\r\n    marginTop: '4%',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  dropdown: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    width: '90%',\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n  },\r\n  dropdownTextDesktop: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    color: Colors.blanco,\r\n  },\r\n  dropdownTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    color: Colors.blanco,\r\n  },\r\n  dropdownContainer: {\r\n    borderColor: Colors.azul_Suave,\r\n    backgroundColor: Colors.azul_Claro,\r\n    width: '90%',\r\n  },\r\n});\r\n\r\nexport default CustomDropdown;\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface ModalProductsDates {\r\n    id_producto: string;\r\n    isAddProducto: boolean;\r\n    isModificarProducto: boolean;\r\n    fileEditable: boolean;\r\n    isAddProductoShowProveedoresTiendas: boolean;\r\n    isAddProductoShowProveedores: boolean;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface ModalProductsDatesContextType {\r\n  modalProductsDates: ModalProductsDates | null;\r\n  setModalProductsDates: (modalProductsDates: ModalProductsDates | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst ModalProductsDatesContext = createContext<ModalProductsDatesContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const ModalProductsDatesProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [modalProductsDates, setModalProductsDates] = useState<ModalProductsDates | null>(null);\r\n\r\n  return (\r\n    <ModalProductsDatesContext.Provider value={{ modalProductsDates: modalProductsDates, setModalProductsDates: setModalProductsDates }}>\r\n      {children}\r\n    </ModalProductsDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useModalProductsDates = () => {\r\n  const context = React.useContext(ModalProductsDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useModalProductsDates debe usarse dentro de un ModalProductsDates');\r\n  }\r\n  return context;\r\n};","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Producto } from '../components/MyDateTableProductos';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortProductos {\r\n  items: Producto[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortProductosContextType {\r\n  sortProductos: SortProductos | null;\r\n  setSortProductos: (sortProductos: SortProductos | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortProductosContext = createContext<SortProductosContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortProductosProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortProductos, setSortProductos] = useState<SortProductos | null>(null);\r\n\r\n  return (\r\n    <SortProductosContext.Provider value={{ sortProductos: sortProductos, setSortProductos: setSortProductos }}>\r\n      {children}\r\n    </SortProductosContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortProductos = () => {\r\n  const context = React.useContext(SortProductosContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortProductos debe usarse dentro de un SortProductos');\r\n  }\r\n  return context;\r\n};","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\nexport interface RolPermiso{\r\n    id_permiso: string,\r\n    tiene: boolean\r\n}\r\n\r\n// Optener todos los roles\r\nexport const getAllRol = async (token: string) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Rol`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener todos los roles: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Optener toos los permisos de un usuario en específico\r\nexport const getPermisosOfRol = async (token: string, id_rol: string) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Rol_permiso/getPermisosbyRol/${id_rol}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          },\r\n        }\r\n      );\r\n  \r\n      return response.data as RolPermiso[];\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error al obtener datos de los productos por el rol: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Saver si un rol en especifico tiene hhavilitado un permiso en específico\r\n  export const isPermiso = async (token: string, id_permiso: string, id_usuario: string) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Usuario/tiene_permiso/${id_usuario}/${id_permiso}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          },\r\n        }\r\n      );\r\n      \r\n      return response.data.tiene;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error al obtener datos de los permisos: \", error);\r\n      return false;\r\n    }\r\n  };","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener Todos los datos de las tiendas\r\nexport const getAllTiendas = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Tienda`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de las tiendas: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar tienda\r\nexport const addTienda = async (\r\n  token: string,\r\n  nombre: string,\r\n  direccion: string,\r\n  comicion: string,\r\n  hora_apertura: string,\r\n  hora_cierre: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Tienda/createTienda`,\r\n      {\r\n        nombre: nombre,\r\n        direccion: direccion,\r\n        comicion: comicion,\r\n        hora_apertura: hora_apertura,\r\n        hora_cierre: hora_cierre\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar la tienda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Realizar venta\r\nexport const tienda_Realizarventa = async (\r\n  token: string,\r\n  id_producto: string,\r\n  id_tienda: string,\r\n  cantidadARestar: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto_tienda/realizarVenta`,\r\n      {\r\n        id_producto: id_producto,\r\n        id_tienda: id_tienda,\r\n        cantidad: cantidadARestar,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al realizar venta en producto tienda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modiciar Tienda\r\nexport const updateTienda = async (\r\n  token: string,\r\n  id_tienda: string,\r\n  nombre: string,\r\n  direccion: string,\r\n  comicion: string,\r\n  hora_apertura: string,\r\n  hora_cierre: string\r\n) => {\r\n  try {\r\n    await axios.put(\r\n      `${cerverHost}/Tienda/updateTienda/${id_tienda}`,\r\n      {\r\n        nombre: nombre,\r\n        direccion: direccion,\r\n        comicion: comicion,\r\n        hora_apertura: hora_apertura,\r\n        hora_cierre: hora_cierre\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error actualizar la tienda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Tienda\r\nexport const deleteTienda = async (token: string, id_tienda: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Tienda/deleteTienda/${id_tienda}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return true;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error eliminar la tienda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener Tienda segun su identificador\r\nexport const getTiendaById = async (token: String, id_tienda: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Tienda/${id_tienda}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener dato de la tienda en específico: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todas las tiendas en las que se encuentre un producto específico\r\nexport const getAllTiendasByProduct = async (\r\n  token: String,\r\n  id_producto: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto_tienda/getTiendas/${id_producto}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de las tiendas según el producto: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Saver si un producto en específico está en una tienda específica\r\nexport const isProductoInTienda = async (\r\n  token: String,\r\n  id_producto: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto_tiendabyID/${id_producto}/${id_tienda}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de las tiendas: \", error);\r\n    return 0;\r\n  }\r\n};\r\n\r\n// Obtener la cantidad que hay de un producto en una tienda específica\r\nexport const getCantidadProductoInTiendaEspecifica = async (\r\n  token: String,\r\n  id_producto: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto_tiendabyID/${id_producto}/${id_tienda}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data.cantidad;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener la cantidad del producto en tienda específica: \",\r\n      error\r\n    );\r\n    return 0;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener moneda\r\nexport const getValorMonedaUSD = async (token: String) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Moneda/obtener/USD`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error al obtener valor de la moneda USD: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // cambiar valor de moneda\r\nexport const cambiarValorMonedaUSD = async (token: String, valor: String) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `${cerverHost}/Moneda/cambiar/USD/${valor}`,\r\n        {\r\n          \r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error al cambiar el valor de la monea USD: \", error);\r\n      return false;\r\n    }\r\n  };","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { Producto } from \"../components/MyDateTableProductos\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\nimport { getValorMonedaUSD } from \"./MonedaService\";\r\n\r\nexport interface ExelProductoAll {\r\n  id_Producto: string;\r\n  nombre: string;\r\n  sku: string;\r\n  cantidadTotal: string;\r\n  precio: number;\r\n  almacen: number;\r\n  taller_cell: number;\r\n  taller_pc: number;\r\n  tienda: number;\r\n  cienfuegos: number;\r\n}\r\n\r\n// Obtener todos los productos\r\nexport const getAllProductos = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Producto`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n      console.log(\"Error al obtener datos de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todos los productos con el formato para mostrar\r\nexport const getAllProductosFromTable = async (token: String, page: number) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Producto/getPaginated/${page}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n      console.log(\"Error al obtener datos de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener los identificadores de todos los productos que esten en una tienda específica\r\nexport const getRelacionProductoByTienda = async (\r\n  token: String,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/producto_tienda/getProductos/${id_tienda}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de los identificadores de  productos con la tienda: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener la cantidad total de un producto en específico que hay en la empresa\r\nexport const getProductoCantidadTotal = async (\r\n  token: string,\r\n  id_Producto: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto_tienda/getCantidadTotal/${id_Producto}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data.cantidad_total;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todos los datos principales de un producto en específico\r\nexport const getProductoById = async (\r\n  token: String,\r\n  id_Producto: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Producto/${id_Producto}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos principales de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todos las imagenes segun el producto\r\nexport const getAllImagenes = async (token: String, id_Producto: string) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto/getAllimagenes/${id_Producto}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos principales de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar producto\r\nexport const addProducto = async (\r\n  token: string,\r\n  nombre: string,\r\n  Sku: string,\r\n  precio: string,\r\n  precio_empresa: string,\r\n  descripcion: string,\r\n  isFecha_Vencimiento: boolean,\r\n  costo_acumulado: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/createProducto`,\r\n      {\r\n        nombre: nombre,\r\n        Sku: Sku,\r\n        precio: precio,\r\n        precio_empresa: precio_empresa,\r\n        descripcion: descripcion,\r\n        isFecha_Vencimiento: isFecha_Vencimiento,\r\n        costo_acumulado: costo_acumulado\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error incertar el producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Importar Productos del Exel\r\nexport const importarDataProductos = async (token: string, path: string) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/import/excel`,\r\n      {\r\n        path: path\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error importar productos del exel: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Importar tiendas de productos en exel\r\nexport const importarDataProducto_Tiendas = async (token: string, path: string) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto_tienda/import/excel`,\r\n      {\r\n        path: path\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error importar productos_tiendas del exel: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener producto que coincida con el SKU\r\nexport const getProductoBySku = async (token: string, sku: string) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto/getSku/${sku}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos del producto por sku: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Machear datos de un producto en una tienda especifica\r\nexport const matchProductoInTienda = async (token: string, id_producto: string, id_tienda: string) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto/match/${id_producto}/${id_tienda}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al machear el producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar entradas a un producto especifico\r\nexport const addProductoEntrada = async (\r\n  token: string,\r\n  id_tienda: number,\r\n  id_producto: number,\r\n  cantidad: number\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto_tienda/HacerEntrada`,\r\n      {\r\n        id_producto: id_producto,\r\n        id_tienda: id_tienda,\r\n        cantidad: cantidad,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error incertar el la entrada al producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar imagenes del producto producto\r\nexport const addProductoAndImagenes = async (\r\n  token: string,\r\n  id_producto: string,\r\n  imagenes: any[]\r\n) => {\r\n  console.log(id_producto, imagenes);\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/createProducto`,\r\n      {\r\n        id_producto: id_producto,\r\n        imagenes: imagenes,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error incertar el producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Costo acumulado de producto\r\nexport const updateProductoCostoAcumulado = async (\r\n  token: string,\r\n  id_producto: string,\r\n  costo_acumulado: string\r\n) => {\r\n  console.log(\"id_producto: \",id_producto);\r\n  console.log(\"costo_acumulado: \",costo_acumulado);\r\n  \r\n  try {\r\n    await axios.put(\r\n      `${cerverHost}/Producto/updateProducto/${id_producto}`,\r\n      {\r\n        costo_acumulado: costo_acumulado\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error actualizar el producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// ModiciarProducto\r\nexport const updateProducto = async (\r\n  token: string,\r\n  id_producto: string,\r\n  nombre: string,\r\n  Sku: string,\r\n  precio: string,\r\n  precio_empresa: string,\r\n  descripcion: string,\r\n  isFecha_Vencimiento: boolean,\r\n  costo_acumulado: string\r\n) => {\r\n  try {\r\n    await axios.put(\r\n      `${cerverHost}/Producto/updateProducto/${id_producto}`,\r\n      {\r\n        nombre: nombre,\r\n        Sku: Sku,\r\n        precio: precio,\r\n        precio_empresa: precio_empresa,\r\n        descripcion: descripcion,\r\n        isFecha_Vencimiento: isFecha_Vencimiento,\r\n        costo_acumulado: costo_acumulado\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error actualizar el producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar producto tienda\r\nexport const updateProductoTienda = async (\r\n  token: string,\r\n  id_producto: string,\r\n  id_tienda: string,\r\n  cantidad: string\r\n) => {\r\n  try {\r\n    await axios.put(\r\n      `${cerverHost}/Producto_tienda/updateProducto_tienda`,\r\n      {\r\n        id_producto: id_producto,\r\n        id_tienda: id_tienda,\r\n        cantidad: cantidad\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error actualizar el producto_tienda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar relación al producto de la tienda a la hora de hacer la entrada\r\nexport const createProductoInTienda = async (\r\n  token: string,\r\n  id_producto: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    await axios.post(\r\n      `${cerverHost}/Producto/agregar/Tienda`,\r\n      {\r\n        id_tienda: id_tienda,\r\n        id_producto: id_producto,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\r\n      \"Error crear la relación con la tienda en el producto: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Producto\r\nexport const deleteProducto = async (token: string, id_producto: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Producto/deleteProducto/${id_producto}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return true;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos principales de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Producto\r\nexport const deleteFromProductoTiendaIn_0 = async (token: string) => {\r\n  try {\r\n    const response2 = await axios.delete(\r\n      `${cerverHost}/Producto_tienda/DeleteAllTiendas/inProducto`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Producto_tienda/delete/in0`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return true;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al eliminar en productos en 0: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar productos\r\nexport const filterProducts = async (\r\n  token: string,\r\n  nombre: string,\r\n  sku: string,\r\n  precio_liminf: string,\r\n  precio_limsup: string,\r\n  cantidad: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/api/filtrar`,\r\n      {\r\n        nombre: nombre || \"\",\r\n        sku: sku || \"\",\r\n        precio_liminf: precio_liminf || \"\",\r\n        precio_limsup: precio_limsup || \"\",\r\n        cantidad: (cantidad === \"0\")? 0 : parseInt(cantidad),\r\n        id_tienda: id_tienda || null,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos principales de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar productos_tienda\r\nexport const filterProductsEnTienda = async (\r\n  token: string,\r\n  nombre: string,\r\n  sku: string,\r\n  precio_liminf: string,\r\n  precio_limsup: string,\r\n  cantidad: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto_tienda/api/filtrar`,\r\n      {\r\n        nombre: nombre || \"\",\r\n        sku: sku || \"\",\r\n        precio_liminf: precio_liminf || \"\",\r\n        precio_limsup: precio_limsup || \"\",\r\n        cantidad: (cantidad === \"0\")? 0 : parseInt(cantidad),\r\n        id_tienda: parseInt(id_tienda),\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos principales de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar productos\r\nexport const ordenarProducts = async (\r\n  token: string,\r\n  items: Producto[],\r\n  criterio: string,\r\n  ascendente: boolean\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Mover producto\r\nexport const moverProducto = async (\r\n  token: String,\r\n  id_producto: string,\r\n  id_tienda_origen: string,\r\n  id_tienda_destino: string,\r\n  cantidad: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto_tienda/MoverProducto_tienda`,\r\n      {\r\n        id_producto: id_producto,\r\n        id_tienda_origen: id_tienda_origen,\r\n        id_tienda_destino: id_tienda_destino,\r\n        cantidad: cantidad,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al mover el producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Expedir docuemnto exel en my tienda\r\nexport const expedirExelProductosEnMyTienda = async (token: string, productos: Producto[]) => {\r\n  try {\r\n    // Crear formato para la tabla del exel\r\n    interface ExelTable{\r\n      sku: string;\r\n      nombre: string;\r\n      precioCUP: string;\r\n      precioEmpresaCUP: string;\r\n      cantidad: string;\r\n    }\r\n\r\n    const valormoneda = await getValorMonedaUSD(token);\r\n    \r\n    const formatExel: ExelTable[] = productos.map((producto) => ({\r\n      sku: producto.sku,\r\n      nombre: producto.nombre,\r\n      precioCUP: (parseFloat(producto.precioUSD) * valormoneda).toFixed(2), // Convierte a string con dos decimales\r\n      precioEmpresaCUP: producto.precioEmpresaUSD ?? \"0\",\r\n      cantidad: producto.cantidadTotal ?? \"0\",\r\n    }));\r\n\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/to/excel`,\r\n      { productos: formatExel },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n        responseType: 'blob', // Esto asegura que la respuesta sea un Blob\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al crear excel: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Expedir docuemnto exel de todos los productos\r\n// NOTA: Este método solo funciona con las tiendas: (Almacén, Taller Cell, Taller PC, Tienda) ya que son las que se requieren en el model específico\r\nexport const expedirExelProductos = async (token: string, productos: ExelProductoAll[]) => {\r\n  try {\r\n    // Crear formato para la tabla del exel\r\n    interface ExelTable{\r\n      Sku: string;\r\n      Nombre: string;\r\n      Existencia: string;\r\n      Precio: number;\r\n      Almacén: number;\r\n      \"Taller Cell\": number;\r\n      \"Taller PC\": number;\r\n      Tienda: number;\r\n      Cienfuegos: number;\r\n    }\r\n\r\n    const formatExel: ExelTable[] = productos.map((producto) => ({\r\n      Sku: producto.sku,\r\n      Nombre: producto.nombre,\r\n      Existencia: producto.cantidadTotal ?? \"0\",\r\n      Precio: producto.precio? producto.precio : 0, // Convierte a string con dos decimales\r\n      Almacén: producto.almacen? producto.almacen : 0,\r\n      \"Taller Cell\":producto.taller_cell? producto.taller_cell : 0,\r\n      \"Taller PC\": producto.taller_pc? producto.taller_pc : 0,\r\n      Tienda: producto.tienda? producto.tienda : 0,\r\n      Cienfuegos: producto.cienfuegos? producto.cienfuegos : 0\r\n    }));\r\n\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/to/excel`,\r\n      { productos: formatExel },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n        responseType: 'blob', // Esto asegura que la respuesta sea un Blob\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al crear excel: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Expedir docuemnto exel con columnas especificas\r\nexport const expedirExelProductosConColumnas = async (token: string, columnas: string[], productos: any[]) => {\r\n  // productos: any[], columnas: String[]\r\n  try {\r\n    const columnsasxd: any = ([\"id del producto\", \"nombre\", \"precio\"]);\r\n    const pepe: any = ([\r\n      { \"id del producto\": \"1\", nombre: \"Pepe\", precio: \"12\"},\r\n      { \"id del producto\": \"1\", nombre: \"Pepe\", precio: \"12\"},\r\n      { \"id del producto\": \"1\", nombre: \"Pepe\", precio: \"12\"},\r\n      { \"id del producto\": \"1\", nombre: \"Pepe\", precio: \"12\"},\r\n    ]);\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/to/excelwithcolumns`,\r\n      { \r\n        productos: productos,\r\n        columns: columnas\r\n       },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n        responseType: 'blob', // Esto asegura que la respuesta sea un Blob\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al crear excel: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\r\nimport { Colors } from '../styles/Colors';\r\n\r\ninterface DropdownProps {\r\n  value: string;\r\n  setValue: (value: string) => void;\r\n  placeholder: string;\r\n  items: { label: string; value: string }[];\r\n  onDropdownOpen?: () => void; // Agregar el prop\r\n}\r\n\r\nconst CustomDropDownPikerFromMover: React.FC<DropdownProps> = ({\r\n  value,\r\n  setValue,\r\n  items,\r\n  placeholder: title,\r\n  onDropdownOpen, // Añadir el prop a los parámetros\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const { width } = useWindowDimensions();\r\n\r\n  useEffect(() => {\r\n    if (open && onDropdownOpen) {\r\n      onDropdownOpen(); // Llama a la función cuando el dropdown se abre\r\n    }\r\n  }, [open, onDropdownOpen]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <DropDownPicker\r\n        open={open}\r\n        value={value}\r\n        items={items}\r\n        setOpen={setOpen}\r\n        setValue={setValue}\r\n        setItems={() => {}}\r\n        placeholder={title}\r\n        style={styles.dropdown}\r\n        dropDownContainerStyle={styles.dropdownContainer}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    width: '90%',\r\n  },\r\n  dropdown: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    width: '90%',\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n  },\r\n  dropdownContainer: {\r\n    borderColor: Colors.azul_Suave,\r\n    backgroundColor: Colors.azul_Claro,\r\n    width: '90%',\r\n  },\r\n});\r\n\r\nexport default CustomDropDownPikerFromMover;\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Aux para agregar imagen\r\n  export const crearimagenUnProducto = async (token: string, selectedImages: any, nameImagen:string) => {\r\n    try {\r\n        const response = await axios.post(\r\n          `${cerverHost}/Imagen/createImagen`,\r\n          {\r\n            url: nameImagen,\r\n            uri: selectedImages,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `${token}`,\r\n            },\r\n          }\r\n        );\r\n        return response.data;\r\n      } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n          navigate(\"Login\")\r\n        }\r\n        console.log(`Error al guardar imagenes en los archivos ${error}`)\r\n        return false;\r\n      }\r\n  };\r\n\r\n  // Obtener datos de la imagen pro el id\r\n  export const getImagenById = async (token: string, id_imagen: string) => {\r\n    try {\r\n        const response = await axios.get(\r\n          `${cerverHost}/Imagen/${id_imagen}`,\r\n          {\r\n            headers: {\r\n              Authorization: `${token}`,\r\n            },\r\n          }\r\n        );\r\n        return response.data;\r\n      } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n          navigate(\"Login\")\r\n        }\r\n        alert(`Error al obtener imagen ${error}`)\r\n        return false;\r\n      }\r\n  };\r\n\r\n  // Axu para eliminar imagen\r\n  export const deleteImagenByProducto = async (token: string, id_imagen: string, nameImagen:string) => {\r\n    try {\r\n        const response = await axios.delete(\r\n          `${cerverHost}/Imagen/deleteImagen/${id_imagen}/${nameImagen}`,\r\n          {\r\n            headers: {\r\n              Authorization: `${token}`,\r\n            },\r\n          }\r\n        );\r\n        return response.data;\r\n      } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n          navigate(\"Login\")\r\n        }\r\n        alert(`Error al eliminar la imagenes en los archivos ${error}`)\r\n        return false;\r\n      }\r\n  };","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { Movimiento } from \"../components/MyDateTableMovimientos\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todos los movimientos\r\nexport const getAllMovimientos = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Salida`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener todos los datos de los movimientos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Movimiento\r\nexport const addNewMovimiento = async (\r\n  token: String,\r\n  fecha: string,\r\n  id_tienda_origen: string,\r\n  id_tienda_destino: string,\r\n  cantidad: string,\r\n  id_producto: string,\r\n  id_usuario: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Salida/createSalida`,\r\n      {\r\n        fecha: fecha,\r\n        cantidad: cantidad,\r\n        producto: id_producto,\r\n        tienda_origen: id_tienda_origen,\r\n        tienda_destino: id_tienda_destino,\r\n        usuario: id_usuario,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al crear la salida del producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener datos de movimiento por id\r\nexport const getMovimientoById = async (\r\n  token: String,\r\n  id_movimiento: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Salida/${id_movimiento}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al obtener datos del movimiento en específico: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Actualizar movimiento\r\nexport const updateMovimiento = async (\r\n  token: String,\r\n  id_movimiento: string,\r\n  fecha: string,\r\n  id_tienda_origen: string,\r\n  id_tienda_destino: string,\r\n  cantidad: string,\r\n  id_producto: string,\r\n  id_usuario: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Salida/updateSalida/${id_movimiento}`,\r\n      {\r\n        fecha: fecha,\r\n        cantidad: cantidad,\r\n        producto: id_producto,\r\n        tienda_origen: id_tienda_origen,\r\n        tienda_destino: id_tienda_destino,\r\n        usuario: id_usuario,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al actualizar datos del movimiento: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar movimiento\r\nexport const deleteMovimiento = async (\r\n  token: String,\r\n  id_movimiento: string,\r\n) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Salida/deleteSalida/${id_movimiento}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al eliminar el movimiento: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar Movimiento\r\nexport const filtrarMovimientos = async (\r\n  token: String,\r\n  nombreUsuario: string,\r\n  nombreProducto: string,\r\n  cantidad: string,\r\n  fechaDesde: string,\r\n  fechaHasta: string,\r\n  tiendaOrigen: string,\r\n  tiendaDestino: string\r\n) => {\r\n  console.log(tiendaOrigen, tiendaDestino);\r\n  \r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Salida/api/filtrar`,\r\n      {\r\n        nombre_usuario: nombreUsuario ?? null,\r\n        nombre_producto: nombreProducto ?? null,\r\n        cantidad: parseInt(cantidad) ?? null,\r\n        fecha_liminf: fechaDesde ?? null,\r\n        fecha_limsup: fechaHasta ?? null,\r\n        id_tienda_origen: tiendaOrigen ?? null,\r\n        id_tienda_destino: tiendaDestino ?? null,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrar movimientos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar movimientos especial\r\nexport const filtrarMovimientosEspecial = async (\r\n  token: String,\r\n  nombreUsuario: string,\r\n  nombreProducto: string,\r\n  cantidad: string,\r\n  fechaDesde: string,\r\n  fechaHasta: string,\r\n  tiendaUsuario: string,\r\n  tienda_origen: string,\r\n  tienda_destino: string\r\n) => {\r\n  console.log(\r\n    \"NombreUsuario: \",nombreUsuario,\r\n    \"NombreProducto: \",nombreProducto,\r\n    \"Cantidad: \",cantidad,\r\n    \"fechaDesde: \",fechaDesde,\r\n    \"fechaHasta: \",fechaHasta,\r\n    \"TiendaUsuario: \",tiendaUsuario,\r\n    \"TiendaOr: \",tienda_origen,\r\n    \"tiendaDes: \",tienda_destino\r\n  );\r\n  \r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Salida/api/filtrarJT`,\r\n      {\r\n        nombre_usuario: nombreUsuario ?? null,\r\n        nombre_producto: nombreProducto ?? null,\r\n        cantidad: parseInt(cantidad) ?? null,\r\n        fecha_liminf: fechaDesde ?? null,\r\n        fecha_limsup: fechaHasta ?? null,\r\n        id_tienda: tiendaUsuario ?? null,\r\n        id_tienda_origen: tienda_origen ?? null,\r\n        id_tienda_destino: tienda_destino ?? null\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrarEspecial movimientos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar movimientos\r\nexport const ordenarMovimientos = async (token: string, items: Movimiento[], criterio: string, ascendente: boolean) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Salida/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar las entradas: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import React, { createContext, useState, ReactNode } from \"react\";\r\n\r\n// Define la interfaz del Usuario\r\nexport interface PaginadoProductos {\r\n  page: number;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface PaginadoProductosContextType {\r\n  paginadoProductos: PaginadoProductos;\r\n  setPaginadoProductos: (paginadoProductos: PaginadoProductos) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst PaginadoProductosContext = createContext<\r\n  PaginadoProductosContextType | undefined\r\n>(undefined);\r\n\r\n// Define el proveedor\r\nexport const PaginadoProductosProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [paginadoProductos, setPaginadoProductos] = useState<PaginadoProductos>({\r\n    page: 1, // Valor por defecto\r\n  });\r\n\r\n  return (\r\n    <PaginadoProductosContext.Provider\r\n      value={{\r\n        paginadoProductos: paginadoProductos,\r\n        setPaginadoProductos: setPaginadoProductos,\r\n      }}\r\n    >\r\n      {children}\r\n    </PaginadoProductosContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const usePaginadoProductos = () => {\r\n  const context = React.useContext(PaginadoProductosContext);\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      \"usePaginadoProductos debe usarse dentro de un PaginadoProductos\"\r\n    );\r\n  }\r\n  return context;\r\n};\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useModalProductsDates } from \"../contexts/AuxiliarContextFromModalProductsDates\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n  isProductoInTienda,\r\n} from \"../services/TiendaServices\";\r\nimport {\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  deleteProducto,\r\n  getProductoCantidadTotal,\r\n  getProductoById,\r\n  getRelacionProductoByTienda,\r\n  moverProducto,\r\n} from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { TiendaPiker } from \"./MyDateTableTiendas\";\r\nimport CustomDropDownPikerFromMover from \"./CustomDropDownPikerFromMover\";\r\nimport { useImagenesDelete } from \"../contexts/DeleteImagenContext\";\r\nimport { deleteImagenByProducto } from \"../services/ImageServices\";\r\nimport { addNewMovimiento } from \"../services/MovimientosServices\";\r\nimport { getProveedorById } from \"../services/ProveedorServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport { usePaginadoProductos } from \"../contexts/AuxiliarContextPaginadoproductos\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport interface Producto {\r\n  id_Producto: string;\r\n  nombre: string;\r\n  sku: string;\r\n  cantidadTotal: string;\r\n  precioUSD: string;\r\n  precioEmpresaUSD?: string;\r\n  tieneOpciones?: boolean;\r\n}\r\n\r\nexport interface ProductoPiker {\r\n  label: string;\r\n  value: string;\r\n}\r\ninterface Props {\r\n  items: Producto[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableProveedorModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n  imtemsLength: number;\r\n}\r\n\r\nexport const MyDateTableProductos: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n  imtemsLength: itemsLength\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalProductsDates, setModalProductsDates } = useModalProductsDates();\r\n  const { sortProductos, setSortProductos } = useSortProductos();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { paginadoProductos, setPaginadoProductos } = usePaginadoProductos();\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Producto[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMesajeMoverVisible, setModalMesajeMoverVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [isRefleshView, setRefleshView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendaMoverDesde, setTiendaMoverDesde] = React.useState(\"\");\r\n  const [tiendaMoverHasta, setTiendaMoverHasta] = React.useState(\"\");\r\n  const [nombreTiendaUsuarioActual, setNombreTiendaUsuarioActual] =\r\n    React.useState(\"\");\r\n  const [cantidadTiendaUsuarioActual, setCantidadTiendaUsuarioActual] =\r\n    React.useState(\"\");\r\n  const [tiendasByProductoDesde, setTiendasByProductoDesde] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [tiendasByProductoHasta, setTiendasByProductoHasta] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [tiendaNombreEspecificaHasta, setTiendaNombreEspecificoHasta] =\r\n    React.useState(\"\");\r\n  const [tiendaNombreEspecificaDesde, setTiendaNombreEspecificoDesde] =\r\n    React.useState(\"\");\r\n\r\n  // Función para mover los productos\r\n  const moverProductoFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    if (usuario?.token) {\r\n      await moverProducto(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto\r\n      );\r\n      const currentDate = new Date();\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n      await addNewMovimiento(\r\n        usuario.token,\r\n        `${month}-${day}-${year}`,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto,\r\n        idProductoOption,\r\n        usuario.id_usuario\r\n      );\r\n\r\n      await createProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverHasta\r\n      );\r\n\r\n      // Agregar Acción de usuario mover producto\r\n      \r\n      let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} movió ${cantidadMoverProducto} de ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} hasta la tienda ${tiendaNombreEspecificaHasta}`;\r\n      await addAccionUsuario(\r\n        usuario.token,\r\n        auxAddAccionUsuarioDescripcion,\r\n        `${year}-${month}-${day}`,\r\n        usuario.id_usuario,\r\n        1\r\n      );\r\n      \r\n\r\n      setModalMensaje(\r\n        `Se movieron ${cantidadMoverProducto} de ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}`\r\n      );\r\n      setModalMesajeMoverVisible(false);\r\n      setRefleshView(true);\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  // Función para validar los campos al mover\r\n  const moverProdcutoFunctionValidarCampos = async () => {\r\n    let flag: boolean = true;\r\n    let validarCampos: string = \"Error. Compruebe los siguientes parámetros:\\n\";\r\n    let cantidadDelProductoEnLaTiendaDesde: number = 0;\r\n    // Obtener cantidad del producto en la tienda especifica desde dodne se quiere mover\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverDesde\r\n      );\r\n      if (result.encontrado) {\r\n        cantidadDelProductoEnLaTiendaDesde = parseInt(result.cantidad);\r\n      }\r\n    }\r\n    if (tiendaMoverDesde === tiendaMoverHasta) {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La tienda origen no puede ser igual a la tienda destino.\\n\";\r\n    }\r\n    if (cantidadMoverProducto === \"0\") {\r\n      flag = false;\r\n      validarCampos += \"-La cantidad a mover debe ser mayor a 0.\\n\"\r\n    }\r\n    if (cantidadMoverProducto === \"\") {\r\n      flag = false;\r\n      validarCampos += \"-La cantidad a mover no puede ser vacio.\\n\";\r\n    } else if (\r\n      parseInt(cantidadMoverProducto) > cantidadDelProductoEnLaTiendaDesde\r\n    ) {\r\n      // Comprobar que la cantidad que se desea mover no es mayor que la cantidad que existe en la tienda\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La cantidad a mover es mayor que la cantidad que existe en la tienda.\\n\";\r\n    }\r\n    if (isPermisoOpcionesDeCeldaMoverGeneral && tiendaMoverDesde === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija la tienda desde la que decea hacer el movimiento.\\n\";\r\n    }\r\n    if (tiendaMoverHasta === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija una tienda a la que desea hacer el movimiento.\\n\";\r\n    }\r\n\r\n    if (flag) {\r\n      const tiendaEspecificaHasta = tiendasByProductoHasta.find(\r\n        (tienda) => tienda.value === tiendaMoverHasta\r\n      );\r\n      setTiendaNombreEspecificoHasta(String(tiendaEspecificaHasta?.label));\r\n      const tiendaEspecificaDesde = tiendasByProductoDesde.find(\r\n        (tienda) => tienda.value === tiendaMoverDesde\r\n      );\r\n      setTiendaNombreEspecificoDesde(String(tiendaEspecificaDesde?.label));\r\n      setModalMoverVisible(false);\r\n      setModalMesajeMoverVisible(true);\r\n    } else {\r\n      setModalMensaje(validarCampos);\r\n      setRefleshView(false);\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  // Cargar datos de las tiendas para mover un producto\r\n  const cargarDatosTiendaParaMover = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n      const resultTiendas = await getAllTiendasByProduct(\r\n        usuario.token,\r\n        idProductoOption\r\n      );\r\n\r\n      if (\r\n        result &&\r\n        Array.isArray(result.data) &&\r\n        resultTiendas !== false &&\r\n        Array.isArray(resultTiendas)\r\n      ) {\r\n        const allTiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n        let auxIdTiendas: string[] = [];\r\n        let auxDataTiendasProducto: TiendaPiker[] = [];\r\n        resultTiendas.forEach(async (element) => {\r\n          // Filtrar productos que esten en la tienda pero que no esten en 0\r\n          if (parseInt(element.cantidad) > 0) {\r\n            auxIdTiendas.push(element.id_tienda);\r\n          }\r\n        });\r\n        for (let element of auxIdTiendas) {\r\n          let item: TiendaPiker = { value: \"\", label: \"\" };\r\n          const datosTendaExisteProducto = await getTiendaById(\r\n            usuario.token,\r\n            element\r\n          );\r\n          item.label = datosTendaExisteProducto.nombre;\r\n          item.value = element;\r\n          auxDataTiendasProducto.push(item);\r\n        }\r\n\r\n        // Verificar si el valor existe en auxDataTiendasProducto\r\n        let existeTienda: boolean = false;\r\n\r\n        existeTienda = auxDataTiendasProducto.some((tienda) => {\r\n          tienda.value === usuario.id_tienda;\r\n        });\r\n\r\n        for (let index = 0; index < auxDataTiendasProducto.length; index++) {\r\n          if (auxDataTiendasProducto[index].value === usuario.id_tienda) {\r\n            existeTienda = true;\r\n          }\r\n        }\r\n        \r\n        if (existeTienda) {\r\n          // Agregar un valor si es que la tienda del usuario es la desde\r\n          setTiendaMoverDesde(usuario.id_tienda)\r\n        }\r\n        if (!isPermisoOpcionesDeCeldaMoverGeneral) {\r\n          setTiendaMoverDesde(usuario.id_tienda);\r\n        }\r\n\r\n        setTiendasByProductoDesde(auxDataTiendasProducto);\r\n        setTiendasByProductoHasta(allTiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const cargarVariablesMover = async () => {\r\n    if (usuario?.token) {\r\n      const resultTienda = await getTiendaById(usuario.token, tiendaMoverDesde);\r\n      const resultCantidadEnTienda = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverDesde\r\n      );\r\n\r\n      setCantidadTiendaUsuarioActual(resultCantidadEnTienda.cantidad);\r\n      setNombreTiendaUsuarioActual(resultTienda.nombre);\r\n    }\r\n  };\r\n  // Controlar las variables que se muestran en el modal de mover\r\n  React.useEffect(() => {\r\n    cargarVariablesMover();\r\n  }, [tiendaMoverDesde]);\r\n\r\n  const detailsModalView = (id_producto: string) => {\r\n    setModalProductsDates({\r\n      id_producto: id_producto,\r\n      isAddProducto: true,\r\n      fileEditable: false,\r\n      isModificarProducto: false,\r\n      isAddProductoShowProveedoresTiendas: true,\r\n      isAddProductoShowProveedores: true,\r\n    });\r\n  };\r\n\r\n  // Controlar el doble clic del boton\r\n    const [isButtonDisabled, setIsButtonDisabled] = React.useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  const resultadoCondicionalOpcionesDeCelda = (item: Producto) => {\r\n    if (usuario?.id_rol) {\r\n      return (usuario.id_rol == \"1\" && isPermisoOpcionesDeCelda) ||\r\n        (usuario.id_rol == \"2\" && isPermisoOpcionesDeCelda) ||\r\n        (usuario.id_rol == \"3\" && isPermisoOpcionesDeCelda)\r\n        ? true\r\n        : item.tieneOpciones && isPermisoOpcionesDeCelda\r\n        ? true\r\n        : false;\r\n    }\r\n  };\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // cargar datos de moneda\r\n        setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, itemsLength);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < itemsLength) {\r\n    setPage(newPage); // Cambia de página si es válido\r\n    setPaginadoProductos({ page: newPage }); // Cambia el estado\r\n    }\r\n  };\r\n\r\n  const sortProductosAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"USD\" || column === \"CUP\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Cantidad\") {\r\n      aux = \"option5\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortProductos({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n            </Text>\r\n            {(column === \"USD\" ||\r\n              column === \"Nombre\" ||\r\n              column === \"CUP\" ||\r\n              column === \"Cantidad\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortProductosAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idProductoOption, setIdProductoOption] = React.useState(\"\");\r\n  const [nombreProductoOption, setNombreProductoOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = async (id_producto: string) => {\r\n    // Capturar el id del producto que se está abriendo las opciones\r\n    setIdProductoOption(id_producto);\r\n    // Capturar el nombre del producto que se está abriendo las opciones\r\n    if (usuario?.token) {\r\n      const auxNombreProducto = await getProductoById(\r\n        usuario.token,\r\n        id_producto\r\n      );\r\n      if (auxNombreProducto) {\r\n        setNombreProductoOption(auxNombreProducto.nombre);\r\n      }\r\n    }\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalProductsDates({\r\n        id_producto: idProductoOption,\r\n        isAddProducto: true,\r\n        fileEditable: true,\r\n        isModificarProducto: true,\r\n        isAddProductoShowProveedoresTiendas: true,\r\n        isAddProductoShowProveedores: true,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      // Cargar tiendas para mover el producto\r\n      cargarDatosTiendaParaMover();\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    // Eliminar las imagenes del producto\r\n    if (usuario?.token) {\r\n      const result = await getProductoById(\r\n        usuario.token,\r\n        idProductoOption\r\n      );\r\n      if (result) {\r\n        for (let imagen of result.imagenes) {\r\n          if (imagen.id_imagen && imagen.url) {\r\n            await deleteImagenByProducto(\r\n              usuario?.token,\r\n              imagen.id_imagen,\r\n              imagen.url.substring(1, imagen.url.length)\r\n            );\r\n          } else {\r\n            console.log(\"Error en comprobar el id o el uri de la imagen\");\r\n          }\r\n        }\r\n      }\r\n      // Eliminar producto\r\n      const aux = await deleteProductoById();\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n      if (aux) {\r\n        const nuevosProductos = displayedItems.filter(\r\n          (producto) => producto.id_Producto !== idProductoOption\r\n        );\r\n\r\n        // Agregar Acción de usuario eliminar producto\r\n        \r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó el producto ${nombreProductoOption}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          1\r\n        );\r\n        \r\n\r\n        setDisplayedItems(nuevosProductos);\r\n        setModalMensaje(\"Producto eliminado con éxito\");\r\n        setModalMensajeView(true);\r\n      } else {\r\n        setModalMensaje(\r\n          \"ERROR AL ELIMINAR: Ya se han hecho operaciones con el producto o ya está en una tienda\"\r\n        );\r\n        setRefleshView(false);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      await deleteFromProductoTiendaIn_0(usuario.token);\r\n      const auxDelete = await deleteProducto(usuario.token, idProductoOption);\r\n      if (auxDelete) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"180%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Producto}\r\n                onPress={() => detailsModalView(item.id_Producto)}\r\n                style={{ justifyContent: \"space-around\" }}\r\n              >\r\n                <DataTable.Cell style={styles.handerRowMovil}>\r\n                  {item.sku}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell style={styles.handerRowMovil}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRowMovil}>\r\n                  {(parseFloat(item.precioUSD) * cambioMoneda).toFixed(0)}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRowMovil}>\r\n                  <Text>{item.cantidadTotal} </Text>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    flex: 0.5,\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  {resultadoCondicionalOpcionesDeCelda(item) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        borderRadius: 12,\r\n                        height: \"50%\",\r\n                        width: \"70%\", // Ajustar tamaño del botón\r\n                        shadowColor: Colors.azul_Oscuro,\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6,\r\n                        shadowRadius: 14,\r\n                        marginRight: \"100%\",\r\n                      }}\r\n                      onPressIn={onPressIn}\r\n                      onPressOut={onPressOut}\r\n                      onPress={() => toggleModal(item.id_Producto)}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/option.png\")}\r\n                        style={{ width: \"70%\", height: \"70%\" }}\r\n                      />\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idProductoOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                      disabled={isButtonDisabled}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {tiendaMoverDesde === \"\"\r\n                    ? \"Seleccione una tienda origen\"\r\n                    : `Mover Producto \"${nombreProductoOption}\" en la Tienda\\n ${nombreTiendaUsuarioActual} con una cantidad de ${cantidadTiendaUsuarioActual}`}\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                      <CustomDropDownPikerFromMover\r\n                        value={tiendaMoverDesde}\r\n                        items={tiendasByProductoDesde}\r\n                        placeholder=\"Tienda desde donde se quiere mover\"\r\n                        setValue={setTiendaMoverDesde}\r\n                      />\r\n                    )}\r\n                    <CustomDropDownPikerFromMover\r\n                      value={tiendaMoverHasta}\r\n                      items={tiendasByProductoHasta}\r\n                      placeholder=\"Tienda a la que se quiere mover\"\r\n                      setValue={setTiendaMoverHasta}\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      marginTop: 150,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n            {/* Modal mensaje para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMesajeMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 450,\r\n                    height: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {`Desea mover ${cantidadMoverProducto} producto ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}?`}\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => moverProductoFunction()}\r\n                      disabled={isButtonDisabled}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                      <CustomDropDownPikerFromMover\r\n                        value={tiendaMoverDesde}\r\n                        items={tiendasByProductoDesde}\r\n                        placeholder=\"Tienda desde donde se quiere mover\"\r\n                        setValue={setTiendaMoverDesde}\r\n                      />\r\n                    )}\r\n                    <CustomDropDownPikerFromMover\r\n                      value={tiendaMoverHasta}\r\n                      items={tiendasByProductoHasta}\r\n                      placeholder=\"Tienda a la que se quiere mover\"\r\n                      setValue={setTiendaMoverHasta}\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      marginTop: 150,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  itemsLength\r\n                )} de ${itemsLength}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= itemsLength &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= itemsLength} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Producto}\r\n                onPress={() => detailsModalView(item.id_Producto)}\r\n              >\r\n                <DataTable.Cell style={styles.handerRowDesktop}>\r\n                  {item.sku}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell style={styles.handerRowDesktop}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRowDesktop}>\r\n                  {(parseFloat(item.precioUSD) * cambioMoneda).toFixed(0)}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    flex: 1.5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      marginRight: \"13%\",\r\n                    }}\r\n                  >\r\n                    {item.cantidadTotal}{\" \"}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    flex: 0.5,\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  {resultadoCondicionalOpcionesDeCelda(item) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        borderRadius: 12,\r\n                        height: \"60%\",\r\n                        width: \"80%\", // Ajustar tamaño del botón\r\n                        shadowColor: Colors.azul_Oscuro,\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6,\r\n                        shadowRadius: 14,\r\n                        marginRight: \"100%\",\r\n                      }}\r\n                      onPressIn={onPressIn}\r\n                      onPressOut={onPressOut}\r\n                      onPress={() => toggleModal(item.id_Producto)}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/option.png\")}\r\n                        style={{ width: \"70%\", height: \"70%\" }}\r\n                      />\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalVisible}\r\n            animationType=\"fade\"\r\n            onRequestClose={() => toggleModal(\"\")}\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 250,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  Opciones\r\n                </Text>\r\n\r\n                {isPermisoOpcionesDeCeldaModificar && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Modificar\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/edit.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                      Modificar\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {isPermisoOpcionesDeCeldaEliminar && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Eliminar\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/delete.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                  isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Mover\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/mover.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\" }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {/* Botón para cerrar el modal */}\r\n                <TouchableOpacity\r\n                  onPress={() => toggleModal(\"\")}\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/* Modal para el Eliminar*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalEliminarVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 350,\r\n                  height: 200,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  ¿Estás seguro de que deseas eliminar este producto?\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\", // Espacio entre los botones\r\n                    width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => auxDeleteProductoById()}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Sí</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>No</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    setModalEliminarVisible(!isModalEliminarVisible)\r\n                  }\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n\r\n          {/* Modal para el Mover*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMoverVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 500, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {tiendaMoverDesde === \"\"\r\n                    ? \"Seleccione una tienda origen\"\r\n                    : `Mover Producto \"${nombreProductoOption}\" en la Tienda ${nombreTiendaUsuarioActual} con una cantidad de ${cantidadTiendaUsuarioActual}`}\r\n                </Text>\r\n\r\n                <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                  La cantidad que desea mover\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 50,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                    shadowRadius: 14, // Difuminado\r\n                    width: \"90%\",\r\n                    marginTop: \"2%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18, // Tamaño de letra más grande\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                    fontWeight: \"bold\", // Letra en negritas\r\n                    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Cantidad a mover\"\r\n                  value={cantidadMoverProducto}\r\n                  onChangeText={(text) => {\r\n                    const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                    setCantidadMoverProducto(numericValue);\r\n                  }}\r\n                />\r\n\r\n                <Text style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}>\r\n                  Tiendas para mover los productos\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                  {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                    <CustomDropDownPikerFromMover\r\n                      value={tiendaMoverDesde}\r\n                      items={tiendasByProductoDesde}\r\n                      placeholder=\"Tienda desde donde se quiere mover\"\r\n                      setValue={setTiendaMoverDesde}\r\n                    />\r\n                  )}\r\n                  <CustomDropDownPikerFromMover\r\n                    value={tiendaMoverHasta}\r\n                    items={tiendasByProductoHasta}\r\n                    placeholder=\"Tienda a la que se quiere mover\"\r\n                    setValue={setTiendaMoverHasta}\r\n                  />\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Claro,\r\n                    borderRadius: 15,\r\n                    marginTop: 150,\r\n                    width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                    height: 50, // Altura fija para pantallas de escritorio\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 3, height: 4 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/* Modal mensaje para el Mover*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMesajeMoverVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 450,\r\n                  height: 250,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {`Desea mover ${cantidadMoverProducto} producto ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}?`}\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\", // Espacio entre los botones\r\n                    width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => moverProductoFunction()}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Sí</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                    }\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>No</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                  }\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => {isRefleshView? navigation.replace(\"Productos\") : setModalMensajeView(!isModalMensajeView)}}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                itemsLength\r\n              )} of ${itemsLength}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= itemsLength &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= itemsLength} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRowDesktop: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  handerRowMovil: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport interface TiendaShowModal {\r\n  id_tienda: string;\r\n  nombre: string;\r\n  cantidad: string;\r\n}\r\n\r\ninterface Props {\r\n  items: TiendaShowModal[];\r\n  columns: string[];\r\n}\r\n\r\nexport const MyDateTableModalShowDatesTienda: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(3);\r\n  const [displayedItems, setDisplayedItems] = React.useState<TiendaShowModal[]>(\r\n    []\r\n  ); // Estado para los elementos mostrados\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text style={styles.headerTextDesktop}>{column}</Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerDesktop}>\r\n      <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n        <DataTable style={{ width: \"150%\" }}>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.filter((item)=>parseInt(item.cantidad) !== 0).map((item) => (\r\n            <DataTable.Row\r\n              key={item.id_tienda}\r\n              onPress={() => {}}\r\n            >\r\n              <DataTable.Cell style={styles.handerRow}>\r\n                <Text\r\n                  style={{ flexWrap: \"wrap\", width: \"100%\", textAlign: \"left\" }}\r\n                  numberOfLines={2} // Limita a 2 líneas\r\n                >\r\n                  {item.nombre}\r\n                </Text>\r\n              </DataTable.Cell>\r\n              <DataTable.Cell numeric style={styles.handerRow}>\r\n                {item.cantidad}\r\n              </DataTable.Cell>\r\n            </DataTable.Row>\r\n          ))}\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\n\r\nexport interface ProveedoresShowModal {\r\n  id_proveedor: string;\r\n  nombre: string;\r\n  cantidad: string;\r\n  costoPorUnidad: number;\r\n}\r\n\r\ninterface Props {\r\n  items: ProveedoresShowModal[];\r\n  columns: string[];\r\n}\r\n\r\nexport const MyDateTableModalShowDateProveedores: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n  const { usuario } = useUsuario();\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(3);\r\n  const [displayedItems, setDisplayedItems] = React.useState<\r\n    ProveedoresShowModal[]\r\n  >([]); // Estado para los elementos mostrados\r\n\r\n  const runEffects = async () => {\r\n    // Actualizar cambio de moneda\r\n    if (localStorage.getItem(\"cambioMoneda\") === null) {\r\n      setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n    } else {\r\n      setCambioMoneda(parseFloat(localStorage.getItem(\"cambioMoneda\")));\r\n    }\r\n  };\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text style={styles.headerTextDesktop}>{column}</Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerDesktop}>\r\n      <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n        <DataTable style={{ width: \"150%\" }}>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => (\r\n            <DataTable.Row key={item.id_proveedor} onPress={() => {}}>\r\n              <DataTable.Cell style={styles.handerRow}>\r\n                <Text\r\n                  style={{ flexWrap: \"wrap\", width: \"100%\", textAlign: \"left\" }}\r\n                  numberOfLines={2} // Limita a 2 líneas\r\n                >\r\n                  {item.nombre}\r\n                </Text>\r\n              </DataTable.Cell>\r\n              <DataTable.Cell numeric style={styles.handerRow}>\r\n                {item.cantidad}\r\n              </DataTable.Cell>\r\n              <DataTable.Cell numeric style={styles.handerRow}>\r\n                {(item.costoPorUnidad * cambioMoneda).toFixed(0)}\r\n              </DataTable.Cell>\r\n            </DataTable.Row>\r\n          ))}\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface NavigationLost {\r\n    isOnToken: boolean;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface NavigationLostDatesContextType {\r\n  navigationLostDates: NavigationLost | null;\r\n  setNavigationLostDates: (navigationLostDates: NavigationLost | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst NavigationLostDatesContext = createContext<NavigationLostDatesContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const NavigationLostDatesProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  // Inicializa navigationLostDates con isOnToken en false\r\n  const [navigationLostDates, setNavigationLostDates] = useState<NavigationLost | null>({\r\n    isOnToken: false,\r\n  });\r\n\r\n  return (\r\n    <NavigationLostDatesContext.Provider value={{ navigationLostDates, setNavigationLostDates }}>\r\n      {children}\r\n    </NavigationLostDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useNavigationLostDates = () => {\r\n  const context = React.useContext(NavigationLostDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useNavigationLostDates debe usarse dentro de un NavigationLostDatesProvider');\r\n  }\r\n  return context;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport RadioGroup, { RadioButtonProps } from \"react-native-radio-buttons-group\";\r\nimport { Colors } from \"../styles/Colors\";\r\n\r\nconst CustomRadioButton = ({\r\n  onPress,\r\n  selected,\r\n  label,\r\n}: {\r\n  onPress: () => void;\r\n  selected: boolean;\r\n  label: string;\r\n}) => (\r\n  <TouchableOpacity\r\n    onPress={onPress}\r\n    style={[styles.radioButton, selected && styles.radioButtonSelected]}\r\n  >\r\n    <Text\r\n      style={[\r\n        styles.radioButtonText,\r\n        selected && styles.radioButtonTextSelected,\r\n      ]}\r\n    >\r\n      {label}\r\n    </Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  radioButton: {\r\n    flexDirection: \"row\",\r\n    height: 50,\r\n    width: \"45%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    borderColor: Colors.azul_Claro,\r\n    borderWidth: 3,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginHorizontal: \"2%\",\r\n    backgroundColor: Colors.azul_Suave, // Color de fondo del botón\r\n  },\r\n  radioButtonSelected: {\r\n    backgroundColor: Colors.azul_Oscuro, // Color de fondo del botón seleccionado\r\n  },\r\n  radioButtonText: {\r\n    fontSize: 16,\r\n    color: Colors.blanco, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  radioButtonTextSelected: {\r\n    fontWeight: \"bold\", // Texto en negritas para el botón seleccionado\r\n    color: Colors.blanco_Suave, // Color del texto para el botón seleccionado\r\n  },\r\n  selectedText: {\r\n    marginTop: 20,\r\n    fontSize: 18,\r\n    color: \"#333\",\r\n  },\r\n});\r\n\r\nexport default CustomRadioButton;\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport compressImage from \"react-native-compressor\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport {\r\n  Producto,\r\n  MyDateTableProductos,\r\n} from \"../components/MyDateTableProductos\";\r\nimport {\r\n  addProducto,\r\n  addProductoAndImagenes,\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  ExelProductoAll,\r\n  expedirExelProductos,\r\n  filterProducts,\r\n  getProductoBySku,\r\n  getProductoCantidadTotal,\r\n  getProductoById,\r\n  getAllProductos,\r\n  importarDataProducto_Tiendas,\r\n  importarDataProductos,\r\n  ordenarProducts,\r\n  updateProducto,\r\n  getAllProductosFromTable,\r\n  expedirExelProductosConColumnas,\r\n} from \"../services/ProductoServices\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n  isProductoInTienda,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport {\r\n  launchImageLibrary,\r\n  ImagePickerResponse,\r\n  Asset,\r\n} from \"react-native-image-picker\";\r\nimport {\r\n  PanGestureHandler,\r\n  PanGestureHandlerGestureEvent,\r\n} from \"react-native-gesture-handler\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport {\r\n  MyDateTableModalShowDateProveedores,\r\n  ProveedoresShowModal,\r\n} from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { useModalProductsDates } from \"../contexts/AuxiliarContextFromModalProductsDates\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { SortProductos } from \"../functions/SortFromPacientesView\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport axios from \"axios\";\r\nimport { cerverHost, cerverHostImages } from \"../services/cerverHost\";\r\nimport {\r\n  crearimagenUnProducto,\r\n  deleteImagenByProducto,\r\n  getImagenById,\r\n} from \"../services/ImageServices\";\r\nimport {\r\n  addEntrada,\r\n  getAllEntradasByProductoId,\r\n  getEntradaByID,\r\n} from \"../services/EntradaServices\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport { useNavigationLostDates } from \"../contexts/NavigationLostContext\";\r\nimport { usePaginadoProductos } from \"../contexts/AuxiliarContextPaginadoproductos\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\n\r\nexport default function ProductosViwe() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario } = useUsuario();\r\n  const { sortProductos } = useSortProductos();\r\n  const { modalProductsDates, setModalProductsDates } = useModalProductsDates();\r\n  const { navigationLostDates, setNavigationLostDates } =\r\n    useNavigationLostDates();\r\n  const { paginadoProductos, setPaginadoProductos } = usePaginadoProductos();\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Opciones para saber si el producto tiene fecha de vencimiento o o\r\n  const optionsIsFechaVencimiento = [\r\n    { label: \"Si\", value: \"si\" },\r\n    { label: \"No\", value: \"no\" },\r\n  ];\r\n\r\n  // Variables para controlar los campos de los formularios de agregar producto y ver datos\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"no\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [nombreProductoDetails, setNombreProductoDetails] = useState(\"\");\r\n  const [precioProductoUSDDetails, setPrecioProductoUSDDetails] = useState(\"0\");\r\n  const [precioProductoCUPDetails, setPrecioProductoCUPDetails] = useState(\"0\");\r\n  const [costoPromedio, setCostopromedio] = useState(\"\");\r\n  const [precioEmpresaProductoDetails, setPrecioEmpresaProductoDetails] =\r\n    useState(\"\");\r\n  const [skuDetails, setSkuDetails] = useState(\"\");\r\n  const [descripcionProductoDetails, setDescripcionProductoDetails] =\r\n    useState(\"\");\r\n  // Estado para almacenar las imágenes seleccionadas\r\n  const [selectedImages, setSelectedImages] = useState<Asset[]>([]);\r\n  const [deleteImages, setDeleteImages] = useState<Asset[]>([]);\r\n  const [modificarAddImages, setModificarAddImages] = useState<Asset[]>([]);\r\n\r\n  const [isModalMensajeViewExel, setModalMensajeViewExel] =\r\n    React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  const [\r\n    optimizacionAbrirPorPrimeraVesProductosView,\r\n    setOptimizacionAbrirPorPrimeraVesProductosView,\r\n  ] = useState(false);\r\n  const [controlFiltrarOPaginar, setControlFiltrarOPaginar] = useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  // Controlar el doble clic del boton\r\n  const [isButtonDisabled, setIsButtonDisabled] = React.useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoButtonAddProducto, setIsPermisoButtonAddProducto] =\r\n    useState(false);\r\n  const [isPermisoHistorialDeProveedores, setIsPermisoHistorialDeProveedores] =\r\n    useState(false);\r\n  let opcionesDeCelda: boolean = false;\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultPermisoButonAddProducto = await isPermiso(\r\n        usuario.token,\r\n        \"6\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoHistorialDeProveedores = await isPermiso(\r\n        usuario.token,\r\n        \"38\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionModificar = await isPermiso(\r\n        usuario.token,\r\n        \"7\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionEliminar = await isPermiso(\r\n        usuario.token,\r\n        \"8\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n        usuario.token,\r\n        \"30\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"31\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      // Actualizar cambio de moneda\r\n      setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n\r\n      // Actualiza el estado con los resultado\r\n      opcionesDeCelda =\r\n        resultPermisoButonOptionEliminar ||\r\n        resultPermisoButonOptionModificar ||\r\n        resultPermisoButonOptionMoverLocal ||\r\n        resultPermisoButonOptionMoverGeneral;\r\n\r\n      setIsPermisoButtonAddProducto(resultPermisoButonAddProducto);\r\n      setIsPermisoHistorialDeProveedores(resultPermisoHistorialDeProveedores);\r\n    }\r\n  };\r\n\r\n  const onDrop = () => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Producto[]>([]);\r\n  const [filterItemsLength, setFilterItemsLength] = useState(0);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([]);\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarProductos();\r\n    }\r\n  };\r\n\r\n  const cargarProveedoresPorProducto = async (id_producto: string) => {\r\n    try {\r\n      if (usuario?.token) {\r\n        // Llamamos a la API para obtener todas las entradas según el producto\r\n        const entradas = await getAllEntradasByProductoId(\r\n          usuario?.token,\r\n          id_producto\r\n        );\r\n        const cantidadTotalProducto = await getProductoCantidadTotal(\r\n          usuario.token,\r\n          id_producto\r\n        );\r\n\r\n        if (entradas) {\r\n          // Mapeamos los datos de las entradas para obtener solo la información que necesitamos\r\n          const proveedores = entradas.map((entrada: any) => ({\r\n            id_proveedor: entrada.proveedor.id_proveedor,\r\n            nombre: entrada.proveedor.nombre,\r\n            cantidad: entrada.cantidad,\r\n            costoPorUnidad: entrada.costo,\r\n          }));\r\n\r\n          // Actualizamos el estado con los datos obtenidos\r\n          setProveedorByProducto(proveedores);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error al cargar los proveedores por producto:\", error);\r\n    }\r\n  };\r\n\r\n  const getTiendasByProducto = async (id_producto: string) => {\r\n    if (usuario?.token) {\r\n      const result = await getAllTiendasByProduct(usuario.token, id_producto);\r\n\r\n      // Asegurándonos de que `result` es un array y contiene los datos esperados.\r\n      if (Array.isArray(result)) {\r\n        // Mapeamos los datos de tiendas al formato de TiendaShowModal.\r\n        const tiendas: TiendaShowModal[] = result.map((item) => ({\r\n          id_tienda: item.tienda.id_tienda.toString(),\r\n          nombre: item.tienda.nombre,\r\n          cantidad: item.cantidad.toString(), // Aquí usamos `item.cantidad` directamente.\r\n        }));\r\n\r\n        // Actualizamos el estado con las tiendas formateadas.\r\n        setTiendasByProducto(tiendas);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método para exportar a exel\r\n  const exportarExel = async () => {\r\n    interface Item {\r\n      sku: string;\r\n      Nombre: string;\r\n      Existencia: string;\r\n      Precio_USD: string;\r\n      Precio_CUP: string;\r\n      Precio_Mayorista: string;\r\n      [key: string]: any; // Permite propiedades adicionales con claves de tipo string\r\n    }\r\n\r\n    setModalMensaje(\r\n      \"Recopilando datos de todos los productos filtrados para el Exel. Espere un momento por favor.\"\r\n    );\r\n    setLoadingOfExel(true);\r\n    setModalMensajeViewExel(true);\r\n    if (usuario?.token) {\r\n      if (filterItems.length < filterItemsLength) {\r\n        const resultAllTiendas = await getAllTiendas(usuario.token);\r\n        const resultAllProductos = await filterProducts(\r\n          usuario.token,\r\n          \"\",\r\n          \"\",\r\n          \"\",\r\n          \"\",\r\n          \"\",\r\n          \"\"\r\n        );\r\n\r\n        if (\r\n          resultAllTiendas &&\r\n          Array.isArray(resultAllTiendas.data) &&\r\n          resultAllProductos &&\r\n          Array.isArray(resultAllProductos)\r\n        ) {\r\n          let itemsFromExel: Item[] = []; // Cambia el tipo a Item[]\r\n          for (let index of resultAllProductos) {\r\n            const item: Item = {\r\n              sku: index.Sku,\r\n              Nombre: index.nombre,\r\n              Existencia: index.cantidad_total,\r\n              Precio_USD: parseFloat(index.precio).toFixed(5),\r\n              Precio_CUP: (parseFloat(index.precio) * cambioMoneda).toFixed(0),\r\n              Precio_Mayorista: index.precio_empresa,\r\n            };\r\n\r\n            const resultProductoTienda = await getAllTiendasByProduct(\r\n              usuario.token,\r\n              index.id_producto\r\n            );\r\n            if (resultProductoTienda && Array.isArray(resultProductoTienda)) {\r\n              for (let elemen of resultProductoTienda) {\r\n                item[elemen.tienda.nombre] = elemen.cantidad ?? 0; // Ahora esto no dará error\r\n              }\r\n              for (let element of resultAllTiendas.data) {\r\n                if (!item[element.nombre]) {\r\n                  item[element.nombre] = 0;\r\n                }\r\n              }\r\n            }\r\n\r\n            itemsFromExel.push(item);\r\n          }\r\n\r\n          const result = await expedirExelProductosConColumnas(\r\n            usuario.token,\r\n            [],\r\n            itemsFromExel\r\n          );\r\n          if (result) {\r\n            const currentDate = new Date();\r\n            const year = String(currentDate.getFullYear());\r\n            const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n            const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n            const url = window.URL.createObjectURL(result);\r\n\r\n            // Crea un enlace de descarga\r\n            const a = document.createElement(\"a\");\r\n            a.href = url;\r\n            a.download = `Productos_${year}-${month}-${day}.xlsx`; // Nombre del archivo descargado\r\n            document.body.appendChild(a);\r\n\r\n            // Haz clic en el enlace para iniciar la descarga\r\n            a.click();\r\n\r\n            // Limpia el enlace creado y la URL Blob\r\n            document.body.removeChild(a);\r\n            window.URL.revokeObjectURL(url);\r\n          } else {\r\n            console.error(\"No se pudo descargar el archivo.\");\r\n          }\r\n        }\r\n      } else {\r\n        const resultAllTiendas = await getAllTiendas(usuario.token);\r\n\r\n        if (resultAllTiendas && Array.isArray(resultAllTiendas.data)) {\r\n          let itemsFromExel: Item[] = []; // Cambia el tipo a Item[]\r\n          for (let index of filterItems) {\r\n            const item: Item = {\r\n              sku: index.sku,\r\n              Nombre: index.nombre,\r\n              Existencia: index.cantidadTotal,\r\n              Precio_USD: parseFloat(index.precioUSD).toFixed(5),\r\n              Precio_CUP: (parseFloat(index.precioUSD) * cambioMoneda).toFixed(\r\n                0\r\n              ),\r\n              Precio_Mayorista: index.precioEmpresaUSD ?? \"0\",\r\n            };\r\n\r\n            const resultProductoTienda = await getAllTiendasByProduct(\r\n              usuario.token,\r\n              index.id_Producto\r\n            );\r\n            if (resultProductoTienda && Array.isArray(resultProductoTienda)) {\r\n              for (let elemen of resultProductoTienda) {\r\n                item[elemen.tienda.nombre] = elemen.cantidad ?? 0; // Ahora esto no dará error\r\n              }\r\n              for (let element of resultAllTiendas.data) {\r\n                if (!item[element.nombre]) {\r\n                  item[element.nombre] = 0;\r\n                }\r\n              }\r\n            }\r\n\r\n            itemsFromExel.push(item);\r\n          }\r\n\r\n          const result = await expedirExelProductosConColumnas(\r\n            usuario.token,\r\n            [],\r\n            itemsFromExel\r\n          );\r\n          if (result) {\r\n            const currentDate = new Date();\r\n            const year = String(currentDate.getFullYear());\r\n            const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n            const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n            const url = window.URL.createObjectURL(result);\r\n\r\n            // Crea un enlace de descarga\r\n            const a = document.createElement(\"a\");\r\n            a.href = url;\r\n            a.download = `Productos_${year}-${month}-${day}.xlsx`; // Nombre del archivo descargado\r\n            document.body.appendChild(a);\r\n\r\n            // Haz clic en el enlace para iniciar la descarga\r\n            a.click();\r\n\r\n            // Limpia el enlace creado y la URL Blob\r\n            document.body.removeChild(a);\r\n            window.URL.revokeObjectURL(url);\r\n          } else {\r\n            console.error(\"No se pudo descargar el archivo.\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setLoadingOfExel(false);\r\n  };\r\n\r\n  const nombreProductoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Cuando el modal esté visible, enfocar el campo del nombre del producto\r\n    if (modalProductsDates?.isAddProducto) {\r\n      nombreProductoRef.current?.focus();\r\n    }\r\n  }, [modalProductsDates?.isAddProducto]);\r\n\r\n  useEffect(() => {\r\n    if (navigationLostDates?.isOnToken) {\r\n      alert(navigationLostDates.isOnToken);\r\n    }\r\n  }, [navigationLostDates?.isOnToken]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      optimizacionAbrirPorPrimeraVesProductosView &&\r\n      paginadoProductos?.page !== undefined &&\r\n      usuario?.token &&\r\n      controlFiltrarOPaginar\r\n    ) {\r\n      const auxiliarPagination = async () => {\r\n        if (usuario?.token != undefined) {\r\n          try {\r\n            // Obtener productos desde la tabla\r\n            const result = await getAllProductosFromTable(\r\n              usuario.token,\r\n              paginadoProductos.page + 1\r\n            );\r\n\r\n            setFilterItemsLength(result.cantidad_total_productos);\r\n            if (result && Array.isArray(result.productos)) {\r\n              // Mapeamos los productos y obtenemos tanto la cantidadTotal como si tienen opciones\r\n              const productosMapeados: Producto[] = await Promise.all(\r\n                result.productos.map(async (element: any) => {\r\n                  // Verificar si el producto tiene opciones (en la tienda)\r\n                  let tieneOpciones: boolean = false;\r\n\r\n                  for (let index of element.tiendas) {\r\n                    if (usuario.id_tienda === index.id_tienda) {\r\n                      tieneOpciones = true;\r\n                      break;\r\n                    }\r\n                  }\r\n\r\n                  // Devolvemos el producto con todas las propiedades mapeadas\r\n                  return {\r\n                    id_Producto: element.id_producto, // Mapea 'id_producto' a 'id_Producto'\r\n                    nombre: element.nombre, // Mapea 'nombre' directamente\r\n                    sku: element.Sku, // Mapea 'Sku' a 'sku'\r\n                    cantidadTotal: element.cantidad_total, // Asigna el valor obtenido para cantidadTotal\r\n                    precioUSD: element.precio.toString(), // Mapea 'precio' a 'precioUSD' y lo convierte a string\r\n                    tieneOpciones: tieneOpciones, // Añade el valor de tieneOpciones\r\n                  };\r\n                })\r\n              );\r\n              // Actualizamos el estado de filterItems con los productos mapeados\r\n              setFilterItems((prevFilterItems) => [\r\n                ...prevFilterItems,\r\n                ...productosMapeados,\r\n              ]);\r\n            } else {\r\n              console.log(\"No se encontraron productos.\");\r\n            }\r\n          } catch (error) {\r\n            console.log(\r\n              \"Error al obtener los productos o verificar permisos:\",\r\n              error\r\n            );\r\n            alert(\"Ocurrió un problema al cargar los datos de los productos\");\r\n          }\r\n        } else {\r\n          alert(\r\n            \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de los productos\"\r\n          );\r\n        }\r\n      };\r\n\r\n      auxiliarPagination();\r\n    }\r\n  }, [paginadoProductos]);\r\n\r\n  const [dropdownItems, setDropDownItems] = useState<TiendaPiker[]>([]);\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [sKUSearch, setSKUSearch] = useState(\"\");\r\n  const [cantidadSearch, setCantidadSearch] = useState(\"\");\r\n  const [rangoPrecioDesdeSearch, setRangoPrecioDesdeSearch] = useState(\"\");\r\n  const [rangoPrecioHastaSearch, setRangoPrecioHastaSearch] = useState(\"\");\r\n  const [selectedValueNombreTienda, setSelectedValueNombreTienda] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingOfExel, setLoadingOfExel] = useState(false);\r\n\r\n  const getDatesTiendaPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItems([\r\n          { label: \"Seleccione una tienda\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar producto\r\n  const callModalAddProducto = () => {\r\n    setModalProductsDates({\r\n      id_producto: \"\",\r\n      isAddProducto: false,\r\n      isModificarProducto: false,\r\n      fileEditable: true,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isAddProductoShowProveedores: false,\r\n    });\r\n  };\r\n  const cargarDetailsOfProducto = async () => {\r\n    if (usuario?.token && modalProductsDates?.id_producto) {\r\n      const result = await getProductoById(\r\n        usuario.token,\r\n        modalProductsDates.id_producto\r\n      );\r\n\r\n      if (result) {\r\n        // Establecer los detalles del producto\r\n        setIdProductoDetails(result.id_producto);\r\n        setNombreProductoDetails(result.nombre);\r\n        setPrecioProductoUSDDetails(result.precio);\r\n        setPrecioProductoCUPDetails((result.precio * cambioMoneda).toFixed(0))\r\n        setPrecioEmpresaProductoDetails(result.precio_empresa);\r\n        setSkuDetails(result.Sku);\r\n        setCostopromedio((result.costo_acumulado).toFixed(2));\r\n        setSelecterActivoDetails(result.isFecha_Vencimiento ? \"si\" : \"no\");\r\n        setDescripcionProductoDetails(result.descripcion || \"\"); // Maneja el caso de descripción nula\r\n\r\n        // Cargar historial de proveedores y tiendas en el que existe el producto\r\n        getTiendasByProducto(result.id_producto);\r\n        cargarProveedoresPorProducto(result.id_producto);\r\n\r\n        // Convertir las imágenes de URL a base64\r\n        const imagesPromises = result.imagenes.map(async (img: any) => {\r\n          let httpImage: string = await img.url;\r\n          let id_image: string = await img.id_imagen;\r\n          let parseHttp = httpImage.substring(1, httpImage.length);\r\n          httpImage = cerverHostImages + parseHttp;\r\n          return { uri: httpImage, id: id_image }; // Almacenar en el formato adecuado\r\n        });\r\n\r\n        // Esperar a que todas las promesas se resuelvan\r\n        const images = await Promise.all(imagesPromises);\r\n        setSelectedImages(images);\r\n      }\r\n    }\r\n  };\r\n  const auxiliarFunctionFilter = async (): Promise<Producto[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filterProducts(\r\n          usuario.token,\r\n          nombreProductoSearch,\r\n          sKUSearch,\r\n          rangoPrecioDesdeSearch,\r\n          rangoPrecioHastaSearch,\r\n          cantidadSearch,\r\n          selectedValueNombreTienda ?? \"\"\r\n        );\r\n\r\n        if (result) {\r\n          const productosMapeados: Producto[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Producto: element.id_producto, // Mapea 'id_producto' a 'id_Producto'\r\n              nombre: element.nombre, // Mapea 'nombre' directamente\r\n              sku: element.Sku, // Mapea 'Sku' a 'sku'\r\n              cantidadTotal: element.cantidad_total,\r\n              precioUSD: element.precio.toString(), // Mapea 'precio' a 'precioUSD' y lo convierte a string\r\n              precioEmpresaUSD: element.precio_empresa,\r\n            }))\r\n          );\r\n          return productosMapeados; // Devuelve los productos mapeados\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los productos:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null; // Devuelve null si no hay token o no se pudieron filtrar productos\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optimizacionAbrirPorPrimeraVesProductosView) {\r\n      cargarDetailsOfProducto();\r\n    }\r\n  }, [modalProductsDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerProductosConPermisosYDatos = async (page: number) => {\r\n    setModalMensajeView(false);\r\n    setLoading(true);\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener productos desde la tabla\r\n        const result = await getAllProductosFromTable(usuario.token, page);\r\n\r\n        setFilterItemsLength(result.cantidad_total_productos);\r\n        if (result && Array.isArray(result.productos)) {\r\n          // Mapeamos los productos y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const productosMapeados: Producto[] = await Promise.all(\r\n            result.productos.map(async (element: any) => {\r\n              // Verificar si el producto tiene opciones (en la tienda)\r\n              let tieneOpciones: boolean = false;\r\n\r\n              if (opcionesDeCelda) {\r\n                for (let index of element.tiendas) {\r\n                  if (usuario.id_tienda === index.id_tienda) {\r\n                    tieneOpciones = true;\r\n                    break;\r\n                  }\r\n                }\r\n              }\r\n\r\n              // Devolvemos el producto con todas las propiedades mapeadas\r\n              return {\r\n                id_Producto: element.id_producto, // Mapea 'id_producto' a 'id_Producto'\r\n                nombre: element.nombre, // Mapea 'nombre' directamente\r\n                sku: element.Sku, // Mapea 'Sku' a 'sku'\r\n                cantidadTotal: element.cantidad_total, // Asigna el valor obtenido para cantidadTotal\r\n                precioUSD: element.precio.toString(), // Mapea 'precio' a 'precioUSD' y lo convierte a string\r\n                tieneOpciones: tieneOpciones, // Añade el valor de tieneOpciones\r\n              };\r\n            })\r\n          );\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(productosMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron productos.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener los productos o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de los productos\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de los productos\"\r\n      );\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const consumerKey = \"ck_aaae303d49b4ac57c713472aca2f610d4c99e195\";\r\n  const consumerSecret = \"cs_646f2fd371adc5d405a5a7bb9a464909e94a0c75\";\r\n\r\n  async function convertImageUrlToBase64(imageUrl: string): Promise<string> {\r\n    try {\r\n      // Codifica las credenciales en base64 para la autenticación básica\r\n      const credentials = btoa(`${consumerKey}:${consumerSecret}`);\r\n\r\n      const response = await fetch(imageUrl, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Basic ${credentials}`,\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error al obtener la imagen: ${response.statusText}`);\r\n      }\r\n\r\n      const blob = await response.blob();\r\n\r\n      return await new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => resolve(reader.result as string);\r\n        reader.onerror = (error) =>\r\n          reject(`Error al convertir la imagen a Base64: ${error}`);\r\n        reader.readAsDataURL(blob);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error al descargar y convertir la imagen:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  const runEffects = async () => {\r\n    setOptimizacionAbrirPorPrimeraVesProductosView(false);\r\n    /*\r\n    if (usuario?.token) {\r\n      const resultProducto = await importarDataProductos(\r\n        usuario.token,\r\n        \"E:\\\\Solutel\\\\Sitio Web De gestión\\\\Libro1.xlsx\"\r\n      );\r\n      if (resultProducto && Array.isArray(resultProducto)) {\r\n        for(let element of resultProducto){\r\n          if (element.nombre) {\r\n            const result = await addProducto(\r\n              usuario.token,\r\n              element.nombre,\r\n              element.Sku,\r\n              element.precio ?? \"0\",\r\n              element.precio_empresa ?? \"0\",\r\n              \"\"\r\n            );\r\n            if (result) {\r\n              console.log(\"Producto Agregado\");\r\n            }else{\r\n              console.log(\"Error\")\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    /*\r\n    /*\r\n    (async () => {\r\n      const imageUrl =\r\n        \"https://solutelcuba.com/wp-content/uploads/2024/09/ZOSI-C303-Sistema-de-Seguridad-CCTV-8-Camaras-con-Audio-y-DVR-de-1-TB1.jpg\";\r\n      try {\r\n        const base64Image = await convertImageUrlToBase64(imageUrl);\r\n        console.log(`Imagen en Base64: ${base64Image}`);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    })();\r\n    */\r\n    /*\r\n    if (usuario?.token) {\r\n      const resultProducto = await importarDataProducto_Tiendas(\r\n        usuario.token,\r\n        \"E:\\\\Solutel\\\\Sitio Web De gestión\\\\Libro1.xlsx\"\r\n      );\r\n      if (resultProducto && Array.isArray(resultProducto)) {\r\n        for (let element of resultProducto) {\r\n          // Condición para producto tienda \"element && Object.keys(element).length > 0\"\r\n          if (element && Object.keys(element).length > 0) {\r\n            const resultProducto = await getProductoBySku(\r\n              usuario.token,\r\n              element.Sku\r\n            );\r\n            \r\n            if (resultProducto) {\r\n              const currentDate = new Date();\r\n              const year = String(currentDate.getFullYear());\r\n              const month = String(currentDate.getMonth() + 1).padStart(\r\n                2,\r\n                \"0\"\r\n              ); // Los meses comienzan desde 0, por lo que sumamos 1\r\n              const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n              // Almacen\r\n              if (parseInt(element.Almacen) > 0) {\r\n                await addProductoEntrada(usuario.token, 1, resultProducto.id_producto,element.Almacen);\r\n                await addEntrada(usuario.token, \"0\", element.Almacen,`${year}-${month}-${day}`,15, resultProducto.id_producto,1);\r\n                await createProductoInTienda(usuario.token, String(resultProducto.id_producto), \"1\")  \r\n              }\r\n              // Taller_Cell\r\n              if (parseInt(element.Taller_Cell) > 0) {\r\n                await addProductoEntrada(usuario.token, 2, resultProducto.id_producto,element.Taller_Cell);\r\n                await addEntrada(usuario.token, \"0\", element.Taller_Cell,`${year}-${month}-${day}`,15, resultProducto.id_producto,2);\r\n                await createProductoInTienda(usuario.token, String(resultProducto.id_producto), \"2\") \r\n              }\r\n              // Taller_PC\r\n              if (parseInt(element.Taller_PC) > 0) {\r\n                await addProductoEntrada(usuario.token, 3, resultProducto.id_producto,element.Taller_PC);\r\n                await addEntrada(usuario.token, \"0\", element.Taller_PC,`${year}-${month}-${day}`,15, resultProducto.id_producto,3);\r\n                await createProductoInTienda(usuario.token, String(resultProducto.id_producto), \"3\")\r\n              }\r\n              // Tienda\r\n              if (parseInt(element.Tienda) > 0) {\r\n                await addProductoEntrada(usuario.token, 4, resultProducto.id_producto,element.Tienda);\r\n                await addEntrada(usuario.token, \"0\", element.Tienda,`${year}-${month}-${day}`,15, resultProducto.id_producto,4);\r\n                await createProductoInTienda(usuario.token, String(resultProducto.id_producto), \"4\")  \r\n              }\r\n              console.log(true);\r\n            }\r\n              \r\n          }\r\n        }\r\n      }\r\n    }\r\n    */\r\n    setPaginadoProductos({ page: 1 });\r\n    await checkPermiso();\r\n    await obtenerProductosConPermisosYDatos(paginadoProductos.page);\r\n    await getDatesTiendaPiker();\r\n    setOptimizacionAbrirPorPrimeraVesProductosView(true);\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  // Filtrar productos simepre que el usuario seleccione una tienda\r\n  useEffect(() => {\r\n    // Evitar que se ejecute apenas se abre la vista que e filtren los productos solo por primera vez\r\n    if (optimizacionAbrirPorPrimeraVesProductosView) {\r\n      filtrarYOrdenarProductos();\r\n    }\r\n  }, [sortProductos, selectedOptionTipoOrden]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      nombreProductoSearch === \"\" &&\r\n      sKUSearch === \"\" &&\r\n      cantidadSearch === \"\" &&\r\n      rangoPrecioDesdeSearch === \"\" &&\r\n      rangoPrecioHastaSearch === \"\" &&\r\n      selectedValueNombreTienda === null\r\n    ) {\r\n      setControlFiltrarOPaginar(true); // No se está filtrando\r\n    } else {\r\n      setControlFiltrarOPaginar(false); //Se está filtrando\r\n    }\r\n  }, [\r\n    nombreProductoSearch,\r\n    sKUSearch,\r\n    cantidadSearch,\r\n    rangoPrecioDesdeSearch,\r\n    rangoPrecioHastaSearch,\r\n    selectedValueNombreTienda,\r\n  ]);\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarProductos = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let productosFiltrados: Producto[] = await auxiliarFunctionFilter();\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortProductos?.criterioOrden && sortProductos.tipoOrden) {\r\n          productosFiltrados = await ordenarProducts(\r\n            usuario.token,\r\n            productosFiltrados,\r\n            sortProductos.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItemsLength(productosFiltrados.length);\r\n        setFilterItems(productosFiltrados);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los productos:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const auxSetModalProductsDates = () => {\r\n    setNombreProductoDetails(\"\");\r\n    setPrecioProductoUSDDetails(\"\");\r\n    setPrecioEmpresaProductoDetails(\"\");\r\n    setSkuDetails(\"\");\r\n    setDescripcionProductoDetails(\"\");\r\n    setSelectedImages([]);\r\n\r\n    setModalProductsDates({\r\n      id_producto: \"\",\r\n      isAddProducto: true,\r\n      fileEditable: true,\r\n      isModificarProducto: false,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isAddProductoShowProveedores: false,\r\n    });\r\n  };\r\n\r\n  // Método para cargar las imágenes\r\n  /*\r\n  const handleImageUpload = () => {\r\n    const options = {\r\n      mediaType: \"photo\" as const, // Solo fotos\r\n      quality: 1, // Calidad máxima de la imagen\r\n      includeBase64: false, // No incluir en base64\r\n      selectionLimit: 100,\r\n      includeExtra: true,\r\n    };\r\n\r\n    // Abre la galería de imágenes\r\n    launchImageLibrary(options, (response: ImagePickerResponse) => {\r\n      if (response.didCancel) {\r\n        console.log(\"El usuario canceló la selección de la imagen.\");\r\n      } else if (response.errorMessage) {\r\n        console.error(\r\n          \"Error al seleccionar la imagen: \",\r\n          response.errorMessage\r\n        );\r\n      } else if (response.assets && response.assets.length > 0) {\r\n        // Agregar la nueva imagen al estado\r\n        setSelectedImages((prevImages) => {\r\n          // Calcula cuántas imágenes se pueden agregar sin exceder el límite de 100\r\n          const availableSpace = 100 - prevImages.length; // Espacio disponible en el estado\r\n          const newImages = response.assets.slice(0, availableSpace); // Selecciona solo las imágenes necesarias para no exceder el límite\r\n          return [...prevImages, ...newImages]; // Agrega las nuevas imágenes al estado\r\n        });\r\n      } else {\r\n        console.log(\"No se seleccionó ninguna imagen.\");\r\n      }\r\n    });\r\n  };\r\n  */\r\n\r\n  const handleImageUpload = async () => {\r\n    const options = {\r\n      mediaType: \"photo\" as const,\r\n      quality: 0.8,\r\n      includeBase64: false,\r\n      selectionLimit: 100,\r\n    };\r\n\r\n    launchImageLibrary(options, async (response: ImagePickerResponse) => {\r\n      if (response.didCancel) {\r\n        console.log(\"El usuario canceló la selección de la imagen.\");\r\n        return;\r\n      }\r\n\r\n      if (response.errorMessage) {\r\n        console.error(\r\n          \"Error al seleccionar la imagen: \",\r\n          response.errorMessage\r\n        );\r\n        return;\r\n      }\r\n\r\n      if (response.assets && response.assets.length > 0) {\r\n        const processedImages = await Promise.all(\r\n          response.assets.map(async (asset) => {\r\n            if (asset.uri) {\r\n              const size = await getImageFileSize(asset.uri);\r\n\r\n              try {\r\n                if (size > 300 * 1024) {\r\n                  // Compresión de la imagen\r\n                  const fileResponse = await fetch(asset.uri);\r\n                  const blob = await fileResponse.blob();\r\n                  const file = new File([blob], asset.fileName || \"image.jpg\", {\r\n                    type: blob.type,\r\n                  });\r\n\r\n                  const compressedFile = await imageCompression(file, {\r\n                    maxSizeMB: 1,\r\n                    maxWidthOrHeight: 1920,\r\n                    useWebWorker: true,\r\n                  });\r\n\r\n                  // Convertir el archivo comprimido en base64\r\n                  const base64 = await convertFileToBase64(compressedFile);\r\n\r\n                  return {\r\n                    ...asset,\r\n                    uri: base64, // Guardar como base64\r\n                    isCompressed: true,\r\n                  };\r\n                } else {\r\n                  // Convertir imágenes no comprimidas a base64 desde la URI\r\n                  const base64 = await convertUriToBase64(asset.uri);\r\n\r\n                  // Validar que la conversión a base64 fue exitosa\r\n                  if (!base64.startsWith(\"data:image\")) {\r\n                    throw new Error(\"Conversión incorrecta de la URI a base64\");\r\n                  }\r\n\r\n                  return { ...asset, uri: base64, isCompressed: false };\r\n                }\r\n              } catch (error) {\r\n                console.error(\r\n                  `Error al procesar la imagen (${\r\n                    asset.fileName || \"sin nombre\"\r\n                  }):`,\r\n                  error\r\n                );\r\n              }\r\n            }\r\n\r\n            return asset; // Si no tiene URI, devolver el asset original\r\n          })\r\n        );\r\n\r\n        setSelectedImages(processedImages);\r\n      } else {\r\n        console.log(\"No se seleccionó ninguna imagen.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  // Función para convertir un archivo en base64\r\n  const convertFileToBase64 = (file: File): Promise<string> => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => resolve(reader.result as string);\r\n      reader.onerror = (error) => reject(error);\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  // Función para convertir URI en base64\r\n  const convertUriToBase64 = async (uri: string): Promise<string> => {\r\n    try {\r\n      const response = await fetch(uri);\r\n      const blob = await response.blob();\r\n      return convertFileToBase64(\r\n        new File([blob], \"image.jpg\", { type: blob.type })\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error al convertir URI a base64:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Función auxiliar para obtener el tamaño de un archivo de imagen desde su URI\r\n  const getImageFileSize = async (uri: string): Promise<number> => {\r\n    try {\r\n      const response = await fetch(uri);\r\n      const blob = await response.blob();\r\n      return blob.size;\r\n    } catch (error) {\r\n      console.error(\"Error al obtener el tamaño del archivo:\", error);\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // Función auxiliar para obtener el tamaño de un archivo de imagen desde su URI\r\n\r\n  // Función para eliminar una imagen por su índice\r\n  const handleRemoveImage = (index: number) => {\r\n    const updatedImages = selectedImages.filter((_, i) => i !== index);\r\n    const deleteImage = selectedImages.filter((_, i) => i === index)[0]; // Obtener el primer elemento del resultado\r\n    setDeleteImages((prevImages) => [...prevImages, deleteImage]);\r\n    //const aux:ImagenesDelete = ImagenesDelete(deleteImages);\r\n    //setImagenesDelete(deleteImages);\r\n    setSelectedImages(updatedImages);\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProductoSearch(\"\");\r\n    setSKUSearch(\"\");\r\n    setCantidadSearch(\"\");\r\n    setRangoPrecioDesdeSearch(\"\");\r\n    setRangoPrecioHastaSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n    setSelectedValueNombreTienda(null);\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewProducto = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando producto. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarMesaje: string =\r\n        \"ERROR AL INSERTAR PRODUCTO. Por favor compruebe los siguientes campos:\\n\";\r\n      const resultAllProductos = await getAllProductos(usuario.token);\r\n      if (resultAllProductos && Array.isArray(resultAllProductos.data)) {\r\n        resultAllProductos.data.forEach((element) => {\r\n          if (element.Sku === skuDetails) {\r\n            (flag = false),\r\n              (validarMesaje += `-El SKU debe ser único. Coincide con el SKU de  ${element.nombre}`);\r\n          }\r\n        });\r\n      }\r\n\r\n      // Condiciones para validar campos\r\n      if (nombreProductoDetails.trim() === \"\") {\r\n        validarMesaje += \"-El nombre no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (skuDetails.trim() == \"\") {\r\n        validarMesaje += \"-El SKU no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (String(precioProductoUSDDetails).trim() === \"\") {\r\n        validarMesaje += \"-El precio en USD del producto no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (String(costoPromedio).trim() === \"\") {\r\n        validarMesaje += \"-El costo del producto no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (String(precioEmpresaProductoDetails).trim() === \"\") {\r\n        validarMesaje +=\r\n          \"-El precio de la empresa en USD no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (flag) {\r\n        const result = await addProducto(\r\n          usuario.token,\r\n          nombreProductoDetails,\r\n          skuDetails,\r\n          precioProductoUSDDetails,\r\n          precioEmpresaProductoDetails,\r\n          descripcionProductoDetails,\r\n          selecterActivoDetails === \"si\",\r\n          costoPromedio\r\n        );\r\n        if (result) {\r\n          // agregar el nuevo producto a la tabla\r\n          const nuevoProducto: Producto = {\r\n            id_Producto: result.id_producto,\r\n            nombre: nombreProductoDetails,\r\n            sku: skuDetails,\r\n            cantidadTotal: await getProductoCantidadTotal(\r\n              usuario.token,\r\n              result.id_producto\r\n            ),\r\n            precioUSD: precioProductoUSDDetails,\r\n            tieneOpciones: true,\r\n          };\r\n          setFilterItems((prevItems) => [...prevItems, nuevoProducto]);\r\n\r\n          let auxDataImagesResponses: any[] = [];\r\n          let imagenes: any[] = [];\r\n\r\n          // Cambia forEach por un for...of\r\n          for (const [cont, element] of selectedImages.entries()) {\r\n            const resul = await crearimagenUnProducto(\r\n              usuario.token,\r\n              element,\r\n              `\\\\${result.id_producto}_${cont}.jpg`\r\n            );\r\n            if (resul) {\r\n              auxDataImagesResponses.push(resul);\r\n            } else {\r\n              alert(\"Error en algo de las imagenes\");\r\n            }\r\n          }\r\n\r\n          let i = 0;\r\n\r\n          while (i < auxDataImagesResponses.length) {\r\n            imagenes.push({\r\n              id_imagen: auxDataImagesResponses[i].id_imagen,\r\n            });\r\n            i++;\r\n          }\r\n\r\n          await addProductoAndImagenes(\r\n            usuario.token,\r\n            result.id_producto,\r\n            imagenes\r\n          );\r\n\r\n          // Agregar Acción de usuario mover producto\r\n\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó al sistema el producto ${nombreProductoDetails} a un precio en cup de ${precioProductoUSDDetails} y con un precio de empresa en cup de ${precioEmpresaProductoDetails}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            1\r\n          );\r\n\r\n          setModalMensaje(\r\n            `El Producto ${nombreProductoDetails} fue agregado con éxito`\r\n          );\r\n          setIsBotonModalMesajeVisible(true);\r\n          setModalMensajeView(true);\r\n\r\n          setSkuDetails(\"\");\r\n          setNombreProductoDetails(\"\");\r\n          setPrecioProductoUSDDetails(\"\");\r\n          setDescripcionProductoDetails(\"\");\r\n          setPrecioEmpresaProductoDetails(\"\");\r\n          setCostopromedio(\"\");\r\n          setSelectedImages([]);\r\n          setModalProductsDates({\r\n            id_producto: \"\",\r\n            isAddProducto: false,\r\n            fileEditable: true,\r\n            isModificarProducto: false,\r\n            isAddProductoShowProveedoresTiendas: false,\r\n            isAddProductoShowProveedores: false,\r\n          });\r\n        } else {\r\n          alert(\"Error al agregar prducto\");\r\n        }\r\n      } else {\r\n        setModalMensaje(validarMesaje);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(false);\r\n        setIsBotonModalMesajeVisible(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Metodo para actualizar los datos de un producto\r\n  const modificarProducto = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando producto. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarMesaje: string =\r\n        \"ERROR AL MODIFICAR PRODUCTO. Por favor compruebe los siguientes campos:\\n\";\r\n\r\n      // Condiciones para validar campos\r\n      if (nombreProductoDetails.trim() === \"\") {\r\n        validarMesaje += \"-El nombre no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (skuDetails.trim() === \"\") {\r\n        validarMesaje += \"-El SKU no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (String(precioProductoUSDDetails).trim() === \"\") {\r\n        validarMesaje += \"-El precio en USD del producto no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (String(costoPromedio).trim() === \"\") {\r\n        validarMesaje += \"-El costo del producto no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (String(precioEmpresaProductoDetails).trim() === \"\") {\r\n        validarMesaje +=\r\n          \"-El precio de la empresa en USD no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      let auxDataImagesResponses: any[] = [];\r\n      let imagenes: any[] = [];\r\n\r\n      if (flag) {\r\n        // Actualizar datos de las imagenes\r\n        for (const [cont, image] of selectedImages.entries()) {\r\n          if (image.id) {\r\n            const resul = await crearimagenUnProducto(\r\n              usuario.token,\r\n              image,\r\n              `\\\\${idProductoDetails}_${cont}.jpg`\r\n            );\r\n            if (resul) {\r\n              auxDataImagesResponses.push(resul);\r\n            } else {\r\n              alert(\"Error en algo de las imagenes\");\r\n            }\r\n          }\r\n        }\r\n\r\n        let i = 0;\r\n        while (i < auxDataImagesResponses.length) {\r\n          imagenes.push({\r\n            id_imagen: auxDataImagesResponses[i].id_imagen,\r\n          });\r\n          i++;\r\n        }\r\n\r\n        // Agregar a la relación de imagen producto\r\n        await addProductoAndImagenes(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          imagenes\r\n        );\r\n\r\n        // Actualizar datos del producto\r\n        await updateProducto(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          nombreProductoDetails,\r\n          skuDetails,\r\n          precioProductoUSDDetails,\r\n          precioEmpresaProductoDetails,\r\n          descripcionProductoDetails,\r\n          selecterActivoDetails === \"si\",\r\n          costoPromedio\r\n        );\r\n        // Eliminar imagenes necesarias datos de las imagenes\r\n        deleteImages.forEach(async (image) => {\r\n          if (image.id && image.uri) {\r\n            await deleteImagenByProducto(\r\n              usuario.token,\r\n              image.id,\r\n              image.uri.split(\"/\")[3]\r\n            );\r\n          }\r\n        });\r\n\r\n        // Agregar Acción de usuario modificar producto\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó el producto ${nombreProductoDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          1\r\n        );\r\n\r\n        setReflechModalMensajeView(true);\r\n        setModalMensaje(\r\n          `El Producto \"${nombreProductoDetails}\" se modificó con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setIsBotonModalMesajeVisible(true);\r\n      } else {\r\n        setModalMensaje(validarMesaje);\r\n        setIsBotonModalMesajeVisible(true);\r\n        setReflechModalMensajeView(false);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"SKU\",\r\n    \"Nombre\",\r\n    \"CUP\",\r\n    \"Cantidad\",\r\n    \" \",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\"Nombre\", \"Cantidad\", \"Costo\"];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"SKU\",\r\n    \"Nombre\",\r\n    \"CUP\",\r\n    \"Cantidad\",\r\n    \" \",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoButtonAddProducto && (\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                setModalProductsDates({\r\n                  id_producto: \"\",\r\n                  isAddProducto: true,\r\n                  fileEditable: true,\r\n                  isModificarProducto: false,\r\n                  isAddProductoShowProveedoresTiendas: false,\r\n                  isAddProductoShowProveedores: false,\r\n                })\r\n              }\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Producto</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableProductos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n              imtemsLength={filterItemsLength}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <Text style={styles.textSearchMovil}>SKU:</Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}>Cantidad:</Text>\r\n                  </View>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"SKU\"\r\n                      value={sKUSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={setSKUSearch}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Cantidad\"\r\n                      value={cantidadSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Rango de Precio en CUP :\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={rangoPrecioDesdeSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={rangoPrecioHastaSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioHastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Buscar por Tienda:</Text>\r\n                  <View\r\n                    style={{ position: \"relative\", zIndex: 500, height: 100 }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={selectedValueNombreTienda}\r\n                      placeholder=\"Seleccione un Tiendas\"\r\n                      setValue={setSelectedValueNombreTienda}\r\n                      items={dropdownItems}\r\n                    />\r\n                  </View>\r\n                  <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarProductos();\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProductsDates?.isAddProducto ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProducto}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProducto}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {/*(modalProductsDates?.isModificarProducto ?? false)? \"Modificar Producto\" : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                false */}\r\n                {modalProductsDates?.isModificarProducto ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Producto\"\r\n                  : \"Agregar Producto\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  value={nombreProductoDetails}\r\n                  onChangeText={setNombreProductoDetails}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  placeholder=\"Nombre del producto\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Precio y Precio de Empresa */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    \r\n                  </View>\r\n\r\n                  {/* Campo Precio de Empresa */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio de empresa en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioEmpresaProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioEmpresaProductoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio de empresa en CUP\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio en CUP*/}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioProductoCUPDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n                        let aux = parseFloat(validNumericValue) / cambioMoneda\r\n                        setPrecioProductoUSDDetails(aux.toFixed(5));\r\n                        setPrecioProductoCUPDetails(validNumericValue)\r\n                      }}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio en CUP\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo Promedio*/}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    {(isPermisoHistorialDeProveedores) && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo Promedio\r\n                      </Text>\r\n                    )}\r\n                    {(isPermisoHistorialDeProveedores) && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedio}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n                          setCostopromedio(validNumericValue);\r\n                      }}\r\n                        editable={modalProductsDates?.fileEditable ? true : false}\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Campo SKU */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Sku</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={skuDetails}\r\n                      onChangeText={setSkuDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Sku\"\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={{ width: \"45%\", marginRight: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Descripción\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={descripcionProductoDetails}\r\n                      onChangeText={setDescripcionProductoDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Descripción\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Campo Tiene Fecha de Vencimiento*/}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 16,\r\n                      marginTop: \"3%\",\r\n                      color: Colors.negro, // Color del texto\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                    }}\r\n                  >\r\n                    ¿Este producto tiene fecha de vencimiento?\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    padding: 20,\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"flex-start\",\r\n                  }}\r\n                >\r\n                  {optionsIsFechaVencimiento.map((option) => (\r\n                    <CustomRadioButton\r\n                      key={option.value}\r\n                      label={option.label}\r\n                      selected={selecterActivoDetails === option.value}\r\n                      onPress={() => {\r\n                        if (modalProductsDates?.fileEditable) {\r\n                          setSelecterActivoDetails(option.value);\r\n                        }\r\n                      }}\r\n                    />\r\n                  ))}\r\n                </View>\r\n\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          flexDirection: \"row\",\r\n                          height: 350,\r\n                          width: \"90%\",\r\n                        }}\r\n                      >\r\n                        <View\r\n                          style={{\r\n                            flexDirection: \"column\",\r\n                            height: 340,\r\n                            width: \"45%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalMovil}>\r\n                            Tiendas en las que existe el producto\r\n                          </Text>\r\n                          <MyDateTableModalShowDatesTienda\r\n                            columns={columnasMyDateTableTiendaModal}\r\n                            items={tiendasByProducto}\r\n                          />\r\n                        </View>\r\n                        {(modalProductsDates?.isAddProductoShowProveedores ??\r\n                          false) &&\r\n                          isPermisoHistorialDeProveedores && (\r\n                            <View\r\n                              style={{\r\n                                height: 340,\r\n                                width: \"45%\",\r\n                              }}\r\n                            >\r\n                              <Text style={styles.labelTextModalMovil}>\r\n                                Historial de proveedores\r\n                              </Text>\r\n                              <MyDateTableModalShowDateProveedores\r\n                                columns={columnasMyDateTableProveedorModal}\r\n                                items={proveedorByProducto}\r\n                              />\r\n                            </View>\r\n                          )}\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Descripción */}\r\n                {/*<Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  value={descripcionProductoDetails}\r\n                  onChangeText={setDescripcionProductoDetails}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  numberOfLines={5}\r\n                  scrollEnabled={true}\r\n                />*/}\r\n\r\n                {/* Campo para cargar fotos */}\r\n                <PanGestureHandler onGestureEvent={onDrop}>\r\n                  <View\r\n                    style={{\r\n                      marginTop: 20,\r\n                      width: \"90%\",\r\n                      borderWidth: 1,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderRadius: 13,\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Colors.negro,\r\n                        marginBottom: \"5%\",\r\n                      }}\r\n                    >\r\n                      Imágenes del producto\r\n                    </Text>\r\n\r\n                    {/* Botón para cargar imágenes */}\r\n                    {(modalProductsDates?.fileEditable ?? false) && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                        }}\r\n                        onPress={handleImageUpload}\r\n                      >\r\n                        <Text style={{ color: Colors.blanco }}>\r\n                          Seleccionar Imágenes\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Vista para mostrar las imágenes seleccionadas */}\r\n                    {selectedImages.length > 0 && (\r\n                      <ScrollView\r\n                        horizontal={true}\r\n                        style={{\r\n                          marginTop: 10,\r\n                          width: \"100%\",\r\n                          height: 100, // Ajusta la altura de la vista de imágenes\r\n                        }}\r\n                      >\r\n                        {selectedImages.map((image, index) => (\r\n                          <View\r\n                            key={index}\r\n                            style={{\r\n                              position: \"relative\",\r\n                              width: 100,\r\n                              height: 100,\r\n                              marginRight: 10,\r\n                            }}\r\n                          >\r\n                            <Image\r\n                              key={index}\r\n                              source={{ uri: image.uri }} // Usa la URI de la imagen\r\n                              style={{\r\n                                width: 100,\r\n                                height: 100,\r\n                                marginRight: 10,\r\n                                borderRadius: 10,\r\n                              }}\r\n                            />\r\n                            <TouchableOpacity\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                top: 5,\r\n                                right: 5,\r\n                                backgroundColor: \"red\",\r\n                                borderRadius: 15,\r\n                                width: 20,\r\n                                height: 20,\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                zIndex: 1,\r\n                              }}\r\n                              onPress={() => handleRemoveImage(index)}\r\n                            >\r\n                              <Text\r\n                                style={{\r\n                                  color: \"white\",\r\n                                  fontSize: 14,\r\n                                }}\r\n                              >\r\n                                X\r\n                              </Text>\r\n                            </TouchableOpacity>\r\n                          </View>\r\n                        ))}\r\n                      </ScrollView>\r\n                    )}\r\n                  </View>\r\n                </PanGestureHandler>\r\n                {(modalProductsDates?.fileEditable ?? false) && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                      marginTop: \"3%\",\r\n                    }}\r\n                    onPress={() =>\r\n                      modalProductsDates?.isModificarProducto\r\n                        ? modificarProducto()\r\n                        : addNewProducto()\r\n                    }\r\n                    disabled={isButtonDisabled}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: 14,\r\n                      }}\r\n                    >\r\n                      {modalProductsDates?.isModificarProducto\r\n                        ? \"Modificar Producto\"\r\n                        : \"Agregar Producto\"}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? obtenerProductosConPermisosYDatos(1)\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje para el exel */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeViewExel}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {loadingOfExel ? (\r\n                <ActivityIndicator\r\n                  size={100}\r\n                  color=\"#007BFF\"\r\n                  style={{\r\n                    flex: 1,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"15%\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <View\r\n                  style={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Datos Recopilados. Espere a que termine la descarga.\r\n                  </Text>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: \"#007BFF\", // Cambia esto por Colors.azul_Oscuro si lo tienes definido\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho del botón\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMensajeViewExel(!isModalMensajeViewExel)\r\n                    } // Llama a la función onClose para cerrar el modal\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {isPermisoButtonAddProducto && (\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                auxSetModalProductsDates();\r\n              }}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginHorizontal: \"1%\",\r\n                marginTop: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  sortProductos?.criterioOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Producto\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n\r\n          <TouchableOpacity\r\n            onPress={() => exportarExel()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              height: 30,\r\n              width: \"12%\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n              shadowOffset: { width: 0, height: 0 },\r\n              shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n              shadowRadius: 14, // Difuminado\r\n              borderColor: Colors.verde_claro,\r\n              borderWidth: 3,\r\n              padding: 10,\r\n              borderRadius: 10,\r\n              marginHorizontal: \"1%\",\r\n              marginTop: \"1%\",\r\n              backgroundColor: Colors.verde_claro, // Color de fondo del botón\r\n            }}\r\n          >\r\n            <Image\r\n              source={require(\"../images/exel.png\")}\r\n              style={{ width: 20, height: 20, marginRight: \"10%\" }}\r\n            />\r\n            <Text\r\n              style={[\r\n                styles.radioButtonTextDesktop,\r\n                sortProductos?.criterioOrden === \"option1\" &&\r\n                  styles.radioButtonSelected &&\r\n                  styles.radioButtonTextSelected,\r\n              ]}\r\n            >\r\n              Exportar a Excel\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <Text style={styles.textSearchDesktop}>SKU:</Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}>Cantidad:</Text>\r\n            </View>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"SKU\"\r\n                onKeyPress={handleKeyPress}\r\n                value={sKUSearch}\r\n                onChangeText={setSKUSearch}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Cantidad\"\r\n                value={cantidadSearch}\r\n                onKeyPress={handleKeyPress}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              Rango de Precio en CUP:\r\n            </Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                onKeyPress={handleKeyPress}\r\n                value={rangoPrecioDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={rangoPrecioHastaSearch}\r\n                onKeyPress={handleKeyPress}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioHastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Buscar por Tienda:</Text>\r\n            <View style={{ position: \"relative\", zIndex: 500, height: 100 }}>\r\n              <CustomDropdown\r\n                value={selectedValueNombreTienda}\r\n                placeholder=\"Seleccione una Tienda\"\r\n                setValue={setSelectedValueNombreTienda}\r\n                items={dropdownItems}\r\n              />\r\n            </View>\r\n            <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarProductos()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableProductos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n              imtemsLength={filterItemsLength}\r\n            />\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProductsDates?.isAddProducto ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProducto}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProducto}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProductsDates?.isModificarProducto ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Producto\"\r\n                  : \"Agregar Producto\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={modalProductsDates?.fileEditable}\r\n                  value={nombreProductoDetails}\r\n                  onChangeText={setNombreProductoDetails}\r\n                  placeholder=\"Nombre del producto\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Precio y Precio de Empresa */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    \r\n                  </View>\r\n\r\n                  {/* Campo Precio de Empresa */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio de empresa en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioEmpresaProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioEmpresaProductoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio de empresa en CUP\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio en CUP*/}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioProductoCUPDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n                        let aux = parseFloat(validNumericValue) / cambioMoneda\r\n                        setPrecioProductoUSDDetails(aux.toFixed(5));\r\n                        setPrecioProductoCUPDetails(validNumericValue)\r\n                      }}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio en CUP\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Precio de Empresa en CUP*/}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    {(isPermisoHistorialDeProveedores) && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo Promedio\r\n                      </Text>\r\n                    )}\r\n                    {(isPermisoHistorialDeProveedores) && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedio}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n                          setCostopromedio(validNumericValue);\r\n                      }}\r\n                        editable={modalProductsDates?.fileEditable ? true : false}\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Campo SKU  y Descripcion*/}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Sku</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={skuDetails}\r\n                      onChangeText={setSkuDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Sku\"\r\n                    />\r\n                  </View>\r\n                  <View style={{ width: \"45%\", marginRight: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Descripción\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={descripcionProductoDetails}\r\n                      onChangeText={setDescripcionProductoDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Descripción\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Campo Tiene Fecha de Vencimiento*/}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 16,\r\n                      marginTop: \"3%\",\r\n                      color: Colors.negro, // Color del texto\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                    }}\r\n                  >\r\n                    ¿Este producto tiene fecha de vencimiento?\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    padding: 20,\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"flex-start\",\r\n                  }}\r\n                >\r\n                  {optionsIsFechaVencimiento.map((option) => (\r\n                    <CustomRadioButton\r\n                      key={option.value}\r\n                      label={option.label}\r\n                      selected={selecterActivoDetails === option.value}\r\n                      onPress={() => {\r\n                        if (modalProductsDates?.fileEditable) {\r\n                          setSelecterActivoDetails(option.value);\r\n                        }\r\n                      }}\r\n                    />\r\n                  ))}\r\n                </View>\r\n                {/* Descripción */}\r\n                {/*(<Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                \r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  numberOfLines={5}\r\n                  value={descripcionProductoDetails}\r\n                  onChangeText={setDescripcionProductoDetails}\r\n                  scrollEnabled={true}\r\n                />*/}\r\n\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          flexDirection: \"row\",\r\n                          height: 350,\r\n                          width: \"90%\",\r\n                        }}\r\n                      >\r\n                        <View\r\n                          style={{\r\n                            flexDirection: \"column\",\r\n                            height: 350,\r\n                            width: \"50%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalDesktop}>\r\n                            Tiendas en las que existe el producto\r\n                          </Text>\r\n                          <MyDateTableModalShowDatesTienda\r\n                            columns={columnasMyDateTableTiendaModal}\r\n                            items={tiendasByProducto}\r\n                          />\r\n                        </View>\r\n                        {(modalProductsDates?.isAddProductoShowProveedores ??\r\n                          false) &&\r\n                          isPermisoHistorialDeProveedores && (\r\n                            <View\r\n                              style={{\r\n                                height: 350,\r\n                                width: \"50%\",\r\n                              }}\r\n                            >\r\n                              <Text style={styles.labelTextModalDesktop}>\r\n                                Historial de proveedores\r\n                              </Text>\r\n                              <MyDateTableModalShowDateProveedores\r\n                                columns={columnasMyDateTableProveedorModal}\r\n                                items={proveedorByProducto}\r\n                              />\r\n                            </View>\r\n                          )}\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Campo para cargar fotos */}\r\n                <PanGestureHandler onGestureEvent={onDrop}>\r\n                  <View\r\n                    style={{\r\n                      marginTop: 20,\r\n                      width: \"90%\",\r\n                      borderWidth: 1,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderRadius: 13,\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Colors.negro,\r\n                        marginBottom: \"5%\",\r\n                      }}\r\n                    >\r\n                      Imágenes del producto\r\n                    </Text>\r\n\r\n                    {/* Botón para cargar imágenes */}\r\n                    {(modalProductsDates?.fileEditable ?? false) && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                        }}\r\n                        onPress={handleImageUpload}\r\n                      >\r\n                        <Text style={{ color: Colors.blanco }}>\r\n                          Seleccionar Imágenes\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Vista para mostrar las imágenes seleccionadas */}\r\n                    {selectedImages.length > 0 && (\r\n                      <ScrollView\r\n                        horizontal={true}\r\n                        style={{\r\n                          marginTop: 10,\r\n                          width: \"100%\",\r\n                          height: 100, // Ajusta la altura de la vista de imágenes\r\n                        }}\r\n                      >\r\n                        {selectedImages.map((image, index) => (\r\n                          <View\r\n                            key={index}\r\n                            style={{\r\n                              position: \"relative\",\r\n                              width: 100,\r\n                              height: 100,\r\n                              marginRight: 10,\r\n                            }}\r\n                          >\r\n                            <Image\r\n                              key={index}\r\n                              source={{ uri: image.uri }} // Usa la URI de la imagen\r\n                              style={{\r\n                                width: 100,\r\n                                height: 100,\r\n                                marginRight: 10,\r\n                                borderRadius: 10,\r\n                              }}\r\n                            />\r\n                            {modalProductsDates?.fileEditable && (\r\n                              <TouchableOpacity\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  top: 5,\r\n                                  right: 5,\r\n                                  backgroundColor: \"red\",\r\n                                  borderRadius: 15,\r\n                                  width: 20,\r\n                                  height: 20,\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                  zIndex: 1,\r\n                                }}\r\n                                onPress={() => handleRemoveImage(index)}\r\n                              >\r\n                                <Text\r\n                                  style={{\r\n                                    color: \"white\",\r\n                                    fontSize: 14,\r\n                                  }}\r\n                                >\r\n                                  X\r\n                                </Text>\r\n                              </TouchableOpacity>\r\n                            )}\r\n                          </View>\r\n                        ))}\r\n                      </ScrollView>\r\n                    )}\r\n                  </View>\r\n                </PanGestureHandler>\r\n                {(modalProductsDates?.fileEditable ?? false) && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                      marginTop: \"3%\",\r\n                    }}\r\n                    onPress={() =>\r\n                      modalProductsDates?.isModificarProducto\r\n                        ? modificarProducto()\r\n                        : addNewProducto()\r\n                    }\r\n                    disabled={isButtonDisabled}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: 14,\r\n                      }}\r\n                    >\r\n                      {modalProductsDates?.isModificarProducto\r\n                        ? \"Modificar Producto\"\r\n                        : \"Agregar Producto\"}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? obtenerProductosConPermisosYDatos(1)\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje para el exel */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeViewExel}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {loadingOfExel ? (\r\n                <ActivityIndicator\r\n                  size={100}\r\n                  color=\"#007BFF\"\r\n                  style={{\r\n                    flex: 1,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"15%\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <View\r\n                  style={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Datos Recopilados. Espere a que termine la descarga.\r\n                  </Text>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: \"#007BFF\", // Cambia esto por Colors.azul_Oscuro si lo tienes definido\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho del botón\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMensajeViewExel(!isModalMensajeViewExel)\r\n                    } // Llama a la función onClose para cerrar el modal\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import Navbar from \"../components/Navbar\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport React, { useEffect, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport { Image, Text, useWindowDimensions, View } from \"react-native\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { usePermisosUsuario as usePermisosUsuarioNavbar } from \"../contexts/PermisosNavbarContext\";\r\n\r\n\r\nexport function HomeScreen() {\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  const isMobile = width < 930;\r\n  const navigation = useNavigation();\r\n  const { setUsuario, usuario } = useUsuario();\r\n  const { permisosUsuarioNavbar, setPermisosUsuarioNavbar } = usePermisosUsuarioNavbar();\r\n  \r\n  useEffect(() =>{\r\n\r\n    const cargarPermisosDeUsuario = async () =>{\r\n      if (usuario?.token) {\r\n        \r\n        const resultProductoView = true; //Permiso 9\r\n        const resultProveedorView = (parseInt(usuario.id_rol) !== 4 && parseInt(usuario.id_rol) !== 3) //Permiso 38\r\n        const resultEntradaView = (parseInt(usuario.id_rol) !== 4 && parseInt(usuario.id_rol) !== 3) //Permiso 13\r\n        const resultMovimientoLocalView = (true) //Permiso 30\r\n        const resultMovimientoGeneralView = (true) //Permiso 31\r\n        const resultAgregarUsuario = (parseInt(usuario.id_rol) !== 4 && parseInt(usuario.id_rol) !== 3) //Permiso 1\r\n        const resultModificarUsuario = (parseInt(usuario.id_rol) !== 4 && parseInt(usuario.id_rol) !== 3) //Permiso 2\r\n        const resultEliminarUsuario = (parseInt(usuario.id_rol) !== 4 && parseInt(usuario.id_rol) !== 3) //Permiso 3\r\n        const resultAccionesView = (parseInt(usuario.id_rol) !== 4 && parseInt(usuario.id_rol) !== 3) //Permiso 15\r\n        const resultAgregarTipoServicioView = (parseInt(usuario.id_rol) !== 4 && parseInt(usuario.id_rol) !== 3) //Permiso 20\r\n        const resultModificarTipoServicioView = (parseInt(usuario.id_rol) !== 4 && parseInt(usuario.id_rol) !== 3) //Permiso 21\r\n        const resultEliminarTipoServicioView = (parseInt(usuario.id_rol) !== 4 && parseInt(usuario.id_rol) !== 3) //Permiso 22\r\n        const resultEliminarClienteView = (parseInt(usuario.id_rol) !== 4) //Permiso 18\r\n        const resultModificarClienteView = (parseInt(usuario.id_rol) !== 4) //Permiso 17\r\n        const resultAgregarClienteView = (parseInt(usuario.id_rol) !== 4) //Permiso 16\r\n        const resultVerClienteView = parseInt(usuario.id_rol) !== 4 //Permiso 19\r\n        const resultExpedirGarantiaView = false //Not Suport\r\n        const resultModificarGarantiaView = false //Not Suport\r\n        const resultVerGarantiaView = false //Not Suport\r\n        \r\n        setPermisosUsuarioNavbar({\r\n          resultAccionesView: resultAccionesView,\r\n          resultAgregarUsuario: resultAgregarUsuario,\r\n          resultEliminarUsuario: resultEliminarUsuario,\r\n          resultEntradaView: resultEntradaView,\r\n          resultModificarUsuario: resultModificarUsuario,\r\n          resultMovimientoGeneralView: resultMovimientoGeneralView,\r\n          resultMovimientoLocalView: resultMovimientoLocalView,\r\n          resultProductoView: resultProductoView,\r\n          resultProveedorView: resultProveedorView,\r\n          resultTipoServicio: (resultAgregarTipoServicioView || resultModificarTipoServicioView || resultEliminarTipoServicioView),\r\n          resultClienteView: (resultVerClienteView || resultAgregarClienteView || resultModificarClienteView || resultEliminarClienteView),\r\n          resultGarantiaView: (resultVerGarantiaView || resultExpedirGarantiaView || resultModificarGarantiaView)\r\n        });\r\n\r\n      }\r\n    }\r\n\r\n    cargarPermisosDeUsuario();\r\n\r\n  },[])\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\"\r\n          }}\r\n        >\r\n          {/*<Image\r\n            source={require(\"../images/solutel.jpg\")}\r\n            style={{ width: \"60%\", height: \"55%\" }}\r\n          />\r\n          <Image\r\n            source={require(\"../images/solutel1.jpg\")}\r\n            style={{ width: \"90%\", height: \"30%\" }}\r\n          />*/}\r\n        </View>\r\n      </View>\r\n    );\r\n  }else{\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"row\"\r\n          }}\r\n        >\r\n          {/*<Image\r\n            source={require(\"../images/solutel.jpg\")}\r\n            style={{ width: \"25%\", height: \"60%\", marginTop: \"5%\" }}\r\n          />\r\n          <Image\r\n            source={require(\"../images/solutel1.jpg\")}\r\n            style={{ width: \"50%\", height: \"40%\" }}\r\n          />*/}\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\r\nimport { Colors } from '../styles/Colors';\r\n\r\ninterface DropdownProps {\r\n  value: string;\r\n  setValue: (value: string) => void;\r\n  placeholder: string;\r\n  items: { label: string; value: string }[];\r\n  searchable: boolean;\r\n  readOnly?: boolean;\r\n  onDropdownOpen?: () => void; // Nueva propiedad opcional\r\n}\r\n\r\nconst CustomDropdownDetails: React.FC<DropdownProps> = ({\r\n  value,\r\n  setValue,\r\n  items,\r\n  placeholder: title,\r\n  searchable,\r\n  readOnly = false,\r\n  onDropdownOpen,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const { width } = useWindowDimensions();\r\n  const isMobile = width < 1150;\r\n  const textStyles = isMobile ? styles.dropdownTextMovil : styles.dropdownTextDesktop;\r\n\r\n  // Efecto para llamar a `onDropdownOpen` cuando el dropdown se abre\r\n  useEffect(() => {\r\n    if (open && onDropdownOpen) {\r\n      onDropdownOpen();\r\n    }\r\n  }, [open]);\r\n\r\n  // Función de apertura condicional basada en `readOnly`\r\n  const handleOpen = () => {\r\n    if (!readOnly) {\r\n      setOpen((prevOpen) => !prevOpen);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <DropDownPicker\r\n        open={open}\r\n        value={value}\r\n        items={items}\r\n        setOpen={handleOpen} // Llamada a la función `handleOpen`\r\n        setValue={setValue}\r\n        setItems={() => {}}\r\n        placeholder={title}\r\n        style={styles.dropdown}\r\n        textStyle={textStyles}\r\n        dropDownContainerStyle={styles.dropdownContainer}\r\n        searchable={searchable && !readOnly}\r\n        searchPlaceholder=\"Buscar...\"\r\n        searchTextInputStyle={styles.searchInput}\r\n        zIndex={1000}\r\n        disabled={readOnly}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: '1%',\r\n    marginLeft: '5%',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    zIndex: 1,\r\n    position: 'relative',\r\n  },\r\n  dropdown: {\r\n    backgroundColor: Colors.blanco,\r\n    borderColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    width: '95%',\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    zIndex: 1000,\r\n  },\r\n  dropdownTextDesktop: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: Colors.negro,\r\n  },\r\n  dropdownTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    color: Colors.negro,\r\n  },\r\n  dropdownContainer: {\r\n    borderColor: Colors.azul_Suave,\r\n    backgroundColor: Colors.blanco,\r\n    width: '95%',\r\n    zIndex: 1000,\r\n  },\r\n  searchInput: {\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport default CustomDropdownDetails;\r\n","import React, { createContext, useState, ReactNode } from \"react\";\r\n\r\n// Define la interfaz del Usuario\r\nexport interface ModalEntradasDates {\r\n  id_entrada: string;\r\n  isAddEntrada: boolean;\r\n  isModificarEntrada: boolean;\r\n  fileEditable: boolean;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface ModalEntradasDatesContextType {\r\n  modalEntradasDates: ModalEntradasDates | null;\r\n  setModalEntradasDates: (\r\n    modalEntradasDates: ModalEntradasDates | null\r\n  ) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst ModalEntradasDatesContext = createContext<\r\n  ModalEntradasDatesContextType | undefined\r\n>(undefined);\r\n\r\n// Define el proveedor\r\nexport const ModalEntradasDatesProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [modalEntradasDates, setModalEntradasDates] =\r\n    useState<ModalEntradasDates | null>(null);\r\n\r\n  return (\r\n    <ModalEntradasDatesContext.Provider\r\n      value={{\r\n        modalEntradasDates: modalEntradasDates,\r\n        setModalEntradasDates: setModalEntradasDates,\r\n      }}\r\n    >\r\n      {children}\r\n    </ModalEntradasDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useModalEntradasDates = () => {\r\n  const context = React.useContext(ModalEntradasDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      \"useModalEntradasDates debe usarse dentro de un ModalEntradasDates\"\r\n    );\r\n  }\r\n  return context;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Text, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\n\r\ninterface DateInputProps {\r\n  dayValue: string;\r\n  monthValue: string;\r\n  yearValue: string;\r\n  onDayChange: (day: string) => void;\r\n  onMonthChange: (month: string) => void;\r\n  onYearChange: (year: string) => void;\r\n  style?: StyleProp<ViewStyle>;\r\n  styleText?: StyleProp<TextStyle>;\r\n  isReadOnly?: boolean;\r\n  onDropdownOpen?: () => void; // Nueva propiedad para manejar la apertura del dropdown\r\n}\r\n\r\nexport const MyDateInput: React.FC<DateInputProps> = ({\r\n  dayValue,\r\n  monthValue,\r\n  yearValue,\r\n  onDayChange,\r\n  onMonthChange,\r\n  onYearChange,\r\n  style,\r\n  styleText,\r\n  isReadOnly = false,\r\n  onDropdownOpen, // Desestructuración de la nueva propiedad\r\n}) => {\r\n  const [day, setDay] = useState<string>(dayValue);\r\n  const [month, setMonth] = useState<string>(monthValue);\r\n  const [year, setYear] = useState<string>(yearValue);\r\n  const [days, setDays] = useState<Array<{ label: string; value: string }>>([]);\r\n\r\n  const [activePicker, setActivePicker] = useState<'day' | 'month' | 'year' | null>(null);\r\n\r\n  const getDaysInMonth = (month: number, year: number) => {\r\n    return new Date(year, month, 0).getDate();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const numberOfDays = getDaysInMonth(Number(month), Number(year));\r\n    const daysArray = Array.from({ length: numberOfDays }, (_, i) => ({\r\n      label: String(i + 1),\r\n      value: String(i + 1),\r\n    }));\r\n\r\n    if (Number(day) > numberOfDays) {\r\n      setDay(String(numberOfDays));\r\n    }\r\n\r\n    setDays(daysArray);\r\n  }, [month, year]);\r\n\r\n  const updateDate = (newDay: string, newMonth: string, newYear: string) => {\r\n    onDayChange(newDay);\r\n    onMonthChange(newMonth);\r\n    onYearChange(newYear);\r\n  };\r\n\r\n  const togglePicker = (picker: 'day' | 'month' | 'year') => {\r\n    if (activePicker === picker) {\r\n      setActivePicker(null);\r\n    } else {\r\n      setActivePicker(picker);\r\n      onDropdownOpen && onDropdownOpen(); // Llama a onDropdownOpen cuando se abre un picker\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, style]}>\r\n      <View style={styles.inputWrapper}>\r\n        <Text style={[styles.label, styleText]}>Día</Text>\r\n        <DropDownPicker\r\n          open={activePicker === 'day'}\r\n          value={day}\r\n          items={days}\r\n          setOpen={() => !isReadOnly && togglePicker('day')}\r\n          setValue={(value) => {\r\n            setDay(value);\r\n            updateDate(value, month, year);\r\n          }}\r\n          style={styles.picker}\r\n          containerStyle={[styles.pickerContainer, { zIndex: activePicker === 'day' ? 2 : 1 }]}\r\n          dropDownContainerStyle={styles.dropDownContainer}\r\n          disabled={isReadOnly}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputWrapper}>\r\n        <Text style={[styles.label, styleText]}>Mes</Text>\r\n        <DropDownPicker\r\n          open={activePicker === 'month'}\r\n          value={month}\r\n          items={Array.from({ length: 12 }, (_, i) => ({\r\n            label: String(i + 1),\r\n            value: String(i + 1),\r\n          }))}\r\n          setOpen={() => !isReadOnly && togglePicker('month')}\r\n          setValue={(value) => {\r\n            setMonth(value);\r\n            updateDate(day, value, year);\r\n          }}\r\n          style={styles.picker}\r\n          containerStyle={[styles.pickerContainer, { zIndex: activePicker === 'month' ? 2 : 1 }]}\r\n          dropDownContainerStyle={styles.dropDownContainer}\r\n          disabled={isReadOnly}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputWrapper}>\r\n        <Text style={[styles.label, styleText]}>Año</Text>\r\n        <DropDownPicker\r\n          open={activePicker === 'year'}\r\n          value={year}\r\n          items={Array.from({ length: 101 }, (_, i) => {\r\n            const year = new Date().getFullYear() - i;\r\n            return { label: String(year), value: String(year) };\r\n          })}\r\n          setOpen={() => !isReadOnly && togglePicker('year')}\r\n          setValue={(value) => {\r\n            setYear(value);\r\n            updateDate(day, month, value);\r\n          }}\r\n          style={styles.picker}\r\n          containerStyle={[styles.pickerContainer, { zIndex: activePicker === 'year' ? 2 : 1 }]}\r\n          dropDownContainerStyle={styles.dropDownContainer}\r\n          disabled={isReadOnly}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  inputWrapper: {\r\n    flex: 1,\r\n    marginHorizontal: 5,\r\n  },\r\n  label: {\r\n    fontSize: 14,\r\n    marginBottom: 5,\r\n    color: '#000',\r\n  },\r\n  picker: {\r\n    height: 20,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    borderRadius: 12,\r\n  },\r\n  pickerContainer: {\r\n    height: 35,\r\n    width: 80,\r\n  },\r\n  dropDownContainer: {\r\n    borderColor: 'gray',\r\n    zIndex: 9999,\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport interface TiendaMoverShowModal {\r\n  id_tienda: string;\r\n  nombre: string;\r\n}\r\n\r\ninterface Props {\r\n  items: TiendaMoverShowModal[];\r\n  columns: string[];\r\n}\r\n\r\nexport const MyDateTableModalDataMoverTiendas: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(3);\r\n  const [displayedItems, setDisplayedItems] = React.useState<TiendaMoverShowModal[]>(\r\n    []\r\n  ); // Estado para los elementos mostrados\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text style={styles.headerTextDesktop}>{column}</Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerDesktop}>\r\n      <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n        <DataTable style={{ width: \"150%\" }}>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => (\r\n            <DataTable.Row\r\n              key={item.id_tienda}\r\n              onPress={() => alert(\"Not supported yet\")}\r\n            >\r\n              <DataTable.Cell style={styles.handerRow}>\r\n                <Text\r\n                  style={{ flexWrap: \"wrap\", width: \"100%\", textAlign: \"left\" }}\r\n                  numberOfLines={2} // Limita a 2 líneas\r\n                >\r\n                  {item.nombre}\r\n                </Text>\r\n              </DataTable.Cell>\r\n            </DataTable.Row>\r\n          ))}\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n    width: \"100%\"\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 16,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 50,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 20,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Servicio } from '../components/MyDateTableServicios';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortServicios {\r\n  items: Servicio[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortServiciosContextType {\r\n  sortServicios: SortServicios | null;\r\n  setSortServicios: (sortServicios: SortServicios | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortServiciosContext = createContext<SortServiciosContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortServiciosProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortServicios, setSortServicios] = useState<SortServicios | null>(null);\r\n\r\n  return (\r\n    <SortServiciosContext.Provider value={{ sortServicios: sortServicios, setSortServicios: setSortServicios }}>\r\n      {children}\r\n    </SortServiciosContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortServicios = () => {\r\n  const context = React.useContext(SortServiciosContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortServicios debe usarse dentro de un SortServicios');\r\n  }\r\n  return context;\r\n};","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { TiendaShowModal } from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport interface Servicio {\r\n  id_Servicio: string;\r\n  id_Cliente: string;\r\n  id_Tienda: string;\r\n  id_Tipo_servicio: string;\r\n  id_Deuda: string;\r\n  id_Garantia: string;\r\n  fecha: string;\r\n  precio: string;\r\n  nota: string;\r\n  descripcion: string;\r\n  nombreCliente: string;\r\n  nombreTienda: string;\r\n  nombreTipoServicio: string;\r\n  nombreProducto?: string;\r\n  cantidad?: string;\r\n  devuelto: boolean;\r\n  costo: string;\r\n  costo_tipo_servicio: string;\r\n  cantidad_transferida: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Servicio[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableServicios: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Servicio[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n  const [isPermisoServicioGeneral, setIsPermisoServicioGeneral] =\r\n    React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      // Actualiza el estado con los resultado\r\n      setIsPermisoServicioGeneral(resultServicioGeneral);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const obtenerCambioPrecio = async () => {\r\n      if (usuario?.token) {\r\n        // Obtener alro de oneda de cambio\r\n        setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n      }\r\n    };\r\n    checkPermiso();\r\n    obtenerCambioPrecio();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Este métodod devuelve el mensaje el fodo de la tabla con los parámetros requeridos\r\n  const mensajeOfEndTable = () => {\r\n    let mensaje = \"Importes totales minoristas filtrados:  \";\r\n    let sumaMinoristaUSD = 0;\r\n    let sumaMayoristaUSD = 0;\r\n    let sumaTransferencias = 0;\r\n\r\n    items.forEach((item) => {\r\n      if (!item.devuelto) {\r\n        sumaTransferencias += parseFloat(item.cantidad_transferida);\r\n        if (parseInt(item.id_Tipo_servicio) === 25) {\r\n          sumaMayoristaUSD +=\r\n            parseFloat(item.precio) *\r\n            (item.cantidad ? parseInt(item.cantidad ?? \"0\") : 0);\r\n        } else {\r\n          sumaMinoristaUSD +=\r\n            parseFloat(item.precio) *\r\n            (parseInt(item.id_Tipo_servicio) === 2\r\n              ? item.cantidad\r\n                ? parseInt(item.cantidad ?? \"0\")\r\n                : 0\r\n              : 1); //\r\n        }\r\n      }\r\n    });\r\n\r\n    mensaje += `CUP: ${(\r\n      sumaMinoristaUSD * cambioMoneda\r\n    ).toFixed(0)}      Importes mayoristas filtrados:  CUP: ${(\r\n      sumaMayoristaUSD * cambioMoneda\r\n    ).toFixed(0)} `;\r\n    mensaje += `      Transferencias CUP: ${sumaTransferencias}`;\r\n    return String(mensaje);\r\n  };\r\n  const mensajeOfEndTableGanancia = () => {\r\n    let mensaje = \"Suma de ganancias por servicios prestados \";\r\n    let sumaGanancia = 0;\r\n\r\n    items.forEach((item) => {\r\n      if (\r\n        parseInt(item.id_Tipo_servicio) === 2 ||\r\n        parseInt(item.id_Tipo_servicio) === 25\r\n      ) {\r\n        sumaGanancia +=\r\n          ((parseFloat(item.precio) * cambioMoneda) -\r\n            parseFloat(item.costo) +\r\n            parseFloat(item.costo_tipo_servicio)) *\r\n          (item.cantidad ? parseInt(item.cantidad ?? \"0\") : 0);\r\n      } else {\r\n        sumaGanancia +=\r\n          (parseFloat(item.precio) * cambioMoneda) -\r\n          parseFloat(item.costo) +\r\n          parseFloat(item.costo_tipo_servicio);\r\n      }\r\n    });\r\n\r\n    mensaje += `    CUP: ${(sumaGanancia).toFixed(0)}`;\r\n\r\n    return String(mensaje);\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Fecha\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Cliente\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Precio\") {\r\n      aux = \"option5\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortServicios({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Cliente\" ||\r\n                column === \"Precio\" ||\r\n                column === \"Fecha\") && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Suave,\r\n                    marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                    width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                    height: 24, // Asegúrate de que tenga tamaño consistente\r\n                    justifyContent: \"center\", // Centrar contenido del botón\r\n                    alignItems: \"center\", // Centrar contenido del botón\r\n                    borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                    marginBottom: 4, // Elevar el botón del borde inferior\r\n                    paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                  }}\r\n                  onPress={() => sortEntradasAux(column)}\r\n                >\r\n                  <Image\r\n                    source={require(\"../images/ordenar.png\")}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </TouchableOpacity>\r\n              )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Cliente !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Servicio}\r\n                onPress={() => detailsModalView(item.id_Servicio)}\r\n                style={[\r\n                  { justifyContent: \"space-around\" }, // Estilo base\r\n                  item.id_Deuda === null && {\r\n                    borderWidth: 2,\r\n                    borderColor: \"red\",\r\n                  }, // Estilo condicional\r\n                ]}\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Precio USD */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.nombreTipoServicio}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Cantidad Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.cantidad ? item.cantidad : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(item.cantidad)? ((parseFloat(item.precio)) * cambioMoneda).toFixed(0) : \"\"}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(item.cantidad)? (((parseFloat(item.precio) * parseInt(item.cantidad)) * cambioMoneda).toFixed(0)) : (parseFloat(item.precio) * cambioMoneda).toFixed(0)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Servicios\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <Text>{mensajeOfEndTable()}</Text>\r\n            </View>\r\n\r\n            {(parseInt(usuario?.id_rol) === 1 ||\r\n              parseInt(usuario?.id_rol) === 2) && (\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <Text>{mensajeOfEndTableGanancia()}</Text>\r\n              </View>\r\n            )}\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Servicio}\r\n                onPress={() => detailsModalView(item.id_Servicio)}\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Nombre Del Tipo de Servicio */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombreTipoServicio}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Cantidad Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.cantidad ? item.cantidad : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(item.cantidad)? ((parseFloat(item.precio)) * cambioMoneda).toFixed(0) : \"\"}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(item.cantidad)? (((parseFloat(item.precio) * parseInt(item.cantidad)) * cambioMoneda).toFixed(0)) : (parseFloat(item.precio) * cambioMoneda).toFixed(0)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <Text>{mensajeOfEndTable()}</Text>\r\n          </View>\r\n\r\n          {(parseInt(usuario?.id_rol) === 1 ||\r\n            parseInt(usuario?.id_rol) === 2) && (\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <Text>{mensajeOfEndTableGanancia()}</Text>\r\n            </View>\r\n          )}\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\nimport { Servicio } from \"../components/MyDateTableServicios\";\r\n\r\n// Obtener todos los servicios\r\nexport const getAllServicios = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Servicio`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de todos los servicios: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener un servicio según el id específico\r\nexport const getServicioByID = async (token: String, id_servicio: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Servicio/${id_servicio}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de un servicio en específico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Servicio\r\nexport const addServicio = async (\r\n  token: string,\r\n  fecha: string,\r\n  precio: string,\r\n  nota: string,\r\n  descripcion: string,\r\n  id_tienda: string,\r\n  id_tipo_servicio: string,\r\n  costo: string,\r\n  cantidad_transferida: string,\r\n  id_cliente?: string,\r\n  id_garantia?: string,\r\n  id_encargo?: string\r\n) => {\r\n  /*\r\n  console.log(\"fecha: \",fecha);\r\n  console.log(\"precio: \",precio);\r\n  console.log(\"nota: \",nota);\r\n  console.log(\"descripcion: \",descripcion);\r\n  console.log(\"id_tienda: \",id_tienda);\r\n  console.log(\"id_tipo_servicio: \",id_tipo_servicio);\r\n  console.log(\"costo: \",costo);\r\n  console.log(\"cantidad_transferida: \",cantidad_transferida);\r\n  console.log(\"id_cliente: \",id_cliente);\r\n  */\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Servicio/createServicio`,\r\n      {\r\n        fecha: fecha,\r\n        precio: precio,\r\n        nota: nota,\r\n        descripcion: descripcion,\r\n        tienda: { id_tienda: id_tienda },\r\n        tipo_servicio: { id_tipo_servicio: id_tipo_servicio },\r\n        cliente: { id_cliente: id_cliente ?? null },\r\n        costo: costo,\r\n        cantidad_transferida: cantidad_transferida,\r\n        garantia: null,\r\n        deuda: null,\r\n        encargo: null,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error agregar servicio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Servicio\r\nexport const modificarServicio = async (\r\n  token: string,\r\n  id_Servicio: string,\r\n  fecha: string,\r\n  precio: string,\r\n  nota: string,\r\n  id_tienda: string,\r\n  id_tipo_servicio: string,\r\n  costo: string,\r\n  cantidad_transferida: string,\r\n  devuelto: boolean,\r\n  id_cliente?: string,\r\n  id_garantia?: string,\r\n  id_encargo?: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Servicio/updateServicio/${id_Servicio}`,\r\n      {\r\n        fecha: fecha,\r\n        precio: precio,\r\n        nota: nota,\r\n        costo: costo,\r\n        cantidad_transferida: cantidad_transferida,\r\n        devuelto: devuelto,\r\n        tienda: { id_tienda: id_tienda },\r\n        tipo_servicio: { id_tipo_servicio: id_tipo_servicio },\r\n        cliente: { id_cliente: id_cliente ?? null }\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar servicio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Servicio\r\nexport const deleteServicio = async (token: string, id_servicio: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Servicio/deleteServicio/${id_servicio}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al eliminar servicio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar Servicio\r\nexport const filtrarSrvicio = async (\r\n  token: string,\r\n  nombre_cliente: string,\r\n  id_tipo_servicio: string,\r\n  id_tienda: string,\r\n  precio_liminf: string,\r\n  precio_limsup: string,\r\n  fecha_liminf: string,\r\n  fecha_limsup: string,\r\n  nombre_producto: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Servicio/api/filtrar`,\r\n      {\r\n        nombre_cliente: nombre_cliente,\r\n        id_tipo_servicio: id_tipo_servicio,\r\n        id_tienda: id_tienda,\r\n        precio_liminf: precio_liminf,\r\n        precio_limsup: precio_limsup,\r\n        fecha_liminf: fecha_liminf,\r\n        fecha_limsup: fecha_limsup,\r\n        nombre_producto: nombre_producto\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al filtrar los datos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar servicio\r\nexport const ordenarServicios = async (token: string, items: any[], criterio: string, ascendente: boolean) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Servicio/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar las servicios: \", error);\r\n    return false;\r\n  }\r\n};","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todos los tipos de servicios\r\nexport const getAllTipoServicios = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Tipo_servicio`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de todos los Tipos de Servicios: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener un tipo de servicio especifico segun el id\r\nexport const getTipoServicioByID = async (\r\n  token: String,\r\n  id_TipoServicio: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Tipo_servicio/${id_TipoServicio}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de un Tipo de Servicio espesifico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar tipo de servicio\r\nexport const addTipoServicio = async (\r\n  token: string,\r\n  nombre: string,\r\n  costo: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Tipo_servicio/createTipo_servicio`,\r\n      {\r\n        nombre: nombre,\r\n        costo: costo,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar el tipo de servicio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Tipo de servicio\r\nexport const modificarTipoServicio = async (\r\n  token: string,\r\n  id_TipoServicio: string,\r\n  nombre: string,\r\n  costo: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Tipo_servicio/updateTipo_servicio/${id_TipoServicio}`,\r\n      {\r\n        nombre: nombre,\r\n        costo: costo,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar el tipo de servicio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Tipo de servicio\r\nexport const deleteTipoServicio = async (\r\n  token: string,\r\n  id_TipoServicio: string\r\n) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Tipo_servicio/deleteTipo_servicio/${id_TipoServicio}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error eliminar el tipo de servocio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar TipoServicio\r\nexport const filtrarTipoSrvicio = async (\r\n  token: string,\r\n  nombre: string,\r\n  costo_liminf: string,\r\n  costo_limsup: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Tipo_servicio/api/filtrar`,\r\n      {\r\n        nombre: nombre,\r\n        costo_liminf: costo_liminf,\r\n        costo_limsup: costo_limsup,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al filtrar los datos: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\nimport { Cliente } from \"../components/MyDateTableClientes\";\r\n\r\n// Obtener todos los clientes\r\nexport const getAllClientes = async (token: String) => {\r\n    try {\r\n      const response = await axios.get(`${cerverHost}/cliente`, {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\"Error al obtener datos de todos los Clientes: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n// Obtener cliente por el id\r\nexport const getClienteById = async (token: String, id_cliente: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Cliente/${id_cliente}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al obtener datos del cliente: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar un nuevo cliente\r\nexport const addCliente = async (token: String, nombre: string, email: string, telefono:string, descripcion :string, nota: string, Cif:string, detalles_bancarios:string) => {\r\n  try {\r\n    const response = await axios.post(`${cerverHost}/Cliente/createCliente`, {\r\n      nombre: nombre,\r\n      email: email || \"\",\r\n      descripcion: descripcion || \"\",\r\n      nota: nota || \"\",\r\n      telefono: telefono || \"\",\r\n      Cif: Cif || \"\",\r\n      detalles_bancarios: detalles_bancarios || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al incertar un nuevo cliente: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Actualizar cliente\r\nexport const actualizarCliente = async (token: String, id_cliente: string, nombre: string, email: string, telefono:string, descripcion :string, nota: string, Cif:string, detalles_bancarios:string) => {\r\n  try {\r\n    const response = await axios.put(`${cerverHost}/Cliente/updateCliente/${id_cliente}`, {\r\n      nombre: nombre,\r\n      email: email || \"\",\r\n      descripcion: descripcion || \"\",\r\n      nota: nota || \"\",\r\n      telefono: telefono || \"\",\r\n      Cif: Cif || \"\",\r\n      detalles_bancarios: detalles_bancarios || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al actualizar el cliente: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar cliente\r\nexport const deleteCliente = async (token: String, id_cliente:string) => {\r\n  try {\r\n    const response = await axios.delete(`${cerverHost}/Cliente/deleteCliente/${id_cliente}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al eliminar el cliente: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar clientes\r\nexport const filtrarCliente = async (token: String, nombre: string, telefono:string, cif: string, detalle_bacario:string) => {\r\n  try {\r\n    const response = await axios.post(`${cerverHost}/Cliente/api/filtrar`, {\r\n      nombre: nombre || \"\",\r\n      cif: cif || \"\",\r\n      telefono: telefono || \"\",\r\n      detalles_bancarios: detalle_bacario || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrar los clientes: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar clientes\r\nexport const ordenarClientes = async (token: string, items: Cliente[], criterio: string, ascendente: boolean) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Cliente/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar los clientes: \", error);\r\n    return false;\r\n  }\r\n};","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todas las ventas\r\nexport const getAllVentas = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Venta`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de todas las ventas: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener una venta especifica por id\r\nexport const getVentaByID = async (token: String, id_venta: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Venta/${id_venta}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de una venta especifica segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Venta\r\nexport const addVenta = async (\r\n  token: string,\r\n  id_producto: string,\r\n  id_servicio: string,\r\n  cantidad: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Venta/createVenta`,\r\n      {\r\n        producto: { id_producto: id_producto },\r\n        servicio: { id_servicio: id_servicio },\r\n        cantidad: cantidad,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error agregar venta: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Venta\r\nexport const modificarVenta = async (\r\n  token: string,\r\n  id_venta: string,\r\n  id_producto: string,\r\n  id_servicio: string,\r\n  cantidad: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Venta/updateVenta/${id_venta}`,\r\n      {\r\n        producto: { id_producto: id_producto },\r\n        servicio: { id_servicio: id_servicio },\r\n        cantidad: cantidad,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar venta: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Venta\r\nexport const deleteVenta = async (token: string, id_producto: string, id_servicio: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Venta/deleteVenta/${id_producto}/${id_servicio}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al eliminar venta: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener venta según el id del servicio\r\nexport const getVentaByIDOfServicio = async (token: String, id_servicio: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Venta/getbyServicio/${id_servicio}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de la venta segun el id del servicio: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};","import React from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\n\r\ninterface CustomRadioButtonProps {\r\n  onPress: () => void;\r\n  selected: boolean;\r\n  label: string;\r\n}\r\n\r\nconst CustomRadioButtonSingle: React.FC<CustomRadioButtonProps> = ({\r\n  onPress,\r\n  selected,\r\n  label,\r\n}) => (\r\n  <TouchableOpacity\r\n    onPress={onPress}\r\n    style={[styles.radioButton, selected && styles.radioButtonSelected]}\r\n  >\r\n    <Text\r\n      style={[\r\n        styles.radioButtonText,\r\n        selected && styles.radioButtonTextSelected,\r\n      ]}\r\n    >\r\n      {label}\r\n    </Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  radioButton: {\r\n    flexDirection: \"row\",\r\n    height: 40,\r\n    width: \"35%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Oscuro,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    borderColor: Colors.azul_Claro,\r\n    borderWidth: 3,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginLeft: \"5%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n  },\r\n  radioButtonSelected: {\r\n    backgroundColor: Colors.azul_Oscuro,\r\n  },\r\n  radioButtonText: {\r\n    fontSize: 16,\r\n    color: Colors.blanco,\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n    textShadowOffset: { width: 1, height: 1 },\r\n    textShadowRadius: 2,\r\n  },\r\n  radioButtonTextSelected: {\r\n    fontWeight: \"bold\",\r\n    color: Colors.blanco_Suave,\r\n  },\r\n});\r\n\r\nexport default CustomRadioButtonSingle;","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todas las garantias\r\nexport const getAllGarantias = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Garantia`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al obtener datos de las garantias: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener una garantia especifica segun el id\r\nexport const getGarantiaByID = async (token: String, id_garantia: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Garantia/${id_garantia}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de una garantia en específico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Garantia\r\nexport const addGarantia = async (\r\n  token: string,\r\n  duracion: string,\r\n  id_servicio: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Garantia/createGarantia`,\r\n      {\r\n        duracion: duracion,\r\n        servicio: { id_servicio: id_servicio },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar la garantia: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Garantia\r\nexport const modificarGarantia = async (\r\n  token: string,\r\n  duracion: string,\r\n  id_servicio: string,\r\n  id_garantia: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Garantia/updateGarantia/${id_garantia}`,\r\n      {\r\n        duracion: duracion,\r\n        servicio: { id_servicio: id_servicio },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar la garantia: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Garantia\r\nexport const deleteGarantia = async (token: string, id_garantia: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Garantia/deleteGarantia/${id_garantia}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error eliminar la garantia: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar Garantia\r\nexport const filtrarGarantia = async (token: string, nombre_cliente: string, duracion_limsup: string, duracion_liminf: string, nombre_producto: string, fecha_liminf: string, fecha_limsup: string, id_tienda: string) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Garantia/api/filtrar`,\r\n      {\r\n          nombre_producto: nombre_producto,\r\n          nombre_cliente: nombre_cliente,\r\n          duracion_liminf: duracion_liminf,\r\n          duracion_limsup: duracion_limsup,\r\n          fecha_liminf: fecha_liminf,\r\n          fecha_limsup: fecha_limsup,\r\n          id_tienda: id_tienda\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrar los datos: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todos los encargos\r\nexport const getAllEncargos = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Encargo`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al obtener datos de los encargos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener un encargo especifica segun el id\r\nexport const getEncargoByID = async (token: String, id_encargo: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Encargo/${id_encargo}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de un encargo en específico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Encargo\r\nexport const addEncargo = async (\r\n  token: string,\r\n  adelanto: string,\r\n  fecha_final: string,\r\n  id_servicio: string\r\n) => {\r\n  console.log(adelanto, fecha_final, id_servicio);\r\n  \r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Encargo/createEncargo`,\r\n      {\r\n        adelanto: adelanto,\r\n        fecha_final: fecha_final,\r\n        servicio: { id_servicio: id_servicio }\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar el encargo: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Encargo\r\nexport const modificarEncargo = async (\r\n    token: string,\r\n    adelanto: string,\r\n    fecha_final: string,\r\n    id_servicio: string,\r\n    id_encargo: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Encargo/updateEncargo/${id_encargo}`,\r\n      {\r\n        adelanto: adelanto,\r\n        fecha_final: fecha_final,\r\n        servicio: { id_servicio: id_servicio },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar el encargo: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Encargo\r\nexport const deleteEncargo = async (token: string, id_encargo: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Encargo/deleteEncargo/${id_encargo}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error eliminar el encargo: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todas las deudas\r\nexport const getAllDeudas = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Deuda`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de todas las deudas: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener una deuda especifica segun el id\r\nexport const getDeudaByID = async (token: String, id_deuda: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Deuda/${id_deuda}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de una deuda en específico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Deuda\r\nexport const addDeuda = async (\r\n  token: string,\r\n  deuda: string,\r\n  id_servicio: string,\r\n  id_pagos_deuda?: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Deuda/createDeuda`,\r\n      {\r\n        deuda: deuda,\r\n        pago_deuda: { id_pago_deuda: id_pagos_deuda },\r\n        servicio: { id_servicio: id_servicio },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar la deuda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Deuda\r\nexport const modificarDeuda = async (\r\n  token: string,\r\n  id_deuda: string,\r\n  deuda: string,\r\n  id_pagos_deuda: string,\r\n  id_servicio: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Deuda/updateDeuda/${id_deuda}`,\r\n      {\r\n        deuda: deuda,\r\n        pago_deuda: { id_pago_deuda: id_pagos_deuda },\r\n        servicio: { id_servicio: id_servicio },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar la deuda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Dedua\r\nexport const deleteDeuda = async (token: string, id_deuda: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Deuda/deleteDeuda/${id_deuda}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error eliminar la deuda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar Deudas\r\nexport const filtrarDeudas = async (\r\n  token: string,\r\n  nombre_producto: string,\r\n  nombre_cliente: string,\r\n  deuda_liminf: string,\r\n  deuda_limsup: string,\r\n  fecha_liminf: string,\r\n  fecha_limsup: string,\r\n  id_tienda: string,\r\n  id_tipo_servicio: string,\r\n  saldada?: boolean\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Deuda/api/filtrar`,\r\n      {\r\n        nombre_producto: nombre_producto,\r\n        nombre_cliente: nombre_cliente,\r\n        deuda_liminf: deuda_liminf,\r\n        deuda_limsup: deuda_limsup,\r\n        id_tienda: id_tienda,\r\n        id_tipo_servicio: id_tipo_servicio,\r\n        fecha_liminf: fecha_liminf,\r\n        fecha_limsup: fecha_limsup,\r\n        saldada: saldada\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al filtrar los datos: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todas las pago_deudas\r\nexport const getAllPagoDeudas = async (token: String) => {\r\n    try {\r\n      const response = await axios.get(`${cerverHost}/Pago_Deuda`, {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\"Error al obtener datos de todas las pago deudas: \", error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Obtener una pago_deuda especifica segun el id\r\n  export const getPagoDeudaByID = async (token: String, id_pago_deuda: string) => {\r\n    try {\r\n      const response = await axios.get(`${cerverHost}/Pago_Deuda/${id_pago_deuda}`, {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\r\n        \"Error al obtener datos de una pago deuda en específico segun el ID: \",\r\n        error\r\n      );\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Agregar Pago Deuda\r\n  export const addPagoDeuda = async (\r\n    token: string,\r\n    pagada: string,\r\n    fecha: string,\r\n    id_deuda: string\r\n  ) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${cerverHost}/Pago_Deuda/createPago_Deuda`,\r\n        {\r\n          pagada: pagada,\r\n          fecha: fecha,\r\n          deuda: {\"id_deuda\": id_deuda}\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\"Error incertar la pago deuda: \", error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Modificar Pago Deuda\r\n  export const modificarPagoDeuda = async (\r\n    token: string,\r\n    id_pago_deuda: string,\r\n    pagada: string,\r\n    fecha: string,\r\n    id_deuda: string\r\n  ) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `${cerverHost}/Pago_Deuda/updatePago_Deuda/${id_pago_deuda}`,\r\n        {\r\n            pagada: pagada,\r\n            fecha: fecha,\r\n            deuda: {\"id_deuda\": id_deuda}\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\"Error modificar la pago deuda: \", error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Eliminar Pago Dedua\r\n  export const deletePagoDeuda = async (token: string, id_pago_deuda: string) => {\r\n    try {\r\n      const response = await axios.delete(\r\n        `${cerverHost}/Pago_Deuda/deletePago_Deuda/${id_pago_deuda}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\"Error eliminar la pago deuda: \", error);\r\n      return false;\r\n    }\r\n  };","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  FlatList,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getCantidadProductoInTiendaEspecifica,\r\n  isProductoInTienda,\r\n  tienda_Realizarventa,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getAllEntradasByProductoId,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n  getProductoById,\r\n  getProductoCantidadTotal,\r\n  getRelacionProductoByTienda,\r\n  matchProductoInTienda,\r\n  updateProductoTienda,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  MyDateTableServicios,\r\n  Servicio,\r\n} from \"../components/MyDateTableServicios\";\r\nimport {\r\n  addServicio,\r\n  deleteServicio,\r\n  filtrarSrvicio,\r\n  getAllServicios,\r\n  getServicioByID,\r\n  modificarServicio,\r\n  ordenarServicios,\r\n} from \"../services/ServiciosServices\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport { getAllTipoServicios } from \"../services/TipoServiciosServices\";\r\nimport { getAllClientes } from \"../services/clienteServices\";\r\nimport {\r\n  addVenta,\r\n  deleteVenta,\r\n  getAllVentas,\r\n  getVentaByIDOfServicio,\r\n} from \"../services/ventasServices\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\nimport CustomRadioButtonSingle from \"../components/CustomRadioButtonSearch\";\r\nimport {\r\n  addGarantia,\r\n  deleteGarantia,\r\n  modificarGarantia,\r\n} from \"../services/GarantiaServices\";\r\nimport {\r\n  addEncargo,\r\n  deleteEncargo,\r\n  modificarEncargo,\r\n} from \"../services/EncargoServices\";\r\nimport {\r\n  addDeuda,\r\n  deleteDeuda,\r\n  getDeudaByID,\r\n} from \"../services/DeudasServices\";\r\nimport { addPagoDeuda, deletePagoDeuda } from \"../services/PagoDeudaServices\";\r\n\r\nexport default function ServiciosView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n  const [\r\n    capaPrioridadTipoServicioDetails,\r\n    setCapaPrioridadTipoServicioDetails,\r\n  ] = useState(1000);\r\n  const [capaPrioridadProductoDetails, setCapaPrioridadProductoDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadClienteDetails, setCapaPrioridadClienteDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTipoServicioSearsh, setCapaPrioridadTipoServicioSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendaSearsh, setCapaPrioridadTiendaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"TipoServicioDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ProductoDetails\") {\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(2000);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ClienteDetails\") {\r\n      setCapaPrioridadClienteDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"TipoServicioSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(2000);\r\n    } else if (prioridad === \"TiendaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(2000);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n\r\n  const [idFirstTimeProducto, setIdFirsTimeProducto] = useState(\"\");\r\n  const [auxOptimizacion, setAuxOptimizacion] = useState(false);\r\n\r\n  // variables para agregar multiples servicios al mismo tiempo\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [isModalAddMultiServicio, setIsModalAddMultiServicio] = useState(false);\r\n  const [isModalAddMultiServicioSingle, setIsModalAddMultiServicioSingle] =\r\n    useState(false);\r\n  const [multiServiciosItems, setMltiServiciosItems] = useState<any[]>([]);\r\n  const [idClienteMutiDetails, setIdClienteMultiDetails] = useState(\"\");\r\n  const [idTiendaMultiDetails, setIdTiendaMultiDetails] = useState(\r\n    usuario?.id_tienda\r\n  );\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idServicioDetails, setIdServicioDetails] = useState(\"\");\r\n  const [idClienteDetails, setIdClienteDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [idTipoServicioDetails, setIdTipoServicioDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [cantidadProductoDetails, setCantidadProductoDetails] = useState(\"1\");\r\n  const [costoPromedioProductoCUPDetails, setCostoPromedioProductoCUPDetails] =\r\n    useState(\"0\");\r\n  const [costoPromedioProductoUSDDetails, setCostoPromedioProductoUSDDetails] =\r\n    useState(\"0\");\r\n  const [precioUSDDetails, setPrecioUSDDetails] = useState(\"\");\r\n  const [precioUSDDetailsAuxVal, setPrecioUSDDetailsAuxVal] = useState(\"\");\r\n  const [devueltoDetails, setDevueltoDetails] = useState(\"sin Devolver\");\r\n  const [precioCUPDetails, setPrecioCUPDetails] = useState(\"\");\r\n  const [notaDetails, setNotaDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n  const [fechaDiaDetailsEncargo, setFechaDiaDetailsEncargo] = useState(\"\");\r\n  const [fechaMesDetailsEncargo, setFechaMesDetailsEncargo] = useState(\"\");\r\n  const [fechaAnnoDetailsEncargo, setFechaAnnoDetailsEncargo] = useState(\"\");\r\n  const [adelantoEncargo, setAdelantoEncargo] = useState(\"\");\r\n  const [isGarantiaDetails, setIsGarantiaDetails] = useState(false);\r\n  const [isDeudaDetails, setIsDeudaDetails] = useState(false);\r\n  const [isGarantiaDetailsViejo, setIsGarantiaDetailsViejo] = useState(false);\r\n  const [idGarantiaDetails, setIdGarantiaDetails] = useState(\"\");\r\n  const [duracionGarantiaDetails, setDuracionGarantiaDetails] = useState(\"\");\r\n  const [cantidadTransferencia, setCantidadTransferencia] = useState(\"0\");\r\n  const [adelantoUSDDeudaDetails, setAdelantoUSDDeudaDetails] = useState(\"0\");\r\n  const [adelantoCUPDeudaDetails, setAdelantoCUPDeudaDetails] = useState(\"0\");\r\n  const [duracionGarantiaDetailsVieja, setDuracionGarantiaDetailsVieja] =\r\n    useState(\"\");\r\n  const [idEncargoDetails, setIdEncargoDetails] = useState(\"\");\r\n  const [idDeudaDetails, setIdDeudaDetails] = useState(\"\");\r\n\r\n  // Variable auxiliar para el redondeo de memerio\r\n  const [auxRedondeo, setAuxRedondeo] = useState(\"\");\r\n\r\n  // Variables axiliares para lavalidación de campos\r\n  const [idTiendaDetailsViejo, setIdTiendaDetailsViejo] = useState(\"\");\r\n  const [idProductoDetailsViejo, setIdProductoDetailsViejo] = useState(\"\");\r\n  const [cantidadProductoDetailsViejo, setCantidadProductoDetailsViejo] =\r\n    useState(\"\");\r\n  const [idTipoServicioDetailsViejo, setIdTipoServicioDetailsViejo] =\r\n    useState(\"\");\r\n  const [devueltoDetailsViejo, setDevueltoDetailsViejo] =\r\n    useState(\"sin Devolver\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  // Variable que controla si se está haciendo una venta o se hizo una venta\r\n  const [isVentaProducto, setIsVentaProducto] = useState(false);\r\n  const [isEncargoProducto, setIsEncargoProducto] = useState<boolean>(false);\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Controlar el doble clic del boton\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarServicio, setIsPermisoAgregarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarServicio, setIsPermisoEliminarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoModificarServicio, setIsPermisoModificarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoServicioLocal, setIsPermisoServicioLocal] =\r\n    React.useState(false);\r\n  const [isPermisoServicioGeneral, setIsPermisoServicioGeneral] =\r\n    React.useState(false);\r\n\r\n  const [isPermisoVerCostoVenta, setIsPermisoVerCostoVenta] = useState(false);\r\n\r\n  const mensajeSumaVenta = () => {\r\n    let mensaje = `Se debe cobrar CUP: ${(\r\n      parseFloat(precioCUPDetails) * parseFloat(cantidadProductoDetails)\r\n    ).toFixed(\r\n      0\r\n    )} y se pagará por transferencia una cantidad de ${cantidadTransferencia}`;\r\n\r\n    return mensaje;\r\n  };\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      if (localStorage.getItem(\"isPermisoAgregarServicio\") === null) {\r\n        const resultAgregarServicio = await isPermiso(\r\n          usuario.token,\r\n          \"26\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoAgregarServicio(resultAgregarServicio);\r\n        localStorage.setItem(\"isPermisoAgregarServicio\", resultAgregarServicio);\r\n      } else {\r\n        setIsPermisoAgregarServicio(\r\n          Boolean(localStorage.getItem(\"isPermisoAgregarServicio\"))\r\n        );\r\n      }\r\n      if (localStorage.getItem(\"isPermisoEliminarServicio\") === null) {\r\n        const resultEliminarServicio = await isPermiso(\r\n          usuario.token,\r\n          \"25\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoEliminarServicio(resultEliminarServicio);\r\n        localStorage.setItem(\r\n          \"isPermisoEliminarServicio\",\r\n          resultEliminarServicio\r\n        );\r\n      } else {\r\n        setIsPermisoEliminarServicio(\r\n          Boolean(localStorage.getItem(\"isPermisoEliminarServicio\"))\r\n        );\r\n      }\r\n      if (localStorage.getItem(\"sPermisoModificarServicio\") === null) {\r\n        const resultModificarServicio = await isPermiso(\r\n          usuario.token,\r\n          \"24\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoModificarServicio(resultModificarServicio);\r\n        localStorage.setItem(\r\n          \"isPermisoModificarServicio\",\r\n          resultModificarServicio\r\n        );\r\n      } else {\r\n        setIsPermisoModificarServicio(\r\n          Boolean(localStorage.getItem(\"isPermisoModificarServicio\"))\r\n        );\r\n      }\r\n      if (localStorage.getItem(\"isPermisoServicioLocal\") === null) {\r\n        const resulServicioLocal = await isPermiso(\r\n          usuario.token,\r\n          \"26\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoServicioLocal(resulServicioLocal);\r\n        localStorage.setItem(\"isPermisoServicioLocal\", resulServicioLocal);\r\n      } else {\r\n        setIsPermisoServicioLocal(\r\n          Boolean(localStorage.getItem(\"isPermisoServicioLocal\"))\r\n        );\r\n      }\r\n      if (localStorage.getItem(\"isPermisoServicioGeneral\") === null) {\r\n        const resultServicioGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"27\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoServicioGeneral(resultServicioGeneral);\r\n        localStorage.setItem(\"isPermisoServicioGeneral\", resultServicioGeneral);\r\n      } else {\r\n        setIsPermisoServicioGeneral(\r\n          Boolean(localStorage.getItem(\"isPermisoServicioGeneral\"))\r\n        );\r\n      }\r\n\r\n      // cargar cambio de moneda\r\n      if (localStorage.getItem(\"cambioMoneda\") === null) {\r\n        setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n      } else {\r\n        setCambioMoneda(parseFloat(localStorage.getItem(\"cambioMoneda\")));\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Servicio[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreCliente, setDropDownItemsNombreCliente] = useState<\r\n    ProveedorPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreTipoServicio, setDropDownItemsNombreTipoServicio] =\r\n    useState<ProductoPiker[]>([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreClienteSearch, setNombreClienteSearch] = useState(\"\");\r\n  const [nombreProductoSearsh, setNombreProductoSearch] = useState(\"\");\r\n  const [idTipoServicioSearch, setIdTipoServicioSearch] = useState(\"\");\r\n  const [idTiendaSearch, setIdTiendaSearch] = useState(\"\");\r\n  const [rangoPrecioDesdeSearch, setRangoPrecioDesdeSearch] = useState(\"\");\r\n  const [rangoPrecioHastaSearch, setRangoPrecioHastaSearch] = useState(\"\");\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n\r\n  const options = [\r\n    { label: \"Día\", value: \"dia\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n    { label: \"Mes\", value: \"mes\" },\r\n  ];\r\n\r\n  const optionsDevueltoDetails = [\r\n    { label: \"Devolver\", value: \"devolver\" },\r\n    { label: \"Sin Devolver\", value: \"sin devolver\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"dia\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 6);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else if (value === \"mes\") {\r\n      // Restar 1 mes a la fecha actual\r\n      const lastMonthDate = new Date(currentDate);\r\n      lastMonthDate.setMonth(currentDate.getMonth() - 1);\r\n      const monthYear = String(lastMonthDate.getFullYear());\r\n      const monthMonth = String(lastMonthDate.getMonth() + 1).padStart(2, \"0\");\r\n      const monthDay = String(lastMonthDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${monthYear}-${monthMonth}-${monthDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarServicios(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      let result: any;\r\n\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n      const resulServicioLocal = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      if (resultServicioGeneral) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          usuario.id_tienda\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      } else if (resulServicioLocal) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          usuario.id_tienda\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTipoServicioPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTipoServicios(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const tipoServiciosMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tipo_servicio,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTipoServicio([\r\n          { label: \"Todos los tipos de servicios\", value: \"\" },\r\n          ...tipoServiciosMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getClientesPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllClientes(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const ClientesMapeados: ProductoPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_cliente,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreCliente(ClientesMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Todas las tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setCantidadTransferencia(\"0\");\r\n    setIdTipoServicioDetails(\"\");\r\n    setIsDeudaDetails(false);\r\n    setIsEncargoProducto(false);\r\n    setAdelantoCUPDeudaDetails(\"0\");\r\n    setAdelantoUSDDeudaDetails(\"0\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  // Cargar datos de lprodcut o del servicio de venta\r\n  const cargarDetailsOfProductoVenta = async () => {\r\n    if (usuario?.token) {\r\n      const resultServicio = await getServicioByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        const resultventa = await getVentaByIDOfServicio(\r\n          usuario.token,\r\n          idServicioDetails\r\n        );\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(true);\r\n\r\n        // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n        if (resultventa) {\r\n          // Actualizar variables para la validación de campos\r\n          setIdProductoDetailsViejo(resultventa.producto.id_producto);\r\n          setCantidadProductoDetailsViejo(resultventa.cantidad);\r\n          setIdTiendaDetailsViejo(resultServicio.tienda.id_tienda);\r\n\r\n          setIdProductoDetails(resultventa.producto.id_producto);\r\n          setIdFirsTimeProducto(resultventa.producto.id_producto);\r\n          setCantidadProductoDetails(resultventa.cantidad);\r\n          setIdTiendaDetails(resultServicio.tienda.id_tienda);\r\n          setPrecioUSDDetails(resultServicio.precio);\r\n          setPrecioCUPDetails(\r\n            String(\r\n              (parseFloat(resultServicio.precio) * cambioMoneda).toFixed(0)\r\n            )\r\n          );\r\n          setCostoPromedioProductoUSDDetails(\r\n            resultventa.producto.costo_acumulado\r\n          );\r\n        } else {\r\n          // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(true);\r\n\r\n          setIdProductoDetails(\"\");\r\n          setCantidadProductoDetails(\"\");\r\n          setPrecioUSDDetails(\"\");\r\n          setPrecioCUPDetails(\"\");\r\n          setCostoPromedioProductoUSDDetails(\"\");\r\n        }\r\n      } else {\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(false);\r\n        setPrecioUSDDetails(resultServicio.precio);\r\n        setPrecioCUPDetails(\r\n          String((parseInt(resultServicio.precio) * cambioMoneda).toFixed(0))\r\n        );\r\n        setCostoPromedioProductoUSDDetails(resultServicio.costo);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Cargar todos los datos de el servicio pro primera ves que se abre el servicio\r\n  const cargarDetailsOfServicio = async () => {\r\n    setAuxOptimizacion(false);\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getServicioByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.fecha.split(\"T\")[0].split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdServicioDetails(result.id_servicio);\r\n        setIdClienteDetails(result.cliente.id_cliente);\r\n        setIdTipoServicioDetails(result.tipo_servicio.id_tipo_servicio);\r\n        setNotaDetails(result.nota);\r\n        setDescripcionDetails(result.descripcion);\r\n        setDevueltoDetails(result.devuelto ? \"devolver\" : \"sin devolver\");\r\n        setIsGarantiaDetails(result.garantia !== null);\r\n        setCantidadTransferencia(result.cantidad_transferida);\r\n        setDuracionGarantiaDetails(\r\n          result.garantia !== null ? result.garantia.duracion : \"\"\r\n        );\r\n        setIdGarantiaDetails(\r\n          result.garantia !== null ? result.garantia.id_garantia : \"\"\r\n        );\r\n        setIdEncargoDetails(\r\n          result.encargo !== null ? result.encargo.id_encargo : \"\"\r\n        );\r\n        setAdelantoEncargo(\r\n          result.encargo !== null ? result.encargo.adelanto : \"\"\r\n        );\r\n        setIdDeudaDetails(result.deuda !== null ? result.deuda.id_deuda : \"\");\r\n        if (result.encargo !== null) {\r\n          const partes: string[] = String(result.encargo.fecha).split(\"-\");\r\n\r\n          // Asignar las partes a variables separadas\r\n          const anio: string = partes[0]; // \"2024\"\r\n          const mes: string = partes[1]; // \"12\"\r\n          const dia: string = partes[2]; // \"16\"\r\n          setFechaAnnoDetailsEncargo(String(parseInt(anio)));\r\n          setFechaMesDetailsEncargo(String(parseInt(mes)));\r\n          setFechaDiaDetailsEncargo(String(parseInt(dia)));\r\n        }\r\n\r\n        // Actualizar variables para la validación de campos\r\n        setIdTipoServicioDetailsViejo(result.tipo_servicio.id_tipo_servicio);\r\n        setDevueltoDetailsViejo(result.devuelto ? \"devolver\" : \"sin devolver\");\r\n        setDuracionGarantiaDetailsVieja(\r\n          result.garantia !== null ? result.garantia.duracion : \"\"\r\n        );\r\n        setIsGarantiaDetailsViejo(result.garantia !== null);\r\n\r\n        // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n        if (parseInt(result.tipo_servicio.id_tipo_servicio) === 2) {\r\n          const resultventa = await getVentaByIDOfServicio(\r\n            usuario.token,\r\n            idServicioDetails\r\n          );\r\n          // Obtener entradas del produto para calcular datos del producto\r\n\r\n          // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n          if (resultventa) {\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setIdProductoDetails(resultventa.producto.id_producto);\r\n            setCantidadProductoDetails(resultventa.cantidad);\r\n            setIdTiendaDetails(result.tienda.id_tienda);\r\n            setPrecioUSDDetails(result.precio);\r\n            setPrecioCUPDetails(\r\n              String((parseFloat(result.precio) * cambioMoneda).toFixed(0))\r\n            );\r\n            setCostoPromedioProductoUSDDetails(result.costo_acumulado);\r\n          } else {\r\n            // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setIdProductoDetails(\"\");\r\n            setCantidadProductoDetails(\"\");\r\n            setIdTiendaDetails(\"\");\r\n            setPrecioUSDDetails(\"\");\r\n            setPrecioCUPDetails(\"\");\r\n            setCostoPromedioProductoUSDDetails(\"\");\r\n          }\r\n        } else {\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(false);\r\n          setPrecioUSDDetails(result.precio);\r\n          setPrecioCUPDetails(\r\n            String((parseInt(result.precio) * cambioMoneda).toFixed(0))\r\n          );\r\n          setCostoPromedioProductoUSDDetails(result.costo);\r\n        }\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n        // Actualizar fechas para el encargo\r\n        setFechaDiaDetailsEncargo(String(parseInt(day)));\r\n        setFechaMesDetailsEncargo(String(parseInt(month)));\r\n        setFechaAnnoDetailsEncargo(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares;\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n    setAuxOptimizacion(true);\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Servicio[] | null> => {\r\n    if (usuario?.token) {\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      try {\r\n        const result = await filtrarSrvicio(\r\n          usuario.token,\r\n          nombreClienteSearch,\r\n          idTipoServicioSearch,\r\n          resultServicioGeneral ? idTiendaSearch : usuario.id_tienda,\r\n          rangoPrecioDesdeSearch,\r\n          rangoPrecioHastaSearch,\r\n          fechaDesde,\r\n          fechaHasta,\r\n          nombreProductoSearsh\r\n        );\r\n\r\n        if (result) {\r\n          const serviciosMapeados: Servicio[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Servicio: element.id_servicio,\r\n              id_Cliente: element.cliente.id_cliente,\r\n              id_Tienda: element.tienda.id_tienda,\r\n              id_Tipo_servicio: element.tipo_servicio.id_tipo_servicio,\r\n              id_Deuda: \"\",\r\n              id_Garantia: \"\",\r\n              fecha: element.fecha,\r\n              precio: element.precio,\r\n              nota: element.nota,\r\n              descripcion: element.descripcion,\r\n              nombreCliente: element.cliente.nombre,\r\n              nombreTienda: element.tienda.nombre,\r\n              nombreTipoServicio: element.tipo_servicio.nombre,\r\n              nombreProducto: element.venta\r\n                ? element.venta.producto.nombre\r\n                : \"\", // Verifica si 'venta' no es null\r\n              cantidad: element.venta ? element.venta.cantidad : \"\", // Verifica si 'venta' no es null\r\n              devuelto: element.devuelto,\r\n              costo: element.costo,\r\n              cantidad_transferida: element.cantidad_transferida,\r\n              costo_tipo_servicio: element.tipo_servicio.costo,\r\n            }))\r\n          );\r\n          return serviciosMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n    xº;\r\n  };\r\n\r\n  // Cargar datos del servicio cuando se seleccionado en la tabla\r\n  useEffect(() => {\r\n    cargarDetailsOfServicio();\r\n  }, [modalEntradasDates]);\r\n\r\n  // Cargar datos de el producto si es que es seleccioando una venta de algun tipoServicio\r\n  useEffect(() => {\r\n    // Actualizar si es Encargo\r\n    if (parseInt(idTipoServicioDetails) === 26) {\r\n      setIsEncargoProducto(true);\r\n    } else {\r\n      setIsEncargoProducto(false);\r\n    }\r\n    cargarDetailsOfProductoVenta();\r\n  }, [idTipoServicioDetails]);\r\n  useEffect(() => {\r\n    if (auxRedondeo === \"PrecioCUP\") {\r\n      setPrecioUSDDetails(parseFloat(precioUSDDetails).toFixed(4));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"PrecioUSD\") {\r\n      setPrecioCUPDetails(parseFloat(precioCUPDetails).toFixed(0));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoCUP\") {\r\n      setCostoPromedioProductoUSDDetails(\r\n        parseFloat(costoPromedioProductoUSDDetails).toFixed(4)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoUSD\") {\r\n      setCostoPromedioProductoCUPDetails(\r\n        parseFloat(costoPromedioProductoCUPDetails).toFixed(0)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    }\r\n    setAuxRedondeo(\"\");\r\n  }, [auxRedondeo]);\r\n\r\n  useEffect(() => {\r\n    const auxiliar = async () => {\r\n      if (usuario?.token) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          idTiendaDetails\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      }\r\n    };\r\n    auxiliar();\r\n  }, [idTiendaDetails]);\r\n  useEffect(() => {\r\n    if (auxOptimizacion) {\r\n      if (\r\n        idProductoDetails !== \"\" &&\r\n        idProductoDetails !== idFirstTimeProducto &&\r\n        usuario?.token\r\n      ) {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n        const auxiliarAsyncFuncion = async () => {\r\n          const resultProdcuto = await getProductoById(\r\n            usuario.token,\r\n            idProductoDetails\r\n          );\r\n\r\n          // Cargar el costo promedio del producto seleccionado\r\n          setCostoPromedioProductoUSDDetails(resultProdcuto.costo_acumulado);\r\n          // Cargar precio del producto seleccioando en USD y CUP\r\n          setPrecioUSDDetails(resultProdcuto.precio ?? 0);\r\n          setPrecioUSDDetailsAuxVal(resultProdcuto.precio ?? 0);\r\n          setPrecioCUPDetails(\r\n            String(\r\n              (parseFloat(resultProdcuto.precio) * cambioMoneda).toFixed(0)\r\n            ) ?? 0\r\n          );\r\n        };\r\n        auxiliarAsyncFuncion();\r\n      } else {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n      }\r\n    }\r\n  }, [idProductoDetails]);\r\n\r\n  // Funcion para controlar la vicion del campo de costo del servicio y del producto\r\n  const isCampoCostoVisible = async () => {\r\n    if (usuario?.token && usuario?.id_usuario) {\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultado =\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n          parseInt(idTipoServicioDetails) === 25\r\n          ? isPermisoServicioGeneral\r\n          : true;\r\n      return resultado;\r\n    }\r\n    return false;\r\n  };\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        setAuxOptimizacion(false);\r\n        await checkPermiso();\r\n        await getTipoServicioPikerDetails();\r\n        await getClientesPikerDetails();\r\n        await getTiendasPikerDetails();\r\n        await getProductosPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarServicios = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let serviciosFiltradas: Servicio[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortServicios?.criterioOrden && sortServicios.tipoOrden) {\r\n          serviciosFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            serviciosFiltradas,\r\n            sortServicios.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        } else {\r\n          serviciosFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            serviciosFiltradas,\r\n            \"option3\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(serviciosFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarServicios(\r\n      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n    );\r\n  }, [sortServicios, selectedOptionTipoOrden]);\r\n  useEffect(() => {\r\n    setSelecterActivoDetails(\"\");\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ]);\r\n\r\n  const auxSetModalServicioSingleDates = () => {\r\n    setIsVentaProducto(true);\r\n    setIdProductoDetails(\"\");\r\n    setAuxOptimizacion(true);\r\n\r\n    setIsDateLoaded(false);\r\n    setIdTiendaDetails(usuario?.id_tienda);\r\n    setIdTipoServicioDetails(\"\");\r\n    setIdClienteDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n    setIdProductoAuxModificarDetails(\"\");\r\n    setIdProductoDetailsViejo(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setPrecioCUPDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setCostoPromedioProductoUSDDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setNotaDetails(\"\");\r\n    setDescripcionDetails(\"\");\r\n\r\n    setIsModalAddMultiServicioSingle(!isModalAddMultiServicioSingle);\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Extraemos el año, mes y día de la fecha actual\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    setFechaDiaDetails(String(parseInt(day)));\r\n    setFechaMesDetails(String(parseInt(month)));\r\n    setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n    setFechaDiaDetailsEncargo(String(parseInt(day)));\r\n    setFechaMesDetailsEncargo(String(parseInt(month)));\r\n    setFechaAnnoDetailsEncargo(String(parseInt(year)));\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setIdTiendaDetails(usuario?.id_tienda);\r\n    setIdTipoServicioDetails(\"\");\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setPrecioCUPDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setCostoPromedioProductoUSDDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setNotaDetails(\"\");\r\n    setDescripcionDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Extraemos el año, mes y día de la fecha actual\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    setFechaDiaDetails(String(parseInt(day)));\r\n    setFechaMesDetails(String(parseInt(month)));\r\n    setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n    setFechaDiaDetailsEncargo(String(parseInt(day)));\r\n    setFechaMesDetailsEncargo(String(parseInt(month)));\r\n    setFechaAnnoDetailsEncargo(String(parseInt(year)));\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarServicios(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreClienteSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n    setIdTiendaSearch(\"\");\r\n    setIdTipoServicioSearch(\"\");\r\n    setRangoPrecioDesdeSearch(\"\");\r\n    setRangoPrecioHastaSearch(\"\");\r\n    setSelecterActivoDetails(\"\");\r\n  };\r\n\r\n  // Agregar miltiples servicios al sistema\r\n  const addNewMultiServicio = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando multiples ventas. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      // Validar que se halla seleccionado un Cliente y una Tienda\r\n      if (\r\n        idClienteMutiDetails === \"\" ||\r\n        idTiendaMultiDetails === \"\" ||\r\n        multiServiciosItems.length === 0\r\n      ) {\r\n        setModalMensaje(\r\n          \"Debe seleccionar un Cliente y una Tienda para continuar o no hay ventas que agregar.\"\r\n        );\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensajeView(true);\r\n        setIsButtonDisabled(false);\r\n        return;\r\n      }\r\n\r\n      let sumaTransferencias: number = 0;\r\n      let sumaPreciosTotales: number = 0;\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL AGREGAR VENTAS. Por favor verifique las siguientes ventas:\\n\";\r\n      for (let i = 0; i < multiServiciosItems.length; i++) {\r\n        const item = multiServiciosItems[i];\r\n        const auxIsProductoInTienda = await isProductoInTienda(\r\n          usuario.token,\r\n          item.idProductoDetails,\r\n          idTiendaMultiDetails || \"\"\r\n        );\r\n        let validarCamposSingle = \"-\" + item.nombreProducto + \":\\n\";\r\n        let auxFlag = true;\r\n\r\n        // Validar campos\r\n        if (item.isGarantiaDetails && parseInt(idClienteMutiDetails) === 1) {\r\n          auxFlag = false;\r\n          validarCamposSingle +=\r\n            \"-  La venta del producto \" +\r\n            item.nombreProducto +\r\n            \" tiene garantía por lo que el cliente no puede ser anónimo.\\n\";\r\n        }\r\n        if (auxIsProductoInTienda) {\r\n          if (\r\n            parseInt(auxIsProductoInTienda.cantidad) <\r\n            parseInt(item.cantidadProductoDetails)\r\n          ) {\r\n            auxFlag = false;\r\n            validarCamposSingle +=\r\n              \"-  La cantidad que desea vender del producto \" +\r\n              item.nombreProducto +\r\n              \" es mayor que la cantidad que hay en la tienda.\\n\";\r\n          }\r\n        }\r\n        if (item.isDeudaDetails) {\r\n          if (parseInt(idClienteMutiDetails) === 1) {\r\n            auxFlag = false;\r\n            validarCamposSingle +=\r\n              \"-  La venta el producto \" +\r\n              item.nombreProducto +\r\n              \" genera una deuda por tanto, el cliente no puede ser anónimo.\\n\";\r\n          }\r\n        }\r\n\r\n        if (!auxFlag) {\r\n          flag = false;\r\n          validarCampos += validarCamposSingle;\r\n        }\r\n\r\n        // Obtener la Sumatoria de los precios y las transferencias\r\n        sumaPreciosTotales += parseFloat(((item.precioUSDDetails) * cambioMoneda).toFixed(0)) * parseInt(item.cantidadProductoDetails);\r\n        sumaTransferencias += parseFloat(item.cantidadTransferencia);\r\n      }\r\n\r\n      // Validar y asignar transferencia\r\n      if (sumaPreciosTotales < sumaTransferencias) {\r\n        flag = false;\r\n        validarCampos += \"-La suma de las transferencias es mayor que la suma de los precios.\\n\";\r\n      } else {\r\n          // Ordenar los items por precio de mayor a menor\r\n          const itemsOrdenados = [...multiServiciosItems].sort((a, b) =>\r\n            parseFloat(b.precioUSDDetails) * b.cantidadProductoDetails - parseFloat(a.precioUSDDetails) * a.cantidadProductoDetails\r\n          );\r\n\r\n          let transferenciaRestante = sumaTransferencias;\r\n\r\n          // Redistribuir las transferencias\r\n          for (let i = 0; i < itemsOrdenados.length; i++) {\r\n            const item = itemsOrdenados[i];\r\n            const precioItem = parseFloat(((item.precioUSDDetails) * cambioMoneda).toFixed(0)) * parseInt(item.cantidadProductoDetails);\r\n\r\n            // Si es el último item, asignar todo lo que queda\r\n            if (i === itemsOrdenados.length - 1) {\r\n              item.cantidadTransferencia = transferenciaRestante;\r\n            } else {\r\n              // Asignar la transferencia máxima posible sin exceder el precio\r\n              item.cantidadTransferencia = Math.min(transferenciaRestante, precioItem);\r\n            }\r\n\r\n            // Actualizar la transferencia restante\r\n            transferenciaRestante -= item.cantidadTransferencia;\r\n          }\r\n\r\n          // Actualizar los items originales con las nuevas transferencias\r\n          setMltiServiciosItems(multiServiciosItems.map(item => {\r\n            const itemActualizado = itemsOrdenados.find(i => i.idProductoDetails === item.idProductoDetails);\r\n            return itemActualizado ? { ...item, cantidadTransferencia: itemActualizado.cantidadTransferencia } : item;\r\n          }));\r\n      }\r\n\r\n      if (flag) {\r\n        for (let i = 0; i < multiServiciosItems.length; i++) {\r\n          const item = multiServiciosItems[i];\r\n          const resultAddServicio = await addServicio(\r\n            usuario.token,\r\n            item.fecha,\r\n            item.precioUSDDetails,\r\n            item.notaDetails,\r\n            item.descripcionDetails,\r\n            idTiendaMultiDetails,\r\n            2,\r\n            item.costoPromedioProductoUSDDetails,\r\n            item.cantidadTransferencia,\r\n            idClienteMutiDetails,\r\n            \"Not suport yet\",\r\n            \"not suport yet\"\r\n          );\r\n          /*\r\n          if (resultAddServicio === false) {\r\n            setModalMensaje(\r\n              \"Ha ocurrido un ERROR al agregar el servicio. Es posible que el error haya ocurrido por problemas de conexión. Si el problema persiste contacte al administrador.\"\r\n            );\r\n            setIsBotonModalMesajeVisible(true);\r\n            setModalMensajeView(true);\r\n            setIsButtonDisabled(false);\r\n            return;\r\n          }\r\n            */\r\n\r\n          //Agregar Garantía si es que hay\r\n          if (item.isGarantiaDetails) {\r\n            await addGarantia(\r\n              usuario.token,\r\n              duracionGarantiaDetails,\r\n              resultAddServicio.id_servicio\r\n            );\r\n          }\r\n          // Agregar Deuda y pago de deuda si es que existen\r\n          if (item.isDeudaDetails) {\r\n            const resultDeuda = await addDeuda(\r\n              usuario.token,\r\n              item.precioUSDDetails,\r\n              resultAddServicio.id_servicio,\r\n              undefined\r\n            );\r\n            if (\r\n              item.adelantoUSDDeudaDetails &&\r\n              parseFloat(item.adelantoUSDDeudaDetails) > 0\r\n            ) {\r\n              await addPagoDeuda(\r\n                usuario.token,\r\n                item.adelantoUSDDeudaDetails,\r\n                item.fecha,\r\n                resultDeuda.id_deuda\r\n              );\r\n            }\r\n          }\r\n\r\n          //Agregar venta\r\n          await addVenta(\r\n            usuario.token,\r\n            item.idProductoDetails,\r\n            resultAddServicio.id_servicio,\r\n            item.cantidadProductoDetails\r\n          );\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            item.idProductoDetails,\r\n            idTiendaMultiDetails,\r\n            `${parseInt(item.cantidadProductoDetails)}`\r\n          );\r\n\r\n          // Machear producto\r\n          await matchProductoInTienda(usuario.token, item.idProductoDetails, idTiendaMultiDetails);\r\n\r\n          // Agregar Acción de usuario agregar servicio normal\r\n          const nombreCliente = dropdownItemsNombreCliente.find((element) => {\r\n            return element.value === idClienteMutiDetails;\r\n          });\r\n          const nombreTipoServicio = dropdownItemsNombreTipoServicio.find(\r\n            (element) => {\r\n              return parseInt(element.value) === 2;\r\n            }\r\n          );\r\n          const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n            return element.value === item.idProductoDetails;\r\n          });\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un servicio del tipo de servicio ${nombreTipoServicio?.label} al cliente ${nombreCliente?.label}. Se vendió una cantidad de ${item.cantidadProductoDetails} del producto ${nombreProducto?.label} a un precio de ${(parseFloat(item.precioUSDDetails) * cambioMoneda).toFixed(0)} CUP`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n          await createProductoInTienda(\r\n            usuario.token,\r\n            idTipoServicioDetails,\r\n            idTiendaMultiDetails\r\n          );\r\n        }\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`Las Ventas se agregaron con exito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setPrecioCUPDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setCostoPromedioProductoUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setNotaDetails(\"\");\r\n        setDescripcionDetails(\"\");\r\n        setDuracionGarantiaDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Agregar servicio a la lista de servoicio a la lista para venta multiples\r\n  const addNewMultiServicioToList = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando servicio a la lista. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR SERVICIO. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (\r\n        costoPromedioProductoUSDDetails === \"\" ||\r\n        costoPromedioProductoUSDDetails === undefined\r\n      ) {\r\n        flag = false;\r\n        validarCampos += \"-Digite el costo del servicio.\\n\";\r\n      }\r\n      if (\r\n        parseFloat(precioUSDDetails) !== parseFloat(precioUSDDetailsAuxVal) &&\r\n        descripcionDetails === \"\"\r\n      ) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Si cambia el precio original del producto debe proporcionar una descripcipón del porque.\\n\";\r\n      }\r\n      if (\r\n        precioUSDDetails === \"\" ||\r\n        costoPromedioProductoUSDDetails === undefined\r\n      ) {\r\n        flag = false;\r\n        validarCampos += \"-Defina el precio cobrado al cliente.\\n\";\r\n      }\r\n      if (isGarantiaDetails && duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      // Validaciones si es una venta\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        if (idProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos += \"-Seleccione un producto para vender.\\n\";\r\n        }\r\n        if (cantidadProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Defina la cantidad que desea vender del producto.\\n\";\r\n        }\r\n      }\r\n      // Validacion si es un encargo\r\n      if (parseInt(idTipoServicioDetails) === 26) {\r\n        const fechaBase = new Date(\r\n          `${fechaAnnoDetails}-${fechaMesDetails}-${fechaDiaDetails}`\r\n        );\r\n        const fechaEncargo = new Date(\r\n          `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`\r\n        );\r\n\r\n        if (parseInt(idClienteDetails) === 1) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-No se puede hacer un encargo al cliente Anónimo.\\n\";\r\n        }\r\n        if (fechaEncargo < fechaBase) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La fecha del encargo no puede ser menor que la fecha del servicio.\\n\";\r\n        }\r\n      }\r\n      // Validacion de deuda\r\n      if (isDeudaDetails && !isEncargoProducto) {\r\n        if (\r\n          parseFloat(adelantoUSDDeudaDetails) >\r\n          parseFloat(precioUSDDetails) * cambioMoneda\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-El adelanto inicial de la deuda es mayor que el monto a cobrar por el servicio.\\n\";\r\n        }\r\n        if (parseInt(idClienteDetails) === 1) {\r\n          flag = false;\r\n          validarCampos += \"-El cliente Anónimo no puede tener deudas\";\r\n        }\r\n      }\r\n\r\n      if (flag) {\r\n        let detallesSingleServiceItem: any = {\r\n          fecha: `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          precioUSDDetails: precioUSDDetails,\r\n          notaDetails: notaDetails,\r\n          descripcionDetails: descripcionDetails,\r\n          costoPromedioProductoUSDDetails: costoPromedioProductoUSDDetails,\r\n          id:\r\n            multiServiciosItems.length === 0\r\n              ? 1\r\n              : Math.max(...multiServiciosItems.map((item) => item.id)) + 1,\r\n          cantidadTransferencia:\r\n            cantidadTransferencia === \"\" ? \"0\" : cantidadTransferencia,\r\n        };\r\n        //Agregar Garantía si es que hay\r\n        if (isGarantiaDetails) {\r\n          detallesSingleServiceItem = {\r\n            ...detallesSingleServiceItem,\r\n            isGarantiaDetails: isGarantiaDetails,\r\n            duracionGarantiaDetails: duracionGarantiaDetails,\r\n          };\r\n        }\r\n\r\n        // Agregar Deuda y pago de deuda si es que existen\r\n        if (isDeudaDetails) {\r\n          detallesSingleServiceItem = {\r\n            ...detallesSingleServiceItem,\r\n            isDeudaDetails: isDeudaDetails,\r\n          };\r\n          if (\r\n            adelantoUSDDeudaDetails &&\r\n            parseFloat(adelantoUSDDeudaDetails) > 0\r\n          ) {\r\n            detallesSingleServiceItem = {\r\n              ...detallesSingleServiceItem,\r\n              adelantoUSDDeudaDetails: adelantoUSDDeudaDetails,\r\n            };\r\n          }\r\n        }\r\n\r\n        //Agregar venta\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoDetails;\r\n        });\r\n        detallesSingleServiceItem = {\r\n          ...detallesSingleServiceItem,\r\n          idProductoDetails: idProductoDetails,\r\n          cantidadProductoDetails: cantidadProductoDetails,\r\n          nombreProducto: nombreProducto?.label,\r\n        };\r\n        setMltiServiciosItems([\r\n          ...multiServiciosItems,\r\n          detallesSingleServiceItem,\r\n        ]);\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El servicio se agregó a la lista`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(false);\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setPrecioCUPDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setCostoPromedioProductoUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setNotaDetails(\"\");\r\n        setDescripcionDetails(\"\");\r\n        setDuracionGarantiaDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewServicio = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando servicio. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      const auxIsProductoInTienda = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR SERVICIO. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (\r\n        costoPromedioProductoUSDDetails === \"\" ||\r\n        costoPromedioProductoUSDDetails === undefined\r\n      ) {\r\n        flag = false;\r\n        validarCampos += \"-Digite el costo del servicio.\\n\";\r\n      }\r\n      if (\r\n        parseFloat(precioUSDDetails) !== parseFloat(precioUSDDetailsAuxVal) &&\r\n        descripcionDetails === \"\"\r\n      ) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Si cambia el precio original del producto debe proporcionar una descripcipón del porque.\\n\";\r\n      }\r\n      if (\r\n        precioUSDDetails === \"\" ||\r\n        costoPromedioProductoUSDDetails === undefined\r\n      ) {\r\n        flag = false;\r\n        validarCampos += \"-Defina el precio cobrado al cliente.\\n\";\r\n      }\r\n      if (idClienteDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione un cliente. Si no hay datos del cliente seleccione anónimo\\n\";\r\n      }\r\n      if (idTipoServicioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione el tipo de servicio que está ofreciendo.\\n\";\r\n      }\r\n      if (isGarantiaDetails && duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (isGarantiaDetails && parseInt(idClienteDetails) === 1) {\r\n        flag = false;\r\n        validarCampos += \"-El ciente Anónimo no puede tener garantías\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (\r\n        parseFloat(cantidadTransferencia) >\r\n        parseFloat(precioCUPDetails) * parseInt(cantidadProductoDetails)\r\n      ) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-La cantidad de la transferencia es mayor que el precio del producto. \\n\";\r\n      }\r\n      if (auxIsProductoInTienda) {\r\n        if (\r\n          parseInt(auxIsProductoInTienda.cantidad) <\r\n          parseInt(cantidadProductoDetails)\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que desea vender es mayor que la cantidad que hay en la tienda.\\n\";\r\n        }\r\n      }\r\n      // Validaciones si es una venta\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        if (idProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos += \"-Seleccione un producto para vender.\\n\";\r\n        }\r\n        if (cantidadProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Defina la cantidad que desea vender del producto.\\n\";\r\n        }\r\n      }\r\n      // Validacion si es un encargo\r\n      if (parseInt(idTipoServicioDetails) === 26) {\r\n        const fechaBase = new Date(\r\n          `${fechaAnnoDetails}-${fechaMesDetails}-${fechaDiaDetails}`\r\n        );\r\n        const fechaEncargo = new Date(\r\n          `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`\r\n        );\r\n\r\n        if (parseInt(idClienteDetails) === 1) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-No se puede hacer un encargo al cliente Anónimo.\\n\";\r\n        }\r\n        if (fechaEncargo < fechaBase) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La fecha del encargo no puede ser menor que la fecha del servicio.\\n\";\r\n        }\r\n      }\r\n      // Validacion de deuda\r\n      if (isDeudaDetails && !isEncargoProducto) {\r\n        if (\r\n          parseFloat(adelantoUSDDeudaDetails) > parseFloat(precioUSDDetails)\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-El adelanto inicial de la deuda es mayor que el monto a cobrar por el servicio.\\n\";\r\n        }\r\n        if (parseInt(idClienteDetails) === 1) {\r\n          flag = false;\r\n          validarCampos += \"-El cliente Anónimo no puede tener deudas\";\r\n        }\r\n      }\r\n\r\n      if (flag) {\r\n        const resultAddServicio = await addServicio(\r\n          usuario.token,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          precioUSDDetails,\r\n          notaDetails,\r\n          descripcionDetails,\r\n          idTiendaDetails,\r\n          idTipoServicioDetails,\r\n          costoPromedioProductoUSDDetails,\r\n          cantidadTransferencia === \"\" ? \"0\" : cantidadTransferencia,\r\n          idClienteDetails,\r\n          \"Not suport yet\",\r\n          \"not suport yet\"\r\n        );\r\n\r\n\r\n        if (resultAddServicio === false) {\r\n          setModalMensaje(\r\n            \"Ha ocurrido un ERROR al agregar el servicio. Es posible que el error haya ocurrido por problemas de conexión. Si el problema persiste contacte al administrador.\"\r\n          );\r\n          setIsBotonModalMesajeVisible(true);\r\n          setModalMensajeView(true);\r\n          setIsButtonDisabled(false);\r\n          return;\r\n        }\r\n\r\n        //Agregar Garantía si es que hay\r\n        if (isGarantiaDetails) {\r\n          await addGarantia(\r\n            usuario.token,\r\n            duracionGarantiaDetails,\r\n            resultAddServicio.id_servicio\r\n          );\r\n        }\r\n        // Agregar Deuda y pago de deuda si es que existen\r\n        if (isDeudaDetails) {\r\n          const resultDeuda = await addDeuda(\r\n            usuario.token,\r\n            precioUSDDetails,\r\n            resultAddServicio.id_servicio,\r\n            undefined\r\n          );\r\n          if (\r\n            adelantoUSDDeudaDetails &&\r\n            parseFloat(adelantoUSDDeudaDetails) > 0\r\n          ) {\r\n            await addPagoDeuda(\r\n              usuario.token,\r\n              adelantoUSDDeudaDetails,\r\n              `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n              resultDeuda.id_deuda\r\n            );\r\n          }\r\n        }\r\n\r\n        //Agregar venta si es que es necezario\r\n        if (\r\n          parseInt(idTipoServicioDetails) === 2 ||\r\n          parseInt(idTipoServicioDetails) === 25\r\n        ) {\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            resultAddServicio.id_servicio,\r\n            cantidadProductoDetails\r\n          );\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n\r\n          // Mcahear datos de la cantidad del producto\r\n          await matchProductoInTienda(usuario.token, idProductoDetails, idTiendaDetails);\r\n\r\n          // Agregar Acción de usuario agregar servicio normal\r\n          const nombreCliente = dropdownItemsNombreCliente.find((element) => {\r\n            return element.value === idClienteDetails;\r\n          });\r\n          const nombreTipoServicio = dropdownItemsNombreTipoServicio.find(\r\n            (element) => {\r\n              return element.value === idTipoServicioDetails;\r\n            }\r\n          );\r\n          const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n            return element.value === idProductoDetails;\r\n          });\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un servicio del tipo de servicio ${nombreTipoServicio?.label} al cliente ${nombreCliente?.label}. Se vendió una cantidad de ${cantidadProductoDetails} del producto ${nombreProducto?.label} a un precio de ${(parseFloat(precioUSDDetails) * cambioMoneda).toFixed(0)} CUP`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        } else {\r\n          // Si no es venta de ningun tipo comprobar si es encargo\r\n          if (parseInt(idTipoServicioDetails) === 26) {\r\n            await addEncargo(\r\n              usuario.token,\r\n              adelantoEncargo,\r\n              `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`,\r\n              resultAddServicio.id_servicio\r\n            );\r\n          }\r\n\r\n          // Agregar Acción de usuario agregar servicio normal\r\n          const nombreCliente = dropdownItemsNombreCliente.find((element) => {\r\n            return element.value === idClienteDetails;\r\n          });\r\n          const nombreTipoServicio = dropdownItemsNombreTipoServicio.find(\r\n            (element) => {\r\n              return element.value === idTipoServicioDetails;\r\n            }\r\n          );\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un servicio del tipo de servicio ${nombreTipoServicio?.label} a un precio de ${(parseFloat(precioUSDDetails) * cambioMoneda).toFixed(0)} USD al cliente ${nombreCliente?.label}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        }\r\n\r\n        await createProductoInTienda(\r\n          usuario.token,\r\n          idTipoServicioDetails,\r\n          idTiendaDetails\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El servicio se agregó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setPrecioCUPDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setCostoPromedioProductoUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setNotaDetails(\"\");\r\n        setDescripcionDetails(\"\");\r\n        setDuracionGarantiaDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarServicioFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando servicio. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let cantidadEnTiendaNueva: number = 0;\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      if (result) {\r\n        cantidadEnTiendaNueva = result.cantidad;\r\n      }\r\n\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR EL SERVICIO. Compruebe los siguientes campos:\\n\";\r\n\r\n      if (idClienteDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione un cliente. Si no hay datos del cliente seleccione anónimo\\n\";\r\n      }\r\n      if (idTipoServicioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione el tipo de servicio que está ofreciendo.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (\r\n        parseFloat(cantidadTransferencia) >\r\n        parseFloat(precioCUPDetails) * parseInt(cantidadProductoDetails)\r\n      ) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-La cantidad de la transferencia es mayor que el precio del producto. \\n\";\r\n      }\r\n      if (isGarantiaDetails && duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (costoPromedioProductoUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Digite el costo del servicio.\\n\";\r\n      }\r\n      if (precioUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina el precio cobrado al cliente.\\n\";\r\n      }\r\n      if (isGarantiaDetails && duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (isGarantiaDetails && parseInt(idClienteDetails) === 1) {\r\n        flag = false;\r\n        validarCampos += \"-El ciente Anónimo no puede tener garantías\";\r\n      }\r\n      // Validacion si es un encargo\r\n      if (parseInt(idTipoServicioDetails) === 26) {\r\n        const fechaBase = new Date(\r\n          `${fechaAnnoDetails}-${fechaMesDetails}-${fechaDiaDetails}`\r\n        );\r\n        const fechaEncargo = new Date(\r\n          `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`\r\n        );\r\n\r\n        if (parseInt(idClienteDetails) === 1) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-No se puede hacer un encargo al cliente Anónimo.\\n\";\r\n        }\r\n        if (fechaEncargo < fechaBase) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La fecha del encargo no puede ser menor que la fecha del servicio.\\n\";\r\n        }\r\n      }\r\n      // Validaciones si es una venta\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        if (idProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos += \"-Seleccione un producto para vender.\\n\";\r\n        }\r\n        if (cantidadProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Defina la cantidad que desea vender del producto.\\n\";\r\n        }\r\n      }\r\n      // validación de campos avanzada\r\n      if (\r\n        cantidadEnTiendaNueva + parseInt(cantidadProductoDetailsViejo) <\r\n        parseInt(cantidadProductoDetails)\r\n      ) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-La cantidad que desea modificar es mayor que la cantidad que hay en la tienda.\\n\";\r\n      }\r\n      // se modificó solo la cantidad del producto\r\n      if (\r\n        (cantidadProductoDetails !== cantidadProductoDetailsViejo &&\r\n          idProductoDetails === idProductoDetailsViejo &&\r\n          idTiendaDetails === idTiendaDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 2) ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        if (\r\n          cantidadEnTiendaNueva + parseInt(cantidadProductoDetailsViejo) <\r\n          parseInt(cantidadProductoDetailsViejo) -\r\n          parseInt(cantidadProductoDetails)\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que hay en la tienda no es suficiente para modificar la venta del producto.\\n\";\r\n        }\r\n      } else if (\r\n        idProductoDetails !== idProductoDetailsViejo ||\r\n        idTiendaDetails !== idTiendaDetailsViejo\r\n      ) {\r\n        if (cantidadEnTiendaNueva < parseInt(cantidadProductoDetails)) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que hay en la tienda no es suficiente para modificar la venta del producto.\\n\";\r\n        }\r\n      }\r\n      if (flag) {\r\n        await modificarServicio(\r\n          usuario.token,\r\n          idServicioDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          precioUSDDetails,\r\n          notaDetails,\r\n          idTiendaDetails,\r\n          idTipoServicioDetails,\r\n          costoPromedioProductoUSDDetails,\r\n          cantidadTransferencia === \"\" ? \"0\" : cantidadTransferencia,\r\n          devueltoDetails === \"devolver\",\r\n          idClienteDetails,\r\n          \"Not suport yet\",\r\n          \"not suport yet\"\r\n        );\r\n\r\n        // Actualizar Garantía\r\n        if (\r\n          isGarantiaDetails !== isGarantiaDetailsViejo ||\r\n          duracionGarantiaDetails !== duracionGarantiaDetailsVieja\r\n        ) {\r\n          if (isGarantiaDetails) {\r\n            if (idGarantiaDetails !== \"\") {\r\n              await modificarGarantia(\r\n                usuario.token,\r\n                duracionGarantiaDetails,\r\n                idServicioDetails,\r\n                idGarantiaDetails\r\n              );\r\n            } else {\r\n              await addGarantia(\r\n                usuario.token,\r\n                duracionGarantiaDetails,\r\n                idServicioDetails\r\n              );\r\n            }\r\n          } else {\r\n            await deleteGarantia(usuario.token, idGarantiaDetails);\r\n          }\r\n        }\r\n        // Actualizar encargo\r\n        if (\r\n          idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetailsViejo) === 26\r\n        ) {\r\n          await deleteEncargo(usuario.token, idEncargoDetails);\r\n        } else if (\r\n          idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 26\r\n        ) {\r\n          await addEncargo(\r\n            usuario.token,\r\n            adelantoEncargo,\r\n            `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`,\r\n            idServicioDetails\r\n          );\r\n        } else if (\r\n          idTipoServicioDetails === idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 26\r\n        ) {\r\n          await modificarEncargo(\r\n            usuario.token,\r\n            adelantoEncargo,\r\n            `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`,\r\n            idServicioDetails,\r\n            idEncargoDetails\r\n          );\r\n        }\r\n        // Si se cambio de tipo de servicio venta a otro\r\n        if (\r\n          parseInt(idTipoServicioDetailsViejo) === 2 &&\r\n          parseInt(idTipoServicioDetails) !== 2 &&\r\n          parseInt(idTipoServicioDetails) !== 4\r\n        ) {\r\n          // Se suma la cantidad de la venta pasada en la tienda\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // Se elimina la venta\r\n          await deleteVenta(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idServicioDetails\r\n          );\r\n        }\r\n\r\n        // Comprobar si solamente se cambio la cantidad si es que el tip ode sericio viejo era ya una venta\r\n        if (\r\n          cantidadProductoDetails !== cantidadProductoDetailsViejo &&\r\n          idProductoDetails === idProductoDetailsViejo &&\r\n          idTiendaDetails === idTiendaDetailsViejo\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails) -\r\n            parseInt(cantidadProductoDetailsViejo)\r\n            }`\r\n          );\r\n          // Agregar o sobreescrivir la venta\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // Si no es el caso se modificó el id del producto o l tienda volviendo para atras la venta a la tienda y haciendola denuevo con lso nuevos datos de la venta\r\n        } else if (\r\n          (idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n            parseInt(idTipoServicioDetails) === 2) ||\r\n          parseInt(idTipoServicioDetails) === 25\r\n        ) {\r\n          // Agregar o sobreescrivir la venta\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // sumar en la tienda la cantidad vieja del producto para volver atras la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // restar en la tienda nueva o vieja donde se este haciendo la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        } else if (\r\n          idTiendaDetails !== idTiendaDetailsViejo ||\r\n          idProductoDetails !== idProductoDetailsViejo\r\n        ) {\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // sumar en la tienda la cantidad vieja del producto para volver atras la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // restar en la tienda nueva o vieja donde se este haciendo la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        }\r\n\r\n        // Si es una devolucion y ademas el tipo de servicio actual es una venta se devuelve la cantidad a la tienda\r\n        if (\r\n          devueltoDetails !== devueltoDetailsViejo &&\r\n          devueltoDetails === \"devolver\" &&\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 25)\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails) * -1}`\r\n          );\r\n        } else if (\r\n          devueltoDetails !== devueltoDetailsViejo &&\r\n          devueltoDetails === \"sin devolver\" &&\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 25)\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        }\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó un servicio de originalmente ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          7\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El servicio se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarServicioFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando servicio. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR SERVICIO. Compruebe los siguientes parámetros:\\n\";\r\n\r\n      if (flag) {\r\n        const resultServicio = await getServicioByID(\r\n          usuario.token,\r\n          idServicioDetails\r\n        );\r\n        const resultventa = await getVentaByIDOfServicio(\r\n          usuario.token,\r\n          idServicioDetails\r\n        );\r\n        // Eliminar Garantía si es que existe\r\n        if (isGarantiaDetailsViejo) {\r\n          await deleteGarantia(usuario.token, idGarantiaDetails);\r\n        }\r\n        // Eliminar deuda\r\n        if (idDeudaDetails !== \"\") {\r\n          const resultDeuda = await getDeudaByID(usuario.token, idDeudaDetails);\r\n          if (\r\n            Array.isArray(resultDeuda.deuda.pagos_deuda) &&\r\n            resultDeuda.deuda.pagos_deuda.length > 0\r\n          ) {\r\n            // Eliminar los pagoDeuda\r\n            resultDeuda.deuda.pagos_deuda.map(async (pagoDeuda: any) => {\r\n              await deletePagoDeuda(usuario.token, pagoDeuda.id_pago_deuda);\r\n            });\r\n          }\r\n          await deleteDeuda(usuario.token, idDeudaDetails);\r\n        }\r\n        // Eliminar Encargo\r\n        // Actualizar encargo\r\n        if (parseInt(idTipoServicioDetailsViejo) === 26) {\r\n          await deleteEncargo(usuario.token, idEncargoDetails);\r\n        }\r\n        // Eliminar la venta y sumar en proucto tienda si es que era una venta y no se havia echo devolución\r\n        if (\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 25) &&\r\n          devueltoDetailsViejo === \"sin devolver\"\r\n        ) {\r\n          await deleteVenta(\r\n            usuario.token,\r\n            resultventa.producto.id_producto,\r\n            resultServicio.id_servicio\r\n          );\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            resultventa.producto.id_producto,\r\n            resultServicio.tienda.id_tienda,\r\n            `${parseInt(resultventa.cantidad) * -1}`\r\n          );\r\n        } else if (\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 25) &&\r\n          devueltoDetailsViejo === \"devolver\"\r\n        ) {\r\n          // Solo se elimina la venta porque ya se sumó en producto tienda si es devolución\r\n          await deleteVenta(\r\n            usuario.token,\r\n            resultventa.producto.id_producto,\r\n            resultServicio.id_servicio\r\n          );\r\n        }\r\n        await deleteServicio(usuario.token, idServicioDetails);\r\n\r\n        if (parseInt(idServicioDetails) === 2) {\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la el servicio de venta de la tienda ${resultServicio.tienda.nombre}. La venta eliminada fue del producto ${nombreClienteSearch}, se sumo una canidad de ${resultventa.cantidad} nuevamente en la tienda cuyo producto valía ${(resultventa.precio * cambioMoneda).toFixed(0)} y se vendió una cantidad de ${resultventa.cantidad}.`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        } else {\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la un servicio de la tienda ${resultServicio.tienda.nombre} por el cual se había cobrado ${(resultServicio.precio * cambioMoneda).toFixed(0)} y tenía un costo de ${resultServicio.costo}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        }\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El servicio se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setPrecioCUPDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setCostoPromedioProductoUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setNotaDetails(\"\");\r\n        setDescripcionDetails(\"\");\r\n        setDuracionGarantiaDetails(\"\");\r\n\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre Cliente\",\r\n    \"Tienda\",\r\n    \"Tipo de Servicio\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"P.Unitario\",\r\n    \"P.total CUP\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre Cliente\",\r\n    \"Tienda\",\r\n    \"Tipo de Servicio\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"P.Unitario\",\r\n    \"P.total CUP\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarServicio && (\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                setIsModalAddMultiServicio(!isModalAddMultiServicio)\r\n              }\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"40%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                  styles.radioButtonSelected &&\r\n                  styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Multiples Ventas\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          {isPermisoAgregarServicio && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"40%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Venta</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableServicios\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearsh}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Cliente:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del cliente\"\r\n                    value={nombreClienteSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreClienteSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Tipo de Servicio:\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadTipoServicioSearsh,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={idTipoServicioSearch}\r\n                      placeholder=\"Seleccione un tipo de servicio\"\r\n                      setValue={setIdTipoServicioSearch}\r\n                      items={dropdownItemsNombreTipoServicio}\r\n                      direction=\"BOTTOM\"\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioSearsh\")\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {isPermisoServicioGeneral && (\r\n                    <View style={styles.separatorBlanco} />\r\n                  )}\r\n\r\n                  {isPermisoServicioGeneral && (\r\n                    <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n                  )}\r\n                  {isPermisoServicioGeneral && (\r\n                    <View\r\n                      style={{\r\n                        width: \"100%\",\r\n                        zIndex: capaPrioridadTiendaSearsh,\r\n                        position: \"relative\",\r\n                      }}\r\n                    >\r\n                      <CustomDropdown\r\n                        value={idTiendaSearch}\r\n                        placeholder=\"Seleccione un tienda\"\r\n                        setValue={setIdTiendaSearch}\r\n                        items={dropdownItemsNombreTienda}\r\n                        direction=\"BOTTOM\"\r\n                        onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Rango de Precio en CUP:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyDesktop}\r\n                      placeholder=\"Desde\"\r\n                      value={rangoPrecioDesdeSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyDesktop}\r\n                      placeholder=\"Hasta\"\r\n                      value={rangoPrecioHastaSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioHastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaDesdeSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaHastaSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() =>\r\n                          filtrarYOrdenarServicios(\r\n                            `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                            `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                          )\r\n                        }\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n\r\n        {/*Multi add servicio */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalAddMultiServicio}\r\n          animationType=\"fade\"\r\n          onRequestClose={() => {\r\n            setIsModalAddMultiServicio(!isModalAddMultiServicio);\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={() => {\r\n                  setIsModalAddMultiServicio(!isModalAddMultiServicio);\r\n                }}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Venta\"\r\n                  : \"Datos de las Ventas\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Cliente */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idClienteMutiDetails}\r\n                    placeholder=\"Seleccione un Cliente\"\r\n                    setValue={setIdClienteMultiDetails}\r\n                    items={dropdownItemsNombreCliente}\r\n                    searchable={true}\r\n                    readOnly={\r\n                      !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                    }\r\n                    onDropdownOpen={() => controlarCapas(\"ClienteDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre de la Tienda */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Tienda donde se creará la venta\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idTiendaMultiDetails}\r\n                    placeholder=\"Seleccione una tienda\"\r\n                    setValue={setIdTiendaMultiDetails}\r\n                    items={dropdownItemsNombreTienda}\r\n                    readOnly={\r\n                      !(isPermisoServicioGeneral &&\r\n                        modalEntradasDates?.id_entrada === \"\"\r\n                        ? true\r\n                        : isPermisoServicioGeneral &&\r\n                        isPermisoModificarServicio)\r\n                    }\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"TipoServicioDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Lista de servicios */}\r\n                <View\r\n                  style={{\r\n                    width: \"90%\",\r\n                    zIndex: 500,\r\n                    position: \"relative\",\r\n                    marginTop: \"2%\",\r\n                  }}\r\n                >\r\n                  {/*Boton para agregar un servicio a la lista */}\r\n                  <TouchableOpacity\r\n                    onPress={() => auxSetModalServicioSingleDates()}\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      height: 10,\r\n                      width: 100,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      borderColor: Colors.azul_Claro,\r\n                      borderWidth: 3,\r\n                      padding: 10,\r\n                      borderRadius: 10,\r\n                      marginBottom: \"2%\",\r\n                      backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 20,\r\n                        color: Colors.blanco,\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                        textShadowOffset: { width: 1, height: 1 },\r\n                        textShadowRadius: 2,\r\n                        marginBottom: \"10%\",\r\n                      }}\r\n                    >\r\n                      +\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      padding: 10,\r\n                      borderBottomWidth: 1,\r\n                      borderBottomColor: Colors.gris_claro,\r\n                      backgroundColor: Colors.gris_claro,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 12,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        Producto\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 12,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        Precio\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 12,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        Cantidad\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 12,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        Total\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 12,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      ></Text>\r\n                    </View>\r\n                  </View>\r\n                  {multiServiciosItems.length > 0 ? (\r\n                    <FlatList\r\n                      data={multiServiciosItems}\r\n                      renderItem={({ item, index }) => (\r\n                        <TouchableOpacity\r\n                          onPress={() => console.log(multiServiciosItems)}\r\n                        >\r\n                          <View\r\n                            style={{\r\n                              width: \"100%\",\r\n                              padding: 10,\r\n                              borderBottomWidth: 1,\r\n                              borderBottomColor: Colors.gris_claro,\r\n                            }}\r\n                          >\r\n                            <View\r\n                              style={{\r\n                                flexDirection: \"row\",\r\n                                justifyContent: \"space-between\",\r\n                              }}\r\n                            >\r\n                              <Text\r\n                                style={{\r\n                                  fontSize: 12,\r\n                                  marginTop: \"10%\",\r\n                                  color: Colors.negro,\r\n                                  width: \"43%\", // Establece un ancho fijo para el nombre del producto\r\n                                  ellipsizeMode: \"tail\", // Trunca el texto si es demasiado largo\r\n                                }}\r\n                              >\r\n                                {item.nombreProducto}\r\n                              </Text>\r\n                              <Text\r\n                                style={{\r\n                                  fontSize: 12,\r\n                                  marginTop: \"10%\",\r\n                                  color: Colors.negro,\r\n                                  width: \"35%\", // Establece un ancho fijo para el precio del producto\r\n                                }}\r\n                              >\r\n                                {(item.precioUSDDetails * cambioMoneda).toFixed(\r\n                                  0\r\n                                )}\r\n                              </Text>\r\n                              <Text\r\n                                style={{\r\n                                  fontSize: 12,\r\n                                  marginTop: \"10%\",\r\n                                  color: Colors.negro,\r\n                                  marginRight: \"10%\",\r\n                                  width: \"10%\", // Establece un ancho fijo para la cantidad del producto\r\n                                }}\r\n                              >\r\n                                {item.cantidadProductoDetails}\r\n                              </Text>\r\n                              <Text\r\n                                style={{\r\n                                  fontSize: 12,\r\n                                  marginTop: \"10%\",\r\n                                  color: Colors.negro,\r\n                                  marginRight: \"5%\",\r\n                                  width: \"10%\", // Establece un ancho fijo para el precio del producto\r\n                                }}\r\n                              >\r\n                                {(\r\n                                  item.precioUSDDetails *\r\n                                  item.cantidadProductoDetails *\r\n                                  cambioMoneda\r\n                                ).toFixed(0)}\r\n                              </Text>\r\n                              <TouchableOpacity\r\n                                style={{\r\n                                  backgroundColor: \"red\",\r\n                                  padding: 10,\r\n                                  marginTop: \"10%\",\r\n                                  borderRadius: 5,\r\n                                }}\r\n                                onPress={() => {\r\n                                  const index = multiServiciosItems.findIndex(\r\n                                    (item) => item.id === item.id\r\n                                  );\r\n                                  if (index !== -1) {\r\n                                    multiServiciosItems.splice(index, 1);\r\n                                    setMltiServiciosItems([\r\n                                      ...multiServiciosItems,\r\n                                    ]);\r\n                                  }\r\n                                }}\r\n                              >\r\n                                <Image\r\n                                  source={require(\"../images/delete.png\")}\r\n                                  style={{\r\n                                    width: 15,\r\n                                    height: 15,\r\n                                  }}\r\n                                />\r\n                              </TouchableOpacity>\r\n                            </View>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                      keyExtractor={(item, index) => index.toString()}\r\n                    />\r\n                  ) : (\r\n                    <Text style={{ fontSize: 12, color: Colors.negro }}></Text>\r\n                  )}\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      padding: 10,\r\n                      borderBottomWidth: 1,\r\n                      borderBottomColor: Colors.gris_claro,\r\n                      backgroundColor: Colors.gris_claro,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 12,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      ></Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 12,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        Total Transferencia:{\" \"}\r\n                        {multiServiciosItems.reduce(\r\n                          (total, item) =>\r\n                            total + parseFloat(item.cantidadTransferencia),\r\n                          0\r\n                        )}\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 12,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        Total Efectivo:{\" \"}\r\n                        {(\r\n                          multiServiciosItems.reduce(\r\n                            (total, item) =>\r\n                              total +\r\n                              parseFloat(item.precioUSDDetails) *\r\n                              parseInt(item.cantidadProductoDetails),\r\n                            0\r\n                          ) *\r\n                          cambioMoneda -\r\n                          multiServiciosItems.reduce(\r\n                            (total, item) =>\r\n                              total + parseFloat(item.cantidadTransferencia),\r\n                            0\r\n                          )\r\n                        ).toFixed(0)}\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 12,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        Total:{\" \"}\r\n                        {(\r\n                          multiServiciosItems.reduce(\r\n                            (total, item) =>\r\n                              total +\r\n                              item.precioUSDDetails *\r\n                              item.cantidadProductoDetails,\r\n                            0\r\n                          ) * cambioMoneda\r\n                        ).toFixed(0)}\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 12,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      ></Text>\r\n                    </View>\r\n                  </View>\r\n\r\n                  {/*Boton para agregar un servicio a la lista */}\r\n                  <TouchableOpacity\r\n                    onPress={() => addNewMultiServicio()}\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      height: 15,\r\n                      width: 210,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      borderColor: Colors.azul_Claro,\r\n                      borderWidth: 3,\r\n                      padding: 10,\r\n                      borderRadius: 10,\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Colors.blanco,\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                        textShadowOffset: { width: 1, height: 1 },\r\n                        textShadowRadius: 2,\r\n                      }}\r\n                    >\r\n                      Agregar Ventas al Sistema\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal para agregar multiples servicios de uno en uno  */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalAddMultiServicioSingle}\r\n          animationType=\"fade\"\r\n          onRequestClose={auxSetModalServicioSingleDates}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={auxSetModalServicioSingleDates}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {\"Agregar Venta a la Lista\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: 500,\r\n                  }}\r\n                >\r\n                  {/* Garantías */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    {isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Adelanto del encargo\r\n                      </Text>\r\n                    )}\r\n                    {isEncargoProducto && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={adelantoEncargo}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n                          setAdelantoEncargo(validNumericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={true}\r\n                        placeholder=\"Adelanto del encargo\"\r\n                      />\r\n                    )}\r\n\r\n                    <View style={{ marginTop: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad Pagada por Transferencia CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={cantidadTransferencia}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n                          setCantidadTransferencia(validNumericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad Pagada por Transferencia CUP\"\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  {/*  */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    {true && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Genera Deuda\r\n                      </Text>\r\n                    )}\r\n                    {true && (\r\n                      <CustomRadioButtonSingle\r\n                        onPress={() => setIsDeudaDetails(!isDeudaDetails)}\r\n                        selected={isDeudaDetails}\r\n                        label=\"Deuda\"\r\n                      />\r\n                    )}\r\n\r\n                    {isDateLoaded && isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Fecha llegada\r\n                      </Text>\r\n                    )}\r\n                    {isDateLoaded && isEncargoProducto && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetailsEncargo}\r\n                        monthValue={fechaMesDetailsEncargo}\r\n                        yearValue={fechaAnnoDetailsEncargo}\r\n                        onDayChange={setFechaDiaDetailsEncargo}\r\n                        onMonthChange={setFechaMesDetailsEncargo}\r\n                        onYearChange={setFechaAnnoDetailsEncargo}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n\r\n\r\n                    {!isEncargoProducto && isDeudaDetails && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Adelanto inicial de la deuda en CUP:\r\n                      </Text>\r\n                    )}\r\n                    {!isEncargoProducto && isDeudaDetails && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={adelantoCUPDeudaDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          setAdelantoCUPDeudaDetails(validNumericValue);\r\n                          const costoUSD =\r\n                            parseFloat(validNumericValue) / cambioMoneda;\r\n                          setAdelantoUSDDeudaDetails(costoUSD.toFixed(5));\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Adelanto\"\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdownDetails\r\n                      value={idProductoDetails}\r\n                      placeholder=\"Seleccione un produto\"\r\n                      setValue={setIdProductoDetails}\r\n                      items={dropdownItemsNombreproducto}\r\n                      searchable={true}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      onDropdownOpen={() => controlarCapas(\"ProductoDetails\")}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={cantidadProductoDetails}\r\n                        onChangeText={(text) => {\r\n                          // Filtra caracteres no numéricos\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                          setCantidadProductoDetails(numericValue);\r\n                        }}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad del producto\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoUSDDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoCUPDetails(\r\n                              String(\r\n                                (\r\n                                  parseFloat(validNumericValue) * cambioMoneda\r\n                                ).toFixed(0)\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoCUPDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoUSDDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoUSD\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 || parseInt(idTipoServicioDetails) === 25 ? ((parseInt(usuario?.id_usuario) === 1 || parseInt(usuario?.id_usuario) === 2) ? true : false) : isPermisoModificarServicio || isPermisoServicioLocal}\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoCUPDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoUSDDetails(\r\n                              String(\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoUSDDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoCUPDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoCUP\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                            parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                            isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModalNOEDITABLE}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioUSDDetails(\r\n                            String(\r\n                              (\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              ).toFixed(5)\r\n                            )\r\n                          );\r\n                        } else {\r\n                          setPrecioUSDDetails(\"0\");\r\n                        }\r\n                        setPrecioCUPDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioCUP\");\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en cup\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\", // Para separar los campos de forma uniforme\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      paddingHorizontal: 10,\r\n                    }}\r\n                  >\r\n                    <Text>{mensajeSumaVenta()}</Text>\r\n                  </View>\r\n                )}\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={notaDetails}\r\n                      onChangeText={setNotaDetails}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Nota\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del servicio\"\r\n                  multiline={true}\r\n                  editable={\r\n                    isPermisoModificarServicio || isPermisoServicioLocal\r\n                  }\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para agregar proveedor */}\r\n                  {true && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        borderRadius: 15,\r\n                        width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: \"#000\",\r\n                        marginLeft: \"5%\",\r\n                        shadowOffset: { width: 3, height: 4 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        marginTop: \"3%\", // Margen adicional entre botones\r\n                      }}\r\n                      onPress={() => addNewMultiServicioToList()}\r\n                      disabled={isButtonDisabled}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Agregar Venta a la lista\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Agregar un unico servicio */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Venta\"\r\n                  : \"Datos de la Venta\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idClienteDetails}\r\n                    placeholder=\"Seleccione un Cliente\"\r\n                    setValue={setIdClienteDetails}\r\n                    items={dropdownItemsNombreCliente}\r\n                    searchable={true}\r\n                    readOnly={\r\n                      !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                    }\r\n                    onDropdownOpen={() => controlarCapas(\"ClienteDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDetails}\r\n                      placeholder=\"Seleccione una tienda\"\r\n                      setValue={setIdTiendaDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={\r\n                        !(isPermisoServicioGeneral &&\r\n                          modalEntradasDates?.id_entrada === \"\"\r\n                          ? true\r\n                          : isPermisoServicioGeneral &&\r\n                          isPermisoModificarServicio)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTipoServicioDetails}\r\n                      placeholder=\"Seleccione un tipo de servicio\"\r\n                      setValue={setIdTipoServicioDetails}\r\n                      items={dropdownItemsNombreTipoServicio}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: 500,\r\n                  }}\r\n                >\r\n                  {/* Pago por ptransferencia */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    {isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Adelanto del encargo\r\n                      </Text>\r\n                    )}\r\n                    {isEncargoProducto && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={adelantoEncargo}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n                          setAdelantoEncargo(validNumericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={true}\r\n                        placeholder=\"Adelanto del encargo\"\r\n                      />\r\n                    )}\r\n\r\n                    <View style={{ marginTop: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad Pagada por Transferencia CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={cantidadTransferencia}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n                          setCantidadTransferencia(validNumericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad Pagada por Transferencia CUP\"\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  {/*  */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    {!isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Genera Deuda\r\n                      </Text>\r\n                    )}\r\n                    {!isEncargoProducto && (\r\n                      <CustomRadioButtonSingle\r\n                        onPress={() => setIsDeudaDetails(!isDeudaDetails)}\r\n                        selected={isDeudaDetails}\r\n                        label=\"Deuda\"\r\n                      />\r\n                    )}\r\n\r\n                    {isDateLoaded && isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Fecha llegada\r\n                      </Text>\r\n                    )}\r\n                    {isDateLoaded && isEncargoProducto && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetailsEncargo}\r\n                        monthValue={fechaMesDetailsEncargo}\r\n                        yearValue={fechaAnnoDetailsEncargo}\r\n                        onDayChange={setFechaDiaDetailsEncargo}\r\n                        onMonthChange={setFechaMesDetailsEncargo}\r\n                        onYearChange={setFechaAnnoDetailsEncargo}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n\r\n                    {!isEncargoProducto &&\r\n                      isDeudaDetails &&\r\n                      modalEntradasDates?.id_entrada === \"\" && (\r\n                        <Text style={styles.labelTextModalDesktop}>\r\n                          Adelanto inicial de la deuda en CUP:\r\n                        </Text>\r\n                      )}\r\n                    {!isEncargoProducto &&\r\n                      isDeudaDetails &&\r\n                      modalEntradasDates?.id_entrada === \"\" && (\r\n                        <CustomTextImputSearch\r\n                          style={styles.textImputModal}\r\n                          value={adelantoCUPDeudaDetails}\r\n                          onChangeText={(text) => {\r\n                            // Permite solo números y un punto decimal\r\n                            const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                            // Asegura que solo haya un punto decimal\r\n                            const validNumericValue =\r\n                              numericValue.split(\".\").length > 2\r\n                                ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                                : numericValue;\r\n\r\n                            setAdelantoCUPDeudaDetails(validNumericValue);\r\n                            const costoUSD =\r\n                              parseFloat(validNumericValue) / cambioMoneda;\r\n                            setAdelantoUSDDeudaDetails(costoUSD.toFixed(5));\r\n                          }}\r\n                          cursorColor={Colors.azul_Oscuro}\r\n                          editable={\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          }\r\n                          placeholder=\"Adelanto\"\r\n                        />\r\n                      )}\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdownDetails\r\n                      value={idProductoDetails}\r\n                      placeholder=\"Seleccione un produto\"\r\n                      setValue={setIdProductoDetails}\r\n                      items={dropdownItemsNombreproducto}\r\n                      searchable={true}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      onDropdownOpen={() => controlarCapas(\"ProductoDetails\")}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={cantidadProductoDetails}\r\n                        onChangeText={(text) => {\r\n                          // Filtra caracteres no numéricos\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                          setCantidadProductoDetails(numericValue);\r\n                        }}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad del producto\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoUSDDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoCUPDetails(\r\n                              String(\r\n                                (\r\n                                  parseFloat(validNumericValue) * cambioMoneda\r\n                                ).toFixed(0)\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoCUPDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoUSDDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoUSD\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 || parseInt(idTipoServicioDetails) === 25 ? ((parseInt(usuario?.id_usuario) === 1 || parseInt(usuario?.id_usuario) === 2) ? true : false) : isPermisoModificarServicio || isPermisoServicioLocal}\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoCUPDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoUSDDetails(\r\n                              String(\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoUSDDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoCUPDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoCUP\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                            parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                            isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModalNOEDITABLE}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioUSDDetails(\r\n                            String(\r\n                              (\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              ).toFixed(5)\r\n                            )\r\n                          );\r\n                        } else {\r\n                          setPrecioUSDDetails(\"0\");\r\n                        }\r\n                        setPrecioCUPDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioCUP\");\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en cup\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\", // Para separar los campos de forma uniforme\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      paddingHorizontal: 10,\r\n                    }}\r\n                  >\r\n                    <Text>{mensajeSumaVenta()}</Text>\r\n                  </View>\r\n                )}\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={notaDetails}\r\n                      onChangeText={setNotaDetails}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Nota\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del servicio\"\r\n                  multiline={true}\r\n                  editable={\r\n                    isPermisoModificarServicio || isPermisoServicioLocal\r\n                  }\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este servicio?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarServicio &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewServicio()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Venta\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al este servicio?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarServicioFunction()\r\n                      : modificarServicioFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Ventas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarServicio && (\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                setIsModalAddMultiServicio(!isModalAddMultiServicio)\r\n              }\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"15%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                  styles.radioButtonSelected &&\r\n                  styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Multiples Ventas\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n\r\n          {isPermisoAgregarServicio && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                  styles.radioButtonSelected &&\r\n                  styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Venta\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearsh}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Cliente:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del cliente\"\r\n              value={nombreClienteSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreClienteSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Tipo de Servicio:</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                zIndex: capaPrioridadTipoServicioSearsh,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={idTipoServicioSearch}\r\n                placeholder=\"Seleccione un tipo de servicio\"\r\n                setValue={setIdTipoServicioSearch}\r\n                items={dropdownItemsNombreTipoServicio}\r\n                direction=\"BOTTOM\"\r\n                onDropdownOpen={() => controlarCapas(\"TipoServicioSearsh\")}\r\n              />\r\n            </View>\r\n\r\n            {isPermisoServicioGeneral && (\r\n              <View style={styles.separatorBlanco} />\r\n            )}\r\n\r\n            {isPermisoServicioGeneral && (\r\n              <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n            )}\r\n            {isPermisoServicioGeneral && (\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  zIndex: capaPrioridadTiendaSearsh,\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <CustomDropdown\r\n                  value={idTiendaSearch}\r\n                  placeholder=\"Seleccione un tienda\"\r\n                  setValue={setIdTiendaSearch}\r\n                  items={dropdownItemsNombreTienda}\r\n                  direction=\"BOTTOM\"\r\n                  onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n                />\r\n              </View>\r\n            )}\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              Rango de Precio en CUP:\r\n            </Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={rangoPrecioDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={rangoPrecioHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioHastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() =>\r\n                    filtrarYOrdenarServicios(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    )\r\n                  }\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableServicios\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        {/*Multi add servicio */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalAddMultiServicio}\r\n          animationType=\"fade\"\r\n          onRequestClose={() => {\r\n            setIsModalAddMultiServicio(!isModalAddMultiServicio);\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={() => {\r\n                  setIsModalAddMultiServicio(!isModalAddMultiServicio);\r\n                }}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Venta\"\r\n                  : \"Datos de las Ventas\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Cliente */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idClienteMutiDetails}\r\n                    placeholder=\"Seleccione un Cliente\"\r\n                    setValue={setIdClienteMultiDetails}\r\n                    items={dropdownItemsNombreCliente}\r\n                    searchable={true}\r\n                    readOnly={\r\n                      !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                    }\r\n                    onDropdownOpen={() => controlarCapas(\"ClienteDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre de la Tienda */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Tienda donde se creará la venta\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idTiendaMultiDetails}\r\n                    placeholder=\"Seleccione una tienda\"\r\n                    setValue={setIdTiendaMultiDetails}\r\n                    items={dropdownItemsNombreTienda}\r\n                    readOnly={\r\n                      !(isPermisoServicioGeneral &&\r\n                        modalEntradasDates?.id_entrada === \"\"\r\n                        ? true\r\n                        : isPermisoServicioGeneral &&\r\n                        isPermisoModificarServicio)\r\n                    }\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"TipoServicioDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Lista de servicios */}\r\n                <View\r\n                  style={{\r\n                    width: \"90%\",\r\n                    zIndex: 500,\r\n                    position: \"relative\",\r\n                    marginTop: \"2%\",\r\n                  }}\r\n                >\r\n                  {/*Boton para agregar un servicio a la lista */}\r\n                  <TouchableOpacity\r\n                    onPress={() => auxSetModalServicioSingleDates()}\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      height: 10,\r\n                      width: 100,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      borderColor: Colors.azul_Claro,\r\n                      borderWidth: 3,\r\n                      padding: 10,\r\n                      borderRadius: 10,\r\n                      marginBottom: \"2%\",\r\n                      backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 30,\r\n                        color: Colors.blanco,\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                        textShadowOffset: { width: 1, height: 1 },\r\n                        textShadowRadius: 2,\r\n                        marginBottom: \"10%\",\r\n                      }}\r\n                    >\r\n                      +\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      padding: 10,\r\n                      borderBottomWidth: 1,\r\n                      borderBottomColor: Colors.gris_claro,\r\n                      backgroundColor: Colors.gris_claro,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 18,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        Producto\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 16,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        Precio\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 16,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        Cantidad\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 16,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        Total\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 16,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      ></Text>\r\n                    </View>\r\n                  </View>\r\n                  {multiServiciosItems.length > 0 ? (\r\n                    <FlatList\r\n                      data={multiServiciosItems}\r\n                      renderItem={({ item, index }) => (\r\n                        <TouchableOpacity\r\n                          onPress={() => console.log(multiServiciosItems)}\r\n                        >\r\n                          <View\r\n                            style={{\r\n                              width: \"100%\",\r\n                              padding: 10,\r\n                              borderBottomWidth: 1,\r\n                              borderBottomColor: Colors.gris_claro,\r\n                            }}\r\n                          >\r\n                            <View\r\n                              style={{\r\n                                flexDirection: \"row\",\r\n                                justifyContent: \"space-between\",\r\n                              }}\r\n                            >\r\n                              <Text\r\n                                style={{\r\n                                  fontSize: 18,\r\n                                  color: Colors.negro,\r\n                                  width: \"43%\", // Establece un ancho fijo para el nombre del producto\r\n                                  ellipsizeMode: \"tail\", // Trunca el texto si es demasiado largo\r\n                                }}\r\n                              >\r\n                                {item.nombreProducto}\r\n                              </Text>\r\n                              <Text\r\n                                style={{\r\n                                  fontSize: 16,\r\n                                  color: Colors.negro,\r\n                                  width: \"35%\", // Establece un ancho fijo para el precio del producto\r\n                                }}\r\n                              >\r\n                                {(item.precioUSDDetails * cambioMoneda).toFixed(\r\n                                  0\r\n                                )}\r\n                              </Text>\r\n                              <Text\r\n                                style={{\r\n                                  fontSize: 16,\r\n                                  color: Colors.negro,\r\n                                  marginRight: \"10%\",\r\n                                  width: \"10%\", // Establece un ancho fijo para la cantidad del producto\r\n                                }}\r\n                              >\r\n                                {item.cantidadProductoDetails}\r\n                              </Text>\r\n                              <Text\r\n                                style={{\r\n                                  fontSize: 16,\r\n                                  color: Colors.negro,\r\n                                  marginRight: \"5%\",\r\n                                  width: \"10%\", // Establece un ancho fijo para el precio del producto\r\n                                }}\r\n                              >\r\n                                {(\r\n                                  item.precioUSDDetails *\r\n                                  item.cantidadProductoDetails *\r\n                                  cambioMoneda\r\n                                ).toFixed(0)}\r\n                              </Text>\r\n                              <TouchableOpacity\r\n                                style={{\r\n                                  backgroundColor: \"red\",\r\n                                  padding: 10,\r\n                                  borderRadius: 5,\r\n                                }}\r\n                                onPress={() => {\r\n                                  const index = multiServiciosItems.findIndex(\r\n                                    (item) => item.id === item.id\r\n                                  );\r\n                                  if (index !== -1) {\r\n                                    multiServiciosItems.splice(index, 1);\r\n                                    setMltiServiciosItems([\r\n                                      ...multiServiciosItems,\r\n                                    ]);\r\n                                  }\r\n                                }}\r\n                              >\r\n                                <Image\r\n                                  source={require(\"../images/delete.png\")}\r\n                                  style={{\r\n                                    width: 20,\r\n                                    height: 20,\r\n                                  }}\r\n                                />\r\n                              </TouchableOpacity>\r\n                            </View>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                      keyExtractor={(item, index) => index.toString()}\r\n                    />\r\n                  ) : (\r\n                    <Text style={{ fontSize: 18, color: Colors.negro }}></Text>\r\n                  )}\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      padding: 10,\r\n                      borderBottomWidth: 1,\r\n                      borderBottomColor: Colors.gris_claro,\r\n                      backgroundColor: Colors.gris_claro,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 18,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      ></Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 16,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        Total Transferencia:{\" \"}\r\n                        {multiServiciosItems.reduce(\r\n                          (total, item) =>\r\n                            total + parseFloat(item.cantidadTransferencia),\r\n                          0\r\n                        )}\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 16,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        Total Efectivo:{\" \"}\r\n                        {(\r\n                          multiServiciosItems.reduce(\r\n                            (total, item) =>\r\n                              total +\r\n                              parseFloat(item.precioUSDDetails) *\r\n                              parseInt(item.cantidadProductoDetails),\r\n                            0\r\n                          ) *\r\n                          cambioMoneda -\r\n                          multiServiciosItems.reduce(\r\n                            (total, item) =>\r\n                              total + parseFloat(item.cantidadTransferencia),\r\n                            0\r\n                          )\r\n                        ).toFixed(0)}\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 16,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        Total:{\" \"}\r\n                        {(\r\n                          multiServiciosItems.reduce(\r\n                            (total, item) =>\r\n                              total +\r\n                              item.precioUSDDetails *\r\n                              item.cantidadProductoDetails,\r\n                            0\r\n                          ) * cambioMoneda\r\n                        ).toFixed(0)}\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 16,\r\n                          color: Colors.negro,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      ></Text>\r\n                    </View>\r\n                  </View>\r\n\r\n                  {/*Boton para agregar un servicio a la lista */}\r\n                  <TouchableOpacity\r\n                    onPress={() => addNewMultiServicio()}\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      height: 15,\r\n                      width: 210,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      borderColor: Colors.azul_Claro,\r\n                      borderWidth: 3,\r\n                      padding: 10,\r\n                      borderRadius: 10,\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Colors.blanco,\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                        textShadowOffset: { width: 1, height: 1 },\r\n                        textShadowRadius: 2,\r\n                      }}\r\n                    >\r\n                      Agregar Ventas al Sistema\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal para agregar multiples servicios de uno en uno  */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalAddMultiServicioSingle}\r\n          animationType=\"fade\"\r\n          onRequestClose={auxSetModalServicioSingleDates}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={auxSetModalServicioSingleDates}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {\"Agregar Venta a la Lista\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: 500,\r\n                  }}\r\n                >\r\n                  {/* Garantías */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    {isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Adelanto del encargo\r\n                      </Text>\r\n                    )}\r\n                    {isEncargoProducto && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={adelantoEncargo}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n                          setAdelantoEncargo(validNumericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={true}\r\n                        placeholder=\"Adelanto del encargo\"\r\n                      />\r\n                    )}\r\n\r\n                    <View style={{ marginTop: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad Pagada por Transferencia CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={cantidadTransferencia}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n                          setCantidadTransferencia(validNumericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad Pagada por Transferencia CUP\"\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  {/*  */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    {true && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Genera Deuda\r\n                      </Text>\r\n                    )}\r\n                    {true && (\r\n                      <CustomRadioButtonSingle\r\n                        onPress={() => setIsDeudaDetails(!isDeudaDetails)}\r\n                        selected={isDeudaDetails}\r\n                        label=\"Deuda\"\r\n                      />\r\n                    )}\r\n\r\n                    {isDateLoaded && isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Fecha llegada\r\n                      </Text>\r\n                    )}\r\n                    {isDateLoaded && isEncargoProducto && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetailsEncargo}\r\n                        monthValue={fechaMesDetailsEncargo}\r\n                        yearValue={fechaAnnoDetailsEncargo}\r\n                        onDayChange={setFechaDiaDetailsEncargo}\r\n                        onMonthChange={setFechaMesDetailsEncargo}\r\n                        onYearChange={setFechaAnnoDetailsEncargo}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n\r\n                    {!isEncargoProducto && isDeudaDetails && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Adelanto inicial de la deuda en CUP:\r\n                      </Text>\r\n                    )}\r\n                    {!isEncargoProducto && isDeudaDetails && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={adelantoCUPDeudaDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          setAdelantoCUPDeudaDetails(validNumericValue);\r\n                          const costoUSD =\r\n                            parseFloat(validNumericValue) / cambioMoneda;\r\n                          setAdelantoUSDDeudaDetails(costoUSD.toFixed(5));\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Adelanto\"\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdownDetails\r\n                      value={idProductoDetails}\r\n                      placeholder=\"Seleccione un produto\"\r\n                      setValue={setIdProductoDetails}\r\n                      items={dropdownItemsNombreproducto}\r\n                      searchable={true}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      onDropdownOpen={() => controlarCapas(\"ProductoDetails\")}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={cantidadProductoDetails}\r\n                        onChangeText={(text) => {\r\n                          // Filtra caracteres no numéricos\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                          setCantidadProductoDetails(numericValue);\r\n                        }}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad del producto\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoUSDDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoCUPDetails(\r\n                              String(\r\n                                (\r\n                                  parseFloat(validNumericValue) * cambioMoneda\r\n                                ).toFixed(0)\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoCUPDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoUSDDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoUSD\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 || parseInt(idTipoServicioDetails) === 25 ? ((parseInt(usuario?.id_usuario) === 1 || parseInt(usuario?.id_usuario) === 2) ? true : false) : isPermisoModificarServicio || isPermisoServicioLocal}\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoCUPDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoUSDDetails(\r\n                              String(\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoUSDDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoCUPDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoCUP\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                            parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                            isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModalNOEDITABLE}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioUSDDetails(\r\n                            String(\r\n                              (\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              ).toFixed(5)\r\n                            )\r\n                          );\r\n                        } else {\r\n                          setPrecioUSDDetails(\"0\");\r\n                        }\r\n                        setPrecioCUPDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioCUP\");\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en cup\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\", // Para separar los campos de forma uniforme\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      paddingHorizontal: 10,\r\n                    }}\r\n                  >\r\n                    <Text>{mensajeSumaVenta()}</Text>\r\n                  </View>\r\n                )}\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={notaDetails}\r\n                      onChangeText={setNotaDetails}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Nota\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del servicio\"\r\n                  multiline={true}\r\n                  editable={\r\n                    isPermisoModificarServicio || isPermisoServicioLocal\r\n                  }\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para agregar proveedor */}\r\n                  {true && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        borderRadius: 15,\r\n                        width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: \"#000\",\r\n                        marginLeft: \"5%\",\r\n                        shadowOffset: { width: 3, height: 4 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        marginTop: \"3%\", // Margen adicional entre botones\r\n                      }}\r\n                      onPress={() => addNewMultiServicioToList()}\r\n                      disabled={isButtonDisabled}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Agregar Venta a la lista\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal para agregar un unico servicio  */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Venta\"\r\n                  : \"Datos de la Venta\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idClienteDetails}\r\n                    placeholder=\"Seleccione un Cliente\"\r\n                    setValue={setIdClienteDetails}\r\n                    items={dropdownItemsNombreCliente}\r\n                    searchable={true}\r\n                    readOnly={\r\n                      !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                    }\r\n                    onDropdownOpen={() => controlarCapas(\"ClienteDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDetails}\r\n                      placeholder=\"Seleccione una tienda\"\r\n                      setValue={setIdTiendaDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={\r\n                        !(isPermisoServicioGeneral &&\r\n                          modalEntradasDates?.id_entrada === \"\"\r\n                          ? true\r\n                          : isPermisoServicioGeneral &&\r\n                          isPermisoModificarServicio)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTipoServicioDetails}\r\n                      placeholder=\"Seleccione un tipo de servicio\"\r\n                      setValue={setIdTipoServicioDetails}\r\n                      items={dropdownItemsNombreTipoServicio}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: 500,\r\n                  }}\r\n                >\r\n                  {/* Garantías */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    {isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Adelanto del encargo\r\n                      </Text>\r\n                    )}\r\n                    {isEncargoProducto && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={adelantoEncargo}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n                          setAdelantoEncargo(validNumericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={true}\r\n                        placeholder=\"Adelanto del encargo\"\r\n                      />\r\n                    )}\r\n\r\n                    <View style={{ marginTop: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad Pagada por Transferencia CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={cantidadTransferencia}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n                          setCantidadTransferencia(validNumericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad Pagada por Transferencia CUP\"\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  {/*  */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    {!isEncargoProducto &&\r\n                      modalEntradasDates?.id_entrada === \"\" && (\r\n                        <Text style={styles.labelTextModalDesktop}>\r\n                          Genera Deuda\r\n                        </Text>\r\n                      )}\r\n                    {!isEncargoProducto &&\r\n                      modalEntradasDates?.id_entrada === \"\" && (\r\n                        <CustomRadioButtonSingle\r\n                          onPress={() => setIsDeudaDetails(!isDeudaDetails)}\r\n                          selected={isDeudaDetails}\r\n                          label=\"Deuda\"\r\n                        />\r\n                      )}\r\n\r\n                    {isDateLoaded && isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Fecha llegada\r\n                      </Text>\r\n                    )}\r\n                    {isDateLoaded && isEncargoProducto && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetailsEncargo}\r\n                        monthValue={fechaMesDetailsEncargo}\r\n                        yearValue={fechaAnnoDetailsEncargo}\r\n                        onDayChange={setFechaDiaDetailsEncargo}\r\n                        onMonthChange={setFechaMesDetailsEncargo}\r\n                        onYearChange={setFechaAnnoDetailsEncargo}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n\r\n                    {!isEncargoProducto && isDeudaDetails && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Adelanto inicial de la deuda en CUP:\r\n                      </Text>\r\n                    )}\r\n                    {!isEncargoProducto && isDeudaDetails && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={adelantoCUPDeudaDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          setAdelantoCUPDeudaDetails(validNumericValue);\r\n                          const costoUSD =\r\n                            parseFloat(validNumericValue) / cambioMoneda;\r\n                          setAdelantoUSDDeudaDetails(costoUSD.toFixed(5));\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Adelanto\"\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdownDetails\r\n                      value={idProductoDetails}\r\n                      placeholder=\"Seleccione un produto\"\r\n                      setValue={setIdProductoDetails}\r\n                      items={dropdownItemsNombreproducto}\r\n                      searchable={true}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      onDropdownOpen={() => controlarCapas(\"ProductoDetails\")}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={cantidadProductoDetails}\r\n                        onChangeText={(text) => {\r\n                          // Filtra caracteres no numéricos\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                          setCantidadProductoDetails(numericValue);\r\n                        }}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad del producto\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoUSDDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoCUPDetails(\r\n                              String(\r\n                                (\r\n                                  parseFloat(validNumericValue) * cambioMoneda\r\n                                ).toFixed(0)\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoCUPDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoUSDDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoUSD\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 || parseInt(idTipoServicioDetails) === 25 ? ((parseInt(usuario?.id_usuario) === 1 || parseInt(usuario?.id_usuario) === 2) ? true : false) : isPermisoModificarServicio || isPermisoServicioLocal}\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoCUPDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoUSDDetails(\r\n                              String(\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoUSDDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoCUPDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoCUP\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                            parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                            isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModalNOEDITABLE}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioUSDDetails(\r\n                            String(\r\n                              (\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              ).toFixed(5)\r\n                            )\r\n                          );\r\n                        } else {\r\n                          setPrecioUSDDetails(\"0\");\r\n                        }\r\n                        setPrecioCUPDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioCUP\");\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en cup\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\", // Para separar los campos de forma uniforme\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      paddingHorizontal: 10,\r\n                    }}\r\n                  >\r\n                    <Text>{mensajeSumaVenta()}</Text>\r\n                  </View>\r\n                )}\r\n\r\n                {/*Campo de los check bootom */}\r\n                {modalEntradasDates?.id_entrada !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        marginTop: \"3%\",\r\n                        color: Colors.negro, // Color del texto\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Hacer Devolución\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                {modalEntradasDates?.id_entrada !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    {optionsDevueltoDetails.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={devueltoDetails === option.value}\r\n                        onPress={() => {\r\n                          if (\r\n                            modalEntradasDates?.id_entrada === \"\"\r\n                              ? true\r\n                              : isPermisoModificarServicio\r\n                          ) {\r\n                            setDevueltoDetails(option.value);\r\n                          }\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n                )}\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={notaDetails}\r\n                      onChangeText={setNotaDetails}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Nota\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del servicio\"\r\n                  multiline={true}\r\n                  editable={\r\n                    isPermisoModificarServicio || isPermisoServicioLocal\r\n                  }\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este servicio?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarServicio &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewServicio()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Venta\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al este servicio?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarServicioFunction()\r\n                      : modificarServicioFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Ventas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n","import Navbar from \"../components/Navbar\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useFocusEffect } from \"@react-navigation/native\";\r\nimport React, { useEffect, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  Image,\r\n  Modal,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getUsuarioById, iniciarSecionUser } from \"../services/UsuarioServices\";\r\nimport { getPermisosOfRol, RolPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { useSelectedButon } from \"../contexts/globalButonNavbarSelected\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport axios from \"axios\";\r\n\r\nexport default function LoginView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  const checkBackend = async () => {\r\n    const url = \"https://my-leniogestionbackend.onrender.com/usuario\";\r\n    let retries = 0;\r\n    const maxRetries = 5; // Número máximo de reintentos\r\n\r\n    while (retries < maxRetries) {\r\n      try {\r\n        const response = await fetch(url, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n\r\n        console.log(response);\r\n\r\n        if (response.status === 403) {\r\n          console.log(\"OKAY\"); // El backend respondió correctamente\r\n          return; // Salir de la función\r\n        } else if (!response.ok) {\r\n          throw new Error(`Error en la petición: ${response.statusText}`);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al conectar con el backend:\", error);\r\n        retries++;\r\n        console.log(`Reintentando (${retries}/${maxRetries})...`);\r\n        await new Promise((resolve) => setTimeout(resolve, 5000)); // Esperar 5 segundos antes de reintentar\r\n      }\r\n    }\r\n\r\n    console.error(\"Número máximo de reintentos alcanzado. No se pudo conectar al backend.\");\r\n  };\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      // Código que se ejecutará cuando la pantalla esté enfocada\r\n      console.log(\"La pantalla de Login está enfocada\");\r\n      \r\n      //checkBackend()\r\n\r\n      // Si necesitas limpiar algo cuando la pantalla pierde el foco, puedes retornar una función de limpieza\r\n      return () => {\r\n        console.log(\"La pantalla de Login perdió el foco\");\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  //Datos de el usuario\r\n  const { setUsuario, usuario } = useUsuario();\r\n  const { setSelectedButon, selectedButon } = useSelectedButon();\r\n\r\n  // Estilo según la vita desktop o movil\r\n  const ContainerStyle = isMobile\r\n    ? styles.loginContainerStilesMovil\r\n    : styles.loginContainerStilesDesktop;\r\n\r\n  // Constantes para controlar el estado del Modal\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalMesajeVisible, setModalMesajeVisible] = React.useState(false);\r\n  const [modalMesaje, setModalMesaje] = React.useState(\"\");\r\n\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n  // Variables para los datos de los usuarios\r\n  const [username, setUsername] = useState(\"\");\r\n  const [pasword, setPasword] = useState(\"\");\r\n\r\n  // Funciones de servicios con los usuarios\r\n  const iniciarSecion = async () => {\r\n    setModalMesajeVisible(true);\r\n    setModalMesaje(\"Iniciando sesión...\");\r\n\r\n    localStorage.clear();\r\n    if (username.trim() != \"\" && pasword.trim() != \"\") {\r\n      const resultUserAuth = await iniciarSecionUser(username, pasword);\r\n    // Comprueba si result es false\r\n    if (resultUserAuth) {\r\n      // Si result no es false, se manejan la resuesta\r\n      // Obtener más datos de los usuarios\r\n      const resultUserDates = await getUsuarioById(resultUserAuth.data.token,resultUserAuth.data.id_usuario);\r\n      \r\n      if (resultUserDates) {\r\n        // Guardamos el usuario en el contexto\r\n        const permisos: RolPermiso[] | false = await getPermisosOfRol(resultUserAuth.data.token, resultUserAuth.data.rol.id_rol);\r\n        if (permisos) {\r\n          setUsuario({\r\n            id_usuario: resultUserDates.data.id_usuario,\r\n            nombre: resultUserAuth.data.nombre,\r\n            telefono: resultUserDates.data.telefono, // Usa undefined si no hay valor\r\n            direccion: resultUserDates.data.direccion, // Usa undefined si no hay valor\r\n            carnet_identidad: resultUserDates.data.carnet_identidad, // Usa undefined si no hay valor\r\n            detalles_bancarios: resultUserDates.data.detalles_bancarios, // Usa undefined si no hay valor\r\n            nombre_usuario: username, // Esta propiedad es obligatoria\r\n            email: resultUserDates.data.email, // Esta propiedad es obligatoria\r\n            token: resultUserAuth.data.token,\r\n            id_rol: resultUserAuth.data.rol.id_rol,\r\n            nombre_rol: resultUserAuth.data.rol.nombre,\r\n            id_tienda: resultUserAuth.data.tienda.id_tienda,\r\n            nombre_tienda: resultUserAuth.data.tienda.nombre,\r\n            permisos: permisos\r\n          });\r\n\r\n          // Agregar Acción de usuario iniciar seción\r\n          \r\n          const currentDate = new Date();\r\n          \r\n          // Extraemos el año, mes y día de la fecha actual\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${resultUserAuth.data.nombre} con el nombre de usuario ${username} inició sesión`;\r\n          await addAccionUsuario(resultUserAuth.data.token, auxAddAccionUsuarioDescripcion, `${year}-${month}-${day}`, resultUserDates.data.id_usuario, 5);\r\n          \r\n          // Navegar\r\n          setModalMesajeVisible(false);\r\n          navigation.navigate(\"HomeScreen\");\r\n        }\r\n      }else{\r\n        alert(\"Error en userDates\");\r\n        toggleModal();\r\n      }\r\n    } else {\r\n      // Maneja el caso en que la autenticación falla\r\n      setPasword(\"\");\r\n      setModalMesajeVisible(false);\r\n      toggleModal();\r\n    }\r\n    }else{\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === 'Enter') {\r\n      // Aquí ejecutas la función que deseas\r\n      iniciarSecion()\r\n    }\r\n  };\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <LinearGradient\r\n        colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n        start={[0, 0]}\r\n        end={[1, 0]}\r\n        style={ContainerStyle}\r\n      >\r\n        <Image\r\n          source={require(\"../images/logo.png\")}\r\n          style={{\r\n            position: \"absolute\",\r\n            resizeMode: \"cover\",\r\n            height: \"50%\",\r\n            width: \"70%\",\r\n            marginBottom: \"95%\",\r\n            shadowOffset: { width: 3, height: 4 },\r\n            shadowOpacity: 0.3,\r\n            shadowRadius: 5,\r\n          }}\r\n        />\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            marginTop: \"35%\",\r\n          }}\r\n        >\r\n          <Text style={styles.textSearchDesktop}>Nombre de Usuario:</Text>\r\n          <CustomTextImputSearch\r\n            style={styles.textImputLogin}\r\n            placeholder=\"Nombre de Usuario\"\r\n            value={username}\r\n            onChangeText={setUsername}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n\r\n          <Text style={styles.textSearchDesktop}>Contraseña</Text>\r\n          <CustomTextImputSearch\r\n            style={styles.textImputLogin}\r\n            placeholder=\"Contraseña\"\r\n            value={pasword}\r\n            secureTextEntry={true}\r\n            onChangeText={setPasword}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              borderRadius: 15,\r\n              borderColor: Colors.azul_Suave,\r\n              borderWidth: 2,\r\n              width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n              height: 35, // Altura fija para pantallas de escritorio\r\n              alignItems: \"center\",\r\n              marginTop: \"5%\",\r\n              justifyContent: \"center\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={() => {\r\n              setSelectedButon({\r\n                butonSelected: \"\"\r\n              })\r\n              iniciarSecion()\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: Colors.blanco,\r\n                fontSize: 20,\r\n                justifyContent: \"center\",\r\n                fontWeight: \"bold\", // Para negritas\r\n                textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                textShadowRadius: 200, // Difuminado de la sombra\r\n              }}\r\n            >\r\n              Iniciar Sesión\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <View\r\n            style={{\r\n              justifyContent: \"center\",\r\n              alignItems: \"flex-end\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={toggleModal}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={isMobile? styles.modalViewMesajeContainerMovil : styles.modalViewMesajeContainerDesktop}\r\n                >\r\n                  <Text style={styles.labelTextDesktop}>\r\n                    Error al iniciar sesión, posibles errores:\r\n                  </Text>\r\n                  <Text style={styles.labelTextDesktop}>\r\n                    -Nombre de usuario o contraseña incorrecta.\r\n                  </Text>\r\n                  <Text style={styles.labelTextDesktop}>\r\n                    -Debe llenar todos los campos.\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      marginTop: \"5%\",\r\n                      width: \"100%\", // Hacer que el botón ocupe todo el ancho\r\n                      paddingVertical: 10, // Espaciado vertical\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      borderRadius: 5, // Bordes redondeados\r\n                    }}\r\n                    onPress={toggleModal}\r\n                  >\r\n                    <Text style={{ color: \"white\", fontWeight: \"bold\" }}>\r\n                      Intentar de nuevo\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMesajeVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={toggleModal}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={isMobile? styles.modalViewMesajeContainerMovil : styles.modalViewMesajeContainerDesktop}\r\n                >\r\n                  <Text style={styles.labelTextDesktop}>\r\n                    {modalMesaje}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n          </View>\r\n        </View>\r\n      </LinearGradient>\r\n    </View>\r\n  );\r\n}\r\n","import React, { createContext, useState, ReactNode } from \"react\";\r\nimport { Movimiento } from \"../components/MyDateTableMovimientos\";\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortMovimientosDates {\r\n    items: Movimiento[];\r\n    criterioOrden: string;\r\n    tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortMovimientosDatesContextType {\r\n  SortMovimientosDates: SortMovimientosDates | null;\r\n  setSortMovimientosDates: (\r\n    SortMovimientosDates: SortMovimientosDates | null\r\n  ) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortMovimientosDatesContext = createContext<\r\n  SortMovimientosDatesContextType | undefined\r\n>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortMovimientosDatesProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [SortMovimientosDates, setSortMovimientosDates] =\r\n    useState<SortMovimientosDates | null>(null);\r\n\r\n  return (\r\n    <SortMovimientosDatesContext.Provider\r\n      value={{\r\n        SortMovimientosDates: SortMovimientosDates,\r\n        setSortMovimientosDates: setSortMovimientosDates,\r\n      }}\r\n    >\r\n      {children}\r\n    </SortMovimientosDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortMovimientosDates = () => {\r\n  const context = React.useContext(SortMovimientosDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      \"useModalMovimientosDates debe usarse dentro de un ModalMovimientosDates\"\r\n    );\r\n  }\r\n  return context;\r\n};\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface ModalProveedoresDates {\r\n    id_proveedor: string;\r\n    isAddProveedor: boolean;\r\n    isModificarProveedor: boolean;\r\n    fileEditable: boolean;\r\n    isAddProductoShowProveedoresTiendas: boolean;\r\n    isDetallesProveedores: boolean;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface ModalProductsDatesContextType {\r\n  modalProveedoresDates: ModalProveedoresDates | null;\r\n  setModalProveedoresDates: (modalProveedoresDates: ModalProveedoresDates | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst ModalProveedoresDatesContext = createContext<ModalProductsDatesContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const ModalProveedoresDatesProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [modalProveedoresDates, setModalProveedoresDates] = useState<ModalProveedoresDates | null>(null);\r\n\r\n  return (\r\n    <ModalProveedoresDatesContext.Provider value={{ modalProveedoresDates: modalProveedoresDates, setModalProveedoresDates: setModalProveedoresDates }}>\r\n      {children}\r\n    </ModalProveedoresDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useModalProveedoresDates = () => {\r\n  const context = React.useContext(ModalProveedoresDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useModalProveedoresDates debe usarse dentro de un ModalProveedoresDates');\r\n  }\r\n  return context;\r\n};","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Entrada } from '../components/MyDateTableEntradas';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortEntradas {\r\n  items: Entrada[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortEntradasContextType {\r\n  sortEntradas: SortEntradas | null;\r\n  setSortEntradas: (sortEntradas: SortEntradas | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortEntradasContext = createContext<SortEntradasContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortEntradasProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortEntradas, setSortEntradas] = useState<SortEntradas | null>(null);\r\n\r\n  return (\r\n    <SortEntradasContext.Provider value={{ sortEntradas: sortEntradas, setSortEntradas: setSortEntradas }}>\r\n      {children}\r\n    </SortEntradasContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortEntradas = () => {\r\n  const context = React.useContext(SortEntradasContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortEntradas debe usarse dentro de un SortEntradas');\r\n  }\r\n  return context;\r\n};","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Producto } from '../components/MyDateTableProductos';\r\nimport { Asset } from 'react-native-image-picker';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface ImagenesDelete {\r\n  imagenes: Asset[];\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface ImagenesDeleteContextType {\r\n  imagenesDelete: ImagenesDelete | null;\r\n  setImagenesDelete: (imagenesDelete: ImagenesDelete | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst ImagenesDeleteContext = createContext<ImagenesDeleteContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const ImagenesDeleteProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [imagenesDelete, setImagenesDelete] = useState<ImagenesDelete | null>(null);\r\n\r\n  return (\r\n    <ImagenesDeleteContext.Provider value={{ imagenesDelete: imagenesDelete, setImagenesDelete: setImagenesDelete }}>\r\n      {children}\r\n    </ImagenesDeleteContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useImagenesDelete = () => {\r\n  const context = React.useContext(ImagenesDeleteContext);\r\n  if (context === undefined) {\r\n    throw new Error('useImagenesDelete debe usarse dentro de un ImagenesDelete');\r\n  }\r\n  return context;\r\n};","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { Proveedor } from \"../components/MyDateTableProveedores\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n\r\n// Obtener todos los proveedores\r\nexport const getAllProveedores = async (token: String) => {\r\n    try {\r\n      const response = await axios.get(`${cerverHost}/Proveedor`, {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      console.log(\"Error al obtener datos de los proveedores: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n// Obtener proveedor por el id\r\nexport const getProveedorById = async (token: String, id_proveedor: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Proveedor/${id_proveedor}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al obtener datos de el proveedor: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar un nuevo proveedor\r\nexport const addProveedor = async (token: String, nombre: string, email: string, telefono:string, direccion:string, nota: string, Cif:string, detalle_bacario:string) => {\r\n  try {\r\n    const response = await axios.post(`${cerverHost}/Proveedor/createProveedor`, {\r\n      nombre: nombre,\r\n      email: email || \"\",\r\n      direccion: direccion || \"\",\r\n      nota: nota || \"\",\r\n      telefono: telefono || \"\",\r\n      Cif: Cif || \"\",\r\n      detalle_bacario: detalle_bacario || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al incertar un nuevo proveedor: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Actualizar proveedor\r\nexport const actualizarProveedor = async (token: String, id_proveedor:string, nombre: string, email: string, telefono:string, direccion:string, nota: string, Cif:string, detalle_bacario:string) => {\r\n  try {\r\n    const response = await axios.put(`${cerverHost}/Proveedor/updateProveedor/${id_proveedor}`, {\r\n      nombre: nombre,\r\n      email: email || \"\",\r\n      direccion: direccion || \"\",\r\n      nota: nota || \"\",\r\n      telefono: telefono || \"\",\r\n      Cif: Cif || \"\",\r\n      detalle_bancario: detalle_bacario || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al actualizar el proveedor: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar proveedor\r\nexport const deleteProveedor = async (token: String, id_proveedor:string) => {\r\n  try {\r\n    const response = await axios.delete(`${cerverHost}/Proveedor/deleteProveedor/${id_proveedor}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al eliminar el proveedor: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar proveedores\r\nexport const filtrarProveedor = async (token: String, nombre: string, telefono:string, email: string, detalle_bacario:string) => {\r\n  try {\r\n    const response = await axios.post(`${cerverHost}/Proveedor/api/filtrar`, {\r\n      nombre: nombre,\r\n      email: email || \"\",\r\n      telefono: telefono || \"\",\r\n      detalle_bacario: detalle_bacario || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrar los proveedores: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar proveedores\r\nexport const ordenarProveedor = async (token: String, items: Proveedor[], criterio:string, ascendente: boolean) => {\r\n  try {\r\n    const response = await axios.post(`${cerverHost}/Proveedor/api/filtrar`, {\r\n      items: items,\r\n      criterio: criterio,\r\n      ascendente: ascendente\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar los proveedores: \", error);\r\n    return false;\r\n  }\r\n};","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\n\r\nexport interface Proveedor {\r\n  id_Proveedor: string;\r\n  nombre: string;\r\n  correo: string;\r\n  direccion?: string;\r\n  telefono: string;\r\n  nota?: string;\r\n  cif?: string;\r\n  detalle_bancario: string;\r\n}\r\n\r\nexport interface ProveedorPiker {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Proveedor[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableProveedorModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableProveedores: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n  const { sortProductos, setSortProductos } = useSortProductos();\r\n  const { usuario, setUsuario } = useUsuario();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Proveedor[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_producto: string) => {\r\n    setModalProveedoresDates({\r\n      id_proveedor: id_producto,\r\n      isAddProveedor: true,\r\n      fileEditable: false,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: true,\r\n      isDetallesProveedores: true,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  const resultadoCondicionalOpcionesDeCelda = (item: Proveedor) => {\r\n    if (usuario?.id_rol) {\r\n      return (usuario.id_rol == \"1\" && isPermisoOpcionesDeCelda) ||\r\n        (usuario.id_rol == \"2\" && isPermisoOpcionesDeCelda)\r\n        ? true\r\n        : item.telefono && isPermisoOpcionesDeCelda\r\n        ? true\r\n        : false;\r\n    }\r\n  };\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario,\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario,\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idProductoOption, setIdProductoOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdProductoOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalProveedoresDates({\r\n        id_proveedor: idProductoOption,\r\n        isAddProveedor: true,\r\n        fileEditable: true,\r\n        isModificarProveedor: true,\r\n        isAddProductoShowProveedoresTiendas: true,\r\n        isDetallesProveedores: true,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Proveedor !== idProductoOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idProductoOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Proveedor}\r\n                onPress={() => detailsModalView(item.id_Proveedor)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.detalle_bancario}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Teléfono */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.telefono}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idProductoOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Proveedor}\r\n                onPress={() => detailsModalView(item.id_Proveedor)}\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.detalle_bancario}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Teléfono */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    flex: 1.5,\r\n                    justifyContent: \"center\", // Centrar horizontalmente\r\n                    alignItems: \"center\", // Centrar verticalmente\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text>{item.telefono}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 16,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport interface EntradaShowModal {\r\n  id_entrada: string;\r\n  nombreProducto: string;\r\n  cantidad: string;\r\n  costo: string;\r\n  fecha: string;\r\n}\r\n\r\ninterface Props {\r\n  items: EntradaShowModal[];\r\n  columns: string[];\r\n}\r\n\r\nexport const MyDateTableModalShowDatesEntradas: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(3);\r\n  const [displayedItems, setDisplayedItems] = React.useState<EntradaShowModal[]>(\r\n    []\r\n  ); // Estado para los elementos mostrados\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text style={styles.headerTextDesktop}>{column}</Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerDesktop}>\r\n        <DataTable style={{ width: \"100%\", height: \"auto\" }}>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.filter((item)=>parseInt(item.cantidad) !== 0).map((item) => (\r\n            <DataTable.Row\r\n              key={item.id_entrada}\r\n              onPress={() => {}}\r\n            >\r\n              <DataTable.Cell style={styles.handerRow}>\r\n                <Text\r\n                  style={{ flexWrap: \"wrap\", width: \"100%\", textAlign: \"left\" }}\r\n                  numberOfLines={2} // Limita a 2 líneas\r\n                >\r\n                  {item.nombreProducto}\r\n                </Text>\r\n              </DataTable.Cell>\r\n              <DataTable.Cell numeric style={styles.handerRow}>\r\n                {item.cantidad}\r\n              </DataTable.Cell>\r\n              <DataTable.Cell numeric style={styles.handerRow}>\r\n                {item.costo}\r\n              </DataTable.Cell>\r\n              <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n            </DataTable.Row>\r\n          ))}\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    justifyContent:\"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport {\r\n  actualizarProveedor,\r\n  addProveedor,\r\n  deleteProveedor,\r\n  filtrarProveedor,\r\n  getAllProveedores,\r\n  getProveedorById,\r\n} from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport {\r\n  PanGestureHandler,\r\n  PanGestureHandlerGestureEvent,\r\n} from \"react-native-gesture-handler\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport {\r\n  MyDateTableModalShowDateProveedores,\r\n  ProveedoresShowModal,\r\n} from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  MyDateTableProveedores,\r\n  Proveedor,\r\n} from \"../components/MyDateTableProveedores\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\nimport {\r\n  EntradaShowModal,\r\n  MyDateTableModalShowDatesEntradas,\r\n} from \"../components/MyDateTableModalShowDatesEntradas\";\r\nimport { getAllEntradasByProveedorId } from \"../services/EntradaServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\n\r\nexport default function ProveedoresView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar proovedores y ver datos\r\n  const [idProveedorDetails, setIdProveedorDetails] = useState(\"\");\r\n  const [nombreProveedorDetails, setNombreProveedorDetails] = useState(\"\");\r\n  const [correoEmailProveedorDetails, setCorreoEmailProveedorDetails] =\r\n    useState(\"\");\r\n  const [direccionProveedorDetails, setDireccionProveedorDetails] =\r\n    useState(\"\");\r\n  const [telefonoProveedorDetails, setTelefonoProveedorDetails] = useState(\"\");\r\n  const [notaProveedorDetails, setNotaProveedorDetails] = useState(\"\");\r\n  const [cfiProveedorDetails, setCfiProveedorDetails] = useState(\"\");\r\n  const [\r\n    detallesBancariosProveedorDetils,\r\n    setDetallesBancariosProveedorDetils,\r\n  ] = useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [isModalChekEliminarVisible, setIsModalChekEliminarVisible] =\r\n    useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] = useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarProveedor, setIsPermisoAgregarProveedor] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarProveedor, setIsPermisoEliminarProveedor] =\r\n    React.useState(false);\r\n  const [isPermisoModificarProveedor, setIsPermisoModificarProveedor] =\r\n    React.useState(false);\r\n\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        // Verificar y almacenar el permiso de agregar proveedor\r\n        if (localStorage.getItem(\"resultAgregarProveedor\") === null) {\r\n          const resultAgregarProveedor = await isPermiso(\r\n            usuario.token,\r\n            \"35\",\r\n            usuario.id_usuario\r\n          );\r\n          setIsPermisoAgregarProveedor(resultAgregarProveedor);\r\n          localStorage.setItem(\"resultAgregarProveedor\", resultAgregarProveedor);\r\n        } else {\r\n          setIsPermisoAgregarProveedor(Boolean(localStorage.getItem(\"resultAgregarProveedor\")));\r\n        }\r\n    \r\n        // Verificar y almacenar el permiso de eliminar proveedor\r\n        if (localStorage.getItem(\"resultEliminarProveedor\") === null) {\r\n          const resultEliminarProveedor = await isPermiso(\r\n            usuario.token,\r\n            \"37\",\r\n            usuario.id_usuario\r\n          );\r\n          setIsPermisoEliminarProveedor(resultEliminarProveedor);\r\n          localStorage.setItem(\"resultEliminarProveedor\", resultEliminarProveedor);\r\n        } else {\r\n          setIsPermisoEliminarProveedor(Boolean(localStorage.getItem(\"resultEliminarProveedor\")));\r\n        }\r\n    \r\n        // Verificar y almacenar el permiso de modificar proveedor\r\n        if (localStorage.getItem(\"resultModificarProveedor\") === null) {\r\n          const resultModificarProveedor = await isPermiso(\r\n            usuario.token,\r\n            \"36\",\r\n            usuario.id_usuario\r\n          );\r\n          setIsPermisoModificarProveedor(resultModificarProveedor);\r\n          localStorage.setItem(\"resultModificarProveedor\", resultModificarProveedor);\r\n        } else {\r\n          setIsPermisoModificarProveedor(Boolean(localStorage.getItem(\"resultModificarProveedor\")));\r\n        }\r\n      }\r\n    };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [entradasByProveedor, setEntradasByProveedor] = useState<\r\n    EntradaShowModal[]\r\n  >([]);\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Proveedor[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItems, setDropDownItems] = useState<TiendaPiker[]>([]);\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProveedorSearch, setNombreProveedorSearch] = useState(\"\");\r\n  const [correoEmyleSearch, setCorreoEmyleSearch] = useState(\"\");\r\n  const [telefonoSearch, setTelefonoSearch] = useState(\"\");\r\n  const [detallesBancariosSearch, setDetallesBancariosSearch] = useState(\"\");\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getDatesTiendaPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItems([{ label: \"Tiendas\", value: \"\" }, ...tiendasMapeados]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setNombreProveedorDetails(\"\");\r\n    setCfiProveedorDetails(\"\");\r\n    setNotaProveedorDetails(\"\");\r\n    setTelefonoProveedorDetails(\"\");\r\n    setDireccionProveedorDetails(\"\");\r\n    setCorreoEmailProveedorDetails(\"\");\r\n    setDetallesBancariosProveedorDetils(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: false,\r\n      isModificarProveedor: false,\r\n      fileEditable: true,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n  };\r\n  const cargarDetailsOfProveedores = async () => {\r\n    if (usuario?.token && modalProveedoresDates?.id_proveedor) {\r\n      const result = await getProveedorById(\r\n        usuario.token,\r\n        modalProveedoresDates.id_proveedor\r\n      );\r\n      if (result) {\r\n        setIdProveedorDetails(modalProveedoresDates.id_proveedor);\r\n        setNombreProveedorDetails(result.nombre);\r\n        setCorreoEmailProveedorDetails(result.email || \"\");\r\n        setDireccionProveedorDetails(result.direccion || \"\");\r\n        setTelefonoProveedorDetails(result.telefono || \"\");\r\n        setNotaProveedorDetails(result.nota || \"\");\r\n        setCfiProveedorDetails(result.Cfi || \"\");\r\n        setDetallesBancariosProveedorDetils(result.detalle_bancario || \"\");\r\n\r\n        const resultEntradasByProveedor = await getAllEntradasByProveedorId(\r\n          usuario.token,\r\n          modalProveedoresDates.id_proveedor\r\n        );\r\n        if (resultEntradasByProveedor) {\r\n          const entradasMapeados: EntradaShowModal[] = await Promise.all(\r\n            resultEntradasByProveedor.map(async (element: any) => ({\r\n              id_entrada: element.id_entrada,\r\n              nombreProducto: element.producto.nombre,\r\n              cantidad: element.cantidad,\r\n              costo: element.costo,\r\n              fecha: element.fecha,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setEntradasByProveedor(entradasMapeados);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<Proveedor[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarProveedor(\r\n          usuario.token,\r\n          nombreProveedorSearch,\r\n          telefonoSearch,\r\n          correoEmyleSearch,\r\n          detallesBancariosSearch\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Proveedor[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Proveedor: element.id_proveedor,\r\n              nombre: element.nombre,\r\n              correo: element.email || \"\",\r\n              direccion: element.direccion || \"\",\r\n              telefono: element.telefono || \"\",\r\n              nota: element.nota || \"\",\r\n              cif: element.Cif || \"\",\r\n              detalle_bancario: element.detalle_bancario || \"\",\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    filtrarYOrdenarProovedores();\r\n  }, [selectedOptionTipoOrden]);\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfProveedores();\r\n  }, [modalProveedoresDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosProveedores = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllProveedores(usuario.token);\r\n\r\n        if (result && Array.isArray(result.data)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: Proveedor[] = await Promise.all(\r\n            result.data.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Proveedor: element.id_proveedor, // Mapea 'id_proovedor' a 'id_Proveedor'\r\n                nombre: element.nombre, // Mapea 'nombre' directamente\r\n                correo: element.email || \"\", // Asume que hay un campo 'correo' o usa un valor por defecto\r\n                detalle_bancario: element.detalle_bancario || \"\", // Asume que hay un campo 'detalle_bancario' o usa un valor por defecto\r\n                telefono: element.telefono || \"\", // Mapea un teléfono o usa un valor por defecto\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron proveedoress.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener los proveedores o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de los proveedores\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de los proovedores\"\r\n      );\r\n    }\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarProovedores();\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosProveedores();\r\n        getDatesTiendaPiker();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarProovedores = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let productosFiltrados: Proveedor[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n        /*\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortProductos?.criterioOrden && selectedOptionTipoOrden) {\r\n          productosFiltrados = await ordenarProducts(\r\n            usuario.token,\r\n            productosFiltrados,\r\n            sortProductos.criterioOrden,\r\n            selectedOptionTipoOrden === \"option1\" ? true : false\r\n          );\r\n        }\r\n*/\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(productosFiltrados);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setNombreProveedorDetails(\"\");\r\n    setCorreoEmailProveedorDetails(\"\");\r\n    setDireccionProveedorDetails(\"\");\r\n    setTelefonoProveedorDetails(\"\");\r\n    setNotaProveedorDetails(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: true,\r\n      fileEditable: true,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProveedorSearch(\"\");\r\n    setCorreoEmyleSearch(\"\");\r\n    setDetallesBancariosSearch(\"\");\r\n    setTelefonoSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewProveedor = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Agregando proveedor. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL AGREGAR PROVEEDOR. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (nombreProveedorDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombre del proveedor no puede ser vacío\";\r\n        flag = false;\r\n      }\r\n\r\n      if (flag) {\r\n        await addProveedor(\r\n          usuario.token,\r\n          nombreProveedorDetails,\r\n          correoEmailProveedorDetails,\r\n          telefonoProveedorDetails,\r\n          direccionProveedorDetails,\r\n          notaProveedorDetails,\r\n          cfiProveedorDetails,\r\n          detallesBancariosProveedorDetils\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó al sistema al proveedor ${nombreProveedorDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          3\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(\r\n          `El Proveedor \"${nombreProveedorDetails}\" fue insertado con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreProveedorDetails(\"\");\r\n        setTelefonoProveedorDetails(\"\");\r\n        setCorreoEmailProveedorDetails(\"\");\r\n        setDireccionProveedorDetails(\"\");\r\n        setNotaProveedorDetails(\"\");\r\n        setCfiProveedorDetails(\"\");\r\n        setDetallesBancariosProveedorDetils(\"\");\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarProveedor = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Modificando proveedor. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR PROVEEDOR. Compruebe los siguientes campos:\\n\";\r\n\r\n      if (nombreProveedorDetails.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-El nombre del proveedor no puede ser vacío\";\r\n      }\r\n\r\n      if (flag) {\r\n        await actualizarProveedor(\r\n          usuario.token,\r\n          idProveedorDetails,\r\n          nombreProveedorDetails,\r\n          correoEmailProveedorDetails,\r\n          telefonoProveedorDetails,\r\n          direccionProveedorDetails,\r\n          notaProveedorDetails,\r\n          cfiProveedorDetails,\r\n          detallesBancariosProveedorDetils\r\n        );\r\n        // Agregar Acción de usuario modificar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó al proveedor ${nombreProveedorDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          3\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(\r\n          `El Proveedor \"${nombreProveedorDetails}\" se modificó con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar proveedor\r\n  const eliminarProveedor = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Eliminando proveedor. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL TRATAR DE ELIMINAR EL PROVEEDOR. Motivos:\\n\";\r\n\r\n      if (flag) {\r\n        const resulDeletProveedor = await deleteProveedor(\r\n          usuario.token,\r\n          idProveedorDetails\r\n        );\r\n        if (resulDeletProveedor) {\r\n          // Agregar Acción de usuario agregar proveedor\r\n\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó al proveedor ${nombreProveedorDetails}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            3\r\n          );\r\n\r\n          setIsBotonModalMesajeVisible(true)\r\n          setModalMensaje(\r\n            `El Proveedor \"${nombreProveedorDetails}\" se eliminó con éxito`\r\n          );\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(true);\r\n        } else {\r\n          setIsBotonModalMesajeVisible(true)\r\n          validarCampos +=\r\n            \"-El proveedor ya ha echo operaciones en el sistema.\\n\";\r\n          setModalMensaje(validarCampos);\r\n          setModalMensajeView(true);\r\n        }\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n  const columnasMyDateTableEntradaModal = [\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Costo\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"telefono\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarProveedor && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Proveedor</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableProveedores\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Proveedor:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del proveedor\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={nombreProveedorSearch}\r\n                    onChangeText={setNombreProveedorSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Correo del Proveedor:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Correo del Proveedor\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={correoEmyleSearch}\r\n                    onChangeText={setCorreoEmyleSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Detalles Bancarios:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Detalles Bancarios\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={detallesBancariosSearch}\r\n                    onChangeText={setDetallesBancariosSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Número de Teléfono:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Número de Teléfono\"\r\n                    value={telefonoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setTelefonoSearch}\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarProovedores();\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Proveedor\"\r\n                  : \"Agregar Proveedor\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  value={nombreProveedorDetails}\r\n                  onChangeText={setNombreProveedorDetails}\r\n                  placeholder=\"Nombre del proveedor\"\r\n                />\r\n\r\n                {/* Dirección del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  value={direccionProveedorDetails}\r\n                  onChangeText={setDireccionProveedorDetails}\r\n                  placeholder=\"Dirección del Proveedor\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y CIF */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoProveedorDetails}\r\n                      onChangeText={setTelefonoProveedorDetails}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CIF */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Código de Identificación Fiscal (CIF)\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={cfiProveedorDetails}\r\n                      onChangeText={setCfiProveedorDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Código de Identificación Fiscal\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailProveedorDetails}\r\n                      onChangeText={setCorreoEmailProveedorDetails}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosProveedorDetils}\r\n                      onChangeText={setDetallesBancariosProveedorDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {modalProveedoresDates?.isModificarProveedor\r\n                  ? false\r\n                  : (modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          alignItems: \"center\",\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          flexDirection: \"row\",\r\n                          height: 350,\r\n                          width: \"90%\",\r\n                        }}\r\n                      >\r\n                        <MyDateTableModalShowDatesEntradas\r\n                          columns={columnasMyDateTableEntradaModal}\r\n                          items={entradasByProveedor}\r\n                        />\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Nota */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Nota\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  numberOfLines={5}\r\n                  value={notaProveedorDetails}\r\n                  onChangeText={setNotaProveedorDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos proveedor ${nombreProveedorDetails}?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al proveedor ${nombreProveedorDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarProveedor &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewProveedor()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarProveedor()\r\n                      : modificarProveedor()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (<TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Proveedores\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>)}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {(isPermisoAgregarProveedor ||\r\n            isPermisoModificarProveedor ||\r\n            isPermisoEliminarProveedor) && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Proveedor\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Proveedor:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del proveedor\"\r\n              value={nombreProveedorSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProveedorSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Correo del Proveedor:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Correo del Proveedor\"\r\n              value={correoEmyleSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setCorreoEmyleSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Detalles Bancarios:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Detalles Bancarios\"\r\n              value={detallesBancariosSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setDetallesBancariosSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Número de Teléfono:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Número de Teléfono\"\r\n              value={telefonoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setTelefonoSearch}\r\n            />\r\n\r\n            <View\r\n              style={{ width: \"100%\", flexDirection: \"row\", marginTop: \"5%\" }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarProovedores()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableProveedores\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Proveedor\"\r\n                  : \"Agregar Proveedor\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  value={nombreProveedorDetails}\r\n                  onChangeText={setNombreProveedorDetails}\r\n                  placeholder=\"Nombre del proveedor\"\r\n                />\r\n\r\n                {/* Dirección del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  value={direccionProveedorDetails}\r\n                  onChangeText={setDireccionProveedorDetails}\r\n                  placeholder=\"Dirección del Proveedor\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y CIF */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoProveedorDetails}\r\n                      onChangeText={setTelefonoProveedorDetails}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CIF */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Código de Identificación Fiscal (CIF)\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={cfiProveedorDetails}\r\n                      onChangeText={setCfiProveedorDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Código de Identificación Fiscal\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailProveedorDetails}\r\n                      onChangeText={setCorreoEmailProveedorDetails}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosProveedorDetils}\r\n                      onChangeText={setDetallesBancariosProveedorDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {modalProveedoresDates?.isModificarProveedor\r\n                  ? false\r\n                  : (modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          flex: 1,\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          height: 500,\r\n                          width: \"90%\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <MyDateTableModalShowDatesEntradas\r\n                          columns={columnasMyDateTableEntradaModal}\r\n                          items={entradasByProveedor}\r\n                        />\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Nota */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Nota\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  numberOfLines={5}\r\n                  value={notaProveedorDetails}\r\n                  onChangeText={setNotaProveedorDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos proveedor ${nombreProveedorDetails}?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al proveedor ${nombreProveedorDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarProveedor &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewProveedor()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarProveedor()\r\n                      : modificarProveedor()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (<TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Proveedores\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>)}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useModalProductsDates } from \"../contexts/AuxiliarContextFromModalProductsDates\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n  isProductoInTienda,\r\n} from \"../services/TiendaServices\";\r\nimport { deleteProducto, moverProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { TiendaPiker } from \"./MyDateTableTiendas\";\r\nimport CustomDropDownPikerFromMover from \"./CustomDropDownPikerFromMover\";\r\nimport { addNewMovimiento } from \"../services/MovimientosServices\";\r\nimport { Producto } from \"./MyDateTableProductos\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\ninterface Props {\r\n  items: Producto[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableProveedorModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableEnMyTienda: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalProductsDates, setModalProductsDates } = useModalProductsDates();\r\n  const { sortProductos, setSortProductos } = useSortProductos();\r\n  const { usuario, setUsuario } = useUsuario();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Producto[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [isModalMesajeMoverVisible, setModalMesajeMoverVisible] =\r\n    React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendaByProductoSelected, setTiendaByProductoSelected] =\r\n    React.useState<string | null>(\"\");\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaPiker[]\r\n  >([\r\n    { value: \"1\", label: \"Tienda 1\" },\r\n    { value: \"2\", label: \"Tienda 2\" },\r\n    { value: \"3\", label: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_producto: string) => {\r\n    setModalProductsDates({\r\n      id_producto: id_producto,\r\n      isAddProducto: true,\r\n      fileEditable: false,\r\n      isModificarProducto: false,\r\n      isAddProductoShowProveedoresTiendas: true,\r\n      isAddProductoShowProveedores: true,\r\n    });\r\n  };\r\n\r\n  // Controlar el doble clic del boton\r\n    const [isButtonDisabled, setIsButtonDisabled] = React.useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [tiendaMoverDesde, setTiendaMoverDesde] = React.useState(\"\");\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  const [nombreProductoOption, setNombreProductoOption] = React.useState(\"\");\r\n  const [tiendaNombreEspecificaDesde, setTiendaNombreEspecificoDesde] =\r\n    React.useState(\"\");\r\n  const [tiendaNombreEspecificaHasta, setTiendaNombreEspecificoHasta] =\r\n    React.useState(\"\");\r\n  const [tiendaMoverHasta, setTiendaMoverHasta] = React.useState(\"\");\r\n  const [tiendasByProductoDesde, setTiendasByProductoDesde] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [tiendasByProductoHasta, setTiendasByProductoHasta] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const moverProductoFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    if (usuario?.token) {\r\n      await moverProducto(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto\r\n      );\r\n      const currentDate = new Date();\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n      await addNewMovimiento(\r\n        usuario.token,\r\n        `${month}-${day}-${year}`,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto,\r\n        idProductoOption,\r\n        usuario.id_usuario\r\n      );\r\n\r\n      setModalMensaje(\r\n        `Se movieron ${cantidadMoverProducto} de ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}`\r\n      );\r\n      setModalMesajeMoverVisible(false);\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n\r\n  const moverProdcutoFunctionValidarCampos = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    let flag: boolean = true;\r\n    let validarCampos: string = \"Error. Comprueve los siguientes parámetros:\\n\";\r\n    let cantidadDelProductoEnLaTiendaDesde: number = 0;\r\n    // Obtener cantidad del producto en la tienda especifica desde dodne se quiere mover\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverDesde\r\n      );\r\n      if (result.encontrado) {\r\n        cantidadDelProductoEnLaTiendaDesde = parseInt(result.cantidad);\r\n      }\r\n    }\r\n    if (tiendaMoverDesde === tiendaMoverHasta) {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La tienda origen no puede ser igual a la tienda destino.\\n\";\r\n    }\r\n    if (cantidadMoverProducto === \"\") {\r\n      flag = false;\r\n      validarCampos += \"-La cantidad a mover no puede ser vacio.\\n\";\r\n    } else if (\r\n      parseInt(cantidadMoverProducto) > cantidadDelProductoEnLaTiendaDesde\r\n    ) {\r\n      // Comprobar que la cantidad que se desea mover no es mayor que la cantidad que existe en la tienda\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La cantidad a mover es mayor que la cantidad que existe en la tienda.\\n\";\r\n    }\r\n    if (isPermisoOpcionesDeCeldaMoverGeneral && tiendaMoverDesde === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija la tienda desde la que decea hacer el movimiento.\\n\";\r\n    }\r\n    if (tiendaMoverHasta === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija una tienda a la que desea hacer el movimiento.\\n\";\r\n    }\r\n\r\n    if (flag) {\r\n      const tiendaEspecificaHasta = tiendasByProductoHasta.find(\r\n        (tienda) => tienda.value === tiendaMoverHasta\r\n      );\r\n      setTiendaNombreEspecificoHasta(String(tiendaEspecificaHasta?.label));\r\n      const tiendaEspecificaDesde = tiendasByProductoDesde.find(\r\n        (tienda) => tienda.value === tiendaMoverDesde\r\n      );\r\n      setTiendaNombreEspecificoDesde(String(tiendaEspecificaDesde?.label));\r\n      setModalMoverVisible(false);\r\n      setModalMesajeMoverVisible(true);\r\n    } else {\r\n      setModalMensaje(validarCampos);\r\n      setModalMoverVisible(false);\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n\r\n  // Cargar datos de las tiendas para mover un producto\r\n  const cargarDatosTiendaParaMover = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n      const resultTiendas = await getAllTiendasByProduct(\r\n        usuario.token,\r\n        idProductoOption\r\n      );\r\n\r\n      if (\r\n        result &&\r\n        Array.isArray(result.data) &&\r\n        resultTiendas !== false &&\r\n        Array.isArray(resultTiendas)\r\n      ) {\r\n        const allTiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n        let auxIdTiendas: string[] = [];\r\n        let auxDataTiendasProducto: TiendaPiker[] = [];\r\n        resultTiendas.forEach(async (element) => {\r\n          // Filtrar productos que esten en la tienda pero que no esten en 0\r\n          if (parseInt(element.cantidad) > 0) {\r\n            auxIdTiendas.push(element.id_tienda);\r\n          }\r\n        });\r\n        for (let element of auxIdTiendas) {\r\n          let item: TiendaPiker = { value: \"\", label: \"\" };\r\n          const datosTendaExisteProducto = await getTiendaById(\r\n            usuario.token,\r\n            element\r\n          );\r\n          item.label = datosTendaExisteProducto.nombre;\r\n          item.value = element;\r\n          auxDataTiendasProducto.push(item);\r\n        }\r\n\r\n        // Verificar si el valor existe en auxDataTiendasProducto\r\n        let existeTienda: boolean = false;\r\n\r\n        existeTienda = auxDataTiendasProducto.some((tienda) => {\r\n          tienda.value === usuario.id_tienda;\r\n        });\r\n\r\n        for (let index = 0; index < auxDataTiendasProducto.length; index++) {\r\n          if (auxDataTiendasProducto[index].value === usuario.id_tienda) {\r\n            existeTienda = true;\r\n          }\r\n        }\r\n\r\n        if (existeTienda) {\r\n          // Agregar un valor si es que la tienda del usuario es la desde\r\n          setTiendaMoverDesde(usuario.id_tienda);\r\n        }\r\n        if (!isPermisoOpcionesDeCeldaMoverGeneral) {\r\n          setTiendaMoverDesde(usuario.id_tienda);\r\n        }\r\n\r\n        alert(`Datos cargador: ${auxDataTiendasProducto.length}`);\r\n        setTiendasByProductoDesde(auxDataTiendasProducto);\r\n        setTiendasByProductoHasta(allTiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n\r\n        // Cargar cambio de moneda\r\n        setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Función para comunicarse con el context de Sortroductos para ordenar luego\r\n  const sortProductosAux = (column: string) => {\r\n    let aux = \"\";\r\n    if (column === \"Nombre\") {\r\n      aux = \"option3\";\r\n    } else if (\r\n      column === \"PrecioUSD\" ||\r\n      column === \"PrecioCUP\" ||\r\n      column === \"Precio\"\r\n    ) {\r\n      aux = \"option4\";\r\n    } else if (column === \"Cantidad Total\" || column === \"Cantidad\") {\r\n      aux = \"option5\";\r\n    }\r\n    setSortProductos({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\",\r\n    });\r\n  };\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n            </Text>\r\n            {(column === \"PrecioUSD\" ||\r\n              column === \"Nombre\" ||\r\n              column === \"Precio\" ||\r\n              column === \"PrecioCUP\" ||\r\n              column === \"Cantidad\" ||\r\n              column === \"Cantidad Total\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortProductosAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idProductoOption, setIdProductoOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdProductoOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalProductsDates({\r\n        id_producto: idProductoOption,\r\n        isAddProducto: true,\r\n        fileEditable: true,\r\n        isModificarProducto: true,\r\n        isAddProductoShowProveedoresTiendas: true,\r\n        isAddProductoShowProveedores: true,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      alert(\"Entró a mover\");\r\n      cargarDatosTiendaParaMover();\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Producto !== idProductoOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idProductoOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Producto}\r\n                onPress={() => detailsModalView(item.id_Producto)}\r\n                style={{ justifyContent: \"space-around\" }}\r\n              >\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  {item.sku}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRow}>\r\n                  {(parseFloat(item.precioUSD) * cambioMoneda).toFixed(2)}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRow}>\r\n                  <Text>{item.cantidadTotal} </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idProductoOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Producto}\r\n                onPress={() => detailsModalView(item.id_Producto)}\r\n              >\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  {item.sku}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRow}>\r\n                  {(parseFloat(item.precioUSD) * cambioMoneda).toFixed(2)}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRow}>\r\n                  <Text>{item.cantidadTotal} </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalVisible}\r\n            animationType=\"fade\"\r\n            onRequestClose={() => toggleModal(\"\")}\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 250,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  Opciones\r\n                </Text>\r\n\r\n                {isPermisoOpcionesDeCeldaModificar && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Modificar\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/edit.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                      Modificar\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {isPermisoOpcionesDeCeldaEliminar && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Eliminar\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/delete.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                  isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Mover\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/mover.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\" }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {/* Botón para cerrar el modal */}\r\n                <TouchableOpacity\r\n                  onPress={() => toggleModal(\"\")}\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/* Modal para el Eliminar*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalEliminarVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 350,\r\n                  height: 200,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  ¿Estás seguro de que deseas eliminar este producto?\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\", // Espacio entre los botones\r\n                    width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => auxDeleteProductoById()}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Sí</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>No</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    setModalEliminarVisible(!isModalEliminarVisible)\r\n                  }\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/* Modal mensaje para el Mover*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMesajeMoverVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 350,\r\n                  height: 200,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {`Estas seguro de que deseas mover una cantidad de ${cantidadMoverProducto} del producto ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}?`}\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\", // Espacio entre los botones\r\n                    width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => moverProductoFunction()}\r\n                    disabled={isButtonDisabled}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Sí</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                    }\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>No</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                  }\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/* Modal para el Mover*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMoverVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {`Mover Producto \"${nombreProductoOption}\" a una Tienda\\ncon una cantidad de ${cantidadMoverProducto} en ${tiendaNombreEspecificaDesde}`}\r\n                </Text>\r\n\r\n                <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                  La cantidad que desea mover\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 50,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                    shadowRadius: 14, // Difuminado\r\n                    width: \"90%\",\r\n                    marginTop: \"2%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18, // Tamaño de letra más grande\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                    fontWeight: \"bold\", // Letra en negritas\r\n                    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Cantidad a mover\"\r\n                  value={cantidadMoverProducto}\r\n                  onChangeText={(text) => {\r\n                    const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                    setCantidadMoverProducto(numericValue);\r\n                  }}\r\n                />\r\n\r\n                <Text style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}>\r\n                  Tiendas para mover los productos\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                  {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                    <CustomDropDownPikerFromMover\r\n                      value={tiendaMoverDesde}\r\n                      items={tiendasByProductoDesde}\r\n                      placeholder=\"Tienda desde donde se quiere mover\"\r\n                      setValue={setTiendaMoverDesde}\r\n                    />\r\n                  )}\r\n                  <CustomDropDownPikerFromMover\r\n                    value={tiendaMoverHasta}\r\n                    items={tiendasByProductoHasta}\r\n                    placeholder=\"Tienda a la que se quiere mover\"\r\n                    setValue={setTiendaMoverHasta}\r\n                  />\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                  disabled={isButtonDisabled}\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Claro,\r\n                    borderRadius: 15,\r\n                    marginTop: 150,\r\n                    width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                    height: 50, // Altura fija para pantallas de escritorio\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 3, height: 4 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport {\r\n  createProductoInTienda,\r\n  expedirExelProductosEnMyTienda,\r\n  filterProductsEnTienda,\r\n  getAllProductos,\r\n  getProductoById,\r\n  getProductoCantidadTotal,\r\n  getRelacionProductoByTienda,\r\n  moverProducto,\r\n  ordenarProducts,\r\n  updateProductoTienda,\r\n} from \"../services/ProductoServices\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getCantidadProductoInTiendaEspecifica,\r\n  getTiendaById,\r\n  isProductoInTienda,\r\n  tienda_Realizarventa,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport {\r\n  launchImageLibrary,\r\n  ImagePickerResponse,\r\n  Asset,\r\n} from \"react-native-image-picker\";\r\nimport {\r\n  PanGestureHandler,\r\n  PanGestureHandlerGestureEvent,\r\n} from \"react-native-gesture-handler\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport {\r\n  MyDateTableModalShowDateProveedores,\r\n  ProveedoresShowModal,\r\n} from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { useModalProductsDates } from \"../contexts/AuxiliarContextFromModalProductsDates\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { crearimagenUnProducto } from \"../services/ImageServices\";\r\nimport { MyDateTableEnMyTienda } from \"../components/MyDataTableEnMyTienda\";\r\nimport CustomDropDownPikerFromMover from \"../components/CustomDropDownPikerFromMover\";\r\nimport { cerverHostImages } from \"../services/cerverHost\";\r\nimport { addNewMovimiento } from \"../services/MovimientosServices\";\r\nimport { Producto, ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport { getAllEntradasByProductoId } from \"../services/EntradaServices\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { getAllTipoServicios } from \"../services/TipoServiciosServices\";\r\nimport { getAllClientes } from \"../services/clienteServices\";\r\nimport { addVenta, getVentaByIDOfServicio } from \"../services/ventasServices\";\r\nimport { addServicio, getServicioByID } from \"../services/ServiciosServices\";\r\n\r\nexport default function EnMyTiendaView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortProductos, setSortProductos } = useSortProductos();\r\n  const { modalProductsDates, setModalProductsDates } = useModalProductsDates();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variable auxiliar para la optimización\r\n  const [optimizacionFirstLoadingData, setOptimizacionFirstLoadingData] =\r\n    useState(false);\r\n\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n  // Variables para controlar los campos de los formularios de agregar producto y ver datos\r\n  const [costoPromedio, setCostoPromedio] = useState(\"\");\r\n  const [cantidadProductoDetails, setCantidadProductoDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [nombreProductoDetails, setNombreProductoDetails] = useState(\"\");\r\n  const [precioProductoDetails, setPrecioProductoDetails] = useState(\"\");\r\n  const [precioEmpresaProductoDetails, setPrecioEmpresaProductoDetails] =\r\n    useState(\"\");\r\n  const [skuDetails, setSkuDetails] = useState(\"\");\r\n  const [descripcionProductoDetails, setDescripcionProductoDetails] =\r\n    useState(\"\");\r\n  // Estado para almacenar las imágenes seleccionadas\r\n  const [selectedImages, setSelectedImages] = useState<Asset[]>([]);\r\n\r\n  const [isModalMensajeViewExel, setModalMensajeViewExel] =\r\n    React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [isModalMesajeMoverVisible, setModalMesajeMoverVisible] =\r\n    React.useState(false);\r\n  const [isModalMesajeRestarVisible, setModalMesajeRestarVisible] =\r\n    React.useState(false);\r\n  const [isModalRestarProductos, setModalRestarProductos] =\r\n    React.useState(false);\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalVenderProductoVisible, setIsModalVenderProductoVisible] =\r\n    React.useState(false);\r\n\r\n  // ********** Variables y metodos para servicio **************\r\n  const [dropdownItemsNombreCliente, setDropDownItemsNombreCliente] = useState<\r\n    ProveedorPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreTipoServicio, setDropDownItemsNombreTipoServicio] =\r\n    useState<ProductoPiker[]>([]);\r\n\r\n  const [isVentaProducto, setIsVentaProducto] = useState(false);\r\n\r\n  const [isPermisoAgregarServicio, setIsPermisoAgregarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarServicio, setIsPermisoEliminarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoModificarServicio, setIsPermisoModificarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoServicioLocal, setIsPermisoServicioLocal] =\r\n    React.useState(false);\r\n  const [isPermisoServicioGeneral, setIsPermisoServicioGeneral] =\r\n    React.useState(false);\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idServicioDetails, setIdServicioDetails] = useState(\"\");\r\n  const [idClienteDetails, setIdClienteDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\r\n    usuario?.id_tienda ?? \"\"\r\n  );\r\n  const [idTipoServicioDetails, setIdTipoServicioDetails] = useState(\"2\");\r\n  const [cantidadProductoServicioDetails, setCantidadProductoServicioDetails] =\r\n    useState(\"1\");\r\n  const [costoPromedioProductoUSDDetails, setCostoPromedioProductoUSDDetails] =\r\n    useState(\"0\");\r\n  const [costoPromedioProductoCUPDetails, setCostoPromedioProductoCUPDetails] =\r\n    useState(\"0\");\r\n  const [precioUSDDetails, setPrecioUSDDetails] = useState(\"\");\r\n  const [precioCUPDetails, setPrecioCUPDetails] = useState(\"\");\r\n  const [notaDetails, setNotaDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n\r\n  // Variable auxiliar para el redondeo de memerio\r\n  const [auxRedondeo, setAuxRedondeo] = useState(\"\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const checkPermisoServicios = async () => {\r\n    if (usuario?.token) {\r\n      // Verificar y almacenar el permiso de agregar servicio\r\n      if (localStorage.getItem(\"resultAgregarServicio\") === null) {\r\n        const resultAgregarServicio = await isPermiso(\r\n          usuario.token,\r\n          \"26\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoAgregarServicio(resultAgregarServicio);\r\n        localStorage.setItem(\"resultAgregarServicio\", resultAgregarServicio);\r\n      } else {\r\n        setIsPermisoAgregarServicio(\r\n          Boolean(localStorage.getItem(\"resultAgregarServicio\"))\r\n        );\r\n      }\r\n\r\n      // Verificar y almacenar el permiso de eliminar servicio\r\n      if (localStorage.getItem(\"resultEliminarServicio\") === null) {\r\n        const resultEliminarServicio = await isPermiso(\r\n          usuario.token,\r\n          \"25\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoEliminarServicio(resultEliminarServicio);\r\n        localStorage.setItem(\"resultEliminarServicio\", resultEliminarServicio);\r\n      } else {\r\n        setIsPermisoEliminarServicio(\r\n          Boolean(localStorage.getItem(\"resultEliminarServicio\"))\r\n        );\r\n      }\r\n\r\n      // Verificar y almacenar el permiso de modificar servicio\r\n      if (localStorage.getItem(\"resultModificarServicio\") === null) {\r\n        const resultModificarServicio = await isPermiso(\r\n          usuario.token,\r\n          \"24\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoModificarServicio(resultModificarServicio);\r\n        localStorage.setItem(\r\n          \"resultModificarServicio\",\r\n          resultModificarServicio\r\n        );\r\n      } else {\r\n        setIsPermisoModificarServicio(\r\n          Boolean(localStorage.getItem(\"resultModificarServicio\"))\r\n        );\r\n      }\r\n\r\n      // Verificar y almacenar el permiso de servicio local\r\n      if (localStorage.getItem(\"resulServicioLocal\") === null) {\r\n        const resulServicioLocal = await isPermiso(\r\n          usuario.token,\r\n          \"26\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoServicioLocal(resulServicioLocal);\r\n        localStorage.setItem(\"resulServicioLocal\", resulServicioLocal);\r\n      } else {\r\n        setIsPermisoServicioLocal(\r\n          Boolean(localStorage.getItem(\"resulServicioLocal\"))\r\n        );\r\n      }\r\n\r\n      // Verificar y almacenar el permiso de servicio general\r\n      if (localStorage.getItem(\"resultServicioGeneral\") === null) {\r\n        const resultServicioGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"27\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoServicioGeneral(resultServicioGeneral);\r\n        localStorage.setItem(\"resultServicioGeneral\", resultServicioGeneral);\r\n      } else {\r\n        setIsPermisoServicioGeneral(\r\n          Boolean(localStorage.getItem(\"resultServicioGeneral\"))\r\n        );\r\n      }\r\n\r\n      // Cargar cambio de moneda\r\n      if (localStorage.getItem(\"cambioMoneda\") === null) {\r\n        const cambioMoneda = await getValorMonedaUSD(usuario.token);\r\n        setCambioMoneda(cambioMoneda);\r\n        localStorage.setItem(\"cambioMoneda\", cambioMoneda.toString());\r\n      } else {\r\n        setCambioMoneda(parseFloat(localStorage.getItem(\"cambioMoneda\")));\r\n      }\r\n    }\r\n  };\r\n  const getTipoServicioPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTipoServicios(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const tipoServiciosMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tipo_servicio,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTipoServicio(tipoServiciosMapeados);\r\n        setIdTipoServicioDetails(\"2\");\r\n      }\r\n    }\r\n  };\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Todas las tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n  const getClientesPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllClientes(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const ClientesMapeados: ProductoPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_cliente,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreCliente(ClientesMapeados);\r\n      }\r\n    }\r\n  };\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      let result: any;\r\n\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n      const resulServicioLocal = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      if (resultServicioGeneral) {\r\n        result = await getAllProductos(usuario.token);\r\n        if (result && Array.isArray(result.data)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.data.map(async (element: any) => ({\r\n              label: element.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      } else if (resulServicioLocal) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          usuario.id_tienda\r\n        );\r\n        if (result && Array.isArray(result.data)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.data.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const cargarDetailsOfProductoVenta = async () => {\r\n    if (usuario?.token) {\r\n      const result = await getServicioByID(usuario.token, idProductoDetails);\r\n\r\n      // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n      if (parseInt(idTipoServicioDetails) === 2) {\r\n        const resultventa = await getVentaByIDOfServicio(\r\n          usuario.token,\r\n          idServicioDetails\r\n        );\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(true);\r\n\r\n        // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n        if (resultventa) {\r\n          setIdProductoDetails(resultventa.producto.id_producto);\r\n          setCantidadProductoServicioDetails(resultventa.cantidad);\r\n          setIdTiendaDetails(result.tienda.id_tienda);\r\n          setPrecioUSDDetails(resultventa.producto.precio);\r\n          setPrecioCUPDetails(\r\n            String(parseInt(resultventa.producto.precio) * cambioMoneda)\r\n          );\r\n          setCostoPromedioProductoUSDDetails(\r\n            resultventa.producto.costo_acumulado\r\n          );\r\n        } else {\r\n          // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(true);\r\n\r\n          setIdProductoDetails(\"\");\r\n          setCantidadProductoServicioDetails(\"\");\r\n          setPrecioUSDDetails(\"\");\r\n          setPrecioCUPDetails(\"\");\r\n          setCostoPromedioProductoUSDDetails(\"\");\r\n        }\r\n      } else {\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(false);\r\n        setPrecioUSDDetails(result.precio);\r\n        setPrecioCUPDetails(String(parseInt(result.precio) * cambioMoneda));\r\n        setCostoPromedioProductoUSDDetails(result.costo);\r\n      }\r\n    }\r\n  };\r\n  const addNewServicio = async () => {\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      const auxIsProductoInTienda = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR SERVICIO. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (idClienteDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione un cliente. Si no hay datos del cliente seleccione anonimo\\n\";\r\n      }\r\n      if (idTipoServicioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione el tipo de servicio que está ofreciendo.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (auxIsProductoInTienda) {\r\n        if (\r\n          parseInt(auxIsProductoInTienda.cantidad) <\r\n          parseInt(cantidadProductoServicioDetails)\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que desea vender es mayor que la cantidad que hay en la tienda.\\n\";\r\n        }\r\n      }\r\n      if (costoPromedioProductoUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Digite el costo del servicio.\\n\";\r\n      }\r\n      if (precioUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina el precio cobrado al cliente.\\n\";\r\n      }\r\n      // Validaciones si es una venta\r\n      if (parseInt(idTipoServicioDetails) === 2) {\r\n        if (idProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos += \"-Seleccione un producto para vender.\\n\";\r\n        }\r\n        if (cantidadProductoServicioDetails === \"\") {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Defina la cantidad que desea vender del producto.\\n\";\r\n        }\r\n      }\r\n      if (flag) {\r\n        const resultAddServicio = await addServicio(\r\n          usuario.token,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          precioUSDDetails,\r\n          notaDetails,\r\n          idTiendaDetails,\r\n          idTipoServicioDetails,\r\n          idClienteDetails,\r\n          \"Not suport yet\",\r\n          \"not suport yet\"\r\n        );\r\n\r\n        //Agregar venta si es que es necezario\r\n        if (parseInt(idTipoServicioDetails) === 2) {\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            resultAddServicio.id_servicio,\r\n            cantidadProductoServicioDetails\r\n          );\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoServicioDetails)}`\r\n          );\r\n\r\n          // Agregar Acción de usuario agregar servicio normal\r\n          const nombreCliente = dropdownItemsNombreCliente.find((element) => {\r\n            return element.value === idClienteDetails;\r\n          });\r\n          const nombreTipoServicio = dropdownItemsNombreTipoServicio.find(\r\n            (element) => {\r\n              return element.value === idTipoServicioDetails;\r\n            }\r\n          );\r\n          const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n            return element.value === idProductoDetails;\r\n          });\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un servicio del tipo de servicio ${nombreTipoServicio?.label} al cliente ${nombreCliente?.label}. Se vendió una cantidad de ${cantidadProductoServicioDetails} del producto ${nombreProducto?.label} a un precio de ${precioUSDDetails} USD`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        } else {\r\n          // Agregar Acción de usuario agregar servicio normal\r\n          const nombreCliente = dropdownItemsNombreCliente.find((element) => {\r\n            return element.value === idClienteDetails;\r\n          });\r\n          const nombreTipoServicio = dropdownItemsNombreTipoServicio.find(\r\n            (element) => {\r\n              return element.value === idTipoServicioDetails;\r\n            }\r\n          );\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un servicio del tipo de servicio ${nombreTipoServicio?.label} a un precio de ${precioUSDDetails} USD al cliente ${nombreCliente?.label}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        }\r\n\r\n        await createProductoInTienda(\r\n          usuario.token,\r\n          idTipoServicioDetails,\r\n          idTiendaDetails\r\n        );\r\n        setModalMensaje(`El servicio se agregó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setPrecioCUPDetails(\"\");\r\n        setCantidadProductoServicioDetails(\"\");\r\n        setCostoPromedioProductoUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setNotaDetails(\"\");\r\n        setDescripcionDetails(\"\");\r\n        setIsModalVenderProductoVisible(false);\r\n        setModalProductsDates({\r\n          id_producto: \"\",\r\n          isAddProducto: false,\r\n          fileEditable: true,\r\n          isModificarProducto: false,\r\n          isAddProductoShowProveedoresTiendas: false,\r\n          isAddProductoShowProveedores: false,\r\n        });\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  const callVenta = async () => {\r\n    if (usuario?.token) {\r\n      setIsDateLoaded(false);\r\n      const currentDate = new Date();\r\n\r\n      // Extraemos el año, mes y día de la fecha actual\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n      setFechaDiaDetails(String(parseInt(day)));\r\n      setFechaMesDetails(String(parseInt(month)));\r\n      setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n      setIsModalVenderProductoVisible(true);\r\n      setIsDateLoaded(true);\r\n    }\r\n  };\r\n  // ********** Variables y metodos para servicio **************\r\n\r\n  // Constante para almacenar variables para mover roducto\r\n  const [nombreTiendaUsuarioActual, setNombreTiendaUsuarioActual] =\r\n    React.useState(\"\");\r\n  const [cantidadTiendaUsuarioActual, setCantidadTiendaUsuarioActual] =\r\n    React.useState(\"\");\r\n  const [tiendaMoverDesde, setTiendaMoverDesde] = React.useState(\"\");\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  const [cantidadRestarProducto, setCantidadRestarProducto] =\r\n    React.useState(\"\");\r\n  const [tiendaNombreEspecificaDesde, setTiendaNombreEspecificoDesde] =\r\n    React.useState(\"\");\r\n  const [tiendaNombreEspecificaHasta, setTiendaNombreEspecificoHasta] =\r\n    React.useState(\"\");\r\n  const [tiendaMoverHasta, setTiendaMoverHasta] = React.useState(\"\");\r\n  const [tiendasByProductoDesde, setTiendasByProductoDesde] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [tiendasByProductoHasta, setTiendasByProductoHasta] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  // Restar productos function\r\n  const restarProductosValidarCampos = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string = `ERROR AL RESTAR PRODUCTOS. Verifique los siguientes parámetros.\\n`;\r\n\r\n      if (\r\n        parseInt(cantidadTiendaUsuarioActual) < parseInt(cantidadRestarProducto)\r\n      ) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-La cantidad a restar es mayor que la cantidad en la tienda.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        setModalRestarProductos(false);\r\n        setModalMesajeRestarVisible(true);\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n        setIsBotonModalMesajeVisible(true);\r\n        setReflechModalMensajeView(false);\r\n      }\r\n    }\r\n  };\r\n  const restarProductosFuction = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Restando producto. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario) {\r\n      let cantidadNueva: number =\r\n        parseInt(cantidadTiendaUsuarioActual) -\r\n        parseInt(cantidadRestarProducto);\r\n      await updateProductoTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        selectedValueNombreTienda,\r\n        String(cantidadNueva)\r\n      );\r\n\r\n      // Agregar Acción de usuario mover producto\r\n\r\n      const currentDate = new Date();\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n      let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} restó una cantidad de ${cantidadRestarProducto} de ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual}`;\r\n      await addAccionUsuario(\r\n        usuario.token,\r\n        auxAddAccionUsuarioDescripcion,\r\n        `${year}-${month}-${day}`,\r\n        usuario.id_usuario,\r\n        1\r\n      );\r\n\r\n      setModalMensaje(\r\n        `Se restaron ${cantidadRestarProducto} de la tienda ${nombreTiendaUsuarioActual}`\r\n      );\r\n      setIsBotonModalMesajeVisible(true);\r\n      setModalMensajeView(true);\r\n      setIsBotonModalMesajeVisible(true);\r\n      setReflechModalMensajeView(true);\r\n    }\r\n  };\r\n  // Mover productos\r\n  const moverProductoFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Moviendo producto. Espere por favor\");\r\n    setModalMensajeView(true);\r\n\r\n    if (usuario?.token) {\r\n      await moverProducto(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto\r\n      );\r\n      const currentDate = new Date();\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n      await addNewMovimiento(\r\n        usuario.token,\r\n        `${month}-${day}-${year}`,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto,\r\n        idProductoDetails,\r\n        usuario.id_usuario\r\n      );\r\n\r\n      await createProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        tiendaMoverHasta\r\n      );\r\n\r\n      // Agregar Acción de usuario mover producto\r\n\r\n      let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} movió ${cantidadMoverProducto} de ${nombreProductoDetails} desde la tienda ${tiendaNombreEspecificaDesde} hasta la tienda ${tiendaNombreEspecificaHasta}`;\r\n      await addAccionUsuario(\r\n        usuario.token,\r\n        auxAddAccionUsuarioDescripcion,\r\n        `${year}-${month}-${day}`,\r\n        usuario.id_usuario,\r\n        2\r\n      );\r\n\r\n      setModalMensaje(\r\n        `Se movieron ${cantidadMoverProducto} de ${nombreProductoDetails} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}`\r\n      );\r\n      setIsBotonModalMesajeVisible(true);\r\n      setReflechModalMensajeView(true);\r\n      setModalMesajeMoverVisible(false);\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n\r\n  const moverProdcutoFunctionValidarCampos = async () => {\r\n    let flag: boolean = true;\r\n    let validarCampos: string = \"Error. Compruebe los siguientes parámetros:\\n\";\r\n    let cantidadDelProductoEnLaTiendaDesde: number = 0;\r\n    // Obtener cantidad del producto en la tienda especifica desde dodne se quiere mover\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        tiendaMoverDesde\r\n      );\r\n      if (result.encontrado) {\r\n        cantidadDelProductoEnLaTiendaDesde = parseInt(result.cantidad);\r\n      }\r\n    }\r\n    if (tiendaMoverDesde === tiendaMoverHasta) {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La tienda origen no puede ser igual a la tienda destino.\\n\";\r\n    }\r\n    if (cantidadMoverProducto === \"0\") {\r\n      flag = false;\r\n      validarCampos += \"-La cantidad a mover debe ser mayor que 0.\\n\";\r\n    }\r\n    if (cantidadMoverProducto === \"\") {\r\n      flag = false;\r\n      validarCampos += \"-La cantidad a mover no puede ser vacío.\\n\";\r\n    } else if (\r\n      parseInt(cantidadMoverProducto) > cantidadDelProductoEnLaTiendaDesde\r\n    ) {\r\n      // Comprobar que la cantidad que se desea mover no es mayor que la cantidad que existe en la tienda\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La cantidad a mover es mayor que la cantidad que existe en la tienda.\\n\";\r\n    }\r\n    if (isPermisoMoverGeneral && tiendaMoverDesde === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija la tienda desde la que decea hacer el movimiento.\\n\";\r\n    }\r\n    if (tiendaMoverHasta === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija una tienda a la que desea hacer el movimiento.\\n\";\r\n    }\r\n\r\n    if (flag) {\r\n      const tiendaEspecificaHasta = tiendasByProductoHasta.find(\r\n        (tienda) => tienda.value === tiendaMoverHasta\r\n      );\r\n      setTiendaNombreEspecificoHasta(String(tiendaEspecificaHasta?.label));\r\n      const tiendaEspecificaDesde = tiendasByProductoDesde.find(\r\n        (tienda) => tienda.value === tiendaMoverDesde\r\n      );\r\n      setTiendaNombreEspecificoDesde(String(tiendaEspecificaDesde?.label));\r\n      setModalMoverVisible(false);\r\n      setReflechModalMensajeView(true);\r\n      setModalMesajeMoverVisible(true);\r\n    } else {\r\n      setModalMensaje(validarCampos);\r\n      setModalMensajeView(true);\r\n      setIsBotonModalMesajeVisible(true);\r\n      setReflechModalMensajeView(false);\r\n    }\r\n  };\r\n  // Función para buscar cuando se precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarProductos();\r\n    }\r\n  };\r\n\r\n  // Cargar datos de las tiendas para mover un producto\r\n  const cargarDatosTiendaParaMover = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n      const resultTiendas = await getAllTiendasByProduct(\r\n        usuario.token,\r\n        idProductoDetails\r\n      );\r\n\r\n      if (\r\n        result &&\r\n        Array.isArray(result.data) &&\r\n        resultTiendas !== false &&\r\n        Array.isArray(resultTiendas)\r\n      ) {\r\n        const allTiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n        let auxIdTiendas: string[] = [];\r\n        let auxDataTiendasProducto: TiendaPiker[] = [];\r\n        resultTiendas.forEach(async (element) => {\r\n          // Filtrar productos que esten en la tienda pero que no esten en 0\r\n          if (parseInt(element.cantidad) > 0) {\r\n            auxIdTiendas.push(element.id_tienda);\r\n          }\r\n        });\r\n        for (let element of auxIdTiendas) {\r\n          let item: TiendaPiker = { value: \"\", label: \"\" };\r\n          const datosTendaExisteProducto = await getTiendaById(\r\n            usuario.token,\r\n            element\r\n          );\r\n          item.label = datosTendaExisteProducto.nombre;\r\n          item.value = element;\r\n          auxDataTiendasProducto.push(item);\r\n        }\r\n\r\n        // Verificar si el valor existe en auxDataTiendasProducto\r\n        let existeTienda: boolean = false;\r\n\r\n        existeTienda = auxDataTiendasProducto.some((tienda) => {\r\n          tienda.value === usuario.id_tienda;\r\n        });\r\n\r\n        for (let index = 0; index < auxDataTiendasProducto.length; index++) {\r\n          if (auxDataTiendasProducto[index].value === usuario.id_tienda) {\r\n            existeTienda = true;\r\n          }\r\n        }\r\n\r\n        if (existeTienda) {\r\n          // Agregar un valor si es que la tienda del usuario es la desde\r\n          setTiendaMoverDesde(usuario.id_tienda);\r\n        }\r\n        if (!isPermisoMoverGeneral) {\r\n          setTiendaMoverDesde(usuario.id_tienda);\r\n        }\r\n\r\n        setTiendasByProductoDesde(auxDataTiendasProducto);\r\n        setTiendasByProductoHasta(allTiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const cargarVariablesMover = async () => {\r\n    if (usuario?.token) {\r\n      const resultTienda = await getTiendaById(usuario.token, tiendaMoverDesde);\r\n      const resultCantidadEnTienda = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        tiendaMoverDesde\r\n      );\r\n\r\n      setCantidadTiendaUsuarioActual(resultCantidadEnTienda.cantidad);\r\n      setNombreTiendaUsuarioActual(resultTienda.nombre);\r\n    }\r\n  };\r\n  // Controlar las variables que se muestran en el modal de mover\r\n  useEffect(() => {\r\n    if (optimizacionFirstLoadingData) {\r\n      cargarVariablesMover();\r\n    }\r\n  }, [tiendaMoverDesde]);\r\n\r\n  useEffect(() => {\r\n    if (auxRedondeo === \"PrecioCUP\") {\r\n      setPrecioUSDDetails(parseFloat(precioUSDDetails).toFixed(4));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"PrecioUSD\") {\r\n      setPrecioCUPDetails(parseFloat(precioCUPDetails).toFixed(0));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoCUP\") {\r\n      setCostoPromedioProductoUSDDetails(\r\n        parseFloat(costoPromedioProductoUSDDetails).toFixed(4)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoUSD\") {\r\n      setCostoPromedioProductoCUPDetails(\r\n        parseFloat(costoPromedioProductoCUPDetails).toFixed(0)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    }\r\n    setAuxRedondeo(\"\");\r\n  }, [auxRedondeo]);\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfProductoVenta();\r\n  }, [idTipoServicioDetails]);\r\n  useEffect(() => {\r\n    if (idProductoDetails !== \"\" && usuario?.token) {\r\n      const auxiliarAsyncFuncion = async () => {\r\n        const resultProdcuto = await getProductoById(\r\n          usuario.token,\r\n          idProductoDetails\r\n        );\r\n        // Cargar el costo promedio del producto seleccionado\r\n        setCostoPromedioProductoUSDDetails(resultProdcuto.costo_acumulado);\r\n        // Cargar precio del producto seleccioando en USD y CUP\r\n        setPrecioUSDDetails(resultProdcuto.precio ?? 0);\r\n        setPrecioCUPDetails(\r\n          String(parseFloat(resultProdcuto.precio) * cambioMoneda) ?? 0\r\n        );\r\n      };\r\n      auxiliarAsyncFuncion();\r\n    }\r\n  }, [idProductoDetails]);\r\n\r\n  // Método para exportar a exel\r\n  const exportarExel = async () => {\r\n    setModalMensaje(\r\n      \"Recopilando datos de todos los productos filtrados para el Exel. Espere un momento por favor.\"\r\n    );\r\n    setLoadingOfExel(true);\r\n    setModalMensajeViewExel(true);\r\n    if (usuario?.token) {\r\n      const currentDate = new Date();\r\n\r\n      // Extraemos el año, mes y día de la fecha actual\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n      const result = await expedirExelProductosEnMyTienda(\r\n        usuario.token,\r\n        filterItems\r\n      );\r\n\r\n      if (result) {\r\n        const url = window.URL.createObjectURL(result);\r\n\r\n        // Crea un enlace de descarga\r\n        const a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = `${usuario.nombre_tienda}_${day}-${month}-${year}.xlsx`; // Nombre del archivo descargado\r\n        document.body.appendChild(a);\r\n\r\n        // Haz clic en el enlace para iniciar la descarga\r\n        a.click();\r\n\r\n        // Limpia el enlace creado y la URL Blob\r\n        document.body.removeChild(a);\r\n        window.URL.revokeObjectURL(url);\r\n      } else {\r\n        console.error(\"No se pudo descargar el archivo.\");\r\n      }\r\n    }\r\n    setLoadingOfExel(false);\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoButtonAddProducto, setIsPermisoButtonAddProducto] =\r\n    useState(false);\r\n  const [isPermisoHistorialDeProveedores, setIsPermisoHistorialDeProveedores] =\r\n    useState(false);\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [isPermisoMoverLocal, setIsPermisoMoverLocal] = React.useState(false);\r\n  const [isPermisoMoverGeneral, setIsPermisoMoverGeneral] =\r\n    React.useState(false);\r\n  const [isPermisoRestarProducto, setIsPermisoRestarProducto] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      // Verificar y almacenar el permiso del botón de agregar producto\r\n      if (localStorage.getItem(\"resultPermisoButonAddProducto\") === null) {\r\n        const resultPermisoButonAddProducto = await isPermiso(\r\n          usuario.token,\r\n          \"6\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoButtonAddProducto(resultPermisoButonAddProducto);\r\n        localStorage.setItem(\r\n          \"resultPermisoButonAddProducto\",\r\n          resultPermisoButonAddProducto\r\n        );\r\n      } else {\r\n        setIsPermisoButtonAddProducto(\r\n          Boolean(localStorage.getItem(\"resultPermisoButonAddProducto\"))\r\n        );\r\n      }\r\n\r\n      // Verificar y almacenar el permiso del historial de proveedores\r\n      if (\r\n        localStorage.getItem(\"resultPermisoHistorialDeProveedores\") === null\r\n      ) {\r\n        const resultPermisoHistorialDeProveedores = await isPermiso(\r\n          usuario.token,\r\n          \"38\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoHistorialDeProveedores(resultPermisoHistorialDeProveedores);\r\n        localStorage.setItem(\r\n          \"resultPermisoHistorialDeProveedores\",\r\n          resultPermisoHistorialDeProveedores\r\n        );\r\n      } else {\r\n        setIsPermisoHistorialDeProveedores(\r\n          Boolean(localStorage.getItem(\"resultPermisoHistorialDeProveedores\"))\r\n        );\r\n      }\r\n\r\n      // Verificar y almacenar el permiso del botón de modificar\r\n      if (localStorage.getItem(\"resultPermisoButonOptionModificar\") === null) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        localStorage.setItem(\r\n          \"resultPermisoButonOptionModificar\",\r\n          resultPermisoButonOptionModificar\r\n        );\r\n      } else {\r\n      }\r\n\r\n      // Verificar y almacenar el permiso del botón de eliminar\r\n      if (localStorage.getItem(\"resultPermisoButonOptionEliminar\") === null) {\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        localStorage.setItem(\r\n          \"resultPermisoButonOptionEliminar\",\r\n          resultPermisoButonOptionEliminar\r\n        );\r\n      } else {\r\n      }\r\n\r\n      // Verificar y almacenar el permiso del botón de mover local\r\n      if (localStorage.getItem(\"resultPermisoButonOptionMoverLocal\") === null) {\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoMoverLocal(resultPermisoButonOptionMoverLocal);\r\n        localStorage.setItem(\r\n          \"resultPermisoButonOptionMoverLocal\",\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n      } else {\r\n        setIsPermisoMoverLocal(\r\n          Boolean(localStorage.getItem(\"resultPermisoButonOptionMoverLocal\"))\r\n        );\r\n      }\r\n\r\n      // Verificar y almacenar el permiso del botón de mover general\r\n      if (\r\n        localStorage.getItem(\"resultPermisoButonOptionMoverGeneral\") === null\r\n      ) {\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoMoverGeneral(resultPermisoButonOptionMoverGeneral);\r\n        localStorage.setItem(\r\n          \"resultPermisoButonOptionMoverGeneral\",\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n      } else {\r\n        setIsPermisoMoverGeneral(\r\n          Boolean(localStorage.getItem(\"resultPermisoButonOptionMoverGeneral\"))\r\n        );\r\n      }\r\n\r\n      // Verificar y almacenar el permiso de venta general\r\n      if (localStorage.getItem(\"resultPermisoVentaGeneral\") === null) {\r\n        const resultPermisoVentaGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"27\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoRestarProducto(resultPermisoVentaGeneral);\r\n        localStorage.setItem(\r\n          \"resultPermisoVentaGeneral\",\r\n          resultPermisoVentaGeneral\r\n        );\r\n      } else {\r\n        setIsPermisoRestarProducto(\r\n          Boolean(localStorage.getItem(\"resultPermisoVentaGeneral\"))\r\n        );\r\n      }\r\n\r\n      // Llamar a la función de verificación de permisos de servicios\r\n      checkPermisoServicios();\r\n\r\n      // Actualiza el estado con los resultados\r\n      setIsPermisoOpcionesDeCelda(\r\n        Boolean(localStorage.getItem(\"resultPermisoButonOptionEliminar\")) ||\r\n          Boolean(localStorage.getItem(\"resultPermisoButonOptionModificar\")) ||\r\n          Boolean(localStorage.getItem(\"resultPermisoButonOptionMoverLocal\")) ||\r\n          Boolean(localStorage.getItem(\"resultPermisoButonOptionMoverGeneral\"))\r\n      );\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Producto[]>([]);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  const getTiendasByProducto = async (id_producto: string) => {\r\n    if (usuario?.token) {\r\n      const result = await getAllTiendasByProduct(usuario.token, id_producto);\r\n\r\n      // Asegurándonos de que `result` es un array y contiene los datos esperados.\r\n      if (Array.isArray(result)) {\r\n        // Mapeamos los datos de tiendas al formato de TiendaShowModal.\r\n        const tiendas: TiendaShowModal[] = result.map((item) => ({\r\n          id_tienda: item.tienda.id_tienda.toString(),\r\n          nombre: item.tienda.nombre,\r\n          cantidad: item.cantidad.toString(), // Aquí usamos `item.cantidad` directamente.\r\n        }));\r\n\r\n        // Actualizamos el estado con las tiendas formateadas.\r\n        setTiendasByProducto(tiendas);\r\n      }\r\n    }\r\n  };\r\n\r\n  const cargarProveedoresPorProducto = async (id_producto: string) => {\r\n    try {\r\n      if (usuario?.token) {\r\n        // Llamamos a la API para obtener todas las entradas según el producto\r\n        const entradas = await getAllEntradasByProductoId(\r\n          usuario?.token,\r\n          id_producto\r\n        );\r\n        const resultProducto = await getProductoById(\r\n          usuario.token,\r\n          id_producto\r\n        );\r\n\r\n        if (entradas) {\r\n          setCostoPromedio(\r\n            resultProducto.costo_acumulado\r\n          );\r\n          // Mapeamos los datos de las entradas para obtener solo la información que necesitamos\r\n          const proveedores = entradas.map((entrada: any) => ({\r\n            id_proveedor: entrada.proveedor.id_proveedor,\r\n            nombre: entrada.proveedor.nombre,\r\n            cantidad: entrada.cantidad,\r\n            costoPorUnidad: entrada.costo,\r\n          }));\r\n\r\n          // Actualizamos el estado con los datos obtenidos\r\n          setProveedorByProducto(proveedores);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error al cargar los proveedores por producto:\", error);\r\n    }\r\n  };\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([]);\r\n\r\n  const [dropdownItems, setDropDownItems] = useState<TiendaPiker[]>([]);\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [sKUSearch, setSKUSearch] = useState(\"\");\r\n  const [cantidadSearch, setCantidadSearch] = useState(\"\");\r\n  const [rangoPrecioDesdeSearch, setRangoPrecioDesdeSearch] = useState(\"\");\r\n  const [rangoPrecioHastaSearch, setRangoPrecioHastaSearch] = useState(\"\");\r\n  const [selectedValueNombreTienda, setSelectedValueNombreTienda] = useState<\r\n    string | null\r\n  >(usuario?.id_tienda);\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingOfExel, setLoadingOfExel] = useState(false);\r\n\r\n  const getDatesTiendaPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItems(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar producto\r\n  const callModalAddProducto = () => {\r\n    setModalProductsDates({\r\n      id_producto: \"\",\r\n      isAddProducto: false,\r\n      isModificarProducto: false,\r\n      fileEditable: true,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isAddProductoShowProveedores: false,\r\n    });\r\n  };\r\n  const cargarDetailsOfProducto = async () => {\r\n    if (usuario?.token && modalProductsDates?.id_producto) {\r\n      const result = await getProductoById(\r\n        usuario.token,\r\n        modalProductsDates.id_producto\r\n      );\r\n\r\n      if (result) {\r\n        // Establecer los detalles del producto\r\n        setIdProductoDetails(result.id_producto);\r\n        setNombreProductoDetails(result.nombre);\r\n        setPrecioProductoDetails(result.precio);\r\n        setPrecioEmpresaProductoDetails(result.precio_empresa);\r\n        setSkuDetails(result.Sku);\r\n        setDescripcionProductoDetails(result.descripcion || \"\"); // Maneja el caso de descripción nula\r\n\r\n        // Cargar historial de proveedores y tiendas en el que existe el producto\r\n        getTiendasByProducto(result.id_producto);\r\n        cargarProveedoresPorProducto(result.id_producto);\r\n\r\n        const resultTienda = await getTiendaById(\r\n          usuario.token,\r\n          tiendaMoverDesde\r\n        );\r\n\r\n        const resultCantidadEnTienda = await isProductoInTienda(\r\n          usuario.token,\r\n          result.id_producto,\r\n          selectedValueNombreTienda\r\n        );\r\n\r\n        const auxiliarNombreTiendaPiker = dropdownItems.find((element) => {\r\n          return (\r\n            parseInt(element.value) ===\r\n            parseInt(selectedValueNombreTienda ?? \"0\")\r\n          );\r\n        });\r\n\r\n        setCantidadTiendaUsuarioActual(resultCantidadEnTienda.cantidad);\r\n        setNombreTiendaUsuarioActual(auxiliarNombreTiendaPiker?.label ?? \"\");\r\n\r\n        // Convertir las imágenes de URL a base64\r\n        const imagesPromises = result.imagenes.map(async (img: any) => {\r\n          let httpImage: string = await img.url;\r\n          let parseHttp = httpImage.substring(1, httpImage.length);\r\n          httpImage = cerverHostImages + parseHttp;\r\n          return { uri: httpImage }; // Almacenar en el formato adecuado\r\n        });\r\n\r\n        // Esperar a que todas las promesas se resuelvan\r\n        const images = await Promise.all(imagesPromises);\r\n        setSelectedImages(images);\r\n      }\r\n    }\r\n  };\r\n\r\n  const convertUrlToBase64 = async (url: string): Promise<string> => {\r\n    console.log(url);\r\n\r\n    const response = await fetch(url);\r\n\r\n    // Verificar si la respuesta es exitosa\r\n    if (!response.ok) {\r\n      throw new Error(\"Error al obtener la imagen\");\r\n    }\r\n\r\n    const blob = await response.blob();\r\n    const reader = new FileReader();\r\n\r\n    return new Promise<string>((resolve, reject) => {\r\n      reader.onloadend = () => {\r\n        resolve(reader.result as string); // Este es el contenido en base64\r\n      };\r\n      reader.onerror = reject;\r\n      reader.readAsDataURL(blob); // Convierte el blob a base64\r\n    });\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<Producto[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filterProductsEnTienda(\r\n          usuario.token,\r\n          nombreProductoSearch,\r\n          sKUSearch,\r\n          rangoPrecioDesdeSearch,\r\n          rangoPrecioHastaSearch,\r\n          cantidadSearch,\r\n          selectedValueNombreTienda\r\n        );\r\n\r\n        if (result) {\r\n          const productosMapeados: Producto[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Producto: element.id_producto, // Mapea 'id_producto' a 'id_Producto'\r\n              nombre: element.producto.nombre, // Mapea 'nombre' directamente\r\n              sku: element.producto.Sku, // Mapea 'Sku' a 'sku'\r\n              cantidadTotal: element.cantidad,\r\n              precioUSD: element.producto.precio.toString(), // Mapea 'precio' a 'precioUSD' y lo convierte a string\r\n              precioEmpresaUSD: element.producto.precio_empresa,\r\n            }))\r\n          );\r\n\r\n          return productosMapeados; // Devuelve los productos mapeados\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los productos:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null; // Devuelve null si no hay token o no se pudieron filtrar productos\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optimizacionFirstLoadingData) {\r\n      cargarDetailsOfProducto();\r\n    }\r\n  }, [modalProductsDates]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        setSelectedValueNombreTienda(usuario?.id_tienda);\r\n        setCambioMoneda(await getValorMonedaUSD(usuario?.token));\r\n        await checkPermiso();\r\n\r\n        // *************\r\n        await getTipoServicioPikerDetails();\r\n        await getClientesPikerDetails();\r\n        await getProductosPikerDetails();\r\n        await getTiendasPikerDetails();\r\n        // ******************\r\n\r\n        getDatesTiendaPiker();\r\n      };\r\n      runEffects();\r\n      setOptimizacionFirstLoadingData(true);\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarProductos = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let productosFiltrados: Producto[] = await auxiliarFunctionFilter();\r\n\r\n        console.log(sortProductos?.criterioOrden && selectedOptionTipoOrden);\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortProductos?.criterioOrden && sortProductos.tipoOrden) {\r\n          productosFiltrados = await ordenarProducts(\r\n            usuario.token,\r\n            productosFiltrados,\r\n            sortProductos.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(productosFiltrados);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los productos:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarProductos();\r\n  }, [sortProductos, selectedOptionTipoOrden]);\r\n\r\n  const auxSetModalProductsDates = () => {\r\n    setNombreProductoDetails(\"\");\r\n    setPrecioProductoDetails(\"\");\r\n    setPrecioEmpresaProductoDetails(\"\");\r\n    setSkuDetails(\"\");\r\n    setDescripcionProductoDetails(\"\");\r\n    setSelectedImages([]);\r\n\r\n    setModalProductsDates({\r\n      id_producto: \"\",\r\n      isAddProducto: true,\r\n      fileEditable: true,\r\n      isModificarProducto: false,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isAddProductoShowProveedores: false,\r\n    });\r\n  };\r\n\r\n  // Método para cargar las imágenes\r\n  const handleImageUpload = () => {\r\n    const options = {\r\n      mediaType: \"photo\" as const, // Solo fotos\r\n      quality: 1, // Calidad máxima de la imagen\r\n      includeBase64: false, // No incluir en base64\r\n      selectionLimit: 100,\r\n      includeExtra: true,\r\n    };\r\n\r\n    // Abre la galería de imágenes\r\n    launchImageLibrary(options, (response: ImagePickerResponse) => {\r\n      if (response.didCancel) {\r\n        console.log(\"El usuario canceló la selección de la imagen.\");\r\n      } else if (response.errorMessage) {\r\n        console.error(\r\n          \"Error al seleccionar la imagen: \",\r\n          response.errorMessage\r\n        );\r\n      } else if (response.assets && response.assets.length > 0) {\r\n        // Agregar la nueva imagen al estado\r\n        setSelectedImages((prevImages) => {\r\n          // Calcula cuántas imágenes se pueden agregar sin exceder el límite de 100\r\n          const availableSpace = 100 - prevImages.length; // Espacio disponible en el estado\r\n          const newImages = response.assets.slice(0, availableSpace); // Selecciona solo las imágenes necesarias para no exceder el límite\r\n          return [...prevImages, ...newImages]; // Agrega las nuevas imágenes al estado\r\n        });\r\n      } else {\r\n        console.log(\"No se seleccionó ninguna imagen.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  // Función para eliminar una imagen por su índice\r\n  const handleRemoveImage = (index: number) => {\r\n    const updatedImages = selectedImages.filter((_, i) => i !== index);\r\n    setSelectedImages(updatedImages);\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProductoSearch(\"\");\r\n    setSKUSearch(\"\");\r\n    setCantidadSearch(\"\");\r\n    setRangoPrecioDesdeSearch(\"\");\r\n    setRangoPrecioHastaSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n    setSelectedValueNombreTienda(usuario?.id_tienda);\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"SKU\",\r\n    \"Nombre\",\r\n    \"PrecioCUP\",\r\n    \"Cantidad en la Tienda\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\"Nombre\", \"Cantidad\", \"Costo\"];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"SKU\",\r\n    \"Nombre\",\r\n    \"Precio\",\r\n    \"Cantidad\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => exportarExel()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              height: 30,\r\n              width: \"40%\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n              shadowOffset: { width: 0, height: 0 },\r\n              shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n              shadowRadius: 14, // Difuminado\r\n              borderColor: Colors.verde_claro,\r\n              borderWidth: 3,\r\n              padding: 10,\r\n              borderRadius: 10,\r\n              marginHorizontal: \"1%\",\r\n              marginTop: \"1%\",\r\n              backgroundColor: Colors.verde_claro, // Color de fondo del botón\r\n            }}\r\n          >\r\n            <Image\r\n              source={require(\"../images/exel.png\")}\r\n              style={{ width: 20, height: 20, marginRight: \"10%\" }}\r\n            />\r\n            <Text\r\n              style={[\r\n                styles.radioButtonTextDesktop,\r\n                sortProductos?.criterioOrden === \"option1\" &&\r\n                  styles.radioButtonSelected &&\r\n                  styles.radioButtonTextSelected,\r\n              ]}\r\n            >\r\n              Exportar a Excel\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableEnMyTienda\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <Text style={styles.textSearchMovil}>SKU:</Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}>Cantidad:</Text>\r\n                  </View>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"SKU\"\r\n                      value={sKUSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={setSKUSearch}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Cantidad\"\r\n                      value={cantidadSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Rango de Precio en CUP:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={rangoPrecioDesdeSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={rangoPrecioHastaSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioHastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  {(String(usuario?.id_rol) === \"2\" ||\r\n                    String(usuario?.id_rol) === \"1\") && (\r\n                    <View style={styles.separatorBlanco} />\r\n                  )}\r\n\r\n                  {(String(usuario?.id_rol) === \"2\" ||\r\n                    String(usuario?.id_rol) === \"1\") && (\r\n                    <Text style={styles.textSearchMovil}>\r\n                      Cambiar de Tienda:\r\n                    </Text>\r\n                  )}\r\n                  {(String(usuario?.id_rol) === \"2\" ||\r\n                    String(usuario?.id_rol) === \"1\") && (\r\n                    <View\r\n                      style={{ position: \"relative\", zIndex: 500, height: 100 }}\r\n                    >\r\n                      <CustomDropdown\r\n                        value={selectedValueNombreTienda}\r\n                        placeholder=\"Tiendas\"\r\n                        setValue={setSelectedValueNombreTienda}\r\n                        items={dropdownItems}\r\n                      />\r\n                    </View>\r\n                  )}\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      marginTop: 25,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarProductos();\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProductsDates?.isAddProducto ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProducto}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProducto}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {/*(modalProductsDates?.isModificarProducto ?? false)? \"Modificar Producto\" : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                false */}\r\n                {modalProductsDates?.isModificarProducto ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Producto\"\r\n                  : \"Agregar Producto\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Del Producto\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  value={nombreProductoDetails}\r\n                  onChangeText={setNombreProductoDetails}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  placeholder=\"Nombre del producto\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Precio y Precio de Empresa */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    \r\n                  </View>\r\n\r\n                  {/* Campo Precio de Empresa */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio de empresa en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioEmpresaProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioEmpresaProductoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio de empresa en CUP\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio CUP */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoPromedio(validNumericValue);\r\n                      }}\r\n                      editable={false}\r\n                      placeholder=\"Precio en CUP\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Costo */}\r\n                  {isPermisoHistorialDeProveedores && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo Promedio\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={costoPromedio}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          setCostoPromedio(validNumericValue);\r\n                        }}\r\n                        editable={false}\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/*Contenedor para los precios en CUP */}\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          width: \"100%\",\r\n                          justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                          alignItems: \"center\",\r\n                          flexDirection: \"row\",\r\n                          paddingHorizontal: 10,\r\n                        }}\r\n                      >\r\n                        {/* Campo Precio en CUP*/}\r\n                        <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                          <Text style={styles.labelTextModalDesktop}>\r\n                            Precio en CUP\r\n                          </Text>\r\n                          <CustomTextImputSearch\r\n                            style={styles.textImputModal}\r\n                            value={(\r\n                              parseFloat(precioProductoDetails) * cambioMoneda\r\n                            ).toFixed(0)}\r\n                            cursorColor={Colors.azul_Oscuro}\r\n                            editable={false}\r\n                            placeholder=\"Precio en CUP\"\r\n                          />\r\n                        </View>\r\n\r\n                        {/* Campo SKU*/}\r\n                        <View\r\n                          style={{\r\n                            width: \"45%\",\r\n                            marginLeft: \"2%\",\r\n                            marginRight: \"2%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalDesktop}>Sku</Text>\r\n                          <CustomTextImputSearch\r\n                            style={styles.textImputModal}\r\n                            value={skuDetails}\r\n                            onChangeText={setSkuDetails}\r\n                            cursorColor={Colors.azul_Oscuro}\r\n                            editable={\r\n                              modalProductsDates?.fileEditable ? true : false\r\n                            }\r\n                            placeholder=\"Sku\"\r\n                          />\r\n                        </View>\r\n                      </View>\r\n                    )}\r\n\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          flexDirection: \"row\",\r\n                          height: 350,\r\n                          width: \"90%\",\r\n                        }}\r\n                      >\r\n                        <View\r\n                          style={{\r\n                            flexDirection: \"column\",\r\n                            height: 340,\r\n                            width: \"45%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalMovil}>\r\n                            Tiendas en las que existe el producto\r\n                          </Text>\r\n                          <MyDateTableModalShowDatesTienda\r\n                            columns={columnasMyDateTableTiendaModal}\r\n                            items={tiendasByProducto}\r\n                          />\r\n                        </View>\r\n                        {(modalProductsDates?.isAddProductoShowProveedores ??\r\n                          false) &&\r\n                          isPermisoHistorialDeProveedores && (\r\n                            <View\r\n                              style={{\r\n                                height: 340,\r\n                                width: \"45%\",\r\n                              }}\r\n                            >\r\n                              <Text style={styles.labelTextModalMovil}>\r\n                                Historial de proveedores\r\n                              </Text>\r\n                              <MyDateTableModalShowDateProveedores\r\n                                columns={columnasMyDateTableProveedorModal}\r\n                                items={proveedorByProducto}\r\n                              />\r\n                            </View>\r\n                          )}\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  value={descripcionProductoDetails}\r\n                  onChangeText={setDescripcionProductoDetails}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  numberOfLines={5}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/* Campo para cargar fotos */}\r\n                <PanGestureHandler onGestureEvent={onDrop}>\r\n                  <View\r\n                    style={{\r\n                      marginTop: 20,\r\n                      width: \"90%\",\r\n                      borderWidth: 1,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderRadius: 13,\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Colors.negro,\r\n                        marginBottom: \"5%\",\r\n                      }}\r\n                    >\r\n                      Imágenes del producto\r\n                    </Text>\r\n\r\n                    {/* Botón para cargar imágenes */}\r\n                    {(modalProductsDates?.fileEditable ?? false) && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                        }}\r\n                        onPress={handleImageUpload}\r\n                      >\r\n                        <Text style={{ color: Colors.blanco }}>\r\n                          Seleccionar Imagenes\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Vista para mostrar las imágenes seleccionadas */}\r\n                    {selectedImages.length > 0 && (\r\n                      <ScrollView\r\n                        horizontal={true}\r\n                        style={{\r\n                          marginTop: 10,\r\n                          width: \"100%\",\r\n                          height: 100, // Ajusta la altura de la vista de imágenes\r\n                        }}\r\n                      >\r\n                        {selectedImages.map((image, index) => (\r\n                          <View\r\n                            key={index}\r\n                            style={{\r\n                              position: \"relative\",\r\n                              width: 100,\r\n                              height: 100,\r\n                              marginRight: 10,\r\n                            }}\r\n                          >\r\n                            <Image\r\n                              key={index}\r\n                              source={{ uri: image.uri }} // Usa la URI de la imagen\r\n                              style={{\r\n                                width: 100,\r\n                                height: 100,\r\n                                marginRight: 10,\r\n                                borderRadius: 10,\r\n                              }}\r\n                            />\r\n                            <TouchableOpacity\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                top: 5,\r\n                                right: 5,\r\n                                backgroundColor: \"red\",\r\n                                borderRadius: 15,\r\n                                width: 20,\r\n                                height: 20,\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                zIndex: 1,\r\n                              }}\r\n                              onPress={() => handleRemoveImage(index)}\r\n                            >\r\n                              <Text\r\n                                style={{\r\n                                  color: \"white\",\r\n                                  fontSize: 14,\r\n                                }}\r\n                              >\r\n                                X\r\n                              </Text>\r\n                            </TouchableOpacity>\r\n                          </View>\r\n                        ))}\r\n                      </ScrollView>\r\n                    )}\r\n                  </View>\r\n                </PanGestureHandler>\r\n\r\n                {/**Contenedor para los botones */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  {(isPermisoMoverGeneral || isPermisoMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        marginLeft: \"5%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        setModalProductsDates({\r\n                          id_producto: \"\",\r\n                          isAddProducto: false,\r\n                          isModificarProducto: false,\r\n                          fileEditable: false,\r\n                          isAddProductoShowProveedoresTiendas: false,\r\n                          isAddProductoShowProveedores: false,\r\n                        });\r\n                        cargarDatosTiendaParaMover();\r\n                        setModalMoverVisible(true);\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Mover Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  {isPermisoRestarProducto && false  && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        callModalAddProducto();\r\n                        setModalRestarProductos(true);\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Restar Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  {false && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.verde_claro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        marginRight: \"5%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        callVenta();\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Vender Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal de servicio */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalVenderProductoVisible}\r\n          animationType=\"fade\"\r\n          onRequestClose={() =>\r\n            setIsModalVenderProductoVisible(!isModalVenderProductoVisible)\r\n          }\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  setIsModalVenderProductoVisible(!isModalVenderProductoVisible)\r\n                }\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                Vender Producto\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 5000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 5000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idClienteDetails}\r\n                    placeholder=\"Seleccione un Cliente\"\r\n                    setValue={setIdClienteDetails}\r\n                    items={dropdownItemsNombreCliente}\r\n                    searchable={true}\r\n                    readOnly={\r\n                      !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                    }\r\n                  />\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: 1500,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDetails}\r\n                      placeholder=\"Seleccione una tienda\"\r\n                      setValue={setIdTiendaDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={!false}\r\n                      searchable={true}\r\n                      onDropdownOpen={() => {}}\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio: Venta\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: 100,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: 500,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdownDetails\r\n                      value={idProductoDetails}\r\n                      placeholder=\"Seleccione un produto\"\r\n                      setValue={setIdProductoDetails}\r\n                      items={dropdownItemsNombreproducto}\r\n                      searchable={true}\r\n                      readOnly={!false}\r\n                      onDropdownOpen={() => {}}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={cantidadProductoServicioDetails}\r\n                        onChangeText={(text) => {\r\n                          // Filtra caracteres no numéricos\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                          setCantidadProductoServicioDetails(numericValue);\r\n                        }}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad del producto\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en USD\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoUSDDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoCUPDetails(\r\n                              String(\r\n                                (\r\n                                  parseFloat(validNumericValue) * cambioMoneda\r\n                                ).toFixed(0)\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoCUPDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoUSDDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoUSD\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoCUPDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoUSDDetails(\r\n                              String(\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoUSDDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoCUPDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoCUP\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={precioUSDDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioCUPDetails(\r\n                            String(\r\n                              (\r\n                                parseFloat(validNumericValue) * cambioMoneda\r\n                              ).toFixed(0)\r\n                            )\r\n                          );\r\n                        } else {\r\n                          setPrecioCUPDetails(\"0\");\r\n                        }\r\n                        setPrecioUSDDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioUSD\");\r\n                      }}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en usd\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModalNOEDITABLE}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioUSDDetails(\r\n                            String(parseFloat(validNumericValue) / cambioMoneda)\r\n                          );\r\n                        } else {\r\n                          setPrecioUSDDetails(\"0\");\r\n                        }\r\n                        setPrecioCUPDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioCUP\");\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en cup\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: 600,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => {}}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: 500,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={notaDetails}\r\n                      onChangeText={setNotaDetails}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Nota\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del servicio\"\r\n                  multiline={true}\r\n                  editable={\r\n                    isPermisoModificarServicio || isPermisoServicioLocal\r\n                  }\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      marginLeft: \"5%\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                      marginTop: \"3%\", // Margen adicional entre botones\r\n                    }}\r\n                    onPress={() => {\r\n                      addNewServicio();\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: 16,\r\n                      }}\r\n                    >\r\n                      Agregar Servicio\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal mensaje para Restar Productos*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMesajeRestarVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Estás seguro de que deseas restar una cantidad de ${cantidadRestarProducto} del producto ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual}?`}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => restarProductosFuction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    setModalMesajeRestarVisible(!isModalMesajeRestarVisible)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setModalMesajeRestarVisible(!isModalMesajeRestarVisible)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal restar Productos*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalRestarProductos}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 300,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Restar ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual} en la cual hay ${cantidadTiendaUsuarioActual}`}\r\n              </Text>\r\n\r\n              <Text\r\n                style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10 }}\r\n              >\r\n                Cantidad a restar\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  marginHorizontal: \"5%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 16, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                value={cantidadRestarProducto}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadRestarProducto(numericValue);\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                editable={modalProductsDates?.fileEditable ? true : false}\r\n                placeholder=\"Cantidad a restar\"\r\n              />\r\n\r\n              <TouchableOpacity\r\n                onPress={() => restarProductosValidarCampos()}\r\n                style={{\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 15,\r\n                  marginTop: 30,\r\n                  width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                    color: Colors.blanco_Suave,\r\n                  }}\r\n                >\r\n                  Restar Productos\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setModalRestarProductos(!isModalRestarProductos)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal restar Productos*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalRestarProductos}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Restar ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual} en la cual hay ${cantidadTiendaUsuarioActual}`}\r\n              </Text>\r\n\r\n              <Text\r\n                style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10 }}\r\n              >\r\n                Cantidad a restar\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={styles.textImputModal}\r\n                value={nombreProductoDetails}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadSearch(numericValue);\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                editable={modalProductsDates?.fileEditable ? true : false}\r\n                placeholder=\"Cantidad a restar\"\r\n              />\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal mensaje para el Mover*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMesajeMoverVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 450,\r\n                height: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Desea mover ${cantidadMoverProducto} producto ${nombreProductoDetails} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}?`}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => moverProductoFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para el Mover*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMoverVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {tiendaMoverDesde === \"\"\r\n                  ? \"Seleccione una tienda origen\"\r\n                  : `Mover Producto \"${nombreProductoDetails}\" en la Tienda\\n ${nombreTiendaUsuarioActual} con una cantidad de ${cantidadTiendaUsuarioActual}`}\r\n              </Text>\r\n\r\n              <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                La cantidad que desea mover\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 18, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                placeholder=\"Cantidad a mover\"\r\n                value={cantidadMoverProducto}\r\n                onChangeText={(text) => {\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadMoverProducto(numericValue);\r\n                }}\r\n              />\r\n\r\n              <Text style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}>\r\n                Tiendas para mover los productos\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                {isPermisoMoverGeneral && (\r\n                  <CustomDropDownPikerFromMover\r\n                    value={tiendaMoverDesde}\r\n                    items={tiendasByProductoDesde}\r\n                    placeholder=\"Tienda desde donde se quiere mover\"\r\n                    setValue={setTiendaMoverDesde}\r\n                  />\r\n                )}\r\n                <CustomDropDownPikerFromMover\r\n                  value={tiendaMoverHasta}\r\n                  items={tiendasByProductoHasta}\r\n                  placeholder=\"Tienda a la que se quiere mover\"\r\n                  setValue={setTiendaMoverHasta}\r\n                />\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                style={{\r\n                  backgroundColor: Colors.azul_Claro,\r\n                  borderRadius: 15,\r\n                  marginTop: 150,\r\n                  width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 50, // Altura fija para pantallas de escritorio\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n              >\r\n                <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Mi Tienda\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje para el exel */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeViewExel}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {loadingOfExel ? (\r\n                <ActivityIndicator\r\n                  size={100}\r\n                  color=\"#007BFF\"\r\n                  style={{\r\n                    flex: 1,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"15%\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <View\r\n                  style={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Datos Recopilados. Espere a que termine la descarga.\r\n                  </Text>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: \"#007BFF\", // Cambia esto por Colors.azul_Oscuro si lo tienes definido\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho del botón\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMensajeViewExel(!isModalMensajeViewExel)\r\n                    } // Llama a la función onClose para cerrar el modal\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => exportarExel()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              height: 30,\r\n              width: \"12%\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n              shadowOffset: { width: 0, height: 0 },\r\n              shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n              shadowRadius: 14, // Difuminado\r\n              borderColor: Colors.verde_claro,\r\n              borderWidth: 3,\r\n              padding: 10,\r\n              borderRadius: 10,\r\n              marginHorizontal: \"1%\",\r\n              marginTop: \"1%\",\r\n              backgroundColor: Colors.verde_claro, // Color de fondo del botón\r\n            }}\r\n          >\r\n            <Image\r\n              source={require(\"../images/exel.png\")}\r\n              style={{ width: 20, height: 20, marginRight: \"10%\" }}\r\n            />\r\n            <Text\r\n              style={[\r\n                styles.radioButtonTextDesktop,\r\n                sortProductos?.criterioOrden === \"option1\" &&\r\n                  styles.radioButtonSelected &&\r\n                  styles.radioButtonTextSelected,\r\n              ]}\r\n            >\r\n              Exportar a Excel\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearch}\r\n              onChangeText={setNombreProductoSearch}\r\n              onKeyPress={handleKeyPress}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <Text style={styles.textSearchDesktop}>SKU:</Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}>Cantidad:</Text>\r\n            </View>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"SKU\"\r\n                value={sKUSearch}\r\n                onChangeText={setSKUSearch}\r\n                onKeyPress={handleKeyPress}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Cantidad\"\r\n                value={cantidadSearch}\r\n                onKeyPress={handleKeyPress}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              Rango de Precio en CUP:\r\n            </Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={rangoPrecioDesdeSearch}\r\n                onKeyPress={handleKeyPress}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={rangoPrecioHastaSearch}\r\n                onKeyPress={handleKeyPress}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioHastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            {(String(usuario?.id_rol) === \"2\" ||\r\n              String(usuario?.id_rol) === \"1\") && (\r\n              <View style={styles.separatorBlanco} />\r\n            )}\r\n\r\n            {(String(usuario?.id_rol) === \"2\" ||\r\n              String(usuario?.id_rol) === \"1\") && (\r\n              <Text style={styles.textSearchDesktop}>Cambiar de Tienda:</Text>\r\n            )}\r\n            {(String(usuario?.id_rol) === \"2\" ||\r\n              String(usuario?.id_rol) === \"1\") && (\r\n              <View style={{ position: \"relative\", zIndex: 500, height: 100 }}>\r\n                <CustomDropdown\r\n                  value={selectedValueNombreTienda}\r\n                  placeholder=\"Tiendas\"\r\n                  setValue={setSelectedValueNombreTienda}\r\n                  items={dropdownItems}\r\n                />\r\n              </View>\r\n            )}\r\n            <View\r\n              style={{ width: \"100%\", flexDirection: \"row\", marginTop: 25 }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarProductos()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableEnMyTienda\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        {/*Modal de en my tienda producto details */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProductsDates?.isAddProducto ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProducto}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProducto}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProductsDates?.isModificarProducto ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Producto\"\r\n                  : \"Agregar Producto\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Del Producto\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  value={nombreProductoDetails}\r\n                  onChangeText={setNombreProductoDetails}\r\n                  placeholder=\"Nombre del producto\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Precio y Precio de Empresa */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    \r\n                  </View>\r\n\r\n                  {/* Campo Precio de Empresa */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio de empresa en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioEmpresaProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioEmpresaProductoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio de empresa en CUP\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio CUP */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoPromedio(validNumericValue);\r\n                      }}\r\n                      editable={false}\r\n                      placeholder=\"Precio en CUP\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Costo */}\r\n                  {isPermisoHistorialDeProveedores && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo Promedio\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={costoPromedio}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          setCostoPromedio(validNumericValue);\r\n                        }}\r\n                        editable={false}\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          width: \"100%\",\r\n                          justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                          alignItems: \"center\",\r\n                          flexDirection: \"row\",\r\n                          paddingHorizontal: 10,\r\n                        }}\r\n                      >\r\n                        {/* Campo Precio en CUP*/}\r\n                        <View style={{ width: \"45%\", marginLeft: \"2%\" }}></View>\r\n\r\n                        {/* Campo Precio de Empresa en CUP*/}\r\n                        <View\r\n                          style={{\r\n                            width: \"45%\",\r\n                            marginLeft: \"2%\",\r\n                            marginRight: \"2%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalDesktop}>Sku</Text>\r\n                          <CustomTextImputSearch\r\n                            style={styles.textImputModal}\r\n                            value={skuDetails}\r\n                            onChangeText={setSkuDetails}\r\n                            cursorColor={Colors.azul_Oscuro}\r\n                            editable={\r\n                              modalProductsDates?.fileEditable ? true : false\r\n                            }\r\n                            placeholder=\"Sku\"\r\n                          />\r\n                        </View>\r\n                      </View>\r\n                    )}\r\n\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          flexDirection: \"row\",\r\n                          height: 350,\r\n                          width: \"90%\",\r\n                        }}\r\n                      >\r\n                        <View\r\n                          style={{\r\n                            flexDirection: \"column\",\r\n                            height: 350,\r\n                            width: \"50%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalDesktop}>\r\n                            Tiendas en las que existe el producto\r\n                          </Text>\r\n                          <MyDateTableModalShowDatesTienda\r\n                            columns={columnasMyDateTableTiendaModal}\r\n                            items={tiendasByProducto}\r\n                          />\r\n                        </View>\r\n                        {(modalProductsDates?.isAddProductoShowProveedores ??\r\n                          false) &&\r\n                          isPermisoHistorialDeProveedores && (\r\n                            <View\r\n                              style={{\r\n                                height: 350,\r\n                                width: \"50%\",\r\n                              }}\r\n                            >\r\n                              <Text style={styles.labelTextModalDesktop}>\r\n                                Historial de proveedores\r\n                              </Text>\r\n                              <MyDateTableModalShowDateProveedores\r\n                                columns={columnasMyDateTableProveedorModal}\r\n                                items={proveedorByProducto}\r\n                              />\r\n                            </View>\r\n                          )}\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  numberOfLines={5}\r\n                  value={descripcionProductoDetails}\r\n                  onChangeText={setDescripcionProductoDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/* Campo para cargar fotos */}\r\n                <PanGestureHandler onGestureEvent={onDrop}>\r\n                  <View\r\n                    style={{\r\n                      marginTop: 20,\r\n                      width: \"90%\",\r\n                      borderWidth: 1,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderRadius: 13,\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Colors.negro,\r\n                        marginBottom: \"5%\",\r\n                      }}\r\n                    >\r\n                      Imágenes del producto\r\n                    </Text>\r\n\r\n                    {/* Botón para cargar imágenes */}\r\n                    {(modalProductsDates?.fileEditable ?? false) && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                        }}\r\n                        onPress={handleImageUpload}\r\n                      >\r\n                        <Text style={{ color: Colors.blanco }}>\r\n                          Seleccionar Imagenes\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Vista para mostrar las imágenes seleccionadas */}\r\n                    {selectedImages.length > 0 && (\r\n                      <ScrollView\r\n                        horizontal={true}\r\n                        style={{\r\n                          marginTop: 10,\r\n                          width: \"100%\",\r\n                          height: 100, // Ajusta la altura de la vista de imágenes\r\n                        }}\r\n                      >\r\n                        {selectedImages.map((image, index) => (\r\n                          <View\r\n                            key={index}\r\n                            style={{\r\n                              position: \"relative\",\r\n                              width: 100,\r\n                              height: 100,\r\n                              marginRight: 10,\r\n                            }}\r\n                          >\r\n                            <Image\r\n                              key={index}\r\n                              source={{ uri: image.uri }} // Usa la URI de la imagen\r\n                              style={{\r\n                                width: 100,\r\n                                height: 100,\r\n                                marginRight: 10,\r\n                                borderRadius: 10,\r\n                              }}\r\n                            />\r\n                            <TouchableOpacity\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                top: 5,\r\n                                right: 5,\r\n                                backgroundColor: \"red\",\r\n                                borderRadius: 15,\r\n                                width: 20,\r\n                                height: 20,\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                zIndex: 1,\r\n                              }}\r\n                              onPress={() => handleRemoveImage(index)}\r\n                            >\r\n                              <Text\r\n                                style={{\r\n                                  color: \"white\",\r\n                                  fontSize: 14,\r\n                                }}\r\n                              >\r\n                                X\r\n                              </Text>\r\n                            </TouchableOpacity>\r\n                          </View>\r\n                        ))}\r\n                      </ScrollView>\r\n                    )}\r\n                  </View>\r\n                </PanGestureHandler>\r\n\r\n                {/**Contenedor para los botones */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  {(isPermisoMoverGeneral || isPermisoMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        marginLeft: \"5%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        setModalProductsDates({\r\n                          id_producto: \"\",\r\n                          isAddProducto: false,\r\n                          isModificarProducto: false,\r\n                          fileEditable: false,\r\n                          isAddProductoShowProveedoresTiendas: false,\r\n                          isAddProductoShowProveedores: false,\r\n                        });\r\n                        cargarDatosTiendaParaMover();\r\n                        setModalMoverVisible(true);\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Mover Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  {isPermisoRestarProducto && false && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        callModalAddProducto();\r\n                        setModalRestarProductos(true);\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Restar Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  {false && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.verde_claro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        marginRight: \"5%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        callVenta();\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Vender Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal mensaje para Restar Productos*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMesajeRestarVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Estás seguro de que deseas restar una cantidad de ${cantidadRestarProducto} del producto ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual}?`}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => restarProductosFuction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    setModalMesajeRestarVisible(!isModalMesajeRestarVisible)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setModalMesajeRestarVisible(!isModalMesajeRestarVisible)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal restar Productos*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalRestarProductos}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 300,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Restar ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual} en la cual hay ${cantidadTiendaUsuarioActual}`}\r\n              </Text>\r\n\r\n              <Text\r\n                style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10 }}\r\n              >\r\n                Cantidad a restar\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  marginHorizontal: \"5%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 16, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                value={cantidadRestarProducto}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadRestarProducto(numericValue);\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                editable={modalProductsDates?.fileEditable ? true : false}\r\n                placeholder=\"Cantidad a restar\"\r\n              />\r\n\r\n              <TouchableOpacity\r\n                onPress={() => restarProductosValidarCampos()}\r\n                style={{\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 15,\r\n                  marginTop: 30,\r\n                  width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                    color: Colors.blanco_Suave,\r\n                  }}\r\n                >\r\n                  Restar Productos\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setModalRestarProductos(!isModalRestarProductos)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal mensaje para el Mover*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMesajeMoverVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 450,\r\n                height: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Desea mover ${cantidadMoverProducto} producto ${nombreProductoDetails} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}?`}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => moverProductoFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para el Mover*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMoverVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 500, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {tiendaMoverDesde === \"\"\r\n                  ? \"Seleccione una tienda origen\"\r\n                  : `Mover Producto \"${nombreProductoDetails}\" en la Tienda ${nombreTiendaUsuarioActual} con una cantidad de ${cantidadTiendaUsuarioActual}`}\r\n              </Text>\r\n\r\n              <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                La cantidad que desea mover\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 18, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                placeholder=\"Cantidad a mover\"\r\n                value={cantidadMoverProducto}\r\n                onChangeText={(text) => {\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadMoverProducto(numericValue);\r\n                }}\r\n              />\r\n\r\n              <Text style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}>\r\n                Tiendas para mover los productos\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"row\",\r\n                  position: \"relative\",\r\n                  zIndex: 500,\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                {isPermisoMoverGeneral && (\r\n                  <CustomDropDownPikerFromMover\r\n                    value={tiendaMoverDesde}\r\n                    items={tiendasByProductoDesde}\r\n                    placeholder=\"Tienda desde donde se quiere mover\"\r\n                    setValue={setTiendaMoverDesde}\r\n                  />\r\n                )}\r\n                <CustomDropDownPikerFromMover\r\n                  value={tiendaMoverHasta}\r\n                  items={tiendasByProductoHasta}\r\n                  placeholder=\"Tienda a la que se quiere mover\"\r\n                  setValue={setTiendaMoverHasta}\r\n                />\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                style={{\r\n                  backgroundColor: Colors.azul_Claro,\r\n                  borderRadius: 15,\r\n                  marginTop: 170,\r\n                  width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 50, // Altura fija para pantallas de escritorio\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n              >\r\n                <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Mi Tienda\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje para el exel */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeViewExel}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {loadingOfExel ? (\r\n                <ActivityIndicator\r\n                  size={100}\r\n                  color=\"#007BFF\"\r\n                  style={{\r\n                    flex: 1,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"15%\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <View\r\n                  style={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Datos Recopilados. Espere a que termine la descarga.\r\n                  </Text>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: \"#007BFF\", // Cambia esto por Colors.azul_Oscuro si lo tienes definido\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho del botón\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMensajeViewExel(!isModalMensajeViewExel)\r\n                    } // Llama a la función onClose para cerrar el modal\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport { TiendaShowModal } from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport interface Entrada {\r\n  id_Entrada: string;\r\n  id_Proveedor: string;\r\n  id_Producto: string;\r\n  nombre_Proveedor: string;\r\n  nombre_Producto: string;\r\n  cantidad: string;\r\n  costo: string;\r\n  fecha: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Entrada[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableEntradas: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortEntradas, setSortEntradas } = useSortEntradas();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Entrada[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      const runEffects = async () => {\r\n        const checkPermiso = async () => {\r\n          if (usuario?.token) {\r\n            const resultPermisoButonOptionModificar = await isPermiso(\r\n              usuario.token,\r\n              \"7\",\r\n              usuario.id_usuario\r\n            );\r\n            const resultPermisoButonOptionEliminar = await isPermiso(\r\n              usuario.token,\r\n              \"8\",\r\n              usuario.id_usuario\r\n            );\r\n            const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n              usuario.token,\r\n              \"30\",\r\n              usuario.id_usuario\r\n            );\r\n            const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n              usuario.token,\r\n              \"31\",\r\n              usuario.id_usuario\r\n            );\r\n            \r\n            // Cargar cambio de moneda\r\n            if (localStorage.getItem(\"cambioMoneda\") === null) {\r\n              const cambioMoneda_aux = await getValorMonedaUSD(usuario.token);\r\n              setCambioMoneda(cambioMoneda_aux);\r\n              localStorage.setItem(\"cambioMoneda\", cambioMoneda_aux.toString());\r\n            } else {\r\n              setCambioMoneda(parseFloat(localStorage.getItem(\"cambioMoneda\")));\r\n            }\r\n            // Actualiza el estado con los resultado\r\n            setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n            setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n            setIsPermisoOpcionesDeCeldaMoverLocal(\r\n              resultPermisoButonOptionMoverLocal\r\n            );\r\n            setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n              resultPermisoButonOptionMoverGeneral\r\n            );\r\n            setIsPermisoOpcionesDeCelda(\r\n              resultPermisoButonOptionEliminar ||\r\n              resultPermisoButonOptionModificar ||\r\n              resultPermisoButonOptionMoverLocal ||\r\n              resultPermisoButonOptionMoverGeneral\r\n            );\r\n          }\r\n        };\r\n\r\n        checkPermiso(); // Llama a la función al montar el componente\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n  React.useEffect(() => {\r\n\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  // Metodo que devuelve el mensaje al final de la pagina\r\n  const mensajeOfEndTable = () => {\r\n    let mensaje = \"La suma total de los costos de los productos filtrados es de: \";\r\n    let sumaCostos: number = 0\r\n\r\n    items.forEach((item) => {\r\n      sumaCostos += parseFloat(item.costo)\r\n    })\r\n    mensaje += `CUP: ${(sumaCostos * cambioMoneda).toFixed(2)}.`\r\n    return mensaje\r\n  }\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre Proveedor\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Producto\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Costo Por Unidad\") {\r\n      aux = \"option5\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option6\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortEntradas({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Proveedor\" ||\r\n                column === \"Nombre Producto\" ||\r\n                column === \"Costo Por Unidad\" ||\r\n                column === \"Fecha\") && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Suave,\r\n                      marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                      width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                      height: 24, // Asegúrate de que tenga tamaño consistente\r\n                      justifyContent: \"center\", // Centrar contenido del botón\r\n                      alignItems: \"center\", // Centrar contenido del botón\r\n                      borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                      marginBottom: 4, // Elevar el botón del borde inferior\r\n                      paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                    }}\r\n                    onPress={() => sortEntradasAux(column)}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/ordenar.png\")}\r\n                      style={{ width: \"100%\", height: \"100%\" }}\r\n                    />\r\n                  </TouchableOpacity>\r\n                )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Proveedor !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Entrada}\r\n                onPress={() => detailsModalView(item.id_Entrada)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Proveedor}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{(parseFloat(item.costo)).toFixed(2)}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          flex: 1,\r\n                          padding: 10,\r\n                          borderRadius: 8,\r\n                          marginBottom: 10,\r\n                          width: \"100%\",\r\n                          flexDirection: \"row\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                        }}\r\n                        onPress={() => {\r\n                          toggleModalOption(\"Mover\");\r\n                        }}\r\n                      >\r\n                        <Image\r\n                          source={require(\"../images/mover.png\")}\r\n                          style={{\r\n                            height: 26, // Ajusta el tamaño según lo necesites\r\n                            width: 26, // Ajusta el tamaño según lo necesites\r\n                            marginRight: 10, // Espacio entre la imagen y el texto\r\n                          }}\r\n                        />\r\n                        <Text style={{ color: \"white\" }}>Mover</Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <Text>{mensajeOfEndTable()}</Text>\r\n            </View>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Entrada}\r\n                onPress={() => detailsModalView(item.id_Entrada)}\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Proveedor}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo CUP*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {(parseFloat(item.costo) * cambioMoneda).toFixed(2)}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <Text>{mensajeOfEndTable()}</Text>\r\n          </View>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Text, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\n\r\ninterface DateInputProps {\r\n  dayValue: string;\r\n  monthValue: string;\r\n  yearValue: string;\r\n  onDayChange: (day: string) => void;\r\n  onMonthChange: (month: string) => void;\r\n  onYearChange: (year: string) => void;\r\n  style?: StyleProp<ViewStyle>;\r\n  styleText?: StyleProp<TextStyle>;\r\n  isReadOnly?: boolean;\r\n  onDropdownOpen?: () => void; // Nueva propiedad para manejar la apertura del dropdown\r\n}\r\n\r\nexport const MyDateInputVencimiento: React.FC<DateInputProps> = ({\r\n  dayValue,\r\n  monthValue,\r\n  yearValue,\r\n  onDayChange,\r\n  onMonthChange,\r\n  onYearChange,\r\n  style,\r\n  styleText,\r\n  isReadOnly = false,\r\n  onDropdownOpen, // Desestructuración de la nueva propiedad\r\n}) => {\r\n  const [day, setDay] = useState<string>(dayValue);\r\n  const [month, setMonth] = useState<string>(monthValue);\r\n  const [year, setYear] = useState<string>(yearValue);\r\n  const [days, setDays] = useState<Array<{ label: string; value: string }>>([]);\r\n\r\n  const [activePicker, setActivePicker] = useState<'day' | 'month' | 'year' | null>(null);\r\n\r\n  const getDaysInMonth = (month: number, year: number) => {\r\n    return new Date(year, month, 0).getDate();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const numberOfDays = getDaysInMonth(Number(month), Number(year));\r\n    const daysArray = Array.from({ length: numberOfDays }, (_, i) => ({\r\n      label: String(i + 1),\r\n      value: String(i + 1),\r\n    }));\r\n\r\n    if (Number(day) > numberOfDays) {\r\n      setDay(String(numberOfDays));\r\n    }\r\n\r\n    setDays(daysArray);\r\n  }, [month, year]);\r\n\r\n  const updateDate = (newDay: string, newMonth: string, newYear: string) => {\r\n    onDayChange(newDay);\r\n    onMonthChange(newMonth);\r\n    onYearChange(newYear);\r\n  };\r\n\r\n  const togglePicker = (picker: 'day' | 'month' | 'year') => {\r\n    if (activePicker === picker) {\r\n      setActivePicker(null);\r\n    } else {\r\n      setActivePicker(picker);\r\n      onDropdownOpen && onDropdownOpen(); // Llama a onDropdownOpen cuando se abre un picker\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, style]}>\r\n      <View style={styles.inputWrapper}>\r\n        <Text style={[styles.label, styleText]}>Día</Text>\r\n        <DropDownPicker\r\n          open={activePicker === 'day'}\r\n          value={day}\r\n          items={days}\r\n          setOpen={() => !isReadOnly && togglePicker('day')}\r\n          setValue={(value) => {\r\n            setDay(value);\r\n            updateDate(value, month, year);\r\n          }}\r\n          style={styles.picker}\r\n          containerStyle={[styles.pickerContainer, { zIndex: activePicker === 'day' ? 2 : 1 }]}\r\n          dropDownContainerStyle={styles.dropDownContainer}\r\n          disabled={isReadOnly}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputWrapper}>\r\n        <Text style={[styles.label, styleText]}>Mes</Text>\r\n        <DropDownPicker\r\n          open={activePicker === 'month'}\r\n          value={month}\r\n          items={Array.from({ length: 12 }, (_, i) => ({\r\n            label: String(i + 1),\r\n            value: String(i + 1),\r\n          }))}\r\n          setOpen={() => !isReadOnly && togglePicker('month')}\r\n          setValue={(value) => {\r\n            setMonth(value);\r\n            updateDate(day, value, year);\r\n          }}\r\n          style={styles.picker}\r\n          containerStyle={[styles.pickerContainer, { zIndex: activePicker === 'month' ? 2 : 1 }]}\r\n          dropDownContainerStyle={styles.dropDownContainer}\r\n          disabled={isReadOnly}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputWrapper}>\r\n        <Text style={[styles.label, styleText]}>Año</Text>\r\n        <DropDownPicker\r\n          open={activePicker === 'year'}\r\n          value={year}\r\n          items={Array.from({ length: 51 }, (_, i) => {\r\n            const year = new Date().getFullYear() - 25 + i;\r\n            return { label: String(year), value: String(year) };\r\n          })}\r\n          setOpen={() => !isReadOnly && togglePicker('year')}\r\n          setValue={(value) => {\r\n            setYear(value);\r\n            updateDate(day, month, value);\r\n          }}\r\n          style={styles.picker}\r\n          containerStyle={[styles.pickerContainer, { zIndex: activePicker === 'year' ? 2 : 1 }]}\r\n          dropDownContainerStyle={styles.dropDownContainer}\r\n          disabled={isReadOnly}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  inputWrapper: {\r\n    flex: 1,\r\n    marginHorizontal: 5,\r\n  },\r\n  label: {\r\n    fontSize: 14,\r\n    marginBottom: 5,\r\n    color: '#000',\r\n  },\r\n  picker: {\r\n    height: 20,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    borderRadius: 12,\r\n  },\r\n  pickerContainer: {\r\n    height: 35,\r\n    width: 80,\r\n  },\r\n  dropDownContainer: {\r\n    borderColor: 'gray',\r\n    zIndex: 9999,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getAllTiendas, isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  Entrada,\r\n  MyDateTableEntradas,\r\n} from \"../components/MyDateTableEntradas\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n  getProductoById,\r\n  getProductoCantidadTotal,\r\n  updateProductoCostoAcumulado,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { MyDateInputVencimiento } from \"../components/MyDateInputVencimiento\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport default function EntradasView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadProductosDetails, setCapaPrioridadProductosDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadProveedoresDetails, setCapaPrioridadProveedoresDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadProductosDetails(1500);\r\n      setCapaPrioridadProveedoresDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductosDetails(1500);\r\n      setCapaPrioridadProveedoresDetails(1500);\r\n    } else if (prioridad === \"ProductosDetails\") {\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductosDetails(2000);\r\n      setCapaPrioridadProveedoresDetails(1500);\r\n    } else if (prioridad === \"ProveedoresDetails\") {\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductosDetails(1500);\r\n      setCapaPrioridadProveedoresDetails(2000);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortEntradas, setSortEntradas } = useSortEntradas();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idEntradaDetails, setIdEntradaDetails] = useState(\"\");\r\n  const [idProveedorDetails, setIdProveedorDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [cantidadDetails, setCantidadDetails] = useState(\"\");\r\n  const [costoUSDDetails, setCostoUSDDetails] = useState(\"\");\r\n  const [costoCUPDetails, setCostoCUPDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n  const [fechaVencimientoDiaDetails, setFechaVencimientoDiaDetails] =\r\n    useState(\"\");\r\n  const [fechaVencimientoMesDetails, setFechaVencimientoMesDetails] =\r\n    useState(\"\");\r\n  const [fechaVencimientoAnnoDetails, setFechaVencimientoAnnoDetails] =\r\n    useState(\"\");\r\n  const [isFechaVencimientoDetails, setIsFechaVencimientoDetails] =\r\n    useState(false);\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [costoAuxModificarDetails, setCostoAuxModificarDetails] = useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  // Controlar el doble clic del boton\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarEntrada, setIsPermisoAgregarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarEntrada, setIsPermisoEliminarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoModificarEntrada, setIsPermisoModificarEntrada] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      // Verificar y almacenar el permiso de agregar entrada\r\n      if (localStorage.getItem(\"isPermisoAgregarEntrada\") === null) {\r\n        const resultAgregarEntrada = await isPermiso(\r\n          usuario.token,\r\n          \"10\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoAgregarEntrada(resultAgregarEntrada);\r\n        localStorage.setItem(\"isPermisoAgregarEntrada\", resultAgregarEntrada);\r\n      } else {\r\n        setIsPermisoAgregarEntrada(\r\n          Boolean(localStorage.getItem(\"isPermisoAgregarEntrada\"))\r\n        );\r\n      }\r\n\r\n      // Verificar y almacenar el permiso de eliminar entrada\r\n      if (localStorage.getItem(\"isPermisoEliminarEntrada\") === null) {\r\n        const resultEliminarEntrada = await isPermiso(\r\n          usuario.token,\r\n          \"12\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoEliminarEntrada(resultEliminarEntrada);\r\n        localStorage.setItem(\"isPermisoEliminarEntrada\", resultEliminarEntrada);\r\n      } else {\r\n        setIsPermisoEliminarEntrada(\r\n          Boolean(localStorage.getItem(\"isPermisoEliminarEntrada\"))\r\n        );\r\n      }\r\n\r\n      // Verificar y almacenar el permiso de modificar entrada\r\n      if (localStorage.getItem(\"isPermisoModificarEntrada\") === null) {\r\n        const resultModificarEntrada = await isPermiso(\r\n          usuario.token,\r\n          \"11\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoModificarEntrada(resultModificarEntrada);\r\n        localStorage.setItem(\r\n          \"isPermisoModificarEntrada\",\r\n          resultModificarEntrada\r\n        );\r\n      } else {\r\n        setIsPermisoModificarEntrada(\r\n          Boolean(localStorage.getItem(\"isPermisoModificarEntrada\"))\r\n        );\r\n      }\r\n\r\n      // Cargar cambio de moneda\r\n      if (localStorage.getItem(\"cambioMoneda\") === null) {\r\n        const cambioMoneda = await getValorMonedaUSD(usuario.token);\r\n        setCambioMoneda(cambioMoneda);\r\n        localStorage.setItem(\"cambioMoneda\", cambioMoneda.toString());\r\n      } else {\r\n        setCambioMoneda(parseFloat(localStorage.getItem(\"cambioMoneda\")));\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Entrada[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreProveedor, setDropDownItemsNombreProveedor] =\r\n    useState<ProveedorPiker[]>([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProveedorSearch, setNombreProveedorSearch] = useState(\"\");\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [costoDesdeSearch, setCostoDesdeSearch] = useState(\"\");\r\n  const [costoHastaSearch, setCostohastaSearch] = useState(\"\");\r\n  const [fechaDesdeSearch, setFechaDesdeSearch] = useState(new Date());\r\n  const [fechaHastaSearch, setFechaHastaSearch] = useState(new Date());\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n\r\n  const options = [\r\n    { label: \"Día\", value: \"dia\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n    { label: \"Mes\", value: \"mes\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"dia\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 6);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else if (value === \"mes\") {\r\n      // Restar 1 mes a la fecha actual\r\n      const lastMonthDate = new Date(currentDate);\r\n      lastMonthDate.setMonth(currentDate.getMonth() - 1);\r\n      const monthYear = String(lastMonthDate.getFullYear());\r\n      const monthMonth = String(lastMonthDate.getMonth() + 1).padStart(2, \"0\");\r\n      const monthDay = String(lastMonthDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${monthYear}-${monthMonth}-${monthDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarEntradas(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  const getProveedoresPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProveedores(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_proveedor,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProveedor(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([...tiendasMapeados]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdProveedorDetails(\"\");\r\n    setCostoUSDDetails(\"\");\r\n    setCantidadDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n    setIsFechaVencimientoDetails(false);\r\n    setFechaVencimientoDiaDetails(\"\");\r\n    setFechaVencimientoMesDetails(\"\");\r\n    setFechaVencimientoAnnoDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfEntradas = async () => {\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getEntradaByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.fecha.split(\"T\")[0].split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdEntradaDetails(result.id_entrada);\r\n        setIdProveedorDetails(result.proveedor.id_proveedor);\r\n        setIdProductoDetails(result.producto.id_producto);\r\n        setCantidadDetails(result.cantidad);\r\n        setIdTiendaDetails(result.tienda.id_tienda);\r\n        setCostoUSDDetails(result.costo);\r\n        setCostoCUPDetails(String((result.costo * cambioMoneda).toFixed(2)));\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n        if (result.fecha_vencimiento) {\r\n          const [yearVencimiento, monthVencimiento, dayVencimiento] =\r\n            result.fecha_vencimiento.split(\"T\")[0].split(\"-\");\r\n          setFechaVencimientoDiaDetails(String(parseInt(dayVencimiento)));\r\n          setFechaVencimientoMesDetails(String(parseInt(monthVencimiento)));\r\n          setFechaVencimientoAnnoDetails(String(parseInt(yearVencimiento)));\r\n        }\r\n\r\n        // Actualizamos los valores auxiliares\r\n        setIdProductoAuxModificarDetails(result.producto.id_producto);\r\n        setIdTiendaAuxModificarDetails(result.tienda.id_tienda);\r\n        setCantidadAuxModificarDetails(result.cantidad);\r\n        setCostoAuxModificarDetails(result.costo);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Entrada[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarEntrada(\r\n          usuario.token,\r\n          nombreProveedorSearch,\r\n          nombreProductoSearch,\r\n          costoDesdeSearch,\r\n          costoHastaSearch,\r\n          fechaDesde,\r\n          fechaHasta\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Entrada[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Entrada: element.id_entrada,\r\n              id_Proveedor: element.proveedor.id_proveedor,\r\n              id_Producto: element.producto.id_producto,\r\n              nombre_Proveedor: element.proveedor.nombre,\r\n              nombre_Producto: element.producto.nombre,\r\n              cantidad: element.cantidad,\r\n              costo: element.costo,\r\n              fecha: element.fecha,\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfEntradas();\r\n  }, [modalEntradasDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosProveedores = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllEntradas(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: Entrada[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Entrada: element.id_entrada,\r\n                id_Proveedor: element.proveedor.id_proveedor,\r\n                id_Producto: element.producto.id_producto,\r\n                nombre_Proveedor: element.proveedor.nombre,\r\n                nombre_Producto: element.producto.nombre,\r\n                cantidad: element.cantidad,\r\n                costo: String(element.costo * cambioMoneda),\r\n                fecha: element.fecha,\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron entradas.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener las entradas o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de las entradas\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        getProveedoresPikerDetails();\r\n        getProductosPikerDetails();\r\n        getTiendasPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarEntradas = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let EntradasFiltradas: Entrada[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortEntradas?.criterioOrden && sortEntradas.tipoOrden) {\r\n          EntradasFiltradas = await ordenarEntradas(\r\n            usuario.token,\r\n            EntradasFiltradas,\r\n            sortEntradas?.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        } else {\r\n          EntradasFiltradas = await ordenarEntradas(\r\n            usuario.token,\r\n            EntradasFiltradas,\r\n            \"option6\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(EntradasFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarEntradas(\r\n      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n    );\r\n  }, [sortEntradas, selectedOptionTipoOrden]);\r\n\r\n  useEffect(() => {\r\n    const obtenerFechaVencimiento = async () => {\r\n      if (idProductoDetails && usuario?.token) {\r\n        const result = await getProductoById(usuario.token, idProductoDetails);\r\n        if (result) {\r\n          if (modalEntradasDates?.id_entrada === \"\") {\r\n            const currentDate = new Date();\r\n\r\n            // Extraemos el año, mes y día de la fecha actual\r\n            const year = String(currentDate.getFullYear());\r\n            const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n            const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n            setFechaVencimientoDiaDetails(String(parseInt(day)));\r\n            setFechaVencimientoMesDetails(String(parseInt(month)));\r\n            setFechaVencimientoAnnoDetails(String(parseInt(year)));\r\n          }\r\n          setIsFechaVencimientoDetails(result.isFecha_Vencimiento);\r\n        } else {\r\n          setIsFechaVencimientoDetails(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    obtenerFechaVencimiento();\r\n  }, [idProductoDetails]);\r\n\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    setSelecterActivoDetails(\"\");\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ]);\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setIdProveedorDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n    setIdTiendaDetails(\"\");\r\n    setCantidadDetails(\"\");\r\n    setCostoUSDDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Extraemos el año, mes y día de la fecha actual\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    setFechaDiaDetails(String(parseInt(day)));\r\n    setFechaMesDetails(String(parseInt(month)));\r\n    setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarEntradas(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProveedorSearch(\"\");\r\n    setNombreProductoSearch(\"\");\r\n    setCostoDesdeSearch(\"\");\r\n    setCostohastaSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n  // Retorna el Promedio ponderado\r\n  const calcularCPP = (\r\n    cant_existencia: number,\r\n    CPP_anterior: number,\r\n    cant_i: number,\r\n    costoUnidad_i: number\r\n  ) => {\r\n    const cpp =\r\n      (cant_existencia * CPP_anterior + cant_i * costoUnidad_i) /\r\n      (cant_existencia + cant_i);\r\n    return cpp.toFixed(5);\r\n  };\r\n  const calcularCPPAjustado = (\r\n    cant_existencia: number,\r\n    CPP_anterior: number,\r\n    diferencia: number\r\n  ) => {\r\n    const cpp = (cant_existencia * CPP_anterior + diferencia) / cant_existencia;\r\n    return cpp.toFixed(5);\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewEntrada = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando entrada. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR ENTRADA. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (idProveedorDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo total de la entrada.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await addEntrada(\r\n          usuario.token,\r\n          costoUSDDetails,\r\n          cantidadDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          isFechaVencimientoDetails\r\n            ? `${fechaVencimientoMesDetails}-${fechaVencimientoDiaDetails}-${fechaVencimientoAnnoDetails}`\r\n            : null,\r\n          parseInt(idProveedorDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails),\r\n          parseFloat(costoCUPDetails)\r\n        );\r\n        /*\r\n        setModalMensaje(\"Actualizando costo promedio ponderado del producto\");\r\n        // Actualizar costo promedio ponderado CPP\r\n        // Obtener datos necezarios\r\n        const productoData = await getProductoById(\r\n          usuario.token,\r\n          idProductoDetails\r\n        );\r\n        const cantidadExistencia = await getProductoCantidadTotal(\r\n          usuario.token,\r\n          idProductoDetails\r\n        );\r\n        const cpp = calcularCPP(\r\n          cantidadExistencia,\r\n          productoData.costo_acumulado,\r\n          parseInt(cantidadDetails),\r\n          parseFloat(costoUSDDetails) / parseInt(cantidadDetails)\r\n        );\r\n        await updateProductoCostoAcumulado(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          cpp\r\n        );\r\n        */\r\n        setModalMensaje(\"Actualizando cantidad en tienda\");\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(cantidadDetails)\r\n        );\r\n\r\n        setModalMensaje(\"Agregando acción\");\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó una entrada de ${cantidadDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        await createProductoInTienda(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          idTiendaDetails\r\n        );\r\n        setIdProveedorDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setIdTiendaDetails(\"\");\r\n        setCostoUSDDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La entrada fue insertado con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarEntradaFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando entrada. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR ENTRADA. Compruebe los siguientes campos:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      const resultViejo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaAuxModificarDetails\r\n      );\r\n\r\n      if (\r\n        idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n        idProductoAuxModificarDetails !== idProductoDetails\r\n      ) {\r\n        if (\r\n          parseInt(resultViejo.cantidad ?? 0) -\r\n          parseInt(cantidadAuxModificarDetails) <\r\n          0\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Operación inválida. No se dispone de sificientes productos para realizar la operoción.\";\r\n        }\r\n      }\r\n      if (\r\n        parseInt(cantidadAuxModificarDetails) - parseInt(cantidadDetails) >\r\n        parseInt(resultNuevo.cantidad ?? 0)\r\n      ) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n      if (idProveedorDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo del producto por unidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await modificarEntrada(\r\n          usuario.token,\r\n          idEntradaDetails,\r\n          costoUSDDetails,\r\n          cantidadDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          isFechaVencimientoDetails\r\n            ? `${fechaVencimientoMesDetails}-${fechaVencimientoDiaDetails}-${fechaVencimientoAnnoDetails}`\r\n            : null,\r\n          parseInt(idProveedorDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails),\r\n          parseFloat(costoCUPDetails)\r\n        );\r\n        /*\r\n        setModalMensaje(\"Actualizando costo promedio ponderado del producto\");\r\n\r\n        // Obtener datos necesarios\r\n        const productoData = await getProductoById(\r\n          usuario.token,\r\n          idProductoDetails\r\n        );\r\n\r\n        const cantidadExistencia = await getProductoCantidadTotal(\r\n          usuario.token,\r\n          idProductoDetails\r\n        );\r\n\r\n        // Verificar valores de costo unitario\r\n        const costoUnitarioNuevo =\r\n          parseFloat(costoUSDDetails) / parseInt(cantidadDetails);\r\n        const costoUnitarioOriginal =\r\n          parseFloat(costoAuxModificarDetails) /\r\n          parseInt(cantidadAuxModificarDetails);\r\n\r\n        // Calcular la diferencia en el costo total\r\n        const diferenciaCostoTotal =\r\n          (costoUnitarioNuevo - costoUnitarioOriginal) *\r\n          parseFloat(cantidadAuxModificarDetails);\r\n\r\n        // Ajustar el costo acumulado\r\n        const costoAcumuladoActual =\r\n          cantidadExistencia * productoData.costo_acumulado;\r\n\r\n        const nuevoCostoAcumulado = costoAcumuladoActual + diferenciaCostoTotal;\r\n\r\n        // Calcular el nuevo CPP\r\n        const nuevoCPP = nuevoCostoAcumulado / cantidadExistencia;\r\n\r\n        // Actualizar el CPP en la base de datos\r\n        await updateProductoCostoAcumulado(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          nuevoCPP.toFixed(5)\r\n        );\r\n        */\r\n        if (\r\n          idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n          idProductoAuxModificarDetails !== idProductoDetails\r\n        ) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaAuxModificarDetails),\r\n            parseInt(idProductoAuxModificarDetails),\r\n            parseInt(cantidadAuxModificarDetails) * -1\r\n          );\r\n\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(cantidadDetails)\r\n          );\r\n        } else if (cantidadAuxModificarDetails !== cantidadDetails) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(cantidadDetails) - parseInt(cantidadAuxModificarDetails)\r\n          );\r\n        }\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó una entrada de originalmente ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La entrada se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarEntradaFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando entrada. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR ENTRADA. Compruebe los siguientes parámetros:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n\r\n      if (parseInt(cantidadDetails) > parseInt(resultNuevo.cantidad ?? 0)) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n\r\n      if (flag) {\r\n        await deleteEntrada(usuario.token, idEntradaDetails);\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(cantidadDetails) * -1\r\n        );\r\n\r\n        // Actualizar productos en 0 en productoTienda\r\n        await deleteFromProductoTiendaIn_0(usuario.token);\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la entrada con una cantidad de ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La entrada se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdProveedorDetails(\"\");\r\n        setCostoUSDDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre Proveedor\",\r\n    \"Nombre Producto\",\r\n    \"Cantidad\",\r\n    \"Costo Total CUP\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre Proveedor\",\r\n    \"Nombre Producto\",\r\n    \"Cantidad\",\r\n    \"Costo Total CUP\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarEntrada && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Entrada</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableEntradas\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del Producto\"\r\n                    value={nombreProductoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Proveedor:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del proveedor\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={nombreProveedorSearch}\r\n                    onChangeText={setNombreProveedorSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Rango de Costo en CUP:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={idProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setIdProductoDetails(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={idProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setIdProductoDetails(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.blanco,\r\n                        fontSize: 18,\r\n                        justifyContent: \"center\",\r\n                        marginRight: \"25%\",\r\n                        fontWeight: \"bold\", // Para negritas\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Desde\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.blanco,\r\n                        fontSize: 18,\r\n                        marginLeft: \"12%\",\r\n                        justifyContent: \"center\",\r\n                        fontWeight: \"bold\", // Para negritas\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Hasta\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaDesdeSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n\r\n                    <View\r\n                      style={{\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaHastaSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarEntradas(\r\n                            `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                            `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                          );\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProveedorDetails}\r\n                    placeholder=\"Seleccione un Proveedor\"\r\n                    setValue={setIdProveedorDetails}\r\n                    items={dropdownItemsNombreProveedor}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProveedoresDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Seleccione un Producto\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProductosDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre de la Tienda */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idTiendaDetails}\r\n                    placeholder=\"Seleccione una Tienda\"\r\n                    setValue={setIdTiendaDetails}\r\n                    items={dropdownItemsNombreTienda}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalMovil}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalMovil}>\r\n                      Costo total de la entrada en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={costoCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoCUPDetails(validNumericValue);\r\n                        const costoUSD =\r\n                          parseFloat(validNumericValue) / cambioMoneda;\r\n                        setCostoUSDDetails(costoUSD.toFixed(5));\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Costo en CUP\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*  */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Costo de cada unidad\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      CUP:{\" \"}\r\n                      {(\r\n                        (parseFloat(costoUSDDetails) /\r\n                          parseInt(cantidadDetails)) *\r\n                        cambioMoneda\r\n                      ).toFixed(2)}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{ width: \"90%\", marginLeft: \"2%\", marginRight: \"2%\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>Fecha</Text>\r\n                  {isDateLoaded && (\r\n                    <MyDateInput\r\n                      dayValue={fechaDiaDetails}\r\n                      monthValue={fechaMesDetails}\r\n                      yearValue={fechaAnnoDetails}\r\n                      onDayChange={setFechaDiaDetails}\r\n                      onMonthChange={setFechaMesDetails}\r\n                      onYearChange={setFechaAnnoDetails}\r\n                      style={{ margin: 20 }}\r\n                      styleText={styles.labelTextModalMovil}\r\n                    />\r\n                  )}\r\n                </View>\r\n\r\n                {/* Campo fecha vencimiento */}\r\n                {isFechaVencimientoDetails && (\r\n                  <View\r\n                    style={{\r\n                      width: \"90%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Fecha vencimiento\r\n                    </Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInputVencimiento\r\n                        dayValue={fechaVencimientoDiaDetails}\r\n                        monthValue={fechaVencimientoMesDetails}\r\n                        yearValue={fechaVencimientoAnnoDetails}\r\n                        onDayChange={setFechaVencimientoDiaDetails}\r\n                        onMonthChange={setFechaVencimientoMesDetails}\r\n                        onYearChange={setFechaVencimientoAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                )}\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar entrada */}\r\n                  {isPermisoModificarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar entrada */}\r\n                  {isPermisoAgregarEntrada &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewEntrada()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoModificarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarEntradaFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Entradas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarEntrada && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                  styles.radioButtonSelected &&\r\n                  styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Entrada\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del Producto\"\r\n              value={nombreProductoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Proveedor:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del proveedor\"\r\n              value={nombreProveedorSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProveedorSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Rango de Costo en CUP:</Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={costoDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostoDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={costoHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostohastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() =>\r\n                    filtrarYOrdenarEntradas(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    )\r\n                  }\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableEntradas\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProveedorDetails}\r\n                    placeholder=\"Seleccione un Proveedor\"\r\n                    setValue={setIdProveedorDetails}\r\n                    items={dropdownItemsNombreProveedor}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProveedoresDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Seleccione un Producto\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProductosDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre de la Tienda */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTiendasDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTiendasDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idTiendaDetails}\r\n                    placeholder=\"Seleccione una Tienda\"\r\n                    setValue={setIdTiendaDetails}\r\n                    items={dropdownItemsNombreTienda}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"TiendaDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Costo total de la entrada en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={costoCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoCUPDetails(validNumericValue);\r\n                        const costoUSD =\r\n                          parseFloat(validNumericValue) / cambioMoneda;\r\n                        setCostoUSDDetails(costoUSD.toFixed(5));\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Costo en CUP\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Contenedor para la texto costo por unidad y el costo CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo texto costo por unidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Costo de cada unidad\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      CUP:{\" \"}\r\n                      {(\r\n                        (parseFloat(costoUSDDetails) /\r\n                          parseInt(cantidadDetails)) *\r\n                        cambioMoneda\r\n                      ).toFixed(2)}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha entrada */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Fecha entrada\r\n                    </Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo fecha vencimiento */}\r\n                  {isFechaVencimientoDetails && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Fecha vencimiento\r\n                      </Text>\r\n                      {isDateLoaded && (\r\n                        <MyDateInputVencimiento\r\n                          dayValue={fechaVencimientoDiaDetails}\r\n                          monthValue={fechaVencimientoMesDetails}\r\n                          yearValue={fechaVencimientoAnnoDetails}\r\n                          onDayChange={setFechaVencimientoDiaDetails}\r\n                          onMonthChange={setFechaVencimientoMesDetails}\r\n                          onYearChange={setFechaVencimientoAnnoDetails}\r\n                          style={{ margin: 20 }}\r\n                          styleText={styles.labelTextModalDesktop}\r\n                          onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        />\r\n                      )}\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarEntrada &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewEntrada()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoModificarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarEntradaFunction()\r\n                      : modificarEntradaFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Entradas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import { Colors } from \"../styles/Colors\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  TouchableOpacity,\r\n  Image,\r\n  StyleSheet,\r\n  Text,\r\n  Animated,\r\n  View,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\n\r\ninterface CustomButtonProps {\r\n  text: any;\r\n  imageSource: any;\r\n  onPress: () => void;\r\n}\r\n\r\nconst CustomButtonAdministradorView: React.FC<CustomButtonProps> = ({\r\n  onPress,\r\n  text,\r\n  imageSource,\r\n}) => {\r\n  const [scale] = useState(new Animated.Value(1));\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 1150; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Estilos condicionales\r\n  const buttonStyles = isMobile ? styles.movilButton : styles.desktopButton;\r\n\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={buttonStyles}\r\n      onPressIn={onPressIn}\r\n      onPressOut={onPressOut}\r\n      onPress={onPress}\r\n    >\r\n      <Animated.View style={{ transform: [{ scale }] }}>\r\n        <View style={styles.desktopContent}>\r\n          <Image source={imageSource} style={styles.image} />\r\n          <Text style={styles.textDesktop}>{text}</Text>\r\n        </View>\r\n      </Animated.View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  desktopButton: {\r\n    height: 110,\r\n    width: 110,\r\n    justifyContent: \"center\",\r\n    borderRadius: 15,\r\n    alignItems: \"center\",\r\n    shadowColor: Colors.negro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    marginHorizontal: 10\r\n  },\r\n  movilButton: {\r\n    height: 110,\r\n    width: 110,\r\n    justifyContent: \"center\",\r\n    borderRadius: 15,\r\n    alignItems: \"center\",\r\n    shadowColor: Colors.negro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    marginHorizontal: 10\r\n  },\r\n  desktopContent: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  textDesktop: {\r\n    fontSize: 16,\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n    fontWeight: \"bold\"\r\n  },\r\n  textMovil: {\r\n    fontSize: 16,\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n    fontWeight: \"bold\"\r\n  },\r\n  image: {\r\n    height: 70,\r\n    width: 70,\r\n    tintColor: Colors.negro,\r\n  },\r\n});\r\n\r\nexport default CustomButtonAdministradorView;\r\n","import Navbar from \"../components/Navbar\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport React, { useEffect, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport { Image, Text, TouchableOpacity, useWindowDimensions, View } from \"react-native\";\r\nimport CustomButtonOptions from \"../components/CustomButtonOptions\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport CustomButtonAdministradorView from \"../components/CustomButtonAdministradorView\";\r\n\r\n\r\nexport function Administracion() {\r\n    const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n    const isMobile = width < 930;\r\n    const navigation = useNavigation();\r\n\r\n\r\n    if (isMobile) {\r\n        return (\r\n            <View style={{ flex: 1 }}>\r\n                <Navbar />\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        justifyContent: \"space-around\",\r\n                        alignItems: \"center\",\r\n                        flexDirection: \"column\"\r\n                    }}\r\n                >\r\n                </View>\r\n            </View>\r\n        );\r\n    } else {\r\n        return (\r\n            <View style={{ flex: 1 }}>\r\n                <Navbar />\r\n                <View\r\n                    style={{\r\n                        marginTop: 150,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        flexDirection: \"row\"\r\n                    }}\r\n                >\r\n                    <CustomButtonAdministradorView\r\n                        imageSource={require(\"../images/gerente.png\")}\r\n                        onPress={() => navigation.navigate(\"Usuarios\")}\r\n                        text={\"Usuarios\"}\r\n                    />\r\n                    <CustomButtonAdministradorView\r\n                        imageSource={require(\"../images/gerente.png\")}\r\n                        onPress={() => navigation.navigate(\"Tiendas\")}\r\n                        text={\"Tiendas\"}\r\n                    />\r\n                </View>\r\n                <View>\r\n\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import React, { createContext, useState, ReactNode } from \"react\";\r\n\r\n// Define la interfaz del Usuario\r\nexport interface ModalMovimientosDates {\r\n  id_movimiento: string;\r\n  isAddMovimiento: boolean;\r\n  isModificarMovimiento: boolean;\r\n  fileEditable: boolean;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface ModalMovimientosDatesContextType {\r\n  modalMovimientosDates: ModalMovimientosDates | null;\r\n  setModalMovimientosDates: (\r\n    modalMovimientosDates: ModalMovimientosDates | null\r\n  ) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst ModalMovimientosDatesContext = createContext<\r\n  ModalMovimientosDatesContextType | undefined\r\n>(undefined);\r\n\r\n// Define el proveedor\r\nexport const ModalMovimientosDatesProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [modalMovimientosDates, setModalEntradasDates] =\r\n    useState<ModalMovimientosDates | null>(null);\r\n\r\n  return (\r\n    <ModalMovimientosDatesContext.Provider\r\n      value={{\r\n        modalMovimientosDates: modalMovimientosDates,\r\n        setModalMovimientosDates: setModalEntradasDates,\r\n      }}\r\n    >\r\n      {children}\r\n    </ModalMovimientosDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useModalMovimientosDates = () => {\r\n  const context = React.useContext(ModalMovimientosDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      \"useModalMovimientosDates debe usarse dentro de un ModalMovimientosDates\"\r\n    );\r\n  }\r\n  return context;\r\n};\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { useSortMovimientosDates } from \"../contexts/AuxiliarSortMovimientos\";\r\nimport { useModalMovimientosDates } from \"../contexts/AuxiliarContextModalMovimientos\";\r\n\r\nexport interface Movimiento {\r\n  id_Movimiento: string;\r\n  id_TiendaOrigen: string;\r\n  id_TiendaDestino: string;\r\n  id_Producto: string;\r\n  nombreTiendaOrigen: string;\r\n  nombreTiendaDestino: string;\r\n  nombre_Usuario: string;\r\n  nombre_Producto: string;\r\n  cantidad: string;\r\n  fecha: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Movimiento[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableMovimientos: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalMovimientosDates, setModalMovimientosDates } = useModalMovimientosDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { SortMovimientosDates, setSortMovimientosDates} = useSortMovimientosDates();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Movimiento[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_movimiento: string) => {\r\n    setModalMovimientosDates({\r\n      id_movimiento: id_movimiento,\r\n      isAddMovimiento: true,\r\n      fileEditable: false,\r\n      isModificarMovimiento: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Usuario\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Producto\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Cantidad\") {\r\n      aux = \"option5\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option6\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortMovimientosDates({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Usuario\" ||\r\n              column === \"Producto\" ||\r\n              column === \"Cantidad\" ||\r\n              column === \"Fecha\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortEntradasAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalMovimientosDates({\r\n        id_movimiento: idEntradaOption,\r\n        isAddMovimiento: true,\r\n        fileEditable: true,\r\n        isModificarMovimiento: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_TiendaOrigen !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han hecho operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Movimiento}\r\n                onPress={() => detailsModalView(item.id_Movimiento)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Usuario*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Tienda Origen*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreTiendaOrigen}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Tienda Destino */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombreTiendaDestino}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Movimiento}\r\n                onPress={() => detailsModalView(item.id_Movimiento)}\r\n              >\r\n                {/* Primera celda - Nombre Usuario*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Tienda Origen */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombreTiendaOrigen}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Tienda Destino */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombreTiendaDestino}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 50,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getAllTiendas, isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  getAllProductos,\r\n  moverProducto,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport {\r\n  Movimiento,\r\n  MyDateTableMovimientos,\r\n} from \"../components/MyDateTableMovimientos\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport { ProductoProvider } from \"../contexts/ProductoContext\";\r\nimport {\r\n  deleteMovimiento,\r\n  filtrarMovimientos,\r\n  filtrarMovimientosEspecial,\r\n  getAllMovimientos,\r\n  getMovimientoById,\r\n  ordenarMovimientos,\r\n  updateMovimiento,\r\n} from \"../services/MovimientosServices\";\r\nimport { useSortMovimientosDates } from \"../contexts/AuxiliarSortMovimientos\";\r\nimport { useModalMovimientosDates } from \"../contexts/AuxiliarContextModalMovimientos\";\r\nimport { longPressGestureHandlerProps } from \"react-native-gesture-handler/lib/typescript/handlers/LongPressGestureHandler\";\r\nimport { getAllUsuarios } from \"../services/UsuarioServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\n\r\nexport default function MovimientosView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables auxiliares para controlar el despliege de los dropDownsPiers\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesdeSearsh] =\r\n    useState(500);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(500);\r\n  const [capaPrioridadTiendaOrigenSearsh, setCapaPrioridadTiendaOrigenSearsh] =\r\n    useState(500);\r\n  const [\r\n    capaPrioridadTiendaDestinoSearsh,\r\n    setCapaPrioridadTiendaDestinoSearsh,\r\n  ] = useState(500);\r\n  const [capaPrioridadViewTiendasSearsh, setCapaPrioridadViewTiendasSearsh] =\r\n    useState(500);\r\n  const [capaPrioridadViewFechaSearsh, setCapaPrioridadViewFechaSearsh] =\r\n    useState(500);\r\n\r\n  const [capaPrioridadViewFechaDetails, setCapaPrioridadViewFechaDetails] =\r\n    useState(500);\r\n  const [capaPrioridadViewTiendasDetails, setCapaPrioridadViewTiendasDetails] =\r\n    useState(500);\r\n  const [\r\n    capaPrioridadViewProductosDetails,\r\n    setCapaPrioridadViewProductosDetails,\r\n  ] = useState(500);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    if (prioridad === \"TiendaOrigenSearsh\") {\r\n      setCapaPrioridadTiendaOrigenSearsh(2000);\r\n      setCapaPrioridadTiendaDestinoSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadFechaDesdeSearsh(1500);\r\n      setCapaPrioridadViewTiendasSearsh(1000);\r\n      setCapaPrioridadViewFechaSearsh(500);\r\n    } else if (prioridad === \"TiendaDestinoSearsh\") {\r\n      setCapaPrioridadTiendaOrigenSearsh(1500);\r\n      setCapaPrioridadTiendaDestinoSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadFechaDesdeSearsh(1500);\r\n      setCapaPrioridadViewTiendasSearsh(1000);\r\n      setCapaPrioridadViewFechaSearsh(500);\r\n    } else if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadTiendaOrigenSearsh(1500);\r\n      setCapaPrioridadTiendaDestinoSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadFechaDesdeSearsh(2000);\r\n      setCapaPrioridadViewTiendasSearsh(500);\r\n      setCapaPrioridadViewFechaSearsh(1000);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadTiendaOrigenSearsh(1500);\r\n      setCapaPrioridadTiendaDestinoSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n      setCapaPrioridadFechaDesdeSearsh(1500);\r\n      setCapaPrioridadViewTiendasSearsh(500);\r\n      setCapaPrioridadViewFechaSearsh(1000);\r\n    }\r\n\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadViewFechaDetails(2000);\r\n      setCapaPrioridadViewTiendasDetails(1000);\r\n    } else if (prioridad === \"TiendasDetails\") {\r\n      setCapaPrioridadViewFechaDetails(1000);\r\n      setCapaPrioridadViewTiendasDetails(2000);\r\n      setCapaPrioridadViewProductosDetails(1000);\r\n    } else if (prioridad === \"ProductosDetails\") {\r\n      setCapaPrioridadViewFechaDetails(1000);\r\n      setCapaPrioridadViewTiendasDetails(1000);\r\n      setCapaPrioridadViewProductosDetails(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalMovimientosDates, setModalMovimientosDates } =\r\n    useModalMovimientosDates();\r\n  const { SortMovimientosDates, setSortMovimientosDates } =\r\n    useSortMovimientosDates();\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n  const options = [\r\n    { label: \"Ayer\", value: \"ayer\" },\r\n    { label: \"Hoy\", value: \"hoy\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"hoy\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"ayer\") {\r\n      // Restar 1 día a la fecha actual\r\n      const yesterdayDate = new Date(currentDate);\r\n      yesterdayDate.setDate(currentDate.getDate() - 1);\r\n      const yesterdayYear = String(yesterdayDate.getFullYear());\r\n      const yesterdayMonth = String(yesterdayDate.getMonth() + 1).padStart(\r\n        2,\r\n        \"0\"\r\n      );\r\n      const yesterdayDay = String(yesterdayDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${yesterdayYear}-${yesterdayMonth}-${yesterdayDay}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 7);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarMovimientos(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idMovimientoDetails, setIdMovimientoDetails] = useState(\"\");\r\n  const [idUsuarioDetails, setIdUsuarioDetails] = useState(\"\");\r\n  const [nombreUsuarioDetails, setNombreUsuarioDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [idTiendaOrigenDetails, setIdTiendaOrigenDetails] = useState(\"\");\r\n  const [idTiendaDestinoDetails, setIdTiendaDestinoDetails] = useState(\"\");\r\n  const [cantidadDetails, setCantidadDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n\r\n  const [isMovimientoEditable, setIsMovimientoEditable] = useState(false);\r\n  const [isMovimientoEliminable, setIsMovimientoEliminable] = useState(false);\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [\r\n    idTiendaOrigenAuxModificarDetails,\r\n    setIdTiendaOrigenAuxModificarDetails,\r\n  ] = useState(\"\");\r\n  const [\r\n    idTiendaDestinoAuxModificarDetails,\r\n    setIdTiendaDestinoAuxModificarDetails,\r\n  ] = useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [isModalChekEliminarVisible, setIsModalChekEliminarVisible] =\r\n    useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  // Controlar el doble clic del boton\r\n    const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n    \r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoEliminarMovimiento, setIsPermisoEliminarMovimiento] =\r\n    React.useState(false);\r\n  const [isPermisoModificarMovimiento, setIsPermisoModificarMovimiento] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      // Verificar y almacenar el permiso de mover local\r\n      if (localStorage.getItem(\"resultPermisoOptionMoverLocal\") === null) {\r\n        const resultPermisoOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(resultPermisoOptionMoverLocal);\r\n        localStorage.setItem(\"resultPermisoOptionMoverLocal\", resultPermisoOptionMoverLocal);\r\n      } else {\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(Boolean(localStorage.getItem(\"resultPermisoOptionMoverLocal\")));\r\n      }\r\n  \r\n      // Verificar y almacenar el permiso de mover general\r\n      if (localStorage.getItem(\"resultPermisoOptionMoverGeneral\") === null) {\r\n        const resultPermisoOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(resultPermisoOptionMoverGeneral);\r\n        localStorage.setItem(\"resultPermisoOptionMoverGeneral\", resultPermisoOptionMoverGeneral);\r\n      } else {\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(Boolean(localStorage.getItem(\"resultPermisoOptionMoverGeneral\")));\r\n      }\r\n  \r\n      // Establecer permisos fijos (eliminar y modificar movimiento)\r\n      setIsPermisoEliminarMovimiento(true);\r\n      setIsPermisoModificarMovimiento(true);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Movimiento[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [\r\n    optimizacionAbrirPorMovimientosProPrimeraVes,\r\n    setOptimizacionAbrirPorMovimientosProPrimeraVes,\r\n  ] = useState(false);\r\n  const [dropdownItemsNombreUsuario, setDropDownItemsNombreUsuario] = useState<\r\n    ProveedorPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreUsuarioSearch, setNombreUsuarioSearch] = useState(\"\");\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [cantidadSearch, setCantidadSearch] = useState(\"\");\r\n  const [tiendaOrigenSearch, setTiendaOrigenSearch] = useState(\"\");\r\n  const [tiendaDestinoSearch, setTiendaDestinoSearch] = useState(\"\");\r\n  const [fechaDesdeSearch, setFechaDesdeSearch] = useState(new Date());\r\n  const [fechaHastaSearch, setFechaHastaSearch] = useState(new Date());\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getUsuariosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllUsuarios(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const usuariosMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_usuario,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreUsuario(usuariosMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Todos los movimientos\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddMovimiento = () => {\r\n    setIdUsuarioDetails(\"\");\r\n    setCantidadDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n\r\n    setModalMovimientosDates({\r\n      id_movimiento: \"\",\r\n      isAddMovimiento: false,\r\n      isModificarMovimiento: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfMovimiento = async () => {\r\n    if (usuario?.token && modalMovimientosDates?.id_movimiento) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getMovimientoById(\r\n        usuario.token,\r\n        modalMovimientosDates.id_movimiento\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.fecha.split(\"T\")[0].split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdMovimientoDetails(result.id_salida);\r\n        setIdUsuarioDetails(result.usuario.id_usuario);\r\n        setIdProductoDetails(result.producto.id_producto);\r\n        setCantidadDetails(result.cantidad);\r\n        setIdTiendaOrigenDetails(result.tienda_origen.id_tienda);\r\n        setIdTiendaDestinoDetails(result.tienda_destino.id_tienda);\r\n        setNombreUsuarioDetails(result.usuario.nombre_usuario);\r\n\r\n        // Variables para si es posible eliminar o modificar el movimiento\r\n        setIsMovimientoEditable(\r\n          result.usuario.id_usuario === usuario.id_usuario\r\n            ? true\r\n            : parseInt(usuario.id_rol) === 1\r\n        );\r\n        setIsMovimientoEliminable(\r\n          result.usuario.id_usuario === usuario.id_usuario\r\n            ? true\r\n            : parseInt(usuario.id_rol) === 1\r\n        );\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares\r\n        setIdProductoAuxModificarDetails(result.producto.id_producto);\r\n        setIdTiendaDestinoAuxModificarDetails(result.tienda_destino.id_tienda);\r\n        setIdTiendaOrigenAuxModificarDetails(result.tienda_origen.id_tienda);\r\n        setCantidadAuxModificarDetails(result.cantidad);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Movimiento[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const resultPermisoOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        let result;\r\n        if (resultPermisoOptionMoverGeneral) {\r\n          result = await filtrarMovimientos(\r\n            usuario.token,\r\n            nombreUsuarioSearch,\r\n            nombreProductoSearch,\r\n            cantidadSearch,\r\n            fechaDesde,\r\n            fechaHasta,\r\n            resultPermisoOptionMoverGeneral\r\n              ? tiendaOrigenSearch\r\n              : usuario.id_tienda,\r\n            tiendaDestinoSearch\r\n          );\r\n        } else {\r\n          result = await filtrarMovimientosEspecial(\r\n            usuario.token,\r\n            nombreUsuarioSearch,\r\n            nombreProductoSearch,\r\n            cantidadSearch,\r\n            fechaDesde,\r\n            fechaHasta,\r\n            usuario.id_tienda,\r\n            tiendaOrigenSearch,\r\n            tiendaDestinoSearch\r\n          );\r\n        }\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Movimiento[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              return {\r\n                id_Movimiento: element.id_salida,\r\n                id_TiendaOrigen: element.tienda_origen.id_tienda,\r\n                id_TiendaDestino: element.tienda_destino.id_tienda,\r\n                id_Producto: element.producto.id_producto,\r\n                nombreTiendaOrigen: element.tienda_origen.nombre,\r\n                nombreTiendaDestino: element.tienda_destino.nombre,\r\n                nombre_Usuario: element.usuario.nombre,\r\n                nombre_Producto: element.producto.nombre,\r\n                cantidad: element.cantidad,\r\n                fecha: element.fecha,\r\n              };\r\n            })\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optimizacionAbrirPorMovimientosProPrimeraVes) {\r\n      cargarDetailsOfMovimiento();\r\n    }\r\n  }, [modalMovimientosDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosMovimientos = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllMovimientos(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: Movimiento[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Movimiento: element.id_salida,\r\n                id_TiendaOrigen: element.tienda_origen.id_tienda,\r\n                id_TiendaDestino: element.tienda_destino.id_tienda,\r\n                id_Producto: element.producto.id_producto,\r\n                nombreTiendaOrigen: element.tienda_origen.nombre,\r\n                nombreTiendaDestino: element.tienda_destino.nombre,\r\n                nombre_Usuario: element.usuario.nombre,\r\n                nombre_Producto: element.producto.nombre,\r\n                cantidad: element.cantidad,\r\n                fecha: element.fecha,\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron entradas.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener las entradas o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de las entradas\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        getUsuariosPikerDetails();\r\n        getProductosPikerDetails();\r\n        getTiendasPikerDetails();\r\n        filtrarYOrdenarMovimientos(\r\n          `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n          `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n        );\r\n        setOptimizacionAbrirPorMovimientosProPrimeraVes(true);\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n  // Filtrar y ordenar movimientos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarMovimientos = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let MovimientosFiltradas: Movimiento[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (\r\n          SortMovimientosDates?.criterioOrden &&\r\n          SortMovimientosDates.tipoOrden\r\n        ) {\r\n          MovimientosFiltradas = await ordenarMovimientos(\r\n            usuario.token,\r\n            MovimientosFiltradas,\r\n            SortMovimientosDates.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        } else {\r\n          MovimientosFiltradas = await ordenarMovimientos(\r\n            usuario.token,\r\n            MovimientosFiltradas,\r\n            \"option6\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(MovimientosFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    if (optimizacionAbrirPorMovimientosProPrimeraVes) {\r\n      filtrarYOrdenarMovimientos(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  }, [SortMovimientosDates, selectedOptionTipoOrden]);\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    if (optimizacionAbrirPorMovimientosProPrimeraVes) {\r\n      setSelecterActivoDetails(\"\");\r\n    }\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ]);\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProductoSearch(\"\");\r\n    setNombreUsuarioSearch(\"\");\r\n    setCantidadSearch(\"\");\r\n    setTiendaOrigenSearch(\"\");\r\n    setTiendaDestinoSearch(\"\");\r\n    setFechaAnnoDesdeSearch(\"2024\");\r\n    setFechaMesdesdeSearch(\"1\");\r\n    setFechaDiaDesdeSearch(\"1\");\r\n    setFechaAnnoHastaSearch(String(parseInt(year)));\r\n    setFechaMesHastaSearch(String(parseInt(month)));\r\n    setFechaDiaHastaSearch(String(parseInt(day)));\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewEntrada = async () => {\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR ENTRADA. Porfavor verifique los siguientes campos:\\n\";\r\n\r\n      if (idUsuarioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaOrigenDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await addEntrada(\r\n          usuario.token,\r\n          costoDetails,\r\n          cantidadDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          parseInt(idUsuarioDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaOrigenDetails)\r\n        );\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaOrigenDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(cantidadDetails)\r\n        );\r\n        setModalMensaje(`La entrada fue insertada con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdUsuarioDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setIdTiendaOrigenDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarMovimientos(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para actualizar los datos de un producto\r\n  const modificarMovimiento = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando movimiento. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR MOVIMIENTO. Compruebe los siguientes campos:\\n\";\r\n      const resultOrigen = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaOrigenAuxModificarDetails\r\n      );\r\n      const resultDestino = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaDestinoAuxModificarDetails\r\n      );\r\n      const resultNuevoOrigen = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaOrigenDetails\r\n      );\r\n      const resultNuevoProductoOrigen = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaOrigenAuxModificarDetails\r\n      );\r\n      const resultNuevoProductoNuevoOrigen = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaOrigenDetails\r\n      );\r\n      let cantidadNueva: number = parseInt(cantidadDetails);\r\n      let cantidadVieja: number = parseInt(cantidadAuxModificarDetails);\r\n      let cantidadEnOrigen: number = resultOrigen\r\n        ? parseInt(resultOrigen.cantidad)\r\n        : 0;\r\n      let cantidadEnDestino: number = resultDestino\r\n        ? parseInt(resultDestino.cantidad)\r\n        : 0;\r\n      let cantidadEnNuevoOrigen: number = resultNuevoOrigen\r\n        ? parseInt(resultNuevoOrigen.cantidad)\r\n        : 0;\r\n      let cantidadNPOrigen: number = resultNuevoProductoOrigen\r\n        ? parseInt(resultNuevoProductoOrigen.cantidad)\r\n        : 0;\r\n      let cantidadNPOEnTiendaNuevoOrigen: number =\r\n        resultNuevoProductoNuevoOrigen\r\n          ? parseInt(resultNuevoProductoNuevoOrigen.cantidad)\r\n          : 0;\r\n\r\n      // Validar campos\r\n      // Caso solo se halla cambiado la cantidad\r\n      if (\r\n        idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n        idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails &&\r\n        idProductoDetails === idProductoAuxModificarDetails &&\r\n        cantidadNueva !== cantidadVieja\r\n      ) {\r\n        // La cantidad aumentó (Hoja: 1)\r\n        if (cantidadNueva >= cantidadVieja) {\r\n          if (cantidadNueva - cantidadVieja > cantidadEnOrigen) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No hay suficientes productos en la tienda origen para agregar a la tienda destino.\\n\";\r\n          }\r\n          // Si la cantidad disminuyó (Hoja: 2)\r\n        } else {\r\n          if (cantidadVieja - cantidadNueva > cantidadEnDestino) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No hay suficientes productos en la tienda destino para agregar a la tienda origen.\\n\";\r\n          }\r\n        }\r\n        // Caso que solo se halla cambiado la tiendaDestino\r\n      } else if (\r\n        idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n        idProductoDetails === idProductoAuxModificarDetails &&\r\n        idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails\r\n      ) {\r\n        // Caso en que se halla cambiado la tienda destino y la cantidad\r\n        if (cantidadNueva !== cantidadVieja) {\r\n          // La cantidad aumentó (Hoja: 3)\r\n          // La cantidad disminuyó (Hoja: 4)\r\n          if (cantidadNueva > cantidadEnDestino) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. La vieja tienda destino no tiene suficientes productos para darle a la nueva tienda destino.\\n\";\r\n          }\r\n          // Caso en que solo se halla cambiado la tienda destino sin modificar la cantidad (Hoja: 5)\r\n        } else {\r\n          if (cantidadEnDestino - cantidadVieja < 0) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No hay suficientes productos en la tienda destino vieja para pasarle a la nueva.\\n\";\r\n          }\r\n        }\r\n        // Caso que solo se halla cambiado la tiendaOrigen\r\n      } else if (\r\n        idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n        idProductoDetails === idProductoAuxModificarDetails &&\r\n        idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails\r\n      ) {\r\n        // Caso en que se halla cambiado la tienda origen y la cantidad\r\n        if (cantidadNueva !== cantidadVieja) {\r\n          // La cantidad aumentó (Hoja: 6)\r\n          // La cantidad disminuyó (Hoja: 7)\r\n          if (cantidadNueva > cantidadEnOrigen) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. La vieja tienda origen no tiene sificientes productos para darle a la nueva tienda destino.\\n\";\r\n          }\r\n          // Caso en que se halla cambiado la tienda origen sin modificar la camtidad (Hoja: 8)\r\n        } else {\r\n          if (cantidadEnOrigen - cantidadVieja < 0) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No hay suficientes productos en la tienda origen vieja para pasarle a la nueva.\\n\";\r\n          }\r\n        }\r\n        // Caso que se halla cambiado la tienda origen y la tienda destino\r\n      } else if (\r\n        idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n        idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails &&\r\n        idProductoDetails === idProductoAuxModificarDetails\r\n      ) {\r\n        // Caso que se halla cambiado la cantantidad, tienda origen y tienda destino\r\n        if (cantidadNueva !== cantidadVieja) {\r\n          // La cantidad aumentó (Hoja: 9)\r\n          // La cantidad disminuyó (Hoja: 10)\r\n          if (\r\n            cantidadVieja > cantidadEnDestino ||\r\n            cantidadNueva > cantidadEnNuevoOrigen\r\n          ) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No se puede restablecer la cantidad dada de los en las tiendas originales o no hay productos suficientes en la nueva tienda de origen para asignar a la nueva tienda destino.\\n\";\r\n          }\r\n          // Caso que se halla cambiado tienda origen y tienda destino sin cambiar la cantidad (Hoja: 11)\r\n        } else {\r\n          if (\r\n            cantidadVieja > cantidadEnDestino ||\r\n            cantidadVieja > cantidadEnNuevoOrigen\r\n          ) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No se puede restablecer los prouductos en las tiendas originales o no hay productos suficientes en la tienda de origen para asignar a la nueva tienda destino.\\n\";\r\n          }\r\n        }\r\n      } else if (idProductoDetails !== idProductoAuxModificarDetails) {\r\n        // Caso en que halla cambiado el producto\r\n\r\n        if (cantidadVieja > cantidadNPOrigen) {\r\n          // Esta condición es generica simepre que se modifique algo con el producto\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Operación inválida. No hay suficientes productos viejos en la tienda vieja para modificar el producto a uno nuevo.\\n\";\r\n        } else {\r\n          if (\r\n            idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n            idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails &&\r\n            cantidadNueva === cantidadVieja\r\n          ) {\r\n            if (cantidadVieja > cantidadNPOrigen) {\r\n              // Solamente ha cambido el producto y nada más (Hoja 12)\r\n              flag = false;\r\n              validarCampos +=\r\n                \"-Operación inválida. No hay suficientes productos nuevos en la tienda vieja para modificar el producto a uno nuevo.\\n\";\r\n            }\r\n          } else if (cantidadVieja !== cantidadNueva) {\r\n            if (\r\n              idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n              idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails &&\r\n              cantidadNueva !== cantidadVieja\r\n            ) {\r\n              if (cantidadNueva > cantidadNPOrigen) {\r\n                // Cambió solo la cantidad y el producto(Hoja 16)\r\n                flag = false;\r\n                validarCampos +=\r\n                  \"-Operación inválida. No hay sificientes productos en la tienda origen con la cantidad dada.\\n\";\r\n              }\r\n            } else if (\r\n              idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n              idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails &&\r\n              cantidadNueva !== cantidadVieja\r\n            ) {\r\n              if (cantidadNueva > cantidadNPOEnTiendaNuevoOrigen) {\r\n                // Cambió la cantidad y el origen (Hoja 17)\r\n                flag = false;\r\n                validarCampos +=\r\n                  \"-Operación inválida. No hay esa cantidad de productos en la tienda origen especificada.\\n\";\r\n              }\r\n            } else if (\r\n              idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n              idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails &&\r\n              cantidadNueva !== cantidadVieja\r\n            ) {\r\n              if (cantidadNueva > cantidadNPOrigen) {\r\n                // Cambió la cantidad y el origen (Hoja 19)\r\n                flag = false;\r\n                validarCampos +=\r\n                  \"-Operación inválida. No hay esa cantidad de productos en la tienda origen seleccionada.\\n\";\r\n              }\r\n            } else if (\r\n              idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n              idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails &&\r\n              cantidadNueva !== cantidadVieja\r\n            ) {\r\n              if (cantidadNueva > cantidadNPOEnTiendaNuevoOrigen) {\r\n                // Cambió la cantidad, tienda origen, tienda destino, todo (Hoja 18)\r\n                flag = false;\r\n                validarCampos +=\r\n                  \"-Operación inválida. No hay esa cantidad de productos en la tienda origen seleccionada.\\n\";\r\n              }\r\n            }\r\n          } else {\r\n            if (\r\n              idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails ||\r\n              idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails\r\n            ) {\r\n              // Se cambió el producto y alguna tienda\r\n              if (\r\n                idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n                idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails\r\n              ) {\r\n                // Se cambió la tienda origen y destino y el producto\r\n                if (cantidadVieja > cantidadNPOEnTiendaNuevoOrigen) {\r\n                  // Se cambiaron el origen y el destino (Hoja 13)\r\n                  flag = false;\r\n                  validarCampos +=\r\n                    \"-Operación inválida. No hay sificintes productos nuevos en la nueva tienda origen.\\n\";\r\n                }\r\n              } else if (\r\n                idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n                idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails\r\n              ) {\r\n                if (cantidadVieja > cantidadNPOEnTiendaNuevoOrigen) {\r\n                  // Se cambió la tienda origen y el producto (Hoja 14)\r\n                  flag = false;\r\n                  validarCampos +=\r\n                    \"-Operación inválida. No hay sificintes productos nuevos en la nueva tienda origen.\\n\";\r\n                }\r\n              } else {\r\n                if (cantidadVieja > cantidadNPOEnTiendaNuevoOrigen) {\r\n                  // Se cambió la tienda destino y el producto (Hoja 15)\r\n                  flag = false;\r\n                  validarCampos +=\r\n                    \"-Operación inválida. No hay sificintes productos nuevos en la nueva tienda origen.\\n\";\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (idTiendaDestinoDetails === idTiendaOrigenDetails) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-La tienda origen no puede ser igual a la tienda destino.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaOrigenDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda Origen.\\n\";\r\n      }\r\n      if (idTiendaDestinoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda Destino.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n\r\n      ///////////////////////////\r\n      if (flag) {\r\n        await updateMovimiento(\r\n          usuario.token,\r\n          idMovimientoDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          idTiendaOrigenDetails,\r\n          idTiendaDestinoDetails,\r\n          cantidadDetails,\r\n          idProductoDetails,\r\n          idUsuarioDetails\r\n        );\r\n\r\n        if (\r\n          idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n          idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails &&\r\n          idProductoDetails === idProductoAuxModificarDetails &&\r\n          cantidadNueva !== cantidadVieja\r\n        ) {\r\n          // La cantidad aumentó (Hoja: 1)\r\n          // Si la cantidad disminuyó (Hoja: 2)\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            String(cantidadNueva - cantidadVieja)\r\n          );\r\n\r\n          // Caso que solo se halla cambiado la tiendaDestino\r\n        } else if (\r\n          idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n          idProductoDetails === idProductoAuxModificarDetails &&\r\n          idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails\r\n        ) {\r\n          // La cantidad aumentó (Hoja: 3)\r\n          // La cantidad disminuyó (Hoja: 4)\r\n          await createProductoInTienda(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDestinoDetails\r\n          );\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            String(cantidadVieja)\r\n          );\r\n\r\n          // Nuevo movimiento\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            idTiendaDestinoDetails,\r\n            String(cantidadNueva)\r\n          );\r\n\r\n          // Caso que solo se halla cambiado la tiendaOrigen\r\n        } else if (\r\n          idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n          idProductoDetails === idProductoAuxModificarDetails &&\r\n          idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails\r\n        ) {\r\n          // La cantidad aumentó (Hoja: 6)\r\n          // La cantidad disminuyó (Hoja: 7)\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            String(cantidadVieja)\r\n          );\r\n\r\n          // Nuevo movimiento\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaOrigenDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            String(cantidadNueva)\r\n          );\r\n\r\n          // Caso que se halla cambiado la tienda origen y la tienda destino\r\n        } else if (\r\n          idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n          idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails &&\r\n          idProductoDetails === idProductoAuxModificarDetails\r\n        ) {\r\n          // La cantidad aumentó (Hoja: 9)\r\n          // La cantidad disminuyó (Hoja: 10)\r\n          await createProductoInTienda(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDestinoDetails\r\n          );\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            String(cantidadVieja)\r\n          );\r\n\r\n          // Nuevo movimiento\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaOrigenDetails,\r\n            idTiendaDestinoDetails,\r\n            String(cantidadNueva)\r\n          );\r\n        } else if (idProductoDetails !== idProductoAuxModificarDetails) {\r\n          // Caso en que halla cambiado el producto\r\n          await createProductoInTienda(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDestinoDetails\r\n          );\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            String(cantidadVieja)\r\n          );\r\n\r\n          // Nuevo movimiento\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaOrigenDetails,\r\n            idTiendaDestinoDetails,\r\n            String(cantidadNueva)\r\n          );\r\n        }\r\n\r\n        const auxNombreProductoAccion = dropdownItemsNombreproducto.find(\r\n          (element) => {\r\n            return (\r\n              parseInt(element.value) ===\r\n              parseInt(idProductoAuxModificarDetails)\r\n            );\r\n          }\r\n        );\r\n        // Agregar Acción de usuario eliminar producto\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó un movimiento de productos que originalmente tenía un nombre ${auxNombreProductoAccion.lavel}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          2\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El movimiento se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setModalMovimientosDates(false)\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para eliminar proveedor\r\n  const eliminarMovimiento = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando movimiento. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL TRATAR DE ELIMINAR EL MOVIMIENTO. Motivos:\\n\";\r\n      const resultDestino = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaDestinoAuxModificarDetails\r\n      );\r\n      let cantidadEnTiendaDestino: number = resultDestino\r\n        ? parseInt(resultDestino.cantidad)\r\n        : 0;\r\n      let cantidadVieja: number = parseInt(cantidadAuxModificarDetails);\r\n\r\n      if (cantidadVieja > cantidadEnTiendaDestino) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No hay suficientes productos en la tienda destino para devolver la operación.\\n\";\r\n      }\r\n      if (flag) {\r\n        await moverProducto(\r\n          usuario.token,\r\n          idProductoAuxModificarDetails,\r\n          idTiendaDestinoAuxModificarDetails,\r\n          idTiendaOrigenAuxModificarDetails,\r\n          String(cantidadVieja)\r\n        );\r\n\r\n        await deleteMovimiento(usuario.token, idMovimientoDetails);\r\n\r\n        const auxNombreProductoAccion = dropdownItemsNombreproducto.find(\r\n          (element) => {\r\n            return (\r\n              parseInt(element.value) ===\r\n              parseInt(idProductoAuxModificarDetails)\r\n            );\r\n          }\r\n        );\r\n        const auxNombreTiendaOrigen = dropdownItemsNombreTienda.find(\r\n          (element) => {\r\n            return parseInt(element.value) === parseInt(idTiendaOrigenDetails);\r\n          }\r\n        );\r\n        const auxNombreTiendaDestino = dropdownItemsNombreTienda.find(\r\n          (element) => {\r\n            return parseInt(element.value) === parseInt(idTiendaDestinoDetails);\r\n          }\r\n        );\r\n        // Agregar Acción de usuario eliminar producto\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó el movimiento del producto ${auxNombreProductoAccion?.label} con cantidad ${cantidadDetails} y tienda origen ${auxNombreTiendaOrigen?.label} y una tienda destino ${auxNombreTiendaDestino?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          2\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El movimiento se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Usuario\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Tienda Origen\",\r\n    \"Tienda Destino\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Usuario\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Tienda Origen\",\r\n    \"Tienda Destino\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableMovimientos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                    <Text style={styles.textSearchMovil}>\r\n                      Nombre del Usuario:\r\n                    </Text>\r\n                  )}\r\n                  {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFullMovil}\r\n                      placeholder=\"Nombre del usuario\"\r\n                      value={nombreUsuarioSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={setNombreUsuarioSearch}\r\n                    />\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                    <View style={styles.separatorBlanco} />\r\n                  )}\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Cantidad:</Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Cantidad\"\r\n                    value={cantidadSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setCantidadSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadViewTiendasSearsh,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        flex: 1,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 22,\r\n                          fontWeight: \"bold\",\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Tienda:\r\n                      </Text>\r\n                    </View>\r\n\r\n                    {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                      <Text style={styles.textSearchMovil}>Origen:</Text>\r\n                    )}\r\n                    {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                      <View\r\n                        style={{\r\n                          width: \"100%\",\r\n                          zIndex: capaPrioridadTiendaOrigenSearsh,\r\n                          position: \"relative\",\r\n                        }}\r\n                      >\r\n                        <CustomDropdown\r\n                          value={tiendaOrigenSearch}\r\n                          placeholder=\"Tienda Origen\"\r\n                          setValue={setTiendaOrigenSearch}\r\n                          items={dropdownItemsNombreTienda}\r\n                          searchable={true}\r\n                          onDropdownOpen={() =>\r\n                            controlarCapas(\"TiendaOrigenSearsh\")\r\n                          }\r\n                        />\r\n                      </View>\r\n                    )}\r\n\r\n                    <Text style={styles.textSearchMovil}>Destino:</Text>\r\n                    <View\r\n                      style={{\r\n                        width: \"100%\",\r\n                        zIndex: capaPrioridadTiendaDestinoSearsh,\r\n                        position: \"relative\",\r\n                      }}\r\n                    >\r\n                      <CustomDropdown\r\n                        value={tiendaDestinoSearch}\r\n                        placeholder=\"Tienda Destino\"\r\n                        setValue={setTiendaDestinoSearch}\r\n                        items={dropdownItemsNombreTienda}\r\n                        searchable={true}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"TiendaDestinoSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\"\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadViewTiendasSearsh,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 20,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                      />\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 20,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarMovimientos(\r\n                            `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                            `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                          );\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalMovimientosDates?.isAddMovimiento ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddMovimiento}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddMovimiento}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalMovimientosDates?.id_movimiento === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos del Movimiento\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View style={{ width: \"100%\" }}>\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Usuario\r\n                  </Text>\r\n                </View>\r\n                <View style={{ width: \"100%\" }}>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 16,\r\n                      marginTop: \"3%\",\r\n                      marginLeft: \"6%\",\r\n                      fontWeight: \"bold\",\r\n                      color: Colors.negro, // Color del texto\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                    }}\r\n                  >\r\n                    {nombreUsuarioDetails}\r\n                  </Text>\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Productos\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    searchable={true}\r\n                    readOnly={!isMovimientoEditable}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor Tieda Origen y Teinda Destino */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1200, position: \"relative\" }}\r\n                ></View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalMovil}>\r\n                      Tienda Origen\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaOrigenDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setIdTiendaOrigenDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      searchable={true}\r\n                      readOnly={\r\n                        !(\r\n                          isMovimientoEditable &&\r\n                          isPermisoOpcionesDeCeldaMoverGeneral\r\n                        )\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalMovil}>\r\n                      Tienda Destino\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDestinoDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setIdTiendaDestinoDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      searchable={true}\r\n                      readOnly={!isMovimientoEditable}\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad*/}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalMovil}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isPermisoModificarMovimiento}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n                <View style={{ height: 100 }}>\r\n                  {isDateLoaded && (\r\n                    <MyDateInput\r\n                      dayValue={fechaDiaDetails}\r\n                      monthValue={fechaMesDetails}\r\n                      yearValue={fechaAnnoDetails}\r\n                      onDayChange={setFechaDiaDetails}\r\n                      onMonthChange={setFechaMesDetails}\r\n                      onYearChange={setFechaAnnoDetails}\r\n                      style={{ margin: 20 }}\r\n                      styleText={styles.labelTextModalMovil}\r\n                      isReadOnly={!isMovimientoEditable}\r\n                    />\r\n                  )}\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar movimiento */}\r\n                  {isPermisoModificarMovimiento &&\r\n                    isMovimientoEditable &&\r\n                    modalMovimientosDates?.id_movimiento !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este movimiento?`\r\n                          );\r\n                          setModalMovimientosDates({\r\n                            id_movimiento: \"\",\r\n                            isAddMovimiento: false,\r\n                            isModificarMovimiento: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Movimiento\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar movimiento */}\r\n                  {isPermisoEliminarMovimiento &&\r\n                    isMovimientoEliminable &&\r\n                    modalMovimientosDates?.id_movimiento !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR este movimiento?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalMovimientosDates({\r\n                            id_movimiento: \"\",\r\n                            isAddMovimiento: false,\r\n                            isModificarMovimiento: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Movimiento\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarMovimiento()\r\n                      : modificarMovimiento()\r\n                  }\r\n                  disabled={isButtonDisabled}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Entradas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n              <Text style={styles.textSearchDesktop}>Nombre del Usuario:</Text>\r\n            )}\r\n            {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFullDesktop}\r\n                placeholder=\"Nombre del usuario\"\r\n                onKeyPress={handleKeyPress}\r\n                value={nombreUsuarioSearch}\r\n                onChangeText={setNombreUsuarioSearch}\r\n              />\r\n            )}\r\n\r\n            {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n              <View style={styles.separatorBlanco} />\r\n            )}\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Cantidad:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Cantidad\"\r\n              value={cantidadSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setCantidadSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                position: \"relative\",\r\n                zIndex: capaPrioridadViewTiendasSearsh,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    fontWeight: \"bold\",\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Tienda:\r\n                </Text>\r\n              </View>\r\n\r\n              <Text style={styles.textSearchDesktop}>Origen:</Text>\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  zIndex: capaPrioridadTiendaOrigenSearsh,\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <CustomDropdown\r\n                  value={tiendaOrigenSearch}\r\n                  placeholder=\"Tienda Origen\"\r\n                  setValue={setTiendaOrigenSearch}\r\n                  items={dropdownItemsNombreTienda}\r\n                  direction=\"BOTTOM\"\r\n                  onDropdownOpen={() => controlarCapas(\"TiendaOrigenSearsh\")}\r\n                />\r\n              </View>\r\n\r\n              <Text style={styles.textSearchDesktop}>Destino:</Text>\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  zIndex: capaPrioridadTiendaDestinoSearsh,\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <CustomDropdown\r\n                  value={tiendaDestinoSearch}\r\n                  placeholder=\"Tienda Destino\"\r\n                  setValue={setTiendaDestinoSearch}\r\n                  items={dropdownItemsNombreTienda}\r\n                  direction=\"BOTTOM\"\r\n                  onDropdownOpen={() => controlarCapas(\"TiendaDestinoSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\"\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                zIndex: capaPrioridadViewFechaSearsh,\r\n                position: \"relative\",\r\n                marginTop: \"2%\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => {\r\n                    filtrarYOrdenarMovimientos(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    );\r\n                  }}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableMovimientos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalMovimientosDates?.isAddMovimiento ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddMovimiento}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddMovimiento}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalMovimientosDates?.id_movimiento === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos del Movimiento\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View style={{ width: \"100%\" }}>\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Usuario\r\n                  </Text>\r\n                </View>\r\n                <View style={{ width: \"100%\" }}>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 16,\r\n                      marginTop: \"3%\",\r\n                      marginLeft: \"6%\",\r\n                      fontWeight: \"bold\",\r\n                      color: Colors.negro, // Color del texto\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                    }}\r\n                  >\r\n                    {nombreUsuarioDetails}\r\n                  </Text>\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadViewProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadViewProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Productos\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    readOnly={!isMovimientoEditable}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProductosDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor Tieda Origen y Teinda Destino */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                ></View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadViewTiendasDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda Origen\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaOrigenDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setIdTiendaOrigenDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={\r\n                        !(\r\n                          isMovimientoEditable &&\r\n                          isPermisoOpcionesDeCeldaMoverGeneral\r\n                        )\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() => controlarCapas(\"TiendasDetails\")}\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda Destino\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDestinoDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setIdTiendaDestinoDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={!isMovimientoEditable}\r\n                      searchable={true}\r\n                      onDropdownOpen={() => controlarCapas(\"TiendasDetails\")}\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad*/}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadViewFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isMovimientoEditable}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Fecha */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadViewFechaDetails,\r\n                    }}\r\n                  >\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        isReadOnly={!isMovimientoEditable}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 10, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar movimiento */}\r\n                  {isPermisoModificarMovimiento &&\r\n                    isMovimientoEditable &&\r\n                    modalMovimientosDates?.id_movimiento !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este movimiento?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Movimiento\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Botón para eliminar movimiento */}\r\n                  {isPermisoEliminarMovimiento &&\r\n                    isMovimientoEliminable &&\r\n                    modalMovimientosDates?.id_movimiento !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR este movimiento?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalMovimientosDates({\r\n                            id_movimiento: \"\",\r\n                            isAddMovimiento: false,\r\n                            isModificarMovimiento: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Movimiento\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarMovimiento()\r\n                      : modificarMovimiento()\r\n                  }\r\n                  disabled={isButtonDisabled}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Movimientos\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { UsuarioTabla } from '../components/MyDateTableUsuarios';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortUsuarios {\r\n  items: UsuarioTabla[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortUsuariosContextType {\r\n  sortUsuarios: SortUsuarios | null;\r\n  setSortUsuarios: (sortUsuarios: SortUsuarios | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortUsuariosContext = createContext<SortUsuariosContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortUsuariosProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortUsuarios, setSortUsuarios] = useState<SortUsuarios | null>(null);\r\n\r\n  return (\r\n    <SortUsuariosContext.Provider value={{ sortUsuarios: sortUsuarios, setSortUsuarios: setSortUsuarios }}>\r\n      {children}\r\n    </SortUsuariosContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortUsuarios = () => {\r\n  const context = React.useContext(SortUsuariosContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortUsuarios debe usarse dentro de un SortUsuarios');\r\n  }\r\n  return context;\r\n};","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { TiendaShowModal } from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\nimport { useSortUsuarios } from \"../contexts/AuxiliarSortUsuarios\";\r\n\r\nexport interface UsuarioTabla {\r\n  id_Usuario: string;\r\n  nombre: string;\r\n  nombre_Usuario: string;\r\n  correo?: string;\r\n  telefono?: string;\r\n  direccion?: string;\r\n  carnet_Identidad?: string;\r\n  detalle_bancario?: string;\r\n  id_rol: string;\r\n  nombre_rol: string;\r\n  id_tienda: string;\r\n  nombre_tienda: string;\r\n  salario_CUP: string;\r\n}\r\n\r\nexport interface ProveedorPiker {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface Props {\r\n  items: UsuarioTabla[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableProveedorModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableUsuarios: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n  const { sortUsuarios, setSortUsuarios } = useSortUsuarios();\r\n  const { usuario, setUsuario } = useUsuario();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(10);\r\n  const [displayedItems, setDisplayedItems] = React.useState<UsuarioTabla[]>(\r\n    []\r\n  ); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_producto: string) => {\r\n    setModalProveedoresDates({\r\n      id_proveedor: id_producto,\r\n      isAddProveedor: true,\r\n      fileEditable: false,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: true,\r\n      isDetallesProveedores: true,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  const resultadoCondicionalOpcionesDeCelda = (item: UsuarioTabla) => {\r\n    if (usuario?.id_rol) {\r\n      return (usuario.id_rol == \"1\" && isPermisoOpcionesDeCelda) ||\r\n        (usuario.id_rol == \"2\" && isPermisoOpcionesDeCelda)\r\n        ? true\r\n        : item.telefono && isPermisoOpcionesDeCelda\r\n        ? true\r\n        : false;\r\n    }\r\n  };\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Correo\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Teléfono\") {\r\n      aux = \"option5\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortUsuarios({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre\" ||\r\n                column === \"Correo\" ||\r\n                column === \"Teléfono\") && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Suave,\r\n                    marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                    width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                    height: 24, // Asegúrate de que tenga tamaño consistente\r\n                    justifyContent: \"center\", // Centrar contenido del botón\r\n                    alignItems: \"center\", // Centrar contenido del botón\r\n                    borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                    marginBottom: 4, // Elevar el botón del borde inferior\r\n                    paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                  }}\r\n                  onPress={() => sortEntradasAux(column)}\r\n                >\r\n                  <Image\r\n                    source={require(\"../images/ordenar.png\")}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </TouchableOpacity>\r\n              )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idProductoOption, setIdProductoOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdProductoOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalProveedoresDates({\r\n        id_proveedor: idProductoOption,\r\n        isAddProveedor: true,\r\n        fileEditable: true,\r\n        isModificarProveedor: true,\r\n        isAddProductoShowProveedoresTiendas: true,\r\n        isDetallesProveedores: true,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Usuario !== idProductoOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idProductoOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Usuario}\r\n                onPress={() => detailsModalView(item.id_Usuario)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.telefono}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - SalarioCUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    justifyContent: \"center\", // Centrar horizontalmente\r\n                    alignItems: \"center\", // Centrar verticalmente\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text>{item.salario_CUP}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Rol */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombre_rol}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Tienda */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombre_tienda}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idProductoOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Usuario}\r\n                onPress={() => detailsModalView(item.id_Usuario)}\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.telefono}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - SalarioCUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    justifyContent: \"center\", // Centrar horizontalmente\r\n                    alignItems: \"center\", // Centrar verticalmente\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text>{item.salario_CUP}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Rol */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    justifyContent: \"center\", // Centrar horizontalmente\r\n                    alignItems: \"center\", // Centrar verticalmente\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text>{item.nombre_rol}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Tienda */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    justifyContent: \"center\", // Centrar horizontalmente\r\n                    alignItems: \"center\", // Centrar verticalmente\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text>{item.nombre_tienda}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 16,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport {\r\n  PanGestureHandler,\r\n  PanGestureHandlerGestureEvent,\r\n} from \"react-native-gesture-handler\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { getAllRol, isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\nimport {\r\n  EntradaShowModal,\r\n  MyDateTableModalShowDatesEntradas,\r\n} from \"../components/MyDateTableModalShowDatesEntradas\";\r\nimport { getAllEntradasByProveedorId } from \"../services/EntradaServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  MyDateTableUsuarios,\r\n  UsuarioTabla,\r\n} from \"../components/MyDateTableUsuarios\";\r\nimport {\r\n  actualizarUsuarioConContraseña,\r\n  actualizarUsuarioSinContraseña,\r\n  addUsuario,\r\n  deleteUsuario,\r\n  filtrarUsuario,\r\n  getAllUsuarios,\r\n  getUsuarioById,\r\n  ordenarUsuarios,\r\n} from \"../services/UsuarioServices\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport { HomeScreen } from \"./HomeScreen\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useSortUsuarios } from \"../contexts/AuxiliarSortUsuarios\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\nimport React from \"react\";\r\n\r\nexport default function UsuariosView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables auxiliares para controlar el despliege de los dropDownsPiers\r\n  const [capaPrioridadTiendasSearsh, setCapaPrioridadTiendasSearsh] =\r\n    useState(500);\r\n  const [capaPrioridadRolesSearsh, setCapaPrioridadRolesSearsh] = useState(500);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    if (prioridad === \"TiendasSearsh\") {\r\n      setCapaPrioridadRolesSearsh(1500);\r\n      setCapaPrioridadTiendasSearsh(2000);\r\n    } else if (prioridad === \"RolesSearsh\") {\r\n      setCapaPrioridadRolesSearsh(2000);\r\n      setCapaPrioridadTiendasSearsh(1500);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortUsuarios } = useSortUsuarios();\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar proovedores y ver datos\r\n  const [dropdownItemsTiendasDetails, setDropDownItemsTiendasDetails] =\r\n    useState<TiendaPiker[]>([]);\r\n  const [dropdownItemsRolesDetails, setDropDownItemsRolesDetails] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [idUsuarioDetails, setIdusuarioDetails] = useState(\"\");\r\n  const [nombreDelUsuarioDetails, setNombreDelUsuarioDetails] = useState(\"\");\r\n  const [nombreUsuarioDetails, setNombreUsuarioDetails] = useState(\"\");\r\n  const [salario_CUPDetails, setsalario_CUPDetails] = useState(\"\");\r\n  const [nombreUsuarioDetailsOriginal, setNombreUsuarioDetailsOriginal] =\r\n    useState(\"\");\r\n  const [correoEmailUsuarioDetails, setCorreoEmailUsuarioDetails] =\r\n    useState(\"\");\r\n  const [contrasennaUsuarioDetails, setContrasennaUsuarioDetails] =\r\n    useState(\"\");\r\n  const [CarnetIdentidadUsuarioDetails, setCarnetIdentidadUsuarioDetails] =\r\n    useState(\"\");\r\n  const [direccionUsuarioDetails, setDireccionUsuarioDetails] = useState(\"\");\r\n  const [telefonoUsuarioDetails, setTelefonoUsuarioDetails] = useState(\"\");\r\n  const [detallesBancariosUsuarioDetils, setDetallesBancariosUsuarioDetils] =\r\n    useState(\"\");\r\n  const [tiendaUsuarioDetails, setTiendaUsuarioDetails] = useState(\"\");\r\n  const [rolUsuarioDetails, setRolUsuarioDetails] = useState(\"\");\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n\r\n  const options = [\r\n    { label: \"Permitido\", value: \"permitido\" },\r\n    { label: \"Denegado\", value: \"denegado\" },\r\n  ];\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [isModalChekEliminarVisible, setIsModalChekEliminarVisible] =\r\n    useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarProveedor, setIsPermisoAgregarProveedor] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarProveedor, setIsPermisoEliminarProveedor] =\r\n    React.useState(false);\r\n  const [isPermisoModificarProveedor, setIsPermisoModificarProveedor] =\r\n    React.useState(false);\r\n  const [isPermisoModificarGerarquico, setIsPermisoModificarGerarquico] =\r\n    useState(false);\r\n\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        // Verificar y almacenar el permiso de agregar usuario\r\n        if (localStorage.getItem(\"resultAgregarUsuario\") === null) {\r\n          const resultAgregarUsuario = await isPermiso(\r\n            usuario.token,\r\n            \"1\",\r\n            usuario.id_usuario\r\n          );\r\n          setIsPermisoAgregarProveedor(resultAgregarUsuario);\r\n          localStorage.setItem(\"resultAgregarUsuario\", resultAgregarUsuario);\r\n        } else {\r\n          setIsPermisoAgregarProveedor(Boolean(localStorage.getItem(\"resultAgregarUsuario\")));\r\n        }\r\n    \r\n        // Verificar y almacenar el permiso de eliminar usuario\r\n        if (localStorage.getItem(\"resultEliminarUsuario\") === null) {\r\n          const resultEliminarUsuario = await isPermiso(\r\n            usuario.token,\r\n            \"3\",\r\n            usuario.id_usuario\r\n          );\r\n          setIsPermisoEliminarProveedor(resultEliminarUsuario);\r\n          localStorage.setItem(\"resultEliminarUsuario\", resultEliminarUsuario);\r\n        } else {\r\n          setIsPermisoEliminarProveedor(Boolean(localStorage.getItem(\"resultEliminarUsuario\")));\r\n        }\r\n    \r\n        // Verificar y almacenar el permiso de modificar usuario\r\n        if (localStorage.getItem(\"resultModificarUsuario\") === null) {\r\n          const resultModificarUsuario = await isPermiso(\r\n            usuario.token,\r\n            \"2\",\r\n            usuario.id_usuario\r\n          );\r\n          setIsPermisoModificarProveedor(resultModificarUsuario);\r\n          localStorage.setItem(\"resultModificarUsuario\", resultModificarUsuario);\r\n        } else {\r\n          setIsPermisoModificarProveedor(Boolean(localStorage.getItem(\"resultModificarUsuario\")));\r\n        }\r\n      }\r\n    };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [entradasByProveedor, setEntradasByProveedor] = useState<\r\n    EntradaShowModal[]\r\n  >([]);\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<UsuarioTabla[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsTiendasSearsh, setDropDownItemsTiendasSearsh] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [dropdownItemsRolesSearsh, setDropDownItemsRolesSearsh] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [tiendaNombreSeleccionadaSearch, setTiendaNombreSeleccionadaSearch] =\r\n    useState(\"\");\r\n  const [rolNombreSeleccionadoSearsh, setRolNombreSeleccionadoSearsh] =\r\n    useState(\"\");\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreUsuarioSearch, setNombreUsuarioSearch] = useState(\"\");\r\n  const [correoEmyleSearch, setCorreoEmyleSearch] = useState(\"\");\r\n  const [telefonoSearch, setTelefonoSearch] = useState(\"\");\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getDatesTiendaPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsTiendasSearsh([\r\n          { label: \"Seleccione una tienda\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getDatesRolesPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllRol(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const rolesMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_rol,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsRolesSearsh([\r\n          { label: \"Seleccione un rol\", value: \"\" },\r\n          ...rolesMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getDatesTiendasAndRolesParaAgregarUsuario = async () => {\r\n    // Cargar datos de los dropDown\r\n    if (usuario?.token != undefined) {\r\n      const resultTiendas = await getAllTiendas(usuario.token);\r\n      const resultRoles = await getAllRol(usuario.token);\r\n\r\n      if (\r\n        resultTiendas &&\r\n        Array.isArray(resultTiendas.data) &&\r\n        resultRoles &&\r\n        Array.isArray(resultRoles)\r\n      ) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          resultTiendas.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n        const rolesMapeados: TiendaPiker[] = await Promise.all(\r\n          resultRoles\r\n            .filter((element: any) => {\r\n              if (parseInt(usuario.id_rol) === 1) {\r\n                return parseInt(element.id_rol) !== 1;\r\n              } else if (parseInt(usuario.id_rol) === 2) {\r\n                return (\r\n                  parseInt(element.id_rol) !== 1 &&\r\n                  parseInt(element.id_rol) !== 2\r\n                );\r\n              } else if (parseInt(usuario.id_rol) === 3) {\r\n                return (\r\n                  parseInt(element.id_rol) !== 1 &&\r\n                  parseInt(element.id_rol) !== 2 &&\r\n                  parseInt(element.id_rol) !== 3\r\n                );\r\n              }\r\n              return true; // Si el rol es diferente de 1, 2 o 3, no se aplica ningún filtro\r\n            })\r\n            .map(async (element: any) => ({\r\n              label: element.nombre,\r\n              value: element.id_rol,\r\n            }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsTiendasDetails(tiendasMapeados);\r\n        setDropDownItemsRolesDetails(rolesMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = async () => {\r\n    setNombreDelUsuarioDetails(\"\");\r\n    setNombreUsuarioDetails(\"\");\r\n    setNombreUsuarioDetailsOriginal(\"\");\r\n    setDireccionUsuarioDetails(\"\");\r\n    setTelefonoUsuarioDetails(\"\");\r\n    setCarnetIdentidadUsuarioDetails(\"\");\r\n    setCorreoEmailUsuarioDetails(\"\");\r\n    setDetallesBancariosUsuarioDetils(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: false,\r\n      isModificarProveedor: false,\r\n      fileEditable: true,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n  };\r\n  const cargarDetailsOfUsuario = async () => {\r\n    if (usuario?.token && modalProveedoresDates?.id_proveedor) {\r\n      const result = await getUsuarioById(\r\n        usuario.token,\r\n        modalProveedoresDates.id_proveedor\r\n      );\r\n\r\n      if (result) {\r\n        setIdusuarioDetails(result.data.id_usuario);\r\n        setNombreUsuarioDetails(result.data.nombre_usuario);\r\n        setNombreUsuarioDetailsOriginal(result.data.nombre_usuario);\r\n        setNombreDelUsuarioDetails(result.data.nombre);\r\n        setDireccionUsuarioDetails(result.data.direccion || \"\");\r\n        setTelefonoUsuarioDetails(result.data.telefono || \"\");\r\n        setCarnetIdentidadUsuarioDetails(result.data.carnet_identidad || \"\");\r\n        setCorreoEmailUsuarioDetails(result.data.email || \"\");\r\n        setDetallesBancariosUsuarioDetils(result.data.detalle_bancario || \"\");\r\n        setsalario_CUPDetails(result.data.salario_CUP);\r\n        setSelecterActivoDetails(result.data.activo ? \"permitido\" : \"denegado\");\r\n\r\n        // Cargar datos de los dropDown\r\n        if (usuario?.token != undefined) {\r\n          const resultTiendas = await getAllTiendas(usuario.token);\r\n          const resultRoles = await getAllRol(usuario.token);\r\n\r\n          if (\r\n            resultTiendas &&\r\n            Array.isArray(resultTiendas.data) &&\r\n            resultRoles &&\r\n            Array.isArray(resultRoles)\r\n          ) {\r\n            const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n              resultTiendas.data.map(async (element: any) => ({\r\n                label: element.nombre,\r\n                value: element.id_tienda,\r\n              }))\r\n            );\r\n\r\n            if (\r\n              !(parseInt(usuario.id_rol) >= parseInt(result.data.rol.id_rol))\r\n            ) {\r\n              const rolesMapeados: TiendaPiker[] = await Promise.all(\r\n                resultRoles\r\n                  .filter((element: any) => {\r\n                    if (parseInt(usuario.id_rol) === 1) {\r\n                      return parseInt(element.id_rol) !== 1;\r\n                    } else if (parseInt(usuario.id_rol) === 2) {\r\n                      return (\r\n                        parseInt(element.id_rol) !== 1 &&\r\n                        parseInt(element.id_rol) !== 2\r\n                      );\r\n                    } else if (parseInt(usuario.id_rol) === 3) {\r\n                      return (\r\n                        parseInt(element.id_rol) !== 1 &&\r\n                        parseInt(element.id_rol) !== 2 &&\r\n                        parseInt(element.id_rol) !== 3\r\n                      );\r\n                    }\r\n                    return true; // Si el rol es diferente de 1, 2 o 3, no se aplica ningún filtro\r\n                  })\r\n                  .map(async (element: any) => ({\r\n                    label: element.nombre,\r\n                    value: element.id_rol,\r\n                  }))\r\n              );\r\n\r\n              setDropDownItemsRolesDetails(rolesMapeados);\r\n            } else {\r\n              const rolesMapeados: TiendaPiker[] = await Promise.all(\r\n                resultRoles.map(async (element: any) => ({\r\n                  label: element.nombre,\r\n                  value: element.id_rol,\r\n                }))\r\n              );\r\n\r\n              setDropDownItemsRolesDetails(rolesMapeados);\r\n            }\r\n\r\n            // Agregar un valor adicional para el valor inicial\r\n            setDropDownItemsTiendasDetails(tiendasMapeados);\r\n          }\r\n\r\n          setTiendaUsuarioDetails(result.data.tienda.id_tienda);\r\n          setRolUsuarioDetails(result.data.rol.id_rol);\r\n\r\n          if (parseInt(usuario.id_rol) >= parseInt(result.data.rol.id_rol)) {\r\n            setIsPermisoModificarGerarquico(false);\r\n          } else {\r\n            setIsPermisoModificarGerarquico(true);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<UsuarioTabla[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarUsuario(\r\n          usuario.token,\r\n          nombreUsuarioSearch,\r\n          correoEmyleSearch,\r\n          telefonoSearch,\r\n          rolNombreSeleccionadoSearsh,\r\n          tiendaNombreSeleccionadaSearch\r\n        );\r\n\r\n        if (result) {\r\n          const usuariosMapeados: UsuarioTabla[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Usuario: element.id_usuario,\r\n              nombre: element.nombre,\r\n              nombre_Usuario: element.nombre_usuario,\r\n              correo: element.email ?? \"\",\r\n              telefono: element.telefono ?? \"\",\r\n              direccion: element.direccion ?? \"\",\r\n              carnet_Identidad: element.carnet_identidad ?? \"\",\r\n              detalle_bancario: element.detalle_bancario ?? \"\",\r\n              id_rol: element.rol.id_rol,\r\n              nombre_rol: element.rol.nombre,\r\n              id_tienda: element.tienda.id_tienda,\r\n              nombre_tienda: element.tienda.nombre,\r\n              salario_CUP: element.salario_CUP\r\n            }))\r\n          );\r\n          return usuariosMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    filtrarYOrdenarUsuarios();\r\n  }, [sortUsuarios, selectedOptionTipoOrden]);\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfUsuario();\r\n  }, [modalProveedoresDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosUsuarios = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllUsuarios(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: UsuarioTabla[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Usuario: element.id_usuario,\r\n                nombre: element.nombre,\r\n                nombre_Usuario: element.nombre_usuario,\r\n                correo: element.email || \"\",\r\n                telefono: element.telefono || \"\",\r\n                direccion: element.direccion || \"\",\r\n                carnet_Identidad: element.carnet_identidad || \"\",\r\n                detalle_bancario: element.detalles_bancarios || \"\",\r\n                id_rol: element.rol.id_rol,\r\n                nombre_rol: element.rol.nombre,\r\n                id_tienda: element.tienda.id_tienda,\r\n                nombre_tienda: element.tienda.nombre,\r\n                salario_CUP: element.salario_CUP\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron proveedoress.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener los proveedores o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de los proveedores\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de los proovedores\"\r\n      );\r\n    }\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarUsuarios();\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosUsuarios();\r\n        getDatesTiendaPiker();\r\n        getDatesRolesPiker();\r\n        getDatesTiendasAndRolesParaAgregarUsuario();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarUsuarios = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let productosFiltrados: UsuarioTabla[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortUsuarios?.criterioOrden && sortUsuarios.tipoOrden) {\r\n          productosFiltrados = await ordenarUsuarios(\r\n            usuario.token,\r\n            productosFiltrados,\r\n            sortUsuarios.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(productosFiltrados);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const auxSetModalProovedoresDates = async () => {\r\n    setNombreUsuarioDetails(\"\");\r\n    setNombreUsuarioDetailsOriginal(\"\");\r\n    setCorreoEmailUsuarioDetails(\"\");\r\n    setDireccionUsuarioDetails(\"\");\r\n    setTelefonoUsuarioDetails(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: true,\r\n      fileEditable: true,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n\r\n    if (usuario?.token) {\r\n      const resultRoles = await getAllRol(usuario.token);\r\n      const rolesMapeados: TiendaPiker[] = await Promise.all(\r\n        resultRoles\r\n          .filter((element: any) => {\r\n            if (parseInt(usuario.id_rol) === 1) {\r\n              return parseInt(element.id_rol) !== 1;\r\n            } else if (parseInt(usuario.id_rol) === 2) {\r\n              return (\r\n                parseInt(element.id_rol) !== 1 && parseInt(element.id_rol) !== 2\r\n              );\r\n            } else if (parseInt(usuario.id_rol) === 3) {\r\n              return (\r\n                parseInt(element.id_rol) !== 1 &&\r\n                parseInt(element.id_rol) !== 2 &&\r\n                parseInt(element.id_rol) !== 3\r\n              );\r\n            }\r\n            return true; // Si el rol es diferente de 1, 2 o 3, no se aplica ningún filtro\r\n          })\r\n          .map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_rol,\r\n          }))\r\n      );\r\n\r\n      setDropDownItemsRolesDetails(rolesMapeados);\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreUsuarioSearch(\"\");\r\n    setCorreoEmyleSearch(\"\");\r\n    setTelefonoSearch(\"\");\r\n    setRolNombreSeleccionadoSearsh(\"\");\r\n    setTiendaNombreSeleccionadaSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewUsuario = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando usuario. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL AGREGAR USUARIO. Por favor verifique los siguientes campos:\\n\";\r\n      const resultUsuarios = await getAllUsuarios(usuario.token);\r\n      for (let item of resultUsuarios) {\r\n        if (item.nombre_usuario === nombreUsuarioDetails) {\r\n          validarCampos += `-Ya existe un usuario con el nombreUsuario ${nombreUsuarioDetails}.\\n`;\r\n          flag = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (nombreDelUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombre del usuario no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (correoEmailUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El correo electrónico no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (contrasennaUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-La contraseña no puede ser vacía.\\n\";\r\n        flag = false;\r\n      } else if (contrasennaUsuarioDetails.trim().length < 6) {\r\n        validarCampos += \"-La contraseña tiene que tener 6 o más caracteres.\\n\";\r\n        flag = false;\r\n      }\r\n      if (nombreUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombreUsuario no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (salario_CUPDetails === \"\") {\r\n        validarCampos += \"-El salario del trabajador no puede ser vacío.\\n\"\r\n        flag = false;\r\n      }\r\n      if (tiendaUsuarioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No ha seleccionado la tienda donde trabajará el usuario.\\n\";\r\n      }\r\n      if (rolUsuarioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-No ha seleccionado un rol para el usuario.\\n\";\r\n      }\r\n      if (CarnetIdentidadUsuarioDetails.trim() !== \"\") {\r\n        if (CarnetIdentidadUsuarioDetails.trim().length !== 11) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-El carnet de identidad del usuario deve tener 11 dígitos. \\n\";\r\n        }\r\n      }\r\n\r\n      if (flag) {\r\n        await addUsuario(\r\n          usuario.token,\r\n          nombreDelUsuarioDetails,\r\n          nombreUsuarioDetails,\r\n          contrasennaUsuarioDetails,\r\n          correoEmailUsuarioDetails,\r\n          telefonoUsuarioDetails,\r\n          direccionUsuarioDetails,\r\n          CarnetIdentidadUsuarioDetails,\r\n          detallesBancariosUsuarioDetils,\r\n          rolUsuarioDetails,\r\n          tiendaUsuarioDetails,\r\n          salario_CUPDetails\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó al sistema al usuario ${nombreUsuarioDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          5\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(\r\n          `El Usuario \"${nombreUsuarioDetails}\" fue insertado con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreDelUsuarioDetails(\"\");\r\n        setNombreUsuarioDetails(\"\");\r\n        setNombreUsuarioDetailsOriginal(\"\");\r\n        setContrasennaUsuarioDetails(\"\");\r\n        setDireccionUsuarioDetails(\"\");\r\n        setTelefonoUsuarioDetails(\"\");\r\n        setCarnetIdentidadUsuarioDetails(\"\");\r\n        setCorreoEmailUsuarioDetails(\"\");\r\n        setDetallesBancariosUsuarioDetils(\"\");\r\n        setDropDownItemsRolesDetails([]);\r\n        setDropDownItemsTiendasDetails([]);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setReflechModalMensajeView(false);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarUsuario = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando usuario. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR USUARIO. Compruebe los siguientes campos:\\n\";\r\n\r\n      const resultUsuarios = await getAllUsuarios(usuario.token);\r\n      for (let item of resultUsuarios) {\r\n        if (\r\n          item.nombre_usuario === nombreUsuarioDetails &&\r\n          nombreUsuarioDetailsOriginal !== nombreUsuarioDetails\r\n        ) {\r\n          validarCampos += `-Ya existe un usuario con el nombreUsuario ${nombreUsuarioDetails}.\\n`;\r\n          flag = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (nombreDelUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombre del usuario no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (correoEmailUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El correo electrónico no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (contrasennaUsuarioDetails.trim() !== \"\") {\r\n        if (contrasennaUsuarioDetails.trim().length < 6) {\r\n          validarCampos +=\r\n            \"-La contraseña tiene que tener 6 o más caracteres.\\n\";\r\n          flag = false;\r\n        }\r\n      }\r\n      if (salario_CUPDetails === \"\") {\r\n        validarCampos += \"-El salario del trabajador no puede ser vacío.\\n\"\r\n        flag = false;\r\n      }\r\n      if (nombreUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombreUsuario no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (tiendaUsuarioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No ha seleccionado la tienda donde trabajará el usuario.\\n\";\r\n      }\r\n      if (rolUsuarioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-No ha seleccionado un rol para el usuario.\\n\";\r\n      }\r\n      if (CarnetIdentidadUsuarioDetails.trim() !== \"\") {\r\n        if (CarnetIdentidadUsuarioDetails.trim().length !== 11) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-El carnet de identidad del usuario deve tener 11 dígitos. \\n\";\r\n        }\r\n      }\r\n\r\n      if (flag) {\r\n        if (contrasennaUsuarioDetails.trim() === \"\") {\r\n          await actualizarUsuarioSinContraseña(\r\n            usuario.token,\r\n            idUsuarioDetails,\r\n            nombreDelUsuarioDetails,\r\n            nombreUsuarioDetails,\r\n            correoEmailUsuarioDetails,\r\n            telefonoUsuarioDetails,\r\n            direccionUsuarioDetails,\r\n            CarnetIdentidadUsuarioDetails,\r\n            detallesBancariosUsuarioDetils,\r\n            rolUsuarioDetails,\r\n            tiendaUsuarioDetails,\r\n            selecterActivoDetails === \"permitido\" ? true : false,\r\n            salario_CUPDetails\r\n          );\r\n        } else {\r\n          await actualizarUsuarioConContraseña(\r\n            usuario.token,\r\n            idUsuarioDetails,\r\n            nombreDelUsuarioDetails,\r\n            nombreUsuarioDetails,\r\n            contrasennaUsuarioDetails,\r\n            correoEmailUsuarioDetails,\r\n            telefonoUsuarioDetails,\r\n            direccionUsuarioDetails,\r\n            CarnetIdentidadUsuarioDetails,\r\n            detallesBancariosUsuarioDetils,\r\n            rolUsuarioDetails,\r\n            tiendaUsuarioDetails,\r\n            selecterActivoDetails === \"permitido\" ? true : false,\r\n            salario_CUPDetails\r\n          );\r\n        }\r\n\r\n        // Agregar Acción de usuario modificar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó al usuario ${nombreUsuarioDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          5\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(\r\n          `El Usuario \"${nombreUsuarioDetails}\" se modificó con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar proveedor\r\n  const eliminarUsuario = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando usuario. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL TRATAR DE ELIMINAR EL USUARIO. Motivos:\\n\";\r\n\r\n      if (flag) {\r\n        const resultDeleteUsuario = await deleteUsuario(\r\n          usuario.token,\r\n          idUsuarioDetails\r\n        );\r\n\r\n        if (resultDeleteUsuario) {\r\n          // Agregar Acción de usuario agregar proveedor\r\n\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó al usuario ${nombreUsuarioDetails}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            5\r\n          );\r\n\r\n          setIsBotonModalMesajeVisible(true);\r\n          setModalMensaje(\r\n            `El Usuario \"${nombreUsuarioDetails}\" se eliminó con éxito`\r\n          );\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(true);\r\n        } else {\r\n          validarCampos +=\r\n            \"-El usuario ya ha echo operaciones en el sistema.\\n\";\r\n          setModalMensaje(validarCampos);\r\n          setReflechModalMensajeView;\r\n          setModalMensajeView(true);\r\n        }\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Teléfono\",\r\n    \"Salario CUP\",\r\n    \"Rol\",\r\n    \"Tienda\",\r\n  ];\r\n  const columnasMyDateTableEntradaModal = [\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Costo\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Teléfono\",\r\n    \"Rol\",\r\n    \"Tienda\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Teléfono\",\r\n    \"Salario CUP\",\r\n    \"Rol\",\r\n    \"Tienda\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarProveedor && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Usuario</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableUsuarios\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>Nombre de Usuario:</Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del proveedor\"\r\n                    value={nombreUsuarioSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreUsuarioSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Correo del Usuario:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Correo del Proveedor\"\r\n                    value={correoEmyleSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setCorreoEmyleSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Número de Teléfono:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Número de Teléfono\"\r\n                    value={telefonoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setTelefonoSearch}\r\n                  />\r\n\r\n                  <Text style={styles.textSearchMovil}>Rol:</Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadRolesSearsh,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={rolNombreSeleccionadoSearsh}\r\n                      placeholder=\"Roles\"\r\n                      setValue={setRolNombreSeleccionadoSearsh}\r\n                      items={dropdownItemsRolesSearsh}\r\n                      direction=\"BOTTOM\"\r\n                      onDropdownOpen={() => controlarCapas(\"RolesSearsh\")}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Tienda:</Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadTiendasSearsh,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={tiendaNombreSeleccionadaSearch}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setTiendaNombreSeleccionadaSearch}\r\n                      items={dropdownItemsTiendasSearsh}\r\n                      direction=\"BOTTOM\"\r\n                      onDropdownOpen={() => controlarCapas(\"TiendasSearsh\")}\r\n                    />\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => filtrarYOrdenarUsuarios()}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Usuario\"\r\n                  : \"Agregar Usuario\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={nombreDelUsuarioDetails}\r\n                  onChangeText={setNombreDelUsuarioDetails}\r\n                  placeholder=\"Nombre del usuario\"\r\n                />\r\n\r\n                {/* Nombre Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={nombreUsuarioDetails}\r\n                  onChangeText={setNombreUsuarioDetails}\r\n                  placeholder=\"Nombre usuario\"\r\n                />\r\n\r\n                {/*Contraseña */}\r\n                {(modalProveedoresDates?.id_proveedor === \"\"\r\n                  ? true\r\n                  : parseInt(usuario?.id_rol) === 1) && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {modalProveedoresDates?.id_proveedor === \"\"\r\n                        ? \"Contraseña\"\r\n                        : \"Cambiar Contraseña\"}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                {(modalProveedoresDates?.id_proveedor === \"\"\r\n                  ? true\r\n                  : parseInt(usuario?.id_rol) === 1) && (\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    editable={\r\n                      modalProveedoresDates?.id_proveedor === \"\"\r\n                        ? true\r\n                        : isPermisoModificarProveedor &&\r\n                          isPermisoModificarGerarquico\r\n                    }\r\n                    value={contrasennaUsuarioDetails}\r\n                    onChangeText={setContrasennaUsuarioDetails}\r\n                    placeholder=\"Nueva contraseña del usuario\"\r\n                  />\r\n                )}\r\n\r\n                {/* Dirección del Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección del Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={direccionUsuarioDetails}\r\n                  onChangeText={setDireccionUsuarioDetails}\r\n                  placeholder=\"Dirección del Usuario    \"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y Carnet de Identidad */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoUsuarioDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtrar solo números del 0 al 9\r\n                        const filteredText = text.replace(/[^0-9]/g, \"\");\r\n                        setTelefonoUsuarioDetails(filteredText);\r\n                      }}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Carnet de Identidad */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Carnet de Identidad\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={CarnetIdentidadUsuarioDetails}\r\n                      onChangeText={(text) => {\r\n                        // Validar que el texto solo contenga números del 1 al 9\r\n                        const regex = /^[0-9]*$/; // Expresión regular para solo permitir números del 1 al 9\r\n\r\n                        // Verificar longitud y si el texto cumple con la expresión regular\r\n                        if (text.length <= 11 && regex.test(text)) {\r\n                          setCarnetIdentidadUsuarioDetails(text); // Actualiza el estado solo si es válido\r\n                        }\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"CarnetIdentidad\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailUsuarioDetails}\r\n                      onChangeText={setCorreoEmailUsuarioDetails}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosUsuarioDetils}\r\n                      onChangeText={setDetallesBancariosUsuarioDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles Salario y null */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo salario_CUP */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Salario diario en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={salario_CUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setsalario_CUPDetails(validNumericValue)\r\n                      }}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Salario diario en CUP\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo null */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                  </View>\r\n                </View>\r\n                \r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: 1000,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Tienda */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Roles</Text>\r\n                    <CustomDropdownDetails\r\n                      value={rolUsuarioDetails}\r\n                      placeholder=\"Roles\"\r\n                      setValue={setRolUsuarioDetails}\r\n                      items={dropdownItemsRolesDetails}\r\n                      readOnly={\r\n                        !(modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico)\r\n                      }\r\n                      searchable={true}\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Rol */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Tiendas</Text>\r\n                    <CustomDropdownDetails\r\n                      value={tiendaUsuarioDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setTiendaUsuarioDetails}\r\n                      items={dropdownItemsTiendasDetails}\r\n                      readOnly={\r\n                        !(modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico)\r\n                      }\r\n                      searchable={true}\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campo de los check bootom */}\r\n                {modalProveedoresDates?.id_proveedor !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        marginTop: \"3%\",\r\n                        color: Colors.negro, // Color del texto\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Acceso al Sistema\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                {modalProveedoresDates?.id_proveedor !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => {\r\n                          if (\r\n                            modalProveedoresDates?.id_proveedor === \"\"\r\n                              ? true\r\n                              : isPermisoModificarProveedor &&\r\n                                isPermisoModificarGerarquico\r\n                          ) {\r\n                            setSelecterActivoDetails(option.value);\r\n                          }\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n                )}\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarProveedor &&\r\n                    isPermisoModificarGerarquico &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos proveedor ${nombreUsuarioDetails}?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al proveedor ${nombreUsuarioDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarProveedor &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewUsuario()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarUsuario()\r\n                      : modificarUsuario()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Usuarios\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {(isPermisoAgregarProveedor ||\r\n            isPermisoModificarProveedor ||\r\n            isPermisoEliminarProveedor) && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Usuario\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre de Usuario:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del proveedor\"\r\n              value={nombreUsuarioSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreUsuarioSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Correo del Usuario:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Correo del Proveedor\"\r\n              value={correoEmyleSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setCorreoEmyleSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Número de Teléfono:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Número de Teléfono\"\r\n              value={telefonoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setTelefonoSearch}\r\n            />\r\n\r\n            <Text style={styles.textSearchDesktop}>Rol:</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                zIndex: capaPrioridadRolesSearsh,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={rolNombreSeleccionadoSearsh}\r\n                placeholder=\"Roles\"\r\n                setValue={setRolNombreSeleccionadoSearsh}\r\n                items={dropdownItemsRolesSearsh}\r\n                direction=\"BOTTOM\"\r\n                onDropdownOpen={() => controlarCapas(\"RolesSearsh\")}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                zIndex: capaPrioridadTiendasSearsh,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={tiendaNombreSeleccionadaSearch}\r\n                placeholder=\"Tiendas\"\r\n                setValue={setTiendaNombreSeleccionadaSearch}\r\n                items={dropdownItemsTiendasSearsh}\r\n                direction=\"BOTTOM\"\r\n                onDropdownOpen={() => controlarCapas(\"TiendasSearsh\")}\r\n              />\r\n            </View>\r\n            <View\r\n              style={{ width: \"100%\", flexDirection: \"row\", marginTop: \"5%\" }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarUsuarios()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableUsuarios\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Usuario\"\r\n                  : \"Agregar Usuario\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={nombreDelUsuarioDetails}\r\n                  onChangeText={setNombreDelUsuarioDetails}\r\n                  placeholder=\"Nombre del usuario\"\r\n                />\r\n\r\n                {/* Nombre Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={nombreUsuarioDetails}\r\n                  onChangeText={setNombreUsuarioDetails}\r\n                  placeholder=\"Nombre usuario\"\r\n                />\r\n\r\n                {/*Contraseña */}\r\n                {(modalProveedoresDates?.id_proveedor === \"\"\r\n                  ? true\r\n                  : parseInt(usuario?.id_rol) === 1) && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {modalProveedoresDates?.id_proveedor === \"\"\r\n                        ? \"Contraseña\"\r\n                        : \"Cambiar Contraseña\"}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                {(modalProveedoresDates?.id_proveedor === \"\"\r\n                  ? true\r\n                  : parseInt(usuario?.id_rol) === 1) && (\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    editable={\r\n                      modalProveedoresDates?.id_proveedor === \"\"\r\n                        ? true\r\n                        : isPermisoModificarProveedor &&\r\n                          isPermisoModificarGerarquico\r\n                    }\r\n                    value={contrasennaUsuarioDetails}\r\n                    onChangeText={setContrasennaUsuarioDetails}\r\n                    placeholder=\"Nueva contraseña del usuario\"\r\n                  />\r\n                )}\r\n\r\n                {/* Dirección del Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección del Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={direccionUsuarioDetails}\r\n                  onChangeText={setDireccionUsuarioDetails}\r\n                  placeholder=\"Dirección del Usuario    \"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y Carnet de Identidad */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoUsuarioDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtrar solo números del 0 al 9\r\n                        const filteredText = text.replace(/[^0-9]/g, \"\");\r\n                        setTelefonoUsuarioDetails(filteredText);\r\n                      }}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Carnet de Identidad */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Carnet de Identidad\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={CarnetIdentidadUsuarioDetails}\r\n                      onChangeText={(text) => {\r\n                        // Validar que el texto solo contenga números del 1 al 9\r\n                        const regex = /^[0-9]*$/; // Expresión regular para solo permitir números del 1 al 9\r\n\r\n                        // Verificar longitud y si el texto cumple con la expresión regular\r\n                        if (text.length <= 11 && regex.test(text)) {\r\n                          setCarnetIdentidadUsuarioDetails(text); // Actualiza el estado solo si es válido\r\n                        }\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"CarnetIdentidad\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailUsuarioDetails}\r\n                      onChangeText={setCorreoEmailUsuarioDetails}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosUsuarioDetils}\r\n                      onChangeText={setDetallesBancariosUsuarioDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles Salario y null */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo salario_CUP */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Salario diario en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={salario_CUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setsalario_CUPDetails(validNumericValue)\r\n                      }}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Salario diario en CUP\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo null */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: 1000,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Tienda */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTiendasSearsh,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Roles</Text>\r\n                    <CustomDropdownDetails\r\n                      value={rolUsuarioDetails}\r\n                      placeholder=\"Roles\"\r\n                      setValue={setRolUsuarioDetails}\r\n                      items={dropdownItemsRolesDetails}\r\n                      readOnly={\r\n                        !(modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico)\r\n                      }\r\n                      searchable={true}\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Rol */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadRolesSearsh,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Tiendas</Text>\r\n                    <CustomDropdownDetails\r\n                      value={tiendaUsuarioDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setTiendaUsuarioDetails}\r\n                      items={dropdownItemsTiendasDetails}\r\n                      readOnly={\r\n                        !(modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico)\r\n                      }\r\n                      searchable={true}\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campo de los check bootom */}\r\n                {modalProveedoresDates?.id_proveedor !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        marginTop: \"3%\",\r\n                        color: Colors.negro, // Color del texto\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Acceso al Sistema\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                {modalProveedoresDates?.id_proveedor !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => {\r\n                          if (\r\n                            modalProveedoresDates?.id_proveedor === \"\"\r\n                              ? true\r\n                              : isPermisoModificarProveedor &&\r\n                                isPermisoModificarGerarquico\r\n                          ) {\r\n                            setSelecterActivoDetails(option.value);\r\n                          }\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n                )}\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarProveedor &&\r\n                    isPermisoModificarGerarquico &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos proveedor ${nombreUsuarioDetails}?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al proveedor ${nombreUsuarioDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarProveedor &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewUsuario()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarUsuario()\r\n                      : modificarUsuario()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Usuarios\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\n\r\nexport interface Tienda {\r\n  id_Tienda: string;\r\n  nombre: string;\r\n  direccion: string;\r\n  comicion: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Tienda[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableTiendasView: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortEntradas, setSortEntradas} = useSortEntradas();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(10);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Tienda[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre Proveedor\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Producto\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Costo Por Unidad\") {\r\n      aux = \"option5\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option6\";\r\n    }\r\n\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Proveedor\" ||\r\n              column === \"Nombre Producto\" ||\r\n              column === \"Costo Por Unidad\" ||\r\n              column === \"Fecha\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortEntradasAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n          <DataTable style={{ width: \"100%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Tienda}\r\n                onPress={() => detailsModalView(item.id_Tienda)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.direccion}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.comicion}%\r\n                  </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Tienda}\r\n                onPress={() => detailsModalView(item.id_Tienda)}\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.direccion}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.comicion}%\r\n                  </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Tiendas\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import React, { forwardRef } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport DateTimePicker from 'react-datepicker';\r\n\r\ninterface CustomDateTimePickerProps {\r\n  selected: Date;\r\n  onChange: (date: Date) => void;\r\n  style: any;\r\n  placeholder?: string;\r\n  editable?: boolean;\r\n  cursorColor?: string;\r\n}\r\n\r\nconst CustomDateTimePicker = forwardRef<DateTimePicker, CustomDateTimePickerProps>(\r\n  (\r\n    {\r\n      selected,\r\n      onChange,\r\n      style,\r\n      placeholder,\r\n      editable,\r\n      cursorColor,\r\n    },\r\n    ref\r\n  ) => {\r\n    return (\r\n      <View style={style}>\r\n        <DateTimePicker\r\n          ref={ref}\r\n          selected={selected}\r\n          onChange={onChange}\r\n          showTimeSelect\r\n          showTimeSelectOnly\r\n          timeIntervals={15}\r\n          timeCaption=\"Hora\"\r\n          dateFormat=\"h:mm aa\"\r\n          placeholderText={placeholder}\r\n          editable={editable}\r\n          cursorColor={cursorColor}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n);\r\n\r\nexport default CustomDateTimePicker;","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  addTienda,\r\n  deleteTienda,\r\n  getAllTiendas,\r\n  getTiendaById,\r\n  isProductoInTienda,\r\n  updateTienda,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  MyDateTableTiendasView,\r\n  Tienda,\r\n} from \"../components/MyDateTableTiendasView\";\r\nimport CustomDateTimePicker from \"../components/CustomDateTimePiker\";\r\n\r\nexport default function TiendasView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  const crearHora = (hora: number, minutos: number) => {\r\n    return new Date(\r\n      new Date().getFullYear(),\r\n      new Date().getMonth(),\r\n      new Date().getDate(),\r\n      hora,\r\n      minutos,\r\n      0\r\n    );\r\n  };\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortEntradas, setSortEntradas } = useSortEntradas();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [nombreTiendaDetails, setNombreTiendaDetails] = useState(\"\");\r\n  const [direccionTiendaDetails, setDireccionTiendaDetails] = useState(\"\");\r\n  const [comicionTiendaDetails, setComicionTiendaDetails] = useState(\"0%\");\r\n  const [horaApertura, setHoraApertura] = React.useState(crearHora(9, 0));\r\n  const [horaCierre, setHoraCierre] = React.useState(crearHora(16, 0));\r\n  const nombreProductoRef = useRef(null);\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarEntrada, setIsPermisoAgregarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarEntrada, setIsPermisoEliminarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoModificarEntrada, setIsPermisoModificarEntrada] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      setIsPermisoAgregarEntrada(parseInt(usuario.id_rol) === 1);\r\n      setIsPermisoEliminarEntrada(parseInt(usuario.id_rol) === 1);\r\n      setIsPermisoModificarEntrada(parseInt(usuario.id_rol) === 1);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Tienda[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreProveedor, setDropDownItemsNombreProveedor] =\r\n    useState<ProveedorPiker[]>([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProveedorSearch, setNombreProveedorSearch] = useState(\"\");\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [costoDesdeSearch, setCostoDesdeSearch] = useState(\"\");\r\n  const [costoHastaSearch, setCostohastaSearch] = useState(\"\");\r\n  const [fechaDesdeSearch, setFechaDesdeSearch] = useState(new Date());\r\n  const [fechaHastaSearch, setFechaHastaSearch] = useState(new Date());\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2000\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getProveedoresPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProveedores(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_proveedor,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProveedor(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setNombreTiendaDetails(\"\");\r\n    setDireccionTiendaDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfTienda = async () => {\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getTiendaById(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Actualizamos los detalles\r\n        setIdTiendaDetails(result.id_tienda);\r\n        setNombreTiendaDetails(result.nombre);\r\n        setDireccionTiendaDetails(result.direccion);\r\n        setComicionTiendaDetails(`${result.comicion}%`);\r\n\r\n        // Actualizamos las horas de apertura y cierre\r\n        const horaApertura = new Date();\r\n        horaApertura.setHours(parseInt(result.hora_apertura.split(\":\")[0]));\r\n        horaApertura.setMinutes(parseInt(result.hora_apertura.split(\":\")[1]));\r\n        horaApertura.setSeconds(parseInt(result.hora_apertura.split(\":\")[2]));\r\n        setHoraApertura(horaApertura);\r\n\r\n        const horaCierre = new Date();\r\n        horaCierre.setHours(parseInt(result.hora_cierre.split(\":\")[0]));\r\n        horaCierre.setMinutes(parseInt(result.hora_cierre.split(\":\")[1]));\r\n        horaCierre.setSeconds(parseInt(result.hora_cierre.split(\":\")[2]));\r\n        setHoraCierre(horaCierre);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<Tienda[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarEntrada(\r\n          usuario.token,\r\n          nombreProveedorSearch,\r\n          nombreProductoSearch,\r\n          costoDesdeSearch,\r\n          costoHastaSearch,\r\n          `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n          `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Tienda[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Entrada: element.id_entrada,\r\n              id_Proveedor: element.proveedor.id_proveedor,\r\n              id_Producto: element.producto.id_producto,\r\n              nombre_Proveedor: element.proveedor.nombre,\r\n              nombre_Producto: element.producto.nombre,\r\n              cantidad: element.cantidad,\r\n              costo: element.costo,\r\n              fecha: element.fecha,\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfTienda();\r\n  }, [modalEntradasDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodasLasTiendas = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllTiendas(usuario.token);\r\n\r\n        if (result && Array.isArray(result.data)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const TiendasMapeados: Tienda[] = await Promise.all(\r\n            result.data.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Tienda: element.id_tienda,\r\n                nombre: element.nombre,\r\n                direccion: element.direccion,\r\n                comicion: element.comicion\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(TiendasMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron entradas.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener las entradas o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de las entradas\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodasLasTiendas();\r\n        getProveedoresPikerDetails();\r\n        getProductosPikerDetails();\r\n        getTiendasPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarEntradas = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let EntradasFiltradas: Tienda[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        /*\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortEntradas?.criterioOrden && sortEntradas.tipoOrden) {\r\n          EntradasFiltradas = await ordenarEntradas(\r\n            usuario.token,\r\n            EntradasFiltradas,\r\n            sortEntradas.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n        */\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(EntradasFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setNombreTiendaDetails(\"\");\r\n    setDireccionTiendaDetails(\"\");\r\n    setIdTiendaDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarEntradas();\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProveedorSearch(\"\");\r\n    setNombreProductoSearch(\"\");\r\n    setCostoDesdeSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewTienda = async () => {\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR TIENDA. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (nombreTiendaDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombre de la tienda no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (horaApertura.getTime() > horaCierre.getTime()) {\r\n        validarCampos +=\r\n          \"-La hora de apertura no puede ser más tarde que la hora de cierre.\\n\";\r\n        flag = false;\r\n      }\r\n      if (comicionTiendaDetails.includes(\"%\")) {\r\n        const partes = comicionTiendaDetails.split(\"%\");\r\n        if (partes[0].trim() === \"\") {\r\n          // No hay nada a la izquierda del %\r\n          validarCampos += \"-La comición no puede ser vacío.\\n\";\r\n          flag = false;\r\n        }\r\n      } else {\r\n        // No hay % en la cadena\r\n        validarCampos += \"-Debe poner el % a la derecha de la comición.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (flag) {\r\n        await addTienda(\r\n          usuario.token,\r\n          nombreTiendaDetails,\r\n          direccionTiendaDetails,\r\n          comicionTiendaDetails.split(\"%\")[0],\r\n          horaApertura.toLocaleTimeString(),\r\n          horaCierre.toLocaleTimeString()\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó la tienda ${nombreTiendaDetails}.`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          6\r\n        );\r\n\r\n        setModalMensaje(`La tienda fue insertada con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreTiendaDetails(\"\");\r\n        setDireccionTiendaDetails(\"\");\r\n        setIdTiendaDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR TIENDA. Compruebe los siguientes campos:\\n\";\r\n\r\n      if (nombreTiendaDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombre de la tienda no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (horaApertura.getTime() > horaCierre.getTime()) {\r\n        validarCampos +=\r\n          \"-La hora de apertura no puede ser más tarde que la hora de cierre.\\n\";\r\n        flag = false;\r\n      }\r\n      if (comicionTiendaDetails.includes(\"%\")) {\r\n        const partes = comicionTiendaDetails.split(\"%\");\r\n        if (partes[0].trim() === \"\") {\r\n          // No hay nada a la izquierda del %\r\n          validarCampos += \"-La comición no puede ser vacío.\\n\";\r\n          flag = false;\r\n        }\r\n      } else {\r\n        // No hay % en la cadena\r\n        validarCampos += \"-Debe poner el % a la derecha de la comición.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (flag) {\r\n        await updateTienda(\r\n          usuario.token,\r\n          idTiendaDetails,\r\n          nombreTiendaDetails,\r\n          direccionTiendaDetails,\r\n          comicionTiendaDetails.split(\"%\")[0],\r\n          horaApertura.toLocaleTimeString(),\r\n          horaCierre.toLocaleTimeString()\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó la tienda ${nombreTiendaDetails}.`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          6\r\n        );\r\n\r\n        setModalMensaje(`La tienda se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreTiendaDetails(\"\");\r\n        setDireccionTiendaDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(false);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR ENTRADA. Compruebe los siguientes parámetros:\\n\";\r\n\r\n      if (flag) {\r\n        const result = await deleteTienda(usuario.token, idTiendaDetails);\r\n\r\n        if (result) {\r\n          // Agregar Acción de usuario agregar proveedor\r\n\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la tienda ${nombreTiendaDetails}.`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            6\r\n          );\r\n\r\n          setModalMensaje(`La tienda se eliminó con éxito`);\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(true);\r\n          setNombreTiendaDetails(\"\");\r\n          setDireccionTiendaDetails(\"\");\r\n        } else {\r\n          validarCampos += \"-Ya se han echo operaciones en la tienda.\\n\";\r\n          setModalMensaje(validarCampos);\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(false);\r\n        }\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\"Nombre\", \"Dirección\", \"Comición\"];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\",];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\"Nombre\", \"Dirección\", , \"Comición\"];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {false && isPermisoAgregarEntrada && (\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                setModalEntradasDates({\r\n                  id_entrada: \"\",\r\n                  isAddEntrada: true,\r\n                  fileEditable: true,\r\n                  isModificarEntrada: false,\r\n                })\r\n              }\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Tienda</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableTiendasView\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre de la tienda */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={true}\r\n                  value={nombreTiendaDetails}\r\n                  onChangeText={setNombreTiendaDetails}\r\n                  placeholder=\"Nombre de la tienda\"\r\n                />\r\n\r\n                {/* Dirección */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={true}\r\n                  value={direccionTiendaDetails}\r\n                  onChangeText={setDireccionTiendaDetails}\r\n                  placeholder=\"Dirección de la tienda\"\r\n                />\r\n\r\n                {/* Comición */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Comición de los trabajadores en %\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={true}\r\n                  value={comicionTiendaDetails}\r\n                  onChangeText={(text) => {\r\n                    // Permite solo números y un punto decimal\r\n                    const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                    // Asegura que solo haya un punto decimal\r\n                    const validNumericValue =\r\n                      numericValue.split(\".\").length > 2\r\n                        ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                        : numericValue;\r\n\r\n                    // Verifica si el valor numérico es mayor que 100\r\n                    if (parseFloat(validNumericValue) > 100) {\r\n                      return;\r\n                    }\r\n\r\n                    // Agrega el símbolo de porcentaje (%) al final del texto\r\n                    const formattedValue = `${validNumericValue}%`;\r\n\r\n                    // Verifica si el usuario está intentando borrar el símbolo de porcentaje (%)\r\n                    if (text.length < comicionTiendaDetails.length) {\r\n                      const newValue = comicionTiendaDetails.slice(0, -1);\r\n                      setComicionTiendaDetails(newValue);\r\n                    } else {\r\n                      setComicionTiendaDetails(formattedValue);\r\n                    }\r\n                  }}\r\n                  placeholder=\"Comición de los trabajadores en %\"\r\n                />\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo Hora apertura */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"5%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Apertura</Text>\r\n                    <CustomDateTimePicker\r\n                      selected={horaApertura}\r\n                      onChange={setHoraApertura}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: 40,\r\n                        paddingHorizontal: 10,\r\n                        paddingVertical: 5,\r\n                        borderRadius: 5,\r\n                        backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n                        borderColor: \"rgba(0, 0, 0, 0.2)\",\r\n                        borderWidth: 1,\r\n                        shadowColor: \"rgba(0, 0, 0, 0.2)\",\r\n                        shadowOffset: { width: 0, height: 2 },\r\n                        shadowOpacity: 0.5,\r\n                        shadowRadius: 2,\r\n                      }}\r\n                      placeholder=\"Selecciona una hora\"\r\n                      editable={true}\r\n                      cursorColor=\"rgba(0, 0, 0, 0.8)\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Hora cierre */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginRight: \"5%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Cierre</Text>\r\n                    <CustomDateTimePicker\r\n                      selected={horaCierre}\r\n                      onChange={setHoraCierre}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: 40,\r\n                        paddingHorizontal: 10,\r\n                        paddingVertical: 5,\r\n                        borderRadius: 5,\r\n                        backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n                        borderColor: \"rgba(0, 0, 0, 0.2)\",\r\n                        borderWidth: 1,\r\n                        shadowColor: \"rgba(0, 0, 0, 0.2)\",\r\n                        shadowOffset: { width: 0, height: 2 },\r\n                        shadowOpacity: 0.5,\r\n                        shadowRadius: 2,\r\n                      }}\r\n                      placeholder=\"Selecciona una hora\"\r\n                      editable={true}\r\n                      cursorColor=\"rgba(0, 0, 0, 0.8)\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {modalEntradasDates?.id_entrada !== \"\" && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        marginLeft: \"5%\",\r\n                        shadowColor: \"#000\",\r\n                        shadowOffset: { width: 3, height: 4 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        marginTop: \"3%\", // Margen adicional entre botones\r\n                      }}\r\n                      onPress={() => {\r\n                        setIsModalChekVisible(true);\r\n                        setIsModalChekEliminarEntrada(false);\r\n                        setMesajeModalChek(\r\n                          `¿Estás seguro que deseas MODIFICAR los datos de esta tienda?`\r\n                        );\r\n                        setModalEntradasDates({\r\n                          id_entrada: \"\",\r\n                          isAddEntrada: false,\r\n                          isModificarEntrada: false,\r\n                          fileEditable: true,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Modificar Tienda\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {modalEntradasDates?.id_entrada === \"\" && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        borderRadius: 15,\r\n                        width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: \"#000\",\r\n                        marginLeft: \"5%\",\r\n                        shadowOffset: { width: 3, height: 4 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        marginTop: \"3%\", // Margen adicional entre botones\r\n                      }}\r\n                      onPress={() => addNewTienda()}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Agregar Tienda\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {modalEntradasDates?.id_entrada !== \"\" && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: \"#000\",\r\n                        marginRight: \"5%\",\r\n                        shadowOffset: { width: 3, height: 4 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        marginTop: \"3%\", // Margen adicional entre botones\r\n                      }}\r\n                      onPress={() => {\r\n                        setIsModalChekVisible(true);\r\n                        setIsModalChekEliminarEntrada(true);\r\n                        setMesajeModalChek(\r\n                          `¿Estás seguro que deseas ELIMINAR al esta tienda?`\r\n                        );\r\n                        setModalEntradasDates({\r\n                          id_entrada: \"\",\r\n                          isAddEntrada: false,\r\n                          isModificarEntrada: false,\r\n                          fileEditable: true,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Eliminar Tienda\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarEntradaFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Tiendas\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {false && isPermisoAgregarEntrada && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Tienda\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          ></LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableTiendasView\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Tienda\"\r\n                  : \"Datos de la Tienda\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre de la tienda */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={true}\r\n                  value={nombreTiendaDetails}\r\n                  onChangeText={setNombreTiendaDetails}\r\n                  placeholder=\"Nombre de la tienda\"\r\n                />\r\n\r\n                {/* Dirección */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={true}\r\n                  value={direccionTiendaDetails}\r\n                  onChangeText={setDireccionTiendaDetails}\r\n                  placeholder=\"Dirección de la tienda\"\r\n                />\r\n\r\n                {/* Comición */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Comición de los trabajadores en %\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={true}\r\n                  value={comicionTiendaDetails}\r\n                  onChangeText={(text) => {\r\n                    // Permite solo números y un punto decimal\r\n                    const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                    // Asegura que solo haya un punto decimal\r\n                    const validNumericValue =\r\n                      numericValue.split(\".\").length > 2\r\n                        ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                        : numericValue;\r\n\r\n                    // Verifica si el valor numérico es mayor que 100\r\n                    if (parseFloat(validNumericValue) > 100) {\r\n                      return;\r\n                    }\r\n\r\n                    // Agrega el símbolo de porcentaje (%) al final del texto\r\n                    const formattedValue = `${validNumericValue}%`;\r\n\r\n                    // Verifica si el usuario está intentando borrar el símbolo de porcentaje (%)\r\n                    if (text.length < comicionTiendaDetails.length) {\r\n                      const newValue = comicionTiendaDetails.slice(0, -1);\r\n                      setComicionTiendaDetails(newValue);\r\n                    } else {\r\n                      setComicionTiendaDetails(formattedValue);\r\n                    }\r\n                  }}\r\n                  placeholder=\"Comición de los trabajadores en %\"\r\n                />\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo Hora apertura */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"5%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Apertura</Text>\r\n                    <CustomDateTimePicker\r\n                      selected={horaApertura}\r\n                      onChange={setHoraApertura}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: 40,\r\n                        paddingHorizontal: 10,\r\n                        paddingVertical: 5,\r\n                        borderRadius: 5,\r\n                        backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n                        borderColor: \"rgba(0, 0, 0, 0.2)\",\r\n                        borderWidth: 1,\r\n                        shadowColor: \"rgba(0, 0, 0, 0.2)\",\r\n                        shadowOffset: { width: 0, height: 2 },\r\n                        shadowOpacity: 0.5,\r\n                        shadowRadius: 2,\r\n                      }}\r\n                      placeholder=\"Selecciona una hora\"\r\n                      editable={true}\r\n                      cursorColor=\"rgba(0, 0, 0, 0.8)\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Hora cierre */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginRight: \"5%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Cierre</Text>\r\n                    <CustomDateTimePicker\r\n                      selected={horaCierre}\r\n                      onChange={setHoraCierre}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: 40,\r\n                        paddingHorizontal: 10,\r\n                        paddingVertical: 5,\r\n                        borderRadius: 5,\r\n                        backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n                        borderColor: \"rgba(0, 0, 0, 0.2)\",\r\n                        borderWidth: 1,\r\n                        shadowColor: \"rgba(0, 0, 0, 0.2)\",\r\n                        shadowOffset: { width: 0, height: 2 },\r\n                        shadowOpacity: 0.5,\r\n                        shadowRadius: 2,\r\n                      }}\r\n                      placeholder=\"Selecciona una hora\"\r\n                      editable={true}\r\n                      cursorColor=\"rgba(0, 0, 0, 0.8)\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {modalEntradasDates?.id_entrada !== \"\" && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        marginLeft: \"5%\",\r\n                        shadowColor: \"#000\",\r\n                        shadowOffset: { width: 3, height: 4 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        marginTop: \"3%\", // Margen adicional entre botones\r\n                      }}\r\n                      onPress={() => {\r\n                        setIsModalChekVisible(true);\r\n                        setIsModalChekEliminarEntrada(false);\r\n                        setMesajeModalChek(\r\n                          `¿Estás seguro que deseas MODIFICAR los datos de esta tienda?`\r\n                        );\r\n                        setModalEntradasDates({\r\n                          id_entrada: \"\",\r\n                          isAddEntrada: false,\r\n                          isModificarEntrada: false,\r\n                          fileEditable: true,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Modificar Tienda\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {modalEntradasDates?.id_entrada === \"\" && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        borderRadius: 15,\r\n                        width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: \"#000\",\r\n                        marginLeft: \"5%\",\r\n                        shadowOffset: { width: 3, height: 4 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        marginTop: \"3%\", // Margen adicional entre botones\r\n                      }}\r\n                      onPress={() => addNewTienda()}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Agregar Tienda\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {modalEntradasDates?.id_entrada !== \"\" && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: \"#000\",\r\n                        marginRight: \"5%\",\r\n                        shadowOffset: { width: 3, height: 4 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        marginTop: \"3%\", // Margen adicional entre botones\r\n                      }}\r\n                      onPress={() => {\r\n                        setIsModalChekVisible(true);\r\n                        setIsModalChekEliminarEntrada(true);\r\n                        setMesajeModalChek(\r\n                          `¿Estás seguro que deseas ELIMINAR al esta tienda?`\r\n                        );\r\n                        setModalEntradasDates({\r\n                          id_entrada: \"\",\r\n                          isAddEntrada: false,\r\n                          isModificarEntrada: false,\r\n                          fileEditable: true,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Eliminar Tienda\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarEntradaFunction()\r\n                      : modificarEntradaFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Tiendas\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Accion } from '../components/MyDateTableAcciones';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortAcciones {\r\n  items: Accion[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortAccionesContextType {\r\n  sortAcciones: SortAcciones | null;\r\n  setSortAcciones: (sortEntradas: SortAcciones | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortAccionesContext = createContext<SortAccionesContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortAccionesProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortAcciones, setSortAcciones] = useState<SortAcciones | null>(null);\r\n\r\n  return (\r\n    <SortAccionesContext.Provider value={{ sortAcciones: sortAcciones, setSortAcciones: setSortAcciones }}>\r\n      {children}\r\n    </SortAccionesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortAcciones = () => {\r\n  const context = React.useContext(SortAccionesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortAcciones debe usarse dentro de un SortAcciones');\r\n  }\r\n  return context;\r\n};","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { useSortAcciones } from \"../contexts/AuxiliarSortAcciones\";\r\n\r\nexport interface Accion {\r\n  id_Accion: string;\r\n  id_Usuario: string;\r\n  nombre_Usuario: string;\r\n  descripcion: string;\r\n  fecha: string;\r\n  id_TipoAccion: string;\r\n  nombre_TipoAccion: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Accion[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableAcciones: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortAcciones, setSortAcciones} = useSortAcciones();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(10);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Accion[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre Usuario\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option4\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortAcciones({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Usuario\" ||\r\n              column === \"Fecha\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortEntradasAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Usuario !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Accion}\r\n                onPress={() => detailsModalView(item.id_Accion)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.descripcion}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombre_TipoAccion}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Accion}\r\n                onPress={() => detailsModalView(item.id_Accion)}\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.descripcion}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombre_TipoAccion}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getAllTiendas, isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport {\r\n  addAccionUsuario,\r\n  filtrarAcciones,\r\n  getAccionByID,\r\n  getAllAcciones,\r\n  getAllTiposAccion,\r\n  ordenarAcciones,\r\n} from \"../services/AccionesUsuarioServices\";\r\nimport { Accion, MyDateTableAcciones } from \"../components/MyDateTableAcciones\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport { useSortAcciones } from \"../contexts/AuxiliarSortAcciones\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\n\r\nexport default function AccionesView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTipoAccionSearsh, setCapaPrioridadTipoAccionSearsh] =\r\n    useState(500);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTipoAccionSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n      setCapaPrioridadTipoAccionSearsh(1500);\r\n    } else if (prioridad === \"TipoAccionSearch\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTipoAccionSearsh(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortAcciones, setSortAcciones } = useSortAcciones();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idAccionDetails, setIdAccionDetails] = useState(\"\");\r\n  const [idUsuarioAccionDetails, setIdUsuarioAccionDetails] = useState(\"\");\r\n  const [idTipoAccionDetails, setTipoAccionDetails] = useState(\"\");\r\n  const [nombreUsuarioAccionDetails, setNombreUsuarioAccionDetails] =\r\n    useState(\"\");\r\n  const [nombreTipoAccionDetails, setNombreTipoAccionDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarEntrada, setIsPermisoAgregarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarEntrada, setIsPermisoEliminarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoModificarEntrada, setIsPermisoModificarEntrada] =\r\n    React.useState(false);\r\n\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        // Verificar y almacenar el permiso de agregar entrada\r\n        if (localStorage.getItem(\"resultAgregarEntrada\") === null) {\r\n          const resultAgregarEntrada = await isPermiso(\r\n            usuario.token,\r\n            \"10\",\r\n            usuario.id_usuario\r\n          );\r\n          setIsPermisoAgregarEntrada(resultAgregarEntrada);\r\n          localStorage.setItem(\"resultAgregarEntrada\", resultAgregarEntrada);\r\n        } else {\r\n          setIsPermisoAgregarEntrada(Boolean(localStorage.getItem(\"resultAgregarEntrada\")));\r\n        }\r\n    \r\n        // Verificar y almacenar el permiso de eliminar entrada\r\n        if (localStorage.getItem(\"resultEliminarEntrada\") === null) {\r\n          const resultEliminarEntrada = await isPermiso(\r\n            usuario.token,\r\n            \"12\",\r\n            usuario.id_usuario\r\n          );\r\n          setIsPermisoEliminarEntrada(resultEliminarEntrada);\r\n          localStorage.setItem(\"resultEliminarEntrada\", resultEliminarEntrada);\r\n        } else {\r\n          setIsPermisoEliminarEntrada(Boolean(localStorage.getItem(\"resultEliminarEntrada\")));\r\n        }\r\n    \r\n        // Verificar y almacenar el permiso de modificar entrada\r\n        if (localStorage.getItem(\"resultModificarEntrada\") === null) {\r\n          const resultModificarEntrada = await isPermiso(\r\n            usuario.token,\r\n            \"11\",\r\n            usuario.id_usuario\r\n          );\r\n          setIsPermisoModificarEntrada(resultModificarEntrada);\r\n          localStorage.setItem(\"resultModificarEntrada\", resultModificarEntrada);\r\n        } else {\r\n          setIsPermisoModificarEntrada(Boolean(localStorage.getItem(\"resultModificarEntrada\")));\r\n        }\r\n      }\r\n    };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Accion[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreProveedor, setDropDownItemsNombreProveedor] =\r\n    useState<ProveedorPiker[]>([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreUsuarioSearch, setNombreUsuarioSearch] = useState(\"\");\r\n  const [descripcionSearch, setDescripcionSearch] = useState(\"\");\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n  const [selectedValueNombreTipoAccion, setSelectedValueNombreTipoAccion] =\r\n    useState<string | null>(null);\r\n  const [dropdownItemsTipoAccion, setDropDownItemsTipoAccion] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n\r\n  const options = [\r\n    { label: \"Día\", value: \"dia\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n    { label: \"Mes\", value: \"mes\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"dia\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 6);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else if (value === \"mes\") {\r\n      // Restar 1 mes a la fecha actual\r\n      const lastMonthDate = new Date(currentDate);\r\n      lastMonthDate.setMonth(currentDate.getMonth() - 1);\r\n      const monthYear = String(lastMonthDate.getFullYear());\r\n      const monthMonth = String(lastMonthDate.getMonth() + 1).padStart(2, \"0\");\r\n      const monthDay = String(lastMonthDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${monthYear}-${monthMonth}-${monthDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarAcciones(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdUsuarioAccionDetails(\"\");\r\n    setNombreUsuarioAccionDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfAccion = async () => {\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getAccionByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        /*\r\n        const [idAccionDetails, setIdAccionDetails] = useState(\"\");\r\n  const [idUsuarioAccionDetails, setIdUsuarioAccionDetails] = useState(\"\");\r\n  const [idTipoAccionDetails, setTipoAccionDetails] = useState(\"\");\r\n  const [nombreUsuarioAccionDetails, setNombreUsuarioAccionDetails] = useState(\"\");\r\n  const [nombreTipoAccionDetails, setNombreTipoAccionDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [costoDetails, setCostoDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n        */\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.fecha.split(\"T\")[0].split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdAccionDetails(result.id_accion);\r\n        setIdUsuarioAccionDetails(result.usuario.id_usuario);\r\n        setTipoAccionDetails(result.tipo_accion.id_tipo_accion);\r\n        setNombreUsuarioAccionDetails(result.usuario.nombre);\r\n        setDescripcionDetails(result.descripcion);\r\n        setNombreTipoAccionDetails(result.tipo_accion.nombre);\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares\r\n        setIdProductoAuxModificarDetails(result.producto.id_producto);\r\n        setIdTiendaAuxModificarDetails(result.tienda.id_tienda);\r\n        setCantidadAuxModificarDetails(result.cantidad);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Accion[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarAcciones(\r\n          usuario.token,\r\n          selectedValueNombreTipoAccion ?? \"\",\r\n          nombreUsuarioSearch,\r\n          descripcionSearch,\r\n          fechaDesde,\r\n          fechaHasta\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Accion[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Accion: element.id_accion,\r\n              id_Usuario: element.usuario.id_usuario,\r\n              nombre_Usuario: element.usuario.nombre_usuario,\r\n              descripcion: element.descripcion,\r\n              fecha: element.fecha,\r\n              id_TipoAccion: element.tipo_accion.id_tipo_accion,\r\n              nombre_TipoAccion: element.tipo_accion.nombre,\r\n            }))\r\n          );\r\n\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los acciones:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfAccion();\r\n  }, [modalEntradasDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodasLasAcciones = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllAcciones(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: Accion[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Accion: element.id_accion,\r\n                id_Usuario: element.usuario.id_usuario,\r\n                nombre_Usuario: element.usuario.nombre_usuario,\r\n                descripcion: element.descripcion,\r\n                fecha: element.fecha,\r\n                id_TipoAccion: element.tipo_accion.id_tipo_accion,\r\n                nombre_TipoAccion: element.tipo_accion.nombre,\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron entradas.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener las entradas o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de las entradas\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const getDatesTipoAccionPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiposAccion(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const TipoAccionMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tipo_accion,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsTipoAccion([\r\n          { label: \"Todos los tipos de acción\", value: \"\" },\r\n          ...TipoAccionMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await getDatesTipoAccionPiker();\r\n        getProductosPikerDetails();\r\n        getTiendasPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarAcciones = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let AccionesFiltradas: Accion[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortAcciones?.criterioOrden && sortAcciones.tipoOrden) {\r\n          AccionesFiltradas = await ordenarAcciones(\r\n            usuario.token,\r\n            AccionesFiltradas,\r\n            sortAcciones.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }else{\r\n          AccionesFiltradas = await ordenarAcciones(\r\n            usuario.token,\r\n            AccionesFiltradas,\r\n            \"option4\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(AccionesFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarAcciones(\r\n      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n    );\r\n  }, [\r\n    sortAcciones,\r\n  ]);\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    setSelecterActivoDetails(\"\");\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ]);\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarAcciones(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreUsuarioSearch(\"\");\r\n    setDescripcionSearch(\"\");\r\n    setSelectedValueNombreTipoAccion(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n  /*\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewEntrada = async () => {\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR ENTRADA. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (idUsuarioAccionDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (nombreUsuarioAccionDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo del producto por unidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await addEntrada(\r\n          usuario.token,\r\n          costoDetails,\r\n          nombreUsuarioAccionDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          parseInt(idUsuarioAccionDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails)\r\n        );\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(nombreUsuarioAccionDetails)\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó una entrada de ${nombreUsuarioAccionDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        await createProductoInTienda(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          idTiendaDetails\r\n        );\r\n        setModalMensaje(`La entrada fue insertado con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdUsuarioAccionDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setIdTiendaDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setNombreUsuarioAccionDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR ENTRADA. Compruebe los siguientes campos:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      const resultViejo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaAuxModificarDetails\r\n      );\r\n\r\n      if (\r\n        idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n        idProductoAuxModificarDetails !== idProductoDetails\r\n      ) {\r\n        if (\r\n          parseInt(resultViejo.cantidad ?? 0) -\r\n            parseInt(cantidadAuxModificarDetails) <\r\n          0\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Operación inválida. No se dispone de sificientes productos para realizar la operoción.\";\r\n        }\r\n      }\r\n      if (\r\n        parseInt(cantidadAuxModificarDetails) - parseInt(nombreUsuarioAccionDetails) >\r\n        parseInt(resultNuevo.cantidad ?? 0)\r\n      ) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n      if (idUsuarioAccionDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (nombreUsuarioAccionDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo del producto por unidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await modificarEntrada(\r\n          usuario.token,\r\n          idAccionDetails,\r\n          costoDetails,\r\n          nombreUsuarioAccionDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          parseInt(idUsuarioAccionDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails)\r\n        );\r\n\r\n        if (\r\n          idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n          idProductoAuxModificarDetails !== idProductoDetails\r\n        ) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaAuxModificarDetails),\r\n            parseInt(idProductoAuxModificarDetails),\r\n            parseInt(cantidadAuxModificarDetails) * -1\r\n          );\r\n\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(nombreUsuarioAccionDetails)\r\n          );\r\n        } else if (cantidadAuxModificarDetails !== nombreUsuarioAccionDetails) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(nombreUsuarioAccionDetails) - parseInt(cantidadAuxModificarDetails)\r\n          );\r\n        }\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó una entrada de originalmente ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setModalMensaje(`La entrada se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdUsuarioAccionDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setNombreUsuarioAccionDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR ENTRADA. Compruebe los siguientes parámetros:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n\r\n      if (parseInt(nombreUsuarioAccionDetails) > parseInt(resultNuevo.cantidad ?? 0)) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n\r\n      if (flag) {\r\n        await deleteEntrada(usuario.token, idAccionDetails);\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(nombreUsuarioAccionDetails) * -1\r\n        );\r\n\r\n        // Actualizar productos en 0 en productoTienda\r\n        await deleteFromProductoTiendaIn_0(usuario.token);\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la entrada con una cantidad de ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setModalMensaje(`La entrada se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdUsuarioAccionDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setNombreUsuarioAccionDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  */\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre Usuario\",\r\n    \"Descripción\",\r\n    \"Tipo de Acción\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre Usuario\",\r\n    \"Descripción\",\r\n    \"Tipo de Acción\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableAcciones\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>Nombre Usuario:</Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre usuario\"\r\n                    value={nombreUsuarioSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreUsuarioSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Descripción:</Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Descripción\"\r\n                    value={descripcionSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setDescripcionSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Tipo de Acción:</Text>\r\n                  <View\r\n                    style={{\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoAccionSearsh,\r\n                      height: 100,\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={selectedValueNombreTipoAccion}\r\n                      placeholder=\"Tipo de acción\"\r\n                      setValue={setSelectedValueNombreTipoAccion}\r\n                      items={dropdownItemsTipoAccion}\r\n                      onDropdownOpen={() => controlarCapas(\"TipoAccionSearch\")}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 1800,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaDesdeSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaHastaSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() =>\r\n                          filtrarYOrdenarAcciones(\r\n                            `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                            `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                          )\r\n                        }\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\"\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Usuario */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Usuario\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={nombreUsuarioAccionDetails}\r\n                    onChangeText={(text) => setNombreUsuarioAccionDetails(text)}\r\n                    editable={false}\r\n                    placeholder=\"Nombre Usuario\"\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la Tipo Accion y Fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Tipo Accion */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo Acción\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={nombreTipoAccionDetails}\r\n                      onChangeText={(text) => setNombreTipoAccionDetails(text)}\r\n                      editable={false}\r\n                      placeholder=\"Tipo accion\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Fecha */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={`${fechaAnnoDetails}-${fechaMesDetails}-${fechaDiaDetails}`}\r\n                      onChangeText={(text) => {}}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={false}\r\n                      placeholder=\"fecha\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={false}\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                {false && (\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"flex-end\",\r\n                      width: \"100%\",\r\n                      justifyContent: \"space-between\",\r\n                      marginTop: 20, // Espacio superior adicional\r\n                    }}\r\n                  >\r\n                    {/* Botón para modificar proveedor */}\r\n                    {isPermisoModificarEntrada &&\r\n                      modalEntradasDates?.id_entrada !== \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.azul_Oscuro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            marginLeft: \"5%\",\r\n                            shadowColor: \"#000\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => {\r\n                            setIsModalChekVisible(true);\r\n                            setIsModalChekEliminarEntrada(false);\r\n                            setMesajeModalChek(\r\n                              `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                            );\r\n                            setModalEntradasDates({\r\n                              id_entrada: \"\",\r\n                              isAddEntrada: false,\r\n                              isModificarEntrada: false,\r\n                              fileEditable: true,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Modificar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n\r\n                    {/* Botón para agregar proveedor */}\r\n                    {isPermisoAgregarEntrada &&\r\n                      modalEntradasDates?.id_entrada === \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.azul_Claro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            shadowColor: \"#000\",\r\n                            marginLeft: \"5%\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => addNewEntrada()}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Agregar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                    {/* Botón para eliminar proveedor */}\r\n                    {isPermisoEliminarEntrada &&\r\n                      modalEntradasDates?.id_entrada !== \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.rojo_oscuro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            shadowColor: \"#000\",\r\n                            marginRight: \"5%\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => {\r\n                            setIsModalChekVisible(true);\r\n                            setIsModalChekEliminarEntrada(true);\r\n                            setMesajeModalChek(\r\n                              `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                            );\r\n                            setModalEntradasDates({\r\n                              id_entrada: \"\",\r\n                              isAddEntrada: false,\r\n                              isModificarEntrada: false,\r\n                              fileEditable: true,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Eliminar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                  </View>\r\n                )}\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarEntradaFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Entradas\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre Usuario:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre usuario\"\r\n              value={nombreUsuarioSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreUsuarioSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Descripción:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Descripción\"\r\n              value={descripcionSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setDescripcionSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Tipo de Acción:</Text>\r\n            <View\r\n              style={{\r\n                position: \"relative\",\r\n                zIndex: capaPrioridadTipoAccionSearsh,\r\n                height: 100,\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={selectedValueNombreTipoAccion}\r\n                placeholder=\"Tipo de acción\"\r\n                setValue={setSelectedValueNombreTipoAccion}\r\n                items={dropdownItemsTipoAccion}\r\n                onDropdownOpen={() => controlarCapas(\"TipoAccionSearch\")}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1800,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() =>\r\n                    filtrarYOrdenarAcciones(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    )\r\n                  }\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableAcciones\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\"\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                Datos de la Acción\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Usuario */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Usuario\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={nombreUsuarioAccionDetails}\r\n                    onChangeText={(text) => setNombreUsuarioAccionDetails(text)}\r\n                    editable={false}\r\n                    placeholder=\"Nombre Usuario\"\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la Tipo Accion y Fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Tipo Accion */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo Acción\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={nombreTipoAccionDetails}\r\n                      onChangeText={(text) => setNombreTipoAccionDetails(text)}\r\n                      editable={false}\r\n                      placeholder=\"Tipo accion\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Fecha */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={`${fechaAnnoDetails}-${fechaMesDetails}-${fechaDiaDetails}`}\r\n                      onChangeText={(text) => {}}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={false}\r\n                      placeholder=\"fecha\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={false}\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                {false && (\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"flex-end\",\r\n                      width: \"100%\",\r\n                      justifyContent: \"space-between\",\r\n                      marginTop: 20, // Espacio superior adicional\r\n                    }}\r\n                  >\r\n                    {/* Botón para modificar proveedor */}\r\n                    {isPermisoModificarEntrada &&\r\n                      modalEntradasDates?.id_entrada !== \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.azul_Oscuro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            marginLeft: \"5%\",\r\n                            shadowColor: \"#000\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => {\r\n                            setIsModalChekVisible(true);\r\n                            setIsModalChekEliminarEntrada(false);\r\n                            setMesajeModalChek(\r\n                              `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                            );\r\n                            setModalEntradasDates({\r\n                              id_entrada: \"\",\r\n                              isAddEntrada: false,\r\n                              isModificarEntrada: false,\r\n                              fileEditable: true,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Modificar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n\r\n                    {/* Botón para agregar proveedor */}\r\n                    {isPermisoAgregarEntrada &&\r\n                      modalEntradasDates?.id_entrada === \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.azul_Claro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            shadowColor: \"#000\",\r\n                            marginLeft: \"5%\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => addNewEntrada()}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Agregar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                    {/* Botón para eliminar proveedor */}\r\n                    {isPermisoEliminarEntrada &&\r\n                      modalEntradasDates?.id_entrada !== \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.rojo_oscuro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            shadowColor: \"#000\",\r\n                            marginRight: \"5%\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => {\r\n                            setIsModalChekVisible(true);\r\n                            setIsModalChekEliminarEntrada(true);\r\n                            setMesajeModalChek(\r\n                              `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                            );\r\n                            setModalEntradasDates({\r\n                              id_entrada: \"\",\r\n                              isAddEntrada: false,\r\n                              isModificarEntrada: false,\r\n                              fileEditable: true,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Eliminar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                  </View>\r\n                )}\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarEntradaFunction()\r\n                      : modificarEntradaFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Entradas\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\n\r\nexport interface Permiso {\r\n  id_Entrada: string;\r\n  id_Proveedor: string;\r\n  id_Producto: string;\r\n  nombre_Proveedor: string;\r\n  nombre_Producto: string;\r\n  cantidad: string;\r\n  costo: string;\r\n  fecha: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Permiso[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTablePermisos: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortEntradas, setSortEntradas} = useSortEntradas();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(10);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Permiso[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"7\"\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"8\"\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"30\"\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"31\"\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre Proveedor\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Producto\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Costo Por Unidad\") {\r\n      aux = \"option5\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option6\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortEntradas({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Proveedor\" ||\r\n              column === \"Nombre Producto\" ||\r\n              column === \"Costo Por Unidad\" ||\r\n              column === \"Fecha\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortEntradasAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Proveedor !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Entrada}\r\n                onPress={() => detailsModalView(item.id_Entrada)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Proveedor}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo por unidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.costo}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Entrada}\r\n                onPress={() => detailsModalView(item.id_Entrada)}\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Proveedor}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.costo}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getAllTiendas, isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport { MyDateTablePermisos, Permiso } from \"../components/MyDateTablePermisos\";\r\n\r\nexport default function PermisosView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortEntradas, setSortEntradas } = useSortEntradas();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idEntradaDetails, setIdEntradaDetails] = useState(\"\");\r\n  const [idProveedorDetails, setIdProveedorDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [cantidadDetails, setCantidadDetails] = useState(\"\");\r\n  const [costoDetails, setCostoDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarEntrada, setIsPermisoAgregarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarEntrada, setIsPermisoEliminarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoModificarEntrada, setIsPermisoModificarEntrada] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarEntrada = await isPermiso(\r\n        usuario.token,\r\n        usuario.id_rol,\r\n        \"10\"\r\n      );\r\n      const resultEliminarEntrada = await isPermiso(\r\n        usuario.token,\r\n        usuario.id_rol,\r\n        \"12\"\r\n      );\r\n      const resultModificarEntrada = await isPermiso(\r\n        usuario.token,\r\n        usuario.id_rol,\r\n        \"11\"\r\n      );\r\n\r\n      setIsPermisoAgregarEntrada(resultAgregarEntrada);\r\n      setIsPermisoEliminarEntrada(resultEliminarEntrada);\r\n      setIsPermisoModificarEntrada(resultModificarEntrada);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Permiso[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreProveedor, setDropDownItemsNombreProveedor] =\r\n    useState<ProveedorPiker[]>([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProveedorSearch, setNombreProveedorSearch] = useState(\"\");\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [costoDesdeSearch, setCostoDesdeSearch] = useState(\"\");\r\n  const [costoHastaSearch, setCostohastaSearch] = useState(\"\");\r\n  const [fechaDesdeSearch, setFechaDesdeSearch] = useState(new Date());\r\n  const [fechaHastaSearch, setFechaHastaSearch] = useState(new Date());\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2000\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getProveedoresPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProveedores(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_proveedor,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProveedor(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdProveedorDetails(\"\");\r\n    setCostoDetails(\"\");\r\n    setCantidadDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfEntradas = async () => {\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getEntradaByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.fecha.split(\"T\")[0].split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdEntradaDetails(result.id_entrada);\r\n        setIdProveedorDetails(result.proveedor.id_proveedor);\r\n        setIdProductoDetails(result.producto.id_producto);\r\n        setCantidadDetails(result.cantidad);\r\n        setIdTiendaDetails(result.tienda.id_tienda);\r\n        setCostoDetails(result.costo);\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares\r\n        setIdProductoAuxModificarDetails(result.producto.id_producto);\r\n        setIdTiendaAuxModificarDetails(result.tienda.id_tienda);\r\n        setCantidadAuxModificarDetails(result.cantidad);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<Permiso[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarEntrada(\r\n          usuario.token,\r\n          nombreProveedorSearch,\r\n          nombreProductoSearch,\r\n          costoDesdeSearch,\r\n          costoHastaSearch,\r\n          `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n          `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Permiso[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Entrada: element.id_entrada,\r\n              id_Proveedor: element.proveedor.id_proveedor,\r\n              id_Producto: element.producto.id_producto,\r\n              nombre_Proveedor: element.proveedor.nombre,\r\n              nombre_Producto: element.producto.nombre,\r\n              cantidad: element.cantidad,\r\n              costo: element.costo,\r\n              fecha: element.fecha,\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfEntradas();\r\n  }, [modalEntradasDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosProveedores = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllEntradas(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: Permiso[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Entrada: element.id_entrada,\r\n                id_Proveedor: element.proveedor.id_proveedor,\r\n                id_Producto: element.producto.id_producto,\r\n                nombre_Proveedor: element.proveedor.nombre,\r\n                nombre_Producto: element.producto.nombre,\r\n                cantidad: element.cantidad,\r\n                costo: element.costo,\r\n                fecha: element.fecha,\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron entradas.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener las entradas o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de las entradas\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosProveedores();\r\n        getProveedoresPikerDetails();\r\n        getProductosPikerDetails();\r\n        getTiendasPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarEntradas = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let EntradasFiltradas: Permiso[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortEntradas?.criterioOrden && sortEntradas.tipoOrden) {\r\n          EntradasFiltradas = await ordenarEntradas(\r\n            usuario.token,\r\n            EntradasFiltradas,\r\n            sortEntradas.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(EntradasFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarEntradas();\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n    sortEntradas,\r\n  ]);\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setIdProveedorDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n    setIdTiendaDetails(\"\");\r\n    setCantidadDetails(\"\");\r\n    setCostoDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Extraemos el año, mes y día de la fecha actual\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    setFechaDiaDetails(String(parseInt(day)));\r\n    setFechaMesDetails(String(parseInt(month)));\r\n    setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarEntradas();\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProveedorSearch(\"\");\r\n    setNombreProductoSearch(\"\");\r\n    setCostoDesdeSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewEntrada = async () => {\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR ENTRADA. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (idProveedorDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo del producto por unidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await addEntrada(\r\n          usuario.token,\r\n          costoDetails,\r\n          cantidadDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          parseInt(idProveedorDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails)\r\n        );\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(cantidadDetails)\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó una entrada de ${cantidadDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        await createProductoInTienda(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          idTiendaDetails\r\n        );\r\n        setModalMensaje(`La entrada fue insertado con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdProveedorDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setIdTiendaDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR ENTRADA. Compruebe los siguientes campos:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      const resultViejo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaAuxModificarDetails\r\n      );\r\n\r\n      if (\r\n        idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n        idProductoAuxModificarDetails !== idProductoDetails\r\n      ) {\r\n        if (\r\n          parseInt(resultViejo.cantidad ?? 0) -\r\n            parseInt(cantidadAuxModificarDetails) <\r\n          0\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Operación inválida. No se dispone de sificientes productos para realizar la operoción.\";\r\n        }\r\n      }\r\n      if (\r\n        parseInt(cantidadAuxModificarDetails) - parseInt(cantidadDetails) >\r\n        parseInt(resultNuevo.cantidad ?? 0)\r\n      ) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n      if (idProveedorDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo del producto por unidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await modificarEntrada(\r\n          usuario.token,\r\n          idEntradaDetails,\r\n          costoDetails,\r\n          cantidadDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          parseInt(idProveedorDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails)\r\n        );\r\n\r\n        if (\r\n          idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n          idProductoAuxModificarDetails !== idProductoDetails\r\n        ) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaAuxModificarDetails),\r\n            parseInt(idProductoAuxModificarDetails),\r\n            parseInt(cantidadAuxModificarDetails) * -1\r\n          );\r\n\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(cantidadDetails)\r\n          );\r\n        } else if (cantidadAuxModificarDetails !== cantidadDetails) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(cantidadDetails) - parseInt(cantidadAuxModificarDetails)\r\n          );\r\n        }\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó una entrada de originalmente ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setModalMensaje(`La entrada se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdProveedorDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR ENTRADA. Compruebe los siguientes parámetros:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n\r\n      if (parseInt(cantidadDetails) > parseInt(resultNuevo.cantidad ?? 0)) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n\r\n      if (flag) {\r\n        await deleteEntrada(usuario.token, idEntradaDetails);\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(cantidadDetails) * -1\r\n        );\r\n\r\n        // Actualizar productos en 0 en productoTienda\r\n        await deleteFromProductoTiendaIn_0(usuario.token);\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la entrada con una cantidad de ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setModalMensaje(`La entrada se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdProveedorDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre Proveedor\",\r\n    \"Nombre Producto\",\r\n    \"Cantidad\",\r\n    \"Costo Por Unidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre Proveedor\",\r\n    \"Nombre Producto\",\r\n    \"Cantidad\",\r\n    \"Costo Por Unidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTablePermisos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Proveedor:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del proveedor\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={nombreProveedorSearch}\r\n                    onChangeText={setNombreProveedorSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del Producto\"\r\n                    value={nombreProductoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Rango de Costo en USD:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={idProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setIdProductoDetails(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={idProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setIdProductoDetails(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.blanco,\r\n                        fontSize: 18,\r\n                        justifyContent: \"center\",\r\n                        marginRight: \"25%\",\r\n                        fontWeight: \"bold\", // Para negritas\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Desde\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.blanco,\r\n                        fontSize: 18,\r\n                        marginLeft: \"12%\",\r\n                        justifyContent: \"center\",\r\n                        fontWeight: \"bold\", // Para negritas\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Hasta\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 500\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={()=> controlarCapas(\"FechaDesdeSearsh\")}\r\n                      />\r\n                    </View>\r\n\r\n                    <View\r\n                      style={{\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={()=> controlarCapas(\"FechaHastaSearsh\")}\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProveedorDetails}\r\n                    placeholder=\"Proveedores\"\r\n                    setValue={setIdProveedorDetails}\r\n                    items={dropdownItemsNombreProveedor}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Productos\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre de la Tienda */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idTiendaDetails}\r\n                    placeholder=\"Tiendas\"\r\n                    setValue={setIdTiendaDetails}\r\n                    items={dropdownItemsNombreTienda}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalMovil}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalMovil}>Costo en USD</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={costoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Costo en USD\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{ width: \"90%\", marginLeft: \"2%\", marginRight: \"2%\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>Fecha</Text>\r\n                  {isDateLoaded && (\r\n                    <MyDateInput\r\n                      dayValue={fechaDiaDetails}\r\n                      monthValue={fechaMesDetails}\r\n                      yearValue={fechaAnnoDetails}\r\n                      onDayChange={setFechaDiaDetails}\r\n                      onMonthChange={setFechaMesDetails}\r\n                      onYearChange={setFechaAnnoDetails}\r\n                      style={{ margin: 20 }}\r\n                      styleText={styles.labelTextModalMovil}\r\n                    />\r\n                  )}\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar entrada */}\r\n                  {isPermisoModificarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar entrada */}\r\n                  {isPermisoAgregarEntrada &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewEntrada()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarEntradaFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Permisos\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Proveedor:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del proveedor\"\r\n              value={nombreProveedorSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProveedorSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del Producto\"\r\n              value={nombreProductoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Rango de Costo en USD:</Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={costoDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostoDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={costoHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostohastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarEntradas()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTablePermisos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProveedorDetails}\r\n                    placeholder=\"Proveedores\"\r\n                    setValue={setIdProveedorDetails}\r\n                    items={dropdownItemsNombreProveedor}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Productos\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre de la Tienda */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTiendasDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTiendasDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idTiendaDetails}\r\n                    placeholder=\"Tiendas\"\r\n                    setValue={setIdTiendaDetails}\r\n                    items={dropdownItemsNombreTienda}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"TiendaDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Costo en USD\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={costoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Costo en USD\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarEntrada &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewEntrada()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarEntradaFunction()\r\n                      : modificarEntradaFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Permisos\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\n\r\nexport interface TipoServicio {\r\n  id_TipoServicio: string;\r\n  nombre_TipoServicio: string;\r\n  costo: string;\r\n}\r\n\r\ninterface Props {\r\n  items: TipoServicio[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableTipoServicio: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortEntradas, setSortEntradas} = useSortEntradas();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<TipoServicio[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre Proveedor\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Producto\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Costo Por Unidad\") {\r\n      aux = \"option5\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option6\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    /*\r\n    setSortEntradas({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n    */\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Proveedor\" ||\r\n              column === \"Nombre Producto\" ||\r\n              column === \"Costo Por Unidad\" ||\r\n              column === \"Fecha\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortEntradasAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n          <DataTable style={{ width: \"100%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_TipoServicio}\r\n                onPress={() => detailsModalView(item.id_TipoServicio)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_TipoServicio}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.costo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Tipo de Servicio\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_TipoServicio}\r\n                onPress={() => detailsModalView(item.id_TipoServicio)}\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_TipoServicio}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.costo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Tipo de Servicio\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getAllTiendas, isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport {\r\n  getAllProductos,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  MyDateTableTipoServicio,\r\n  TipoServicio,\r\n} from \"../components/MyDateTableTipoServicio\";\r\nimport {\r\n  addTipoServicio,\r\n  deleteTipoServicio,\r\n  filtrarTipoSrvicio,\r\n  getAllTipoServicios,\r\n  getTipoServicioByID,\r\n  modificarTipoServicio,\r\n} from \"../services/TipoServiciosServices\";\r\n\r\nexport default function TipoServicioView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortEntradas, setSortEntradas } = useSortEntradas();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idTipoServicioDetails, setIdTipoServicioDetails] = useState(\"\");\r\n  const [nombreTipoServicioDetails, setNombreTipoServicioDetails] =\r\n    useState(\"\");\r\n  const [costoDetails, setCostoDetails] = useState(\"\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] = useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarTipoServicio, setIsPermisoAgregarTipoServicio] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarTipoServicio, setIsPermisoEliminarTipoServicio] =\r\n    React.useState(false);\r\n  const [isPermisoModificarTipoServicio, setIsPermisoModificarTipoServicio] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarTipoServicioView = await isPermiso(\r\n        usuario.token,\r\n        \"20\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarTipoServicioView = await isPermiso(\r\n        usuario.token,\r\n        \"21\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultEliminarTipoServicioView = await isPermiso(\r\n        usuario.token,\r\n        \"22\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      setIsPermisoAgregarTipoServicio(resultAgregarTipoServicioView);\r\n      setIsPermisoEliminarTipoServicio(resultEliminarTipoServicioView);\r\n      setIsPermisoModificarTipoServicio(resultModificarTipoServicioView);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<string | null>(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<TipoServicio[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreProveedor, setDropDownItemsNombreProveedor] =\r\n    useState<ProveedorPiker[]>([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreTipoServicioSearch, setNombreTipoServicioSearch] = useState(\"\");\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [costoDesdeSearch, setCostoDesdeSearch] = useState(\"\");\r\n  const [costoHastaSearch, setCostohastaSearch] = useState(\"\");\r\n  const [fechaDesdeSearch, setFechaDesdeSearch] = useState(new Date());\r\n  const [fechaHastaSearch, setFechaHastaSearch] = useState(new Date());\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2000\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getProveedoresPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProveedores(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_proveedor,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProveedor(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([...tiendasMapeados]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setNombreTipoServicioDetails(\"\");\r\n    setCostoDetails(\"\");\r\n    setCostoDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfEntradas = async () => {\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getTipoServicioByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Actualizamos los detalles\r\n        setIdTipoServicioDetails(result.id_tipo_servicio);\r\n        setNombreTipoServicioDetails(result.nombre);\r\n        setCostoDetails(result.costo);\r\n\r\n        // Actualizamos los valores auxiliares\r\n        setIdProductoAuxModificarDetails(result.producto.id_producto);\r\n        setIdTiendaAuxModificarDetails(result.tienda.id_tienda);\r\n        setCantidadAuxModificarDetails(result.cantidad);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<TipoServicio[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarTipoSrvicio(\r\n          usuario.token,\r\n          nombreTipoServicioSearch,\r\n          costoDesdeSearch,\r\n          costoHastaSearch\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: TipoServicio[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_TipoServicio: element.id_tipo_servicio,\r\n              nombre_TipoServicio: element.nombre,\r\n              costo: element.costo,\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfEntradas();\r\n  }, [modalEntradasDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosTipoServicios = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener tipos de servicios\r\n        const result = await getAllTipoServicios(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: TipoServicio[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_TipoServicio: element.id_tipo_servicio,\r\n                nombre_TipoServicio: element.nombre,\r\n                costo: element.costo,\r\n              };\r\n            })\r\n          );\r\n\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron Tipos de Servicios.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener los Tipos de Servicios o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\r\n          \"Ocurrió un problema al cargar los datos de lo Tipos de Servicios\"\r\n        );\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosTipoServicios();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarTipoServicio = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let EntradasFiltradas: TipoServicio[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        /*\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortEntradas?.criterioOrden && sortEntradas.tipoOrden) {\r\n          EntradasFiltradas = await ordenarEntradas(\r\n            usuario.token,\r\n            EntradasFiltradas,\r\n            sortEntradas.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n          */\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(EntradasFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarTipoServicio();\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n    sortEntradas,\r\n    selectedOptionTipoOrden,\r\n  ]);\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setNombreTipoServicioDetails(\"\");\r\n    setCostoDetails(\"0\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarTipoServicio();\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreTipoServicioSearch(\"\");\r\n    setNombreProductoSearch(\"\");\r\n    setCostoDesdeSearch(\"\");\r\n    setCostohastaSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewTipoServicio = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Agregando tipo de servicio. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR TIPO DE SERVICIO. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (nombreTipoServicioDetails.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-El nombre del tipo de servicio no puede ser vacio.\\n\";\r\n      }\r\n      if (costoDetails.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-El costo del tipo de servicio no puede ser vacio.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await addTipoServicio(\r\n          usuario.token,\r\n          nombreTipoServicioDetails,\r\n          costoDetails\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un nuevo tipo de servicio: ${nombreTipoServicioDetails} con un costo de ${costoDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          7\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(\r\n          `Se ha creado el tipo de servicio ${nombreTipoServicioDetails}`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreTipoServicioDetails(\"\");\r\n        setCostoDetails(\"\");\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un tipo de servicio\r\n  const modificarTipoServicioFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Modificando tipo de servicio. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR TIPO DE SERVICIO. Compruebe los siguientes campos:\\n\";\r\n\r\n      if (nombreTipoServicioDetails.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-El nombre del tipo de servicio no puede ser vacio.\\n\";\r\n      }\r\n      if (costoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-El costo del tipo de servicio no puede ser vacio.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await modificarTipoServicio(\r\n          usuario.token,\r\n          idTipoServicioDetails,\r\n          nombreTipoServicioDetails,\r\n          costoDetails\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó el tipo de servicio: ${nombreTipoServicioDetails} con un costo de ${costoDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          7\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(`El tipo de servicio se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para elimºinar los datos de un producto\r\n  const eliminarEntradaFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Eliminando tipo de servicio. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR TIPO DE SERVICIO. Compruebe los siguientes parámetros:\\n\";\r\n\r\n      // Combrovar tipos de servicios longevos\r\n      \r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 25 ||\r\n        parseInt(idTipoServicioDetails) === 26\r\n      ) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No es posible eliminar este tipo de servicio ya que se usa en la lógica del software.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        const resultDelete = await deleteTipoServicio(\r\n          usuario.token,\r\n          idTipoServicioDetails\r\n        );\r\n        if (resultDelete) {\r\n          // Agregar Acción de usuario agregar proveedor\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó el tipo de servicio ${nombreTipoServicioDetails}.`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n\r\n          setIsBotonModalMesajeVisible(true)\r\n          setModalMensaje(`El tipo de servicio se eliminó con éxito`);\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(true);\r\n          setNombreTipoServicioDetails(\"\");\r\n          setCostoDetails(\"\");\r\n        } else {\r\n          setModalMensaje(validarCampos);\r\n          setModalMensajeView(true);\r\n        }\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\"Tipo de Servicio\", \"Costo\"];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\"Tipo de Servicio\", \"Costo\"];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarTipoServicio && (\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                setModalEntradasDates({\r\n                  id_entrada: \"\",\r\n                  isAddEntrada: true,\r\n                  fileEditable: true,\r\n                  isModificarEntrada: false,\r\n                })\r\n              }\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>\r\n                Agregar Tipo de Servicio\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableTipoServicio\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Nombre del tipo de Servicio:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del tipo de Servicio\"\r\n                    value={nombreTipoServicioSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreTipoServicioSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Rango de Costo:</Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={costoDesdeSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCostoDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={costoHastaSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCostohastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      marginTop: \"10%\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => filtrarYOrdenarTipoServicio()}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\"\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Tipo de Servicio\"\r\n                  : \"Datos del Tipo de Servicio\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    marginLeft: \"2%\",\r\n                    marginRight: \"2%\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Tipo de Servicio\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    value={nombreTipoServicioDetails}\r\n                    onChangeText={(text) => {\r\n                      setNombreTipoServicioDetails(text);\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    editable={isPermisoModificarTipoServicio ? true : false}\r\n                    placeholder=\"Nombre Tipo de Servicio\"\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Costo</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={costoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoDetails(validNumericValue);\r\n                      }}\r\n                      editable={isPermisoModificarTipoServicio ? true : false}\r\n                      placeholder=\"Costo\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"43%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este Tipo de Servicio?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"43%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewTipoServicio()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"43%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR este Tipo de Servicio?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarTipoServicioFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (<TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Tipo de Servicio\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>)}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarTipoServicio && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Tipo de Servicio\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>\r\n              Nombre del tipo de Servicio:\r\n            </Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del tipo de Servicio\"\r\n              value={nombreTipoServicioSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreTipoServicioSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Rango de Costo:</Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={costoDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostoDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={costoHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostohastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                marginTop: \"10%\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarTipoServicio()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableTipoServicio\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\"\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Tipo de Servicio\"\r\n                  : \"Datos del Tipo de Servicio\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    marginLeft: \"2%\",\r\n                    marginRight: \"2%\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Tipo de Servicio\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    value={nombreTipoServicioDetails}\r\n                    onChangeText={(text) => {\r\n                      setNombreTipoServicioDetails(text);\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    editable={isPermisoModificarTipoServicio ? true : false}\r\n                    placeholder=\"Nombre Tipo de Servicio\"\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Costo</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={costoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoDetails(validNumericValue);\r\n                      }}\r\n                      editable={isPermisoModificarTipoServicio ? true : false}\r\n                      placeholder=\"Costo\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este Tipo de Servicio?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewTipoServicio()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR este Tipo de Servicio?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarEntradaFunction()\r\n                      : modificarTipoServicioFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (<TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Tipo de Servicio\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>)}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\nimport { cambiarValorMonedaUSD, getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\n\r\nexport default function CambiarMonedaView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n  const { usuario, setUsuario } = useUsuario();\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [cambioMoneda, setCambioMoneda] = useState(\"\");\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        if (usuario?.token) {\r\n            const result = await getValorMonedaUSD(usuario.token);\r\n            setCambioMoneda(result);\r\n        }\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  // Cambiar moneda function\r\n  const cambiarMoneda = async () =>{\r\n    if (usuario?.token) {\r\n        await cambiarValorMonedaUSD(usuario.token, cambioMoneda);\r\n        setModalMensajeView(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      {/*Barra superior*/}\r\n      <Navbar />\r\n      {/* Vista animada que se despliega hacia la izquierda */}\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"flex-start\",\r\n          marginTop: \"10%\",\r\n        }}\r\n      >\r\n        <View style={{ width: \"20%\", marginLeft: \"40%\", }}>\r\n          <Text style={styles.labelTextModalDesktop}>\r\n            {\"Cambio de moneda de USD -> CUP\"}\r\n          </Text>\r\n          <CustomTextImputSearch\r\n            style={styles.textImputModal}\r\n            cursorColor={Colors.azul_Oscuro}\r\n            value={cambioMoneda}\r\n            onChangeText={(text) => {\r\n              // Permite solo números y un punto decimal\r\n              const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n              // Asegura que solo haya un punto decimal\r\n              const validNumericValue =\r\n                numericValue.split(\".\").length > 2\r\n                  ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                  : numericValue;\r\n\r\n              setCambioMoneda(validNumericValue);\r\n            }}\r\n            placeholder=\"Digite un número\"\r\n          />\r\n        </View>\r\n        <View style={{ width: \"20%\", marginLeft: \"41%\" }}>\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Oscuro,\r\n              borderRadius: 15,\r\n              width: \"80%\", // Ancho fijo para pantallas de escritorio\r\n              height: 30, // Altura fija para pantallas de escritorio\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginLeft: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n              marginTop: \"3%\", // Margen adicional entre botones\r\n            }}\r\n            onPress={() => {cambiarMoneda()}}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: \"white\",\r\n                fontSize: 16,\r\n              }}\r\n            >\r\n              Cambiar Moneda\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      {/*Modal mensaje */}\r\n      <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Se ha cambiado el valor de la moneda a ${cambioMoneda}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() => setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n    </View>\r\n  );\r\n}\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Cliente } from '../components/MyDateTableClientes';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortClientes {\r\n  items: Cliente[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortClientesContextType {\r\n  sortClientes: SortClientes | null;\r\n  setSortClientes: (sortClientes: SortClientes | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortClientesContext = createContext<SortClientesContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortClientesProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortClientes, setSortClientes] = useState<SortClientes | null>(null);\r\n\r\n  return (\r\n    <SortClientesContext.Provider value={{ sortClientes: sortClientes, setSortClientes: setSortClientes }}>\r\n      {children}\r\n    </SortClientesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortClientes = () => {\r\n  const context = React.useContext(SortClientesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortEntradas debe usarse dentro de un SortClientes');\r\n  }\r\n  return context;\r\n};","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\nimport { useSortClientes } from \"../contexts/AuxiliarSortClientes\";\r\n\r\nexport interface Cliente {\r\n  id_Cliente: string;\r\n  nombre: string;\r\n  correo?: string;\r\n  telefono?: string;\r\n  nota?: string;\r\n  cif?: string;\r\n  detalle_bancario?: string;\r\n  descripcion?: string;\r\n}\r\n\r\nexport interface ClientesPiker {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Cliente[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableProveedorModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableClientes: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n  const { sortProductos, setSortProductos } = useSortProductos();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortClientes, setSortClientes } = useSortClientes();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Cliente[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_producto: string) => {\r\n    setModalProveedoresDates({\r\n      id_proveedor: id_producto,\r\n      isAddProveedor: true,\r\n      fileEditable: false,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: true,\r\n      isDetallesProveedores: true,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  const resultadoCondicionalOpcionesDeCelda = (item: Cliente) => {\r\n    if (usuario?.id_rol) {\r\n      return (usuario.id_rol == \"1\" && isPermisoOpcionesDeCelda) ||\r\n        (usuario.id_rol == \"2\" && isPermisoOpcionesDeCelda)\r\n        ? true\r\n        : item.telefono && isPermisoOpcionesDeCelda\r\n        ? true\r\n        : false;\r\n    }\r\n  };\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n    // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre\") {\r\n      aux = \"option3\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortClientes({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n  \r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre\") && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Suave,\r\n                    marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                    width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                    height: 24, // Asegúrate de que tenga tamaño consistente\r\n                    justifyContent: \"center\", // Centrar contenido del botón\r\n                    alignItems: \"center\", // Centrar contenido del botón\r\n                    borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                    marginBottom: 4, // Elevar el botón del borde inferior\r\n                    paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                  }}\r\n                  onPress={() => sortEntradasAux(column)}\r\n                >\r\n                  <Image\r\n                    source={require(\"../images/ordenar.png\")}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </TouchableOpacity>\r\n              )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idProductoOption, setIdProductoOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdProductoOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalProveedoresDates({\r\n        id_proveedor: idProductoOption,\r\n        isAddProveedor: true,\r\n        fileEditable: true,\r\n        isModificarProveedor: true,\r\n        isAddProductoShowProveedoresTiendas: true,\r\n        isDetallesProveedores: true,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Cliente !== idProductoOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idProductoOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Cliente}\r\n                onPress={() => detailsModalView(item.id_Cliente)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Primera celda - CIF */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.cif}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.detalle_bancario}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Teléfono */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.telefono}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idProductoOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Cliente}\r\n                onPress={() => detailsModalView(item.id_Cliente)}\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Primera celda - CIF */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.cif}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.detalle_bancario}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Teléfono */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    flex: 1.5,\r\n                    justifyContent: \"center\", // Centrar horizontalmente\r\n                    alignItems: \"center\", // Centrar verticalmente\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text>{item.telefono}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 16,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport {\r\n  actualizarProveedor,\r\n  addProveedor,\r\n  deleteProveedor,\r\n  filtrarProveedor,\r\n  getAllProveedores,\r\n  getProveedorById,\r\n} from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport {\r\n  PanGestureHandler,\r\n  PanGestureHandlerGestureEvent,\r\n} from \"react-native-gesture-handler\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport {\r\n  MyDateTableModalShowDateProveedores,\r\n  ProveedoresShowModal,\r\n} from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\nimport {\r\n  EntradaShowModal,\r\n  MyDateTableModalShowDatesEntradas,\r\n} from \"../components/MyDateTableModalShowDatesEntradas\";\r\nimport { getAllEntradasByProveedorId } from \"../services/EntradaServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  Cliente,\r\n  MyDateTableClientes,\r\n} from \"../components/MyDateTableClientes\";\r\nimport {\r\n  actualizarCliente,\r\n  addCliente,\r\n  deleteCliente,\r\n  filtrarCliente,\r\n  getAllClientes,\r\n  getClienteById,\r\n  ordenarClientes,\r\n} from \"../services/clienteServices\";\r\nimport { useSortClientes } from \"../contexts/AuxiliarSortClientes\";\r\n\r\nexport default function ClientesView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortClientes, setSortClientes } = useSortClientes();\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar proovedores y ver datos\r\n  const [idClienteDetails, setIdClienteDetails] = useState(\"\");\r\n  const [nombreClienteDetails, setNombreClienteDetails] = useState(\"\");\r\n  const [correoEmailClienteDetails, setCorreoEmailClienteDetails] =\r\n    useState(\"\");\r\n  const [telefonoClienteDetails, setTelefonoClienteDetails] = useState(\"\");\r\n  const [notaClienteDetails, setNotaClienteDetails] = useState(\"\");\r\n  const [descripcionClienteDetails, setDescripcionClienteDetails] =\r\n    useState(\"\");\r\n  const [cfiClienteDetails, setCfiClienteDetails] = useState(\"\");\r\n  const [detallesBancariosClienteDetils, setDetallesBancariosProveedorDetils] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [isModalChekEliminarVisible, setIsModalChekEliminarVisible] =\r\n    useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  // Controlar el doble clic del boton\r\n    const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarCliente, setIsPermisoAgregarCliente] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarCliente, setIsPermisoEliminarCliente] =\r\n    React.useState(false);\r\n  const [isPermisoModificarCliente, setIsPermisoModificarCliente] =\r\n    React.useState(false);\r\n\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        // Verificar y almacenar el permiso de agregar cliente\r\n        if (localStorage.getItem(\"resultAgregarClienteView\") === null) {\r\n          const resultAgregarClienteView = await isPermiso(\r\n            usuario.token,\r\n            \"16\",\r\n            usuario.id_usuario\r\n          );\r\n          setIsPermisoAgregarCliente(resultAgregarClienteView);\r\n          localStorage.setItem(\"resultAgregarClienteView\", resultAgregarClienteView);\r\n        } else {\r\n          setIsPermisoAgregarCliente(Boolean(localStorage.getItem(\"resultAgregarClienteView\")));\r\n        }\r\n    \r\n        // Verificar y almacenar el permiso de eliminar cliente\r\n        if (localStorage.getItem(\"resultEliminarClienteView\") === null) {\r\n          const resultEliminarClienteView = await isPermiso(\r\n            usuario.token,\r\n            \"18\",\r\n            usuario.id_usuario\r\n          );\r\n          setIsPermisoEliminarCliente(resultEliminarClienteView);\r\n          localStorage.setItem(\"resultEliminarClienteView\", resultEliminarClienteView);\r\n        } else {\r\n          setIsPermisoEliminarCliente(Boolean(localStorage.getItem(\"resultEliminarClienteView\")));\r\n        }\r\n    \r\n        // Verificar y almacenar el permiso de modificar cliente\r\n        if (localStorage.getItem(\"resultModificarClienteView\") === null) {\r\n          const resultModificarClienteView = await isPermiso(\r\n            usuario.token,\r\n            \"17\",\r\n            usuario.id_usuario\r\n          );\r\n          setIsPermisoModificarCliente(resultModificarClienteView);\r\n          localStorage.setItem(\"resultModificarClienteView\", resultModificarClienteView);\r\n        } else {\r\n          setIsPermisoModificarCliente(Boolean(localStorage.getItem(\"resultModificarClienteView\")));\r\n        }\r\n      }\r\n    };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [entradasByProveedor, setEntradasByProveedor] = useState<\r\n    EntradaShowModal[]\r\n  >([]);\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Cliente[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItems, setDropDownItems] = useState<TiendaPiker[]>([]);\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreClienteSearch, setNombreClienteSearch] = useState(\"\");\r\n  const [cifSearch, setCifSearch] = useState(\"\");\r\n  const [telefonoSearch, setTelefonoSearch] = useState(\"\");\r\n  const [detallesBancariosSearch, setDetallesBancariosSearch] = useState(\"\");\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getDatesTiendaPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItems([{ label: \"Tiendas\", value: \"\" }, ...tiendasMapeados]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setNombreClienteDetails(\"\");\r\n    setCfiClienteDetails(\"\");\r\n    setNotaClienteDetails(\"\");\r\n    setTelefonoClienteDetails(\"\");\r\n    setDescripcionClienteDetails(\"\");\r\n    setCorreoEmailClienteDetails(\"\");\r\n    setDetallesBancariosProveedorDetils(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: false,\r\n      isModificarProveedor: false,\r\n      fileEditable: true,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n  };\r\n  const cargarDetailsOfCliente = async () => {\r\n    if (usuario?.token && modalProveedoresDates?.id_proveedor) {\r\n      const result = await getClienteById(\r\n        usuario.token,\r\n        modalProveedoresDates.id_proveedor\r\n      );\r\n      if (result) {\r\n        setIdClienteDetails(modalProveedoresDates.id_proveedor);\r\n        setNombreClienteDetails(result.nombre);\r\n        setCorreoEmailClienteDetails(result.email || \"\");\r\n        setDescripcionClienteDetails(result.descripcion || \"\");\r\n        setTelefonoClienteDetails(result.telefono || \"\");\r\n        setNotaClienteDetails(result.nota || \"\");\r\n        setCfiClienteDetails(result.Cif || \"\");\r\n        setDetallesBancariosProveedorDetils(result.detalles_bancarios || \"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<Cliente[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarCliente(\r\n          usuario.token,\r\n          nombreClienteSearch,\r\n          telefonoSearch,\r\n          cifSearch,\r\n          detallesBancariosSearch\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Cliente[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Proveedor: element.id_proveedor,\r\n              nombre: element.nombre,\r\n              correo: element.email || \"\",\r\n              direccion: element.direccion || \"\",\r\n              telefono: element.telefono || \"\",\r\n              nota: element.nota || \"\",\r\n              cif: element.Cif || \"\",\r\n              detalle_bancario: element.detalles_bancarios || \"\",\r\n              descripcion: element.descripcion || \"\",\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    filtrarYOrdenarClientes();\r\n  }, [selectedOptionTipoOrden, sortClientes]);\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfCliente();\r\n  }, [modalProveedoresDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosClientes = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllClientes(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const clientesMapeados: Cliente[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Cliente: element.id_cliente, // Mapea 'id_proovedor' a 'id_Proveedor'\r\n                nombre: element.nombre, // Mapea 'nombre' directamente\r\n                correo: element.email || \"\", // Asume que hay un campo 'correo' o usa un valor por defecto\r\n                detalle_bancario: element.detalles_bancarios || \"\", // Asume que hay un campo 'detalle_bancario' o usa un valor por defecto\r\n                telefono: element.telefono || \"\", // Mapea un teléfono o usa un valor por defecto\r\n                nota: element.nota || \"\",\r\n                cif: element.Cif || \"\",\r\n                descripcion: element.descripcion || \"\",\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(clientesMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron proveedoress.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener los proveedores o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de los proveedores\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de los proovedores\"\r\n      );\r\n    }\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarClientes();\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosClientes();\r\n        getDatesTiendaPiker();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarClientes = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let productosFiltrados: Cliente[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortClientes?.criterioOrden && sortClientes.tipoOrden) {\r\n          productosFiltrados = await ordenarClientes(\r\n            usuario.token,\r\n            productosFiltrados,\r\n            sortClientes.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(productosFiltrados);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setNombreClienteDetails(\"\");\r\n    setCorreoEmailClienteDetails(\"\");\r\n    setDescripcionClienteDetails(\"\");\r\n    setTelefonoClienteDetails(\"\");\r\n    setNotaClienteDetails(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: true,\r\n      fileEditable: true,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreClienteSearch(\"\");\r\n    setCifSearch(\"\");\r\n    setDetallesBancariosSearch(\"\");\r\n    setTelefonoSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewCliente = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando cliente. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL AGREGAR CLIENTE. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (nombreClienteDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombre del cliente no puede ser vacío\";\r\n        flag = false;\r\n      }\r\n\r\n      if (flag) {\r\n        await addCliente(\r\n          usuario.token,\r\n          nombreClienteDetails,\r\n          correoEmailClienteDetails,\r\n          telefonoClienteDetails,\r\n          descripcionClienteDetails,\r\n          notaClienteDetails,\r\n          cfiClienteDetails,\r\n          detallesBancariosClienteDetils\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó al sistema al cliente ${nombreClienteDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          8\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(\r\n          `El Cliente \"${nombreClienteDetails}\" fue insertado con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreClienteDetails(\"\");\r\n        setTelefonoClienteDetails(\"\");\r\n        setCorreoEmailClienteDetails(\"\");\r\n        setDescripcionClienteDetails(\"\");\r\n        setNotaClienteDetails(\"\");\r\n        setCfiClienteDetails(\"\");\r\n        setDetallesBancariosProveedorDetils(\"\");\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarProveedor = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando cliente. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR CLIENTE. Compruebe los siguientes campos:\\n\";\r\n\r\n      if (nombreClienteDetails.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-El nombre del cliente no puede ser vacío\";\r\n      }\r\n      if (parseInt(idClienteDetails) === 1) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No se puede modificar al cliente Anónimo ya que se usa en la lógica del software\";\r\n      }\r\n\r\n      if (flag) {\r\n        await actualizarCliente(\r\n          usuario.token,\r\n          idClienteDetails,\r\n          nombreClienteDetails,\r\n          correoEmailClienteDetails,\r\n          telefonoClienteDetails,\r\n          descripcionClienteDetails,\r\n          notaClienteDetails,\r\n          cfiClienteDetails,\r\n          detallesBancariosClienteDetils\r\n        );\r\n        // Agregar Acción de usuario modificar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó al cliente ${nombreClienteDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          8\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(\r\n          `El Cliente \"${nombreClienteDetails}\" se modificó con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para eliminar proveedor\r\n  const eliminarProveedor = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando cliente. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL TRATAR DE ELIMINAR EL CLIENTE. Motivos:\\n\";\r\n\r\n      if (parseInt(idClienteDetails) === 1) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No se puede eliminar al cliente Anónimo ya que se usa en la lógica del software\";\r\n      }\r\n\r\n      if (flag) {\r\n        const resulDeletProveedor = await deleteCliente(\r\n          usuario.token,\r\n          idClienteDetails\r\n        );\r\n        if (resulDeletProveedor) {\r\n          // Agregar Acción de usuario agregar proveedor\r\n\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó al cliente ${nombreClienteDetails}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            8\r\n          );\r\n\r\n          setIsBotonModalMesajeVisible(true);\r\n          setModalMensaje(\r\n            `El Cliente \"${nombreClienteDetails}\" se eliminó con éxito`\r\n          );\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(true);\r\n        } else {\r\n          setIsBotonModalMesajeVisible(true);\r\n          validarCampos +=\r\n            \"-Ya se han echo operaciones en el sistema con este cliente.\\n\";\r\n          setModalMensaje(validarCampos);\r\n          setModalMensajeView(true);\r\n        }\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre\",\r\n    \"CIF / CI\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n  const columnasMyDateTableEntradaModal = [\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Costo\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"CIF / CI\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"telefono\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarCliente && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Cliente</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableClientes\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Nombre del Cliente:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del cliente\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={nombreClienteSearch}\r\n                    onChangeText={setNombreClienteSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    CIF / Carnet Identidad:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"CIF / Carnet Identidad\"\r\n                    value={cifSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setCifSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Detalles Bancarios:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Detalles Bancarios\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={detallesBancariosSearch}\r\n                    onChangeText={setDetallesBancariosSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Número de Teléfono:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Número de Teléfono\"\r\n                    value={telefonoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setTelefonoSearch}\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarClientes();\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Proveedor\"\r\n                  : \"Agregar Proveedor\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  value={nombreClienteDetails}\r\n                  onChangeText={setNombreClienteDetails}\r\n                  placeholder=\"Nombre del cliente\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y CIF */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoClienteDetails}\r\n                      onChangeText={setTelefonoClienteDetails}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CIF */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Código de Identificación Fiscal (CIF)\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={cfiClienteDetails}\r\n                      onChangeText={setCfiClienteDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Código de Identificación Fiscal\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailClienteDetails}\r\n                      onChangeText={setCorreoEmailClienteDetails}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosClienteDetils}\r\n                      onChangeText={setDetallesBancariosProveedorDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  value={notaClienteDetails}\r\n                  onChangeText={setNotaClienteDetails}\r\n                  placeholder=\"Nota\"\r\n                />\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del cliente\"\r\n                  multiline={true}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  numberOfLines={5}\r\n                  value={descripcionClienteDetails}\r\n                  onChangeText={setDescripcionClienteDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarCliente &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos cliente ${nombreClienteDetails}?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarCliente &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al cliente ${nombreClienteDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarCliente &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewCliente()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarProveedor()\r\n                      : modificarProveedor()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Clientes\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {(isPermisoAgregarCliente ||\r\n            isPermisoModificarCliente ||\r\n            isPermisoEliminarCliente) && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Cliente\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Cliente:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del Cliente\"\r\n              value={nombreClienteSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreClienteSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              CIF / Carnet Identidad:\r\n            </Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"CIF / Carnet Identidad\"\r\n              value={cifSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setCifSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Detalles Bancarios:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Detalles Bancarios\"\r\n              value={detallesBancariosSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setDetallesBancariosSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Número de Teléfono:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Número de Teléfono\"\r\n              value={telefonoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setTelefonoSearch}\r\n            />\r\n\r\n            <View\r\n              style={{ width: \"100%\", flexDirection: \"row\", marginTop: \"5%\" }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarClientes()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableClientes\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Cliente\"\r\n                  : \"Agregar Cliente\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  value={nombreClienteDetails}\r\n                  onChangeText={setNombreClienteDetails}\r\n                  placeholder=\"Nombre del cliente\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y CIF */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoClienteDetails}\r\n                      onChangeText={setTelefonoClienteDetails}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CIF */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Código de Identificación Fiscal (CIF)\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={cfiClienteDetails}\r\n                      onChangeText={setCfiClienteDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Código de Identificación Fiscal\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailClienteDetails}\r\n                      onChangeText={setCorreoEmailClienteDetails}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosClienteDetils}\r\n                      onChangeText={setDetallesBancariosProveedorDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  value={notaClienteDetails}\r\n                  onChangeText={setNotaClienteDetails}\r\n                  placeholder=\"Nota\"\r\n                />\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del cliente\"\r\n                  multiline={true}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  numberOfLines={5}\r\n                  value={descripcionClienteDetails}\r\n                  onChangeText={setDescripcionClienteDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarCliente &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos cliente ${nombreClienteDetails}?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarCliente &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al cliente ${nombreClienteDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarCliente &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewCliente()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarProveedor()\r\n                      : modificarProveedor()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Clientes\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { TiendaShowModal } from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport interface Garantia {\r\n  id_Servicio: string;\r\n  id_Cliente: string;\r\n  id_Tienda: string;\r\n  id_Tipo_servicio: string;\r\n  id_Deuda: string;\r\n  id_Garantia: string;\r\n  fecha: string;\r\n  precio: string;\r\n  nota: string;\r\n  descripcion: string;\r\n  nombreCliente: string;\r\n  nombreTienda: string;\r\n  nombreTipoServicio: string;\r\n  nombreProducto?: string;\r\n  cantidad?: string;\r\n  devuelto: boolean;\r\n  duracion: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Garantia[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableGarantias: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Garantia[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    const obtenerCambioPrecio = async () => {\r\n      if (usuario?.token) {\r\n        // Obtener alro de oneda de cambio\r\n        setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n      }\r\n    };\r\n\r\n    obtenerCambioPrecio();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Este métodod devuelve el mensaje el fodo de la tabla con los parámetros requeridos\r\n  const mensajeOfEndTable = () => {\r\n    let mensaje = \"Suma de precios de servicios minoristas filtrados:   \";\r\n    let sumaMinoristaUSD = 0;\r\n    let sumaMayoristaUSD = 0;\r\n\r\n    items.forEach((item) => {\r\n      if (!item.devuelto) {\r\n        if (parseInt(item.id_Tipo_servicio) === 25) {\r\n          sumaMayoristaUSD +=\r\n            parseFloat(item.precio) *\r\n            (item.cantidad ? parseInt(item.cantidad ?? \"0\") : 0);\r\n        } else {\r\n          sumaMinoristaUSD +=\r\n            parseFloat(item.precio) *\r\n            (item.cantidad ? parseInt(item.cantidad ?? \"0\") : 0);\r\n        }\r\n      }\r\n    });\r\n\r\n    mensaje += `USD: ${sumaMinoristaUSD.toFixed(4)}   CUP: ${(\r\n      sumaMinoristaUSD * cambioMoneda\r\n    ).toFixed(\r\n      0\r\n    )}      Suma de precios de servicios mayoristas filtrados:  CUP: ${(\r\n      sumaMayoristaUSD * cambioMoneda\r\n    ).toFixed(0)} `;\r\n    return String(mensaje);\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Fecha\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Cliente\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Precio\") {\r\n      aux = \"option5\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortServicios({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Cliente\" ||\r\n                column === \"Precio\" ||\r\n                column === \"Fecha\") && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Suave,\r\n                    marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                    width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                    height: 24, // Asegúrate de que tenga tamaño consistente\r\n                    justifyContent: \"center\", // Centrar contenido del botón\r\n                    alignItems: \"center\", // Centrar contenido del botón\r\n                    borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                    marginBottom: 4, // Elevar el botón del borde inferior\r\n                    paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                  }}\r\n                  onPress={() => sortEntradasAux(column)}\r\n                >\r\n                  <Image\r\n                    source={require(\"../images/ordenar.png\")}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </TouchableOpacity>\r\n              )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Cliente !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Garantia}\r\n                onPress={() => detailsModalView(item.id_Garantia)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Precio USD */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.duracion}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >{parseFloat(item.precio).toFixed(4)}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(parseFloat(item.precio) * cambioMoneda).toFixed(0)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Cantidad Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.cantidad ? item.cantidad : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Servicios\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Garantia}\r\n                onPress={() => detailsModalView(item.id_Garantia)}\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Duaración Garantia */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.duracion}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio USD */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {parseFloat(item.precio).toFixed(4)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(parseFloat(item.precio) * cambioMoneda).toFixed(0)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Cantidad Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.cantidad ? item.cantidad : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getCantidadProductoInTiendaEspecifica,\r\n  isProductoInTienda,\r\n  tienda_Realizarventa,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getAllEntradasByProductoId,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n  getProductoById,\r\n  getProductoCantidadTotal,\r\n  updateProductoTienda,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  addServicio,\r\n  deleteServicio,\r\n  filtrarSrvicio,\r\n  getAllServicios,\r\n  getServicioByID,\r\n  modificarServicio,\r\n  ordenarServicios,\r\n} from \"../services/ServiciosServices\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport { getAllTipoServicios } from \"../services/TipoServiciosServices\";\r\nimport { getAllClientes } from \"../services/clienteServices\";\r\nimport {\r\n  addVenta,\r\n  deleteVenta,\r\n  getAllVentas,\r\n  getVentaByIDOfServicio,\r\n} from \"../services/ventasServices\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\nimport {\r\n  Garantia,\r\n  MyDateTableGarantias,\r\n} from \"../components/MyDateTableGarantias\";\r\nimport {\r\n  deleteGarantia,\r\n  filtrarGarantia,\r\n  getAllGarantias,\r\n  getGarantiaByID,\r\n  modificarGarantia,\r\n} from \"../services/GarantiaServices\";\r\n\r\nexport default function GarantiasView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n  const [\r\n    capaPrioridadTipoServicioDetails,\r\n    setCapaPrioridadTipoServicioDetails,\r\n  ] = useState(1000);\r\n  const [capaPrioridadProductoDetails, setCapaPrioridadProductoDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadClienteDetails, setCapaPrioridadClienteDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTipoServicioSearsh, setCapaPrioridadTipoServicioSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendaSearsh, setCapaPrioridadTiendaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"TipoServicioDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ProductoDetails\") {\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(2000);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ClienteDetails\") {\r\n      setCapaPrioridadClienteDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"TipoServicioSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(2000);\r\n    } else if (prioridad === \"TiendaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(2000);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n\r\n  const [idFirstTimeProducto, setIdFirsTimeProducto] = useState(\"\");\r\n  const [auxOptimizacion, setAuxOptimizacion] = useState(false);\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idServicioDetails, setIdServicioDetails] = useState(\"\");\r\n  const [idGarantiaDetails, setIdGarantiaDetaisl] = useState(\"\");\r\n  const [idClienteDetails, setIdClienteDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [idTipoServicioDetails, setIdTipoServicioDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [cantidadProductoDetails, setCantidadProductoDetails] = useState(\"1\");\r\n  const [costoPromedioProductoCUPDetails, setCostoPromedioProductoCUPDetails] =\r\n    useState(\"0\");\r\n  const [costoPromedioProductoUSDDetails, setCostoPromedioProductoUSDDetails] =\r\n    useState(\"0\");\r\n  const [precioUSDDetails, setPrecioUSDDetails] = useState(\"\");\r\n  const [devueltoDetails, setDevueltoDetails] = useState(\"sin Devolver\");\r\n  const [precioCUPDetails, setPrecioCUPDetails] = useState(\"\");\r\n  const [notaDetails, setNotaDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n  const [duracionGarantiaDetails, setDuracionGarantiaDetails] = useState(\"\");\r\n\r\n  // Variable auxiliar para el redondeo de memerio\r\n  const [auxRedondeo, setAuxRedondeo] = useState(\"\");\r\n\r\n  // Variables axiliares para lavalidación de campos\r\n  const [idTiendaDetailsViejo, setIdTiendaDetailsViejo] = useState(\"\");\r\n  const [idProductoDetailsViejo, setIdProductoDetailsViejo] = useState(\"\");\r\n  const [cantidadProductoDetailsViejo, setCantidadProductoDetailsViejo] =\r\n    useState(\"\");\r\n  const [idTipoServicioDetailsViejo, setIdTipoServicioDetailsViejo] =\r\n    useState(\"\");\r\n  const [devueltoDetailsViejo, setDevueltoDetailsViejo] =\r\n    useState(\"sin Devolver\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  // Variable que controla si se está haciendo una venta o se hizo una venta\r\n  const [isVentaProducto, setIsVentaProducto] = useState(false);\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoModificarGarantia, setIsPermisoModificarGarantia] =\r\n    React.useState(false);\r\n\r\n  const [isPermisoVerCostoVenta, setIsPermisoVerCostoVenta] = useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultModificarGarantia = await isPermiso(\r\n        usuario.token,\r\n        \"33\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      // cargar cambio de moneda\r\n      setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n\r\n      setIsPermisoModificarGarantia(resultModificarGarantia);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Garantia[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreCliente, setDropDownItemsNombreCliente] = useState<\r\n    ProveedorPiker[]\r\n  >([]);\r\n  const [nombreProductoVentaDetails, setNombreProductoVentaDetails] =\r\n    useState(String);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreTipoServicio, setDropDownItemsNombreTipoServicio] =\r\n    useState<ProductoPiker[]>([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreClienteSearch, setNombreClienteSearch] = useState(\"\");\r\n  const [nombreProductoSearsh, setNombreProductoSearch] = useState(\"\");\r\n  const [idTipoServicioSearch, setIdTipoServicioSearch] = useState(\"\");\r\n  const [idTiendaSearch, setIdTiendaSearch] = useState(\"\");\r\n  const [rangoPrecioDesdeSearch, setRangoPrecioDesdeSearch] = useState(\"\");\r\n  const [rangoPrecioHastaSearch, setRangoPrecioHastaSearch] = useState(\"\");\r\n  const [rangoDuracionDesdeSearch, setRangoDuracionDesdeSearch] = useState(\"\");\r\n  const [rangoDuracionHastaSearch, setRangoDuracionHastaSearch] = useState(\"\");\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2024\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n\r\n  const options = [\r\n    { label: \"Día\", value: \"dia\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n    { label: \"Mes\", value: \"mes\" },\r\n  ];\r\n\r\n  const optionsDevueltoDetails = [\r\n    { label: \"Devolver\", value: \"devolver\" },\r\n    { label: \"Sin Devolver\", value: \"sin devolver\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"dia\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 6);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else if (value === \"mes\") {\r\n      // Restar 1 mes a la fecha actual\r\n      const lastMonthDate = new Date(currentDate);\r\n      lastMonthDate.setMonth(currentDate.getMonth() - 1);\r\n      const monthYear = String(lastMonthDate.getFullYear());\r\n      const monthMonth = String(lastMonthDate.getMonth() + 1).padStart(2, \"0\");\r\n      const monthDay = String(lastMonthDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${monthYear}-${monthMonth}-${monthDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarGarantias(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getTipoServicioPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTipoServicios(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const tipoServiciosMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tipo_servicio,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTipoServicio([\r\n          { label: \"Todos los tipos de servicios\", value: \"\" },\r\n          ...tipoServiciosMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getClientesPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllClientes(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const ClientesMapeados: ProductoPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_cliente,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreCliente(ClientesMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Todas las tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setIdTipoServicioDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  // Cargar todos los datos de el servicio pro primera ves que se abre el servicio\r\n  const cargarDetailsOfGarantia = async () => {\r\n    setAuxOptimizacion(false);\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getGarantiaByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.servicio.fecha\r\n          .split(\"T\")[0]\r\n          .split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdServicioDetails(result.servicio.id_servicio);\r\n        setIdGarantiaDetaisl(result.id_garantia);\r\n        setIdClienteDetails(result.servicio.cliente.id_cliente);\r\n        setIdTipoServicioDetails(\r\n          result.servicio.tipo_servicio.id_tipo_servicio\r\n        );\r\n        setNotaDetails(result.servicio.nota);\r\n        setDescripcionDetails(result.servicio.descripcion);\r\n        setDevueltoDetails(\r\n          result.servicio.devuelto ? \"devolver\" : \"sin devolver\"\r\n        );\r\n        setDuracionGarantiaDetails(result.duracion);\r\n\r\n        // Actualizar variables para la validación de campos\r\n        setDevueltoDetailsViejo(\r\n          result.servicio.devuelto ? \"devolver\" : \"sin devolver\"\r\n        );\r\n        // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n        if (\r\n          parseInt(result.servicio.tipo_servicio.id_tipo_servicio) === 2 ||\r\n          parseInt(result.servicio.tipo_servicio.id_tipo_servicio) === 4 ||\r\n          parseInt(result.servicio.tipo_servicio.id_tipo_servicio) === 25\r\n        ) {\r\n          const resultventa = await getVentaByIDOfServicio(\r\n            usuario.token,\r\n            result.servicio.id_servicio\r\n          );\r\n          // Obtener entradas del produto para calcular datos del producto\r\n\r\n          // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n          if (resultventa) {\r\n            // Obtener entradas del produto para calcular datos del producto\r\n            const entradas = await getAllEntradasByProductoId(\r\n              usuario?.token,\r\n              resultventa.producto.id_producto\r\n            );\r\n            const cantidadTotalProducto = await getProductoCantidadTotal(\r\n              usuario.token,\r\n              resultventa.producto.id_producto\r\n            );\r\n\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setNombreProductoVentaDetails(resultventa.producto.nombre);\r\n            setIdProductoDetails(resultventa.producto.id_producto);\r\n            setCantidadProductoDetails(resultventa.cantidad);\r\n            setIdTiendaDetails(result.servicio.tienda.id_tienda);\r\n            setPrecioUSDDetails(result.servicio.precio);\r\n            setPrecioCUPDetails(\r\n              String(parseFloat(result.servicio.precio) * cambioMoneda)\r\n            );\r\n            setCostoPromedioProductoUSDDetails(result.producto.costo_acumulado);\r\n          } else {\r\n            // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setIdProductoDetails(\"\");\r\n            setCantidadProductoDetails(\"\");\r\n            setIdTiendaDetails(\"\");\r\n            setPrecioUSDDetails(\"\");\r\n            setPrecioCUPDetails(\"\");\r\n            setCostoPromedioProductoUSDDetails(\"\");\r\n          }\r\n        } else {\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(false);\r\n          setPrecioUSDDetails(result.servicio.precio);\r\n          setPrecioCUPDetails(\r\n            String(parseInt(result.servicio.precio) * cambioMoneda)\r\n          );\r\n          setCostoPromedioProductoUSDDetails(result.servicio.costo);\r\n        }\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares;\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n    setAuxOptimizacion(true);\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Garantia[] | null> => {\r\n    if (usuario?.token) {\r\n      // FALAT LA TIENDA EN EL FILTRADO\r\n      try {\r\n        const result = await filtrarGarantia(\r\n          usuario.token,\r\n          nombreClienteSearch,\r\n          rangoDuracionHastaSearch,\r\n          rangoDuracionDesdeSearch,\r\n          nombreProductoSearsh,\r\n          fechaDesde,\r\n          fechaHasta,\r\n          idTiendaSearch\r\n        );\r\n\r\n        if (result) {\r\n          const serviciosMapeados: Garantia[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Servicio: element.servicio.id_servicio,\r\n              id_Cliente: element.servicio.cliente.id_cliente,\r\n              id_Tienda: element.servicio.tienda.id_tienda,\r\n              id_Tipo_servicio: \"\",\r\n              id_Deuda: \"\",\r\n              id_Garantia: element.id_garantia,\r\n              fecha: element.servicio.fecha,\r\n              precio: element.servicio.precio,\r\n              nota: element.servicio.nota,\r\n              descripcion: element.servicio.descripcion,\r\n              nombreCliente: element.servicio.cliente.nombre,\r\n              nombreTienda: element.servicio.tienda.nombre,\r\n              nombreTipoServicio: \"\",\r\n              nombreProducto: element.servicio.venta\r\n                ? element.servicio.venta.producto.nombre\r\n                : \"\", // Verifica si 'venta' no es null\r\n              cantidad: element.servicio.venta\r\n                ? element.servicio.venta.cantidad\r\n                : \"\", // Verifica si 'venta' no es null\r\n              devuelto: element.servicio.devuelto,\r\n              duracion: element.duracion,\r\n            }))\r\n          );\r\n          return serviciosMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Cargar datos del servicio cuando se seleccionado en la tabla\r\n  useEffect(() => {\r\n    cargarDetailsOfGarantia();\r\n  }, [modalEntradasDates]);\r\n\r\n  useEffect(() => {\r\n    if (auxRedondeo === \"PrecioCUP\") {\r\n      setPrecioUSDDetails(parseFloat(precioUSDDetails).toFixed(4));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"PrecioUSD\") {\r\n      setPrecioCUPDetails(parseFloat(precioCUPDetails).toFixed(0));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoCUP\") {\r\n      setCostoPromedioProductoUSDDetails(\r\n        parseFloat(costoPromedioProductoUSDDetails).toFixed(4)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoUSD\") {\r\n      setCostoPromedioProductoCUPDetails(\r\n        parseFloat(costoPromedioProductoCUPDetails).toFixed(0)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    }\r\n    setAuxRedondeo(\"\");\r\n  }, [auxRedondeo]);\r\n\r\n  useEffect(() => {\r\n    if (auxOptimizacion) {\r\n      if (\r\n        idProductoDetails !== \"\" &&\r\n        idProductoDetails !== idFirstTimeProducto &&\r\n        usuario?.token\r\n      ) {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n        const auxiliarAsyncFuncion = async () => {\r\n          const resultProdcuto = await getProductoById(\r\n            usuario.token,\r\n            idProductoDetails\r\n          );\r\n\r\n          // Cargar el costo promedio del producto seleccionado\r\n          setCostoPromedioProductoUSDDetails(resultProdcuto.costo_acumulado);\r\n          // Cargar precio del producto seleccioando en USD y CUP\r\n          setPrecioUSDDetails(resultProdcuto.precio ?? 0);\r\n          setPrecioCUPDetails(\r\n            String(parseFloat(resultProdcuto.precio) * cambioMoneda) ?? 0\r\n          );\r\n        };\r\n        auxiliarAsyncFuncion();\r\n      } else {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n      }\r\n    }\r\n  }, [idProductoDetails]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        setAuxOptimizacion(false);\r\n        await checkPermiso();\r\n        await getTipoServicioPikerDetails();\r\n        await getClientesPikerDetails();\r\n        await getTiendasPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarGarantias = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let serviciosFiltradas: Garantia[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortServicios?.criterioOrden && sortServicios.tipoOrden) {\r\n          serviciosFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            serviciosFiltradas,\r\n            sortServicios.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        } else {\r\n          serviciosFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            serviciosFiltradas,\r\n            \"option3\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(serviciosFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarGarantias(\r\n      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n    );\r\n  }, [sortServicios, selectedOptionTipoOrden]);\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    setSelecterActivoDetails(\"\");\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ]);\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setIdTiendaDetails(usuario?.id_tienda);\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setPrecioCUPDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setCostoPromedioProductoUSDDetails(\"\");\r\n    setIdTipoServicioDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setNotaDetails(\"\");\r\n    setDescripcionDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Extraemos el año, mes y día de la fecha actual\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    setFechaDiaDetails(String(parseInt(day)));\r\n    setFechaMesDetails(String(parseInt(month)));\r\n    setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarGarantias(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreClienteSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n    setIdTiendaSearch(\"\");\r\n    setIdTipoServicioSearch(\"\");\r\n    setRangoPrecioDesdeSearch(\"\");\r\n    setRangoPrecioHastaSearch(\"\");\r\n    setSelecterActivoDetails(\"\");\r\n  };\r\n\r\n  // Método para actualizar los datos de un producto\r\n  const modificarGarantiaFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando garantía. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR EL GARANTÍA. Compruebe los siguientes campos:\\n\";\r\n      if (duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (flag) {\r\n        await modificarGarantia(\r\n          usuario.token,\r\n          duracionGarantiaDetails,\r\n          idServicioDetails,\r\n          idGarantiaDetails\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La garantía se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarGarantiaFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando servicio. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR SERVICIO. Compruebe los siguientes parámetros:\\n\";\r\n\r\n      if (flag) {\r\n        await deleteGarantia(usuario.token, idGarantiaDetails);\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La garantía se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setDuracionGarantiaDetails(\"\");\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setPrecioCUPDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setCostoPromedioProductoUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setNotaDetails(\"\");\r\n        setDescripcionDetails(\"\");\r\n\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Cliente\",\r\n    \"Tienda\",\r\n    \"Duración\",\r\n    \"USD\",\r\n    \"CUP\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Cliente\",\r\n    \"Tienda\",\r\n    \"Duración\",\r\n    \"USD\",\r\n    \"CUP\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableGarantias\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearsh}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Cliente:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del cliente\"\r\n                    value={nombreClienteSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreClienteSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadTiendaSearsh,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={idTiendaSearch}\r\n                      placeholder=\"Seleccione un tienda\"\r\n                      setValue={setIdTiendaSearch}\r\n                      items={dropdownItemsNombreTienda}\r\n                      direction=\"BOTTOM\"\r\n                      onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Rango de Duración en Dias\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={rangoDuracionDesdeSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoDuracionDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={rangoDuracionHastaSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoDuracionHastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaDesdeSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaHastaSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() =>\r\n                          filtrarYOrdenarGarantias(\r\n                            `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                            `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                          )\r\n                        }\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Servicio\"\r\n                  : \"Datos del Servicio\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.textLabelAsInput}>\r\n                    {dropdownItemsNombreCliente.find(\r\n                      (element) => element.value === idClienteDetails\r\n                    )?.label || \"Cliente no encontrado\"}\r\n                  </Text>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTienda.find(\r\n                        (element) => element.value === idTiendaDetails\r\n                      )?.label || \"Tienda no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTipoServicio.find(\r\n                        (element) => element.value === idTipoServicioDetails\r\n                      )?.label || \"Tipo de Servicio no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Garantías */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 100,\r\n                    }}\r\n                  >\r\n                    <View style={{ marginTop: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Duración en días:\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={duracionGarantiaDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          setDuracionGarantiaDetails(numericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={isPermisoModificarGarantia}\r\n                        placeholder=\"Duracion En días\"\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  {/*  */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {nombreProductoVentaDetails}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {cantidadProductoDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en USD\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {precioUSDDetails}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {parseFloat(precioUSDDetails) * cambioMoneda}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Campo fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    marginLeft: \"2%\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                  {isDateLoaded && (\r\n                    <MyDateInput\r\n                      dayValue={fechaDiaDetails}\r\n                      monthValue={fechaMesDetails}\r\n                      yearValue={fechaAnnoDetails}\r\n                      onDayChange={setFechaDiaDetails}\r\n                      onMonthChange={setFechaMesDetails}\r\n                      onYearChange={setFechaAnnoDetails}\r\n                      style={{ margin: 20 }}\r\n                      styleText={styles.labelTextModalDesktop}\r\n                      onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                      isReadOnly={!false}\r\n                    />\r\n                  )}\r\n                </View>\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginLeft: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <Text style={styles.textLabelAsInput}>{notaDetails}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <Text style={styles.textDescroptionLabelAsInput}>\r\n                  {descripcionDetails}\r\n                </Text>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarGarantia &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"35%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta garantía?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Garantía\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Botón para eliminar proveedor */}\r\n                  {isPermisoModificarGarantia &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"35%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR esta garantía?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Garantía\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => isModalChekEliminarEntrada\r\n                    ? eliminarGarantiaFunction()\r\n                    : modificarGarantiaFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Garantías\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearsh}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Cliente:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del cliente\"\r\n              value={nombreClienteSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreClienteSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n            <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                zIndex: capaPrioridadTiendaSearsh,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={idTiendaSearch}\r\n                placeholder=\"Seleccione un tienda\"\r\n                setValue={setIdTiendaSearch}\r\n                items={dropdownItemsNombreTienda}\r\n                direction=\"BOTTOM\"\r\n                onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              Rango de Duración en Dias\r\n            </Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={rangoDuracionDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoDuracionDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={rangoDuracionHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoDuracionHastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() =>\r\n                    filtrarYOrdenarGarantias(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    )\r\n                  }\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableGarantias\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Garantía\"\r\n                  : \"Datos del Garantía\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.textLabelAsInput}>\r\n                    {dropdownItemsNombreCliente.find(\r\n                      (element) => element.value === idClienteDetails\r\n                    )?.label || \"Cliente no encontrado\"}\r\n                  </Text>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTienda.find(\r\n                        (element) => element.value === idTiendaDetails\r\n                      )?.label || \"Tienda no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTipoServicio.find(\r\n                        (element) => element.value === idTipoServicioDetails\r\n                      )?.label || \"Tipo de Servicio no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Garantías */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 100,\r\n                    }}\r\n                  >\r\n                    <View style={{ marginTop: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Duración en días:\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={duracionGarantiaDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          setDuracionGarantiaDetails(numericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={isPermisoModificarGarantia}\r\n                        placeholder=\"Duracion En días\"\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  {/*  */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {nombreProductoVentaDetails}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {cantidadProductoDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en USD\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {precioUSDDetails}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {parseFloat(precioUSDDetails) * cambioMoneda}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={!false}\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"3%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <Text style={styles.textLabelAsInput}>{notaDetails}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <Text style={styles.textDescroptionLabelAsInput}>\r\n                  {descripcionDetails}\r\n                </Text>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarGarantia &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta garantía?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Garantía\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoModificarGarantia &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR esta garantía?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Garantía\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarGarantiaFunction()\r\n                      : modificarGarantiaFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Garantías\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { TiendaShowModal } from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport interface Deuda {\r\n  id_Servicio: string;\r\n  id_Cliente: string;\r\n  id_Tienda: string;\r\n  id_Tipo_servicio: string;\r\n  id_Deuda: string;\r\n  id_Garantia: string;\r\n  fecha: string;\r\n  precio: string;\r\n  nota: string;\r\n  descripcion: string;\r\n  nombreCliente: string;\r\n  nombreTienda: string;\r\n  nombreTipoServicio: string;\r\n  nombreProducto?: string;\r\n  cantidad?: string;\r\n  devuelto: boolean;\r\n  deuda: string;\r\n  pagos_deuda: any[];\r\n  total_pagado: number;\r\n  cantidad_restante: number;\r\n}\r\n\r\ninterface Props {\r\n  items: Deuda[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableDeudas: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Deuda[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    const obtenerCambioPrecio = async () => {\r\n      if (usuario?.token) {\r\n        // Obtener alro de oneda de cambio\r\n        setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n      }\r\n    };\r\n\r\n    obtenerCambioPrecio();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Metodo para calcular si la deuda está saldada o no\r\n  const isDeudaSaldadaFromTable = (pago_deudas: any[], deuda: string) => {\r\n    let suma: number = 0.0;\r\n    if (pago_deudas) {\r\n      pago_deudas.forEach((pago) => {\r\n        suma += parseFloat(pago.pagada);\r\n      });\r\n      if (parseFloat(deuda) === suma) {\r\n        return (\r\n          <Image\r\n            source={require(\"../images/aprobado.png\")}\r\n            style={{ width: 20, height: 20 }}\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <Image\r\n            source={require(\"../images/candelado.png\")}\r\n            style={{ width: 20, height: 20 }}\r\n          />\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <Image\r\n          source={require(\"../images/candelado.png\")}\r\n          style={{ width: 20, height: 20 }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Fecha\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Cliente\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Precio\") {\r\n      aux = \"option5\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortServicios({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {column === \"Fecha\" && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Suave,\r\n                    marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                    width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                    height: 24, // Asegúrate de que tenga tamaño consistente\r\n                    justifyContent: \"center\", // Centrar contenido del botón\r\n                    alignItems: \"center\", // Centrar contenido del botón\r\n                    borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                    marginBottom: 4, // Elevar el botón del borde inferior\r\n                    paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                  }}\r\n                  onPress={() => sortEntradasAux(column)}\r\n                >\r\n                  <Image\r\n                    source={require(\"../images/ordenar.png\")}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </TouchableOpacity>\r\n              )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Cliente !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Deuda}\r\n                onPress={() => detailsModalView(item.id_Deuda)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(\r\n                      parseFloat(item.precio) *\r\n                      parseInt(item.cantidad) *\r\n                      cambioMoneda\r\n                    ).toFixed(0)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Deuda*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{(item.total_pagado * cambioMoneda).toFixed(0)}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Deuda*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>\r\n                    {(\r\n                      parseFloat(item.precio) *\r\n                        parseInt(item.cantidad) *\r\n                        cambioMoneda -\r\n                      item.total_pagado * cambioMoneda\r\n                    ).toFixed(0)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Saldada*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>\r\n                    {isDeudaSaldadaFromTable(item.pagos_deuda, item.deuda)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Servicios\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Deuda}\r\n                onPress={() => detailsModalView(item.id_Deuda)}\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(\r\n                      parseFloat(item.precio) *\r\n                      parseInt(item.cantidad) *\r\n                      cambioMoneda\r\n                    ).toFixed(0)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Deuda*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{(item.total_pagado * cambioMoneda).toFixed(0)}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Deuda*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>\r\n                    {(\r\n                      parseFloat(item.precio) *\r\n                        parseInt(item.cantidad) *\r\n                        cambioMoneda -\r\n                      item.total_pagado * cambioMoneda\r\n                    ).toFixed(0)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Saldada*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>\r\n                    {isDeudaSaldadaFromTable(item.pagos_deuda, item.deuda)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  Animated,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useFocusEffect } from \"@react-navigation/native\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\n\r\nexport interface PagoDeudaShowModal {\r\n  id_pago_deuda: string;\r\n  pagada: string;\r\n  fecha: string;\r\n}\r\n\r\ninterface Props {\r\n  items: PagoDeudaShowModal[];\r\n  columns: string[];\r\n  onButtonPress: (item: PagoDeudaShowModal) => void;\r\n}\r\n\r\nexport const MyDateTablePagoDeudaWithButton: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  onButtonPress,\r\n}) => {\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\nconst { usuario, setUsuario } = useUsuario();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(5);\r\n  const [displayedItems, setDisplayedItems] = React.useState<PagoDeudaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n    setDisplayedItems(items.slice(from, to));\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  useFocusEffect(\r\n      React.useCallback(() => {\r\n        const runEffects = async () => {\r\n          // cargar cambio de moneda\r\n          setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n        };\r\n        runEffects();\r\n  \r\n        return () => {\r\n          // Código que se ejecuta cuando se cierra la interfaz\r\n        };\r\n      }, [])\r\n    );\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage);\r\n    }\r\n  };\r\n\r\n  const showTableColumns = () => (\r\n    <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n      {columns.map((column, index) => (\r\n        <DataTable.Title\r\n          key={index}\r\n          style={[styles.headerColumn, { flex: 1 }]}\r\n          numeric={index > 1}\r\n        >\r\n          <Text style={styles.headerTextDesktop}>{column}</Text>\r\n        </DataTable.Title>\r\n      ))}\r\n      <DataTable.Title style={styles.headerColumn}>\r\n        <Text style={styles.headerTextDesktop}>Acción</Text>\r\n      </DataTable.Title>\r\n    </DataTable.Header>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.containerDesktop}>\r\n      <DataTable style={{ width: \"100%\" }}>\r\n        {showTableColumns()}\r\n\r\n        {displayedItems.map((item) => (\r\n          <DataTable.Row key={item.id_pago_deuda}>\r\n            <DataTable.Cell numeric style={styles.handerRow}>\r\n              {(parseFloat(item.pagada) * cambioMoneda).toFixed(2)}\r\n            </DataTable.Cell>\r\n            <DataTable.Cell numeric style={styles.handerRow}>\r\n              <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n            </DataTable.Cell>\r\n            <DataTable.Cell style={styles.actionColumn}>\r\n              <TouchableOpacity\r\n                style={styles.actionButton}\r\n                onPress={() => onButtonPress(item)}\r\n              >\r\n                <Text style={styles.actionButtonText}>Eliminar</Text>\r\n              </TouchableOpacity>\r\n            </DataTable.Cell>\r\n          </DataTable.Row>\r\n        ))}\r\n\r\n        <View style={styles.paginationContainer}>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.paginationButtonMovil,\r\n              page === 0 && styles.disabledButton,\r\n            ]}\r\n            onPress={() => handleChangePage(page - 1)}\r\n            disabled={page === 0}\r\n          >\r\n            <Text style={styles.paginationLabel}>Anterior</Text>\r\n          </TouchableOpacity>\r\n\r\n          <Text style={styles.paginationLabel}>\r\n            {`${page * itemsPerPage + 1}-${Math.min(\r\n              (page + 1) * itemsPerPage,\r\n              items.length\r\n            )} of ${items.length}`}\r\n          </Text>\r\n\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.paginationButtonMovil,\r\n              (page + 1) * itemsPerPage >= items.length &&\r\n                styles.disabledButton,\r\n            ]}\r\n            onPress={() => handleChangePage(page + 1)}\r\n            disabled={(page + 1) * itemsPerPage >= items.length}\r\n          >\r\n            <Text style={styles.paginationLabel}>Próxima</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </DataTable>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    marginTop: \"2%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  actionColumn: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  actionButton: {\r\n    backgroundColor: Colors.rojo_oscuro,\r\n    borderRadius: 10,\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 10,\r\n  },\r\n  actionButtonText: {\r\n    color: Colors.blanco,\r\n    fontWeight: \"bold\",\r\n    fontSize: 14,\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getCantidadProductoInTiendaEspecifica,\r\n  isProductoInTienda,\r\n  tienda_Realizarventa,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getAllEntradasByProductoId,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n  getProductoById,\r\n  getProductoCantidadTotal,\r\n  getRelacionProductoByTienda,\r\n  updateProductoTienda,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  addServicio,\r\n  deleteServicio,\r\n  filtrarSrvicio,\r\n  getAllServicios,\r\n  getServicioByID,\r\n  modificarServicio,\r\n  ordenarServicios,\r\n} from \"../services/ServiciosServices\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport { getAllTipoServicios } from \"../services/TipoServiciosServices\";\r\nimport { getAllClientes } from \"../services/clienteServices\";\r\nimport {\r\n  addVenta,\r\n  deleteVenta,\r\n  getAllVentas,\r\n  getVentaByIDOfServicio,\r\n} from \"../services/ventasServices\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\nimport CustomRadioButtonSingle from \"../components/CustomRadioButtonSearch\";\r\nimport {\r\n  addGarantia,\r\n  deleteGarantia,\r\n  modificarGarantia,\r\n} from \"../services/GarantiaServices\";\r\nimport {\r\n  addEncargo,\r\n  deleteEncargo,\r\n  modificarEncargo,\r\n} from \"../services/EncargoServices\";\r\nimport { Deuda, MyDateTableDeudas } from \"../components/MydateTableDeudas\";\r\nimport {\r\n  deleteDeuda,\r\n  filtrarDeudas,\r\n  getDeudaByID,\r\n} from \"../services/DeudasServices\";\r\nimport {\r\n  MyDateTablePagoDeudaWithButton,\r\n  PagoDeudaShowModal,\r\n} from \"../components/MyDateTableShowPagoDeudas\";\r\nimport { addPagoDeuda, deletePagoDeuda } from \"../services/PagoDeudaServices\";\r\n\r\nexport default function DeudasView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n  const [\r\n    capaPrioridadTipoServicioDetails,\r\n    setCapaPrioridadTipoServicioDetails,\r\n  ] = useState(1000);\r\n  const [capaPrioridadProductoDetails, setCapaPrioridadProductoDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadClienteDetails, setCapaPrioridadClienteDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTipoServicioSearsh, setCapaPrioridadTipoServicioSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendaSearsh, setCapaPrioridadTiendaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"TipoServicioDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ProductoDetails\") {\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(2000);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ClienteDetails\") {\r\n      setCapaPrioridadClienteDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"TipoServicioSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(2000);\r\n    } else if (prioridad === \"TiendaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(2000);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n\r\n  const [idFirstTimeProducto, setIdFirsTimeProducto] = useState(\"\");\r\n  const [auxOptimizacion, setAuxOptimizacion] = useState(false);\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idDeudaDetails, setIdDeudaDetails] = useState(\"\");\r\n  const [idServicioDetails, setIdServicioDetails] = useState(\"\");\r\n  const [idClienteDetails, setIdClienteDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [idTipoServicioDetails, setIdTipoServicioDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [cantidadProductoDetails, setCantidadProductoDetails] = useState(\"1\");\r\n  const [costoPromedioProductoCUPDetails, setCostoPromedioProductoCUPDetails] =\r\n    useState(\"0\");\r\n  const [costoPromedioProductoUSDDetails, setCostoPromedioProductoUSDDetails] =\r\n    useState(\"0\");\r\n  const [precioUSDDetails, setPrecioUSDDetails] = useState(\"\");\r\n  const [devueltoDetails, setDevueltoDetails] = useState(\"sin Devolver\");\r\n  const [precioCUPDetails, setPrecioCUPDetails] = useState(\"\");\r\n  const [notaDetails, setNotaDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n  const [fechaDiaDetailsEncargo, setFechaDiaDetailsEncargo] = useState(\"\");\r\n  const [fechaMesDetailsEncargo, setFechaMesDetailsEncargo] = useState(\"\");\r\n  const [fechaAnnoDetailsEncargo, setFechaAnnoDetailsEncargo] = useState(\"\");\r\n  const [adelantoEncargo, setAdelantoEncargo] = useState(\"\");\r\n  const [isGarantiaDetails, setIsGarantiaDetails] = useState(false);\r\n  const [isGarantiaDetailsViejo, setIsGarantiaDetailsViejo] = useState(false);\r\n  const [idGarantiaDetails, setIdGarantiaDetails] = useState(\"\");\r\n  const [duracionGarantiaDetails, setDuracionGarantiaDetails] = useState(\"\");\r\n  const [duracionGarantiaDetailsVieja, setDuracionGarantiaDetailsVieja] =\r\n    useState(\"\");\r\n  const [pagoDeudaByDeudaDetails, setPagoDeudaByDeudaDetails] = useState<\r\n    PagoDeudaShowModal[]\r\n  >([]);\r\n  const [idEncargoDetails, setIdEncargoDetails] = useState(\"\");\r\n\r\n  // Variable auxiliar para el redondeo de memerio\r\n  const [auxRedondeo, setAuxRedondeo] = useState(\"\");\r\n\r\n  // Variables axiliares para lavalidación de campos\r\n  const [idTiendaDetailsViejo, setIdTiendaDetailsViejo] = useState(\"\");\r\n  const [idProductoDetailsViejo, setIdProductoDetailsViejo] = useState(\"\");\r\n  const [cantidadProductoDetailsViejo, setCantidadProductoDetailsViejo] =\r\n    useState(\"\");\r\n  const [idTipoServicioDetailsViejo, setIdTipoServicioDetailsViejo] =\r\n    useState(\"\");\r\n  const [devueltoDetailsViejo, setDevueltoDetailsViejo] =\r\n    useState(\"sin Devolver\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  // Variable que controla si se está haciendo una venta o se hizo una venta\r\n  const [isVentaProducto, setIsVentaProducto] = useState(false);\r\n  const [isEncargoProducto, setIsEncargoProducto] = useState<boolean>(false);\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [isModalAddPagoDeudaView, setIsModalAddPagoDeudaView] =\r\n    React.useState(false);\r\n  const [cantidadUSDAddPagoDeuda, setCantidadUSDAddPagoDeuda] =\r\n    React.useState(\"\");\r\n  const [cantidadCUPAddPagoDeuda, setCantidadCUPAddPagoDeuda] =\r\n    React.useState(\"\");\r\n  const [total_pagado, setTotal_pagado] = React.useState(\"\");\r\n  const [deudaUnitaria, setDeudaUnitaria] = React.useState(\"\");\r\n  const [cantidad_restante, setCantidad_restante] = React.useState(\"\");\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarServicio, setIsPermisoAgregarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarServicio, setIsPermisoEliminarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoModificarServicio, setIsPermisoModificarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoServicioLocal, setIsPermisoServicioLocal] =\r\n    React.useState(false);\r\n  const [isPermisoServicioGeneral, setIsPermisoServicioGeneral] =\r\n    React.useState(false);\r\n\r\n  const [isPermisoVerCostoVenta, setIsPermisoVerCostoVenta] = useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      // Verificar y almacenar el permiso de agregar servicio\r\n      if (localStorage.getItem(\"resultAgregarServicio\") === null) {\r\n        const resultAgregarServicio = await isPermiso(\r\n          usuario.token,\r\n          \"26\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoAgregarServicio(resultAgregarServicio);\r\n        localStorage.setItem(\"resultAgregarServicio\", resultAgregarServicio);\r\n      } else {\r\n        setIsPermisoAgregarServicio(Boolean(localStorage.getItem(\"resultAgregarServicio\")));\r\n      }\r\n  \r\n      // Verificar y almacenar el permiso de eliminar servicio\r\n      if (localStorage.getItem(\"resultEliminarServicio\") === null) {\r\n        const resultEliminarServicio = await isPermiso(\r\n          usuario.token,\r\n          \"25\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoEliminarServicio(resultEliminarServicio);\r\n        localStorage.setItem(\"resultEliminarServicio\", resultEliminarServicio);\r\n      } else {\r\n        setIsPermisoEliminarServicio(Boolean(localStorage.getItem(\"resultEliminarServicio\")));\r\n      }\r\n  \r\n      // Verificar y almacenar el permiso de modificar servicio\r\n      if (localStorage.getItem(\"resultModificarServicio\") === null) {\r\n        const resultModificarServicio = await isPermiso(\r\n          usuario.token,\r\n          \"24\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoModificarServicio(resultModificarServicio);\r\n        localStorage.setItem(\"resultModificarServicio\", resultModificarServicio);\r\n      } else {\r\n        setIsPermisoModificarServicio(Boolean(localStorage.getItem(\"resultModificarServicio\")));\r\n      }\r\n  \r\n      // Verificar y almacenar el permiso de servicio local\r\n      if (localStorage.getItem(\"resulServicioLocal\") === null) {\r\n        const resulServicioLocal = await isPermiso(\r\n          usuario.token,\r\n          \"26\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoServicioLocal(resulServicioLocal);\r\n        localStorage.setItem(\"resulServicioLocal\", resulServicioLocal);\r\n      } else {\r\n        setIsPermisoServicioLocal(Boolean(localStorage.getItem(\"resulServicioLocal\")));\r\n      }\r\n  \r\n      // Verificar y almacenar el permiso de servicio general\r\n      if (localStorage.getItem(\"resultServicioGeneral\") === null) {\r\n        const resultServicioGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"27\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoServicioGeneral(resultServicioGeneral);\r\n        localStorage.setItem(\"resultServicioGeneral\", resultServicioGeneral);\r\n      } else {\r\n        setIsPermisoServicioGeneral(Boolean(localStorage.getItem(\"resultServicioGeneral\")));\r\n      }\r\n  \r\n      // Cargar cambio de moneda\r\n      if (localStorage.getItem(\"cambioMoneda\") === null) {\r\n        const cambioMoneda = await getValorMonedaUSD(usuario.token);\r\n        setCambioMoneda(cambioMoneda);\r\n        localStorage.setItem(\"cambioMoneda\", cambioMoneda.toString());\r\n      } else {\r\n        setCambioMoneda(parseFloat(localStorage.getItem(\"cambioMoneda\")));\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Deuda[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreCliente, setDropDownItemsNombreCliente] = useState<\r\n    ProveedorPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreTipoServicio, setDropDownItemsNombreTipoServicio] =\r\n    useState<ProductoPiker[]>([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreClienteSearch, setNombreClienteSearch] = useState(\"\");\r\n  const [nombreProductoSearsh, setNombreProductoSearch] = useState(\"\");\r\n  const [idTipoServicioSearch, setIdTipoServicioSearch] = useState(\"\");\r\n  const [idTiendaSearch, setIdTiendaSearch] = useState(\"\");\r\n  const [isDeudaSaldadaSearsh, setIsDeudaSaldadaSearsh] = useState(true);\r\n  const [rangoDeudaDesdeSearch, setRangoPrecioDesdeSearch] = useState(\"\");\r\n  const [rangoDeudaHastaSearch, setRangoPrecioHastaSearch] = useState(\"\");\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2024\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n  const [selecterEstadoDeudaSearch, setSelecterEstadoDeudaSearsh] =\r\n    useState(\"ninguna\");\r\n\r\n  const options = [\r\n    { label: \"Día\", value: \"dia\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n    { label: \"Mes\", value: \"mes\" },\r\n  ];\r\n\r\n  const optionsEstadoDeuda = [\r\n    { label: \"Ninguna\", value: \"ninguna\" },\r\n    { label: \"Saldada\", value: \"saldada\" },\r\n    { label: \"Sin Saldar\", value: \"sin_saldar\" },\r\n  ];\r\n\r\n  const optionsDevueltoDetails = [\r\n    { label: \"Devolver\", value: \"devolver\" },\r\n    { label: \"Sin Devolver\", value: \"sin devolver\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"dia\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 6);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else if (value === \"mes\") {\r\n      // Restar 1 mes a la fecha actual\r\n      const lastMonthDate = new Date(currentDate);\r\n      lastMonthDate.setMonth(currentDate.getMonth() - 1);\r\n      const monthYear = String(lastMonthDate.getFullYear());\r\n      const monthMonth = String(lastMonthDate.getMonth() + 1).padStart(2, \"0\");\r\n      const monthDay = String(lastMonthDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${monthYear}-${monthMonth}-${monthDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarDeudas(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      let result: any;\r\n\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n      const resulServicioLocal = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      if (resultServicioGeneral) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          usuario.id_tienda\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      } else if (resulServicioLocal) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          usuario.id_tienda\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTipoServicioPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTipoServicios(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const tipoServiciosMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tipo_servicio,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTipoServicio([\r\n          { label: \"Todos los tipos de servicios\", value: \"\" },\r\n          ...tipoServiciosMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getClientesPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllClientes(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const ClientesMapeados: ProductoPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_cliente,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreCliente(ClientesMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Todas las tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setIdTipoServicioDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  // Cargar datos de lprodcut o del servicio de venta\r\n  const cargarDetailsOfProductoVenta = async () => {\r\n    if (usuario?.token) {\r\n      const resultDeuda = await getDeudaByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        const resultventa = await getVentaByIDOfServicio(\r\n          usuario.token,\r\n          idServicioDetails\r\n        );\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(true);\r\n\r\n        // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n        if (resultventa) {\r\n          // Actualizar variables para la validación de campos\r\n          setIdProductoDetailsViejo(resultventa.producto.id_producto);\r\n          setCantidadProductoDetailsViejo(resultventa.cantidad);\r\n          setIdTiendaDetailsViejo(resultDeuda.deuda.servicio.tienda.id_tienda);\r\n\r\n          setIdProductoDetails(resultventa.producto.id_producto);\r\n          setIdFirsTimeProducto(resultventa.producto.id_producto);\r\n          setCantidadProductoDetails(resultventa.cantidad);\r\n          setIdTiendaDetails(resultDeuda.deuda.servicio.tienda.id_tienda);\r\n          setPrecioUSDDetails(resultDeuda.deuda.servicio.precio);\r\n          setPrecioCUPDetails(\r\n            String(parseFloat(resultDeuda.deuda.servicio.precio) * cambioMoneda)\r\n          );\r\n          setCostoPromedioProductoUSDDetails(\r\n            resultventa.producto.costo_acumulado\r\n          );\r\n        } else {\r\n          // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(true);\r\n\r\n          setIdProductoDetails(\"\");\r\n          setCantidadProductoDetails(\"\");\r\n          setPrecioUSDDetails(\"\");\r\n          setPrecioCUPDetails(\"\");\r\n          setCostoPromedioProductoUSDDetails(\"\");\r\n        }\r\n      } else {\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(false);\r\n        setPrecioUSDDetails(resultDeuda.deuda.servicio.precio);\r\n        setPrecioCUPDetails(\r\n          String(parseInt(resultDeuda.deuda.servicio.precio) * cambioMoneda)\r\n        );\r\n        setCostoPromedioProductoUSDDetails(resultDeuda.deuda.servicio.costo);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Cargar todos los datos de el servicio pro primera ves que se abre el servicio\r\n  const cargarDetailsOfDeuda = async () => {\r\n    setAuxOptimizacion(false);\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getDeudaByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.deuda.servicio.fecha\r\n          .split(\"T\")[0]\r\n          .split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdDeudaDetails(result.deuda.id_deuda);\r\n        setCantidad_restante(result.cantidad_restante);\r\n        setTotal_pagado(result.total_pagado);\r\n        setDeudaUnitaria(result.deuda.deuda);\r\n        setIdServicioDetails(result.deuda.servicio.id_servicio);\r\n        setIdClienteDetails(result.deuda.servicio.cliente.id_cliente);\r\n        setIdTipoServicioDetails(\r\n          result.deuda.servicio.tipo_servicio.id_tipo_servicio\r\n        );\r\n        setNotaDetails(result.deuda.servicio.nota);\r\n        setDescripcionDetails(result.deuda.servicio.descripcion);\r\n        setDevueltoDetails(\r\n          result.deuda.servicio.devuelto ? \"devolver\" : \"sin devolver\"\r\n        );\r\n        setIsGarantiaDetails(result.deuda.servicio.garantia !== null);\r\n\r\n        // Actualizar variables para la validación de campos\r\n        setIdTipoServicioDetailsViejo(\r\n          result.deuda.servicio.tipo_servicio.id_tipo_servicio\r\n        );\r\n        // Cargar pagos deuda\r\n        setPagoDeudaByDeudaDetails(result.deuda.pagos_deuda);\r\n        // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n        if (\r\n          parseInt(result.deuda.servicio.tipo_servicio.id_tipo_servicio) === 2\r\n        ) {\r\n          const resultventa = await getVentaByIDOfServicio(\r\n            usuario.token,\r\n            idServicioDetails\r\n          );\r\n          // Obtener entradas del produto para calcular datos del producto\r\n\r\n          // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n          if (resultventa) {\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setIdProductoDetails(resultventa.producto.id_producto);\r\n            setCantidadProductoDetails(resultventa.cantidad);\r\n            setIdTiendaDetails(result.deuda.servicio.tienda.id_tienda);\r\n            setPrecioUSDDetails(result.deuda.servicio.precio);\r\n            setPrecioCUPDetails(\r\n              String(parseFloat(result.deuda.servicio.precio) * cambioMoneda)\r\n            );\r\n            setCostoPromedioProductoUSDDetails(\r\n              resultventa.producto.costo_acumulado\r\n            );\r\n          } else {\r\n            // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setIdProductoDetails(\"\");\r\n            setCantidadProductoDetails(\"\");\r\n            setIdTiendaDetails(\"\");\r\n            setPrecioUSDDetails(\"\");\r\n            setPrecioCUPDetails(\"\");\r\n            setCostoPromedioProductoUSDDetails(\"\");\r\n          }\r\n        } else {\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(false);\r\n          setPrecioUSDDetails(result.deuda.servicio.precio);\r\n          setPrecioCUPDetails(\r\n            String(parseInt(result.deuda.servicio.precio) * cambioMoneda)\r\n          );\r\n          setCostoPromedioProductoUSDDetails(result.deuda.servicio.costo);\r\n        }\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n        // Actualizar fechas para el encargo\r\n        setFechaDiaDetailsEncargo(String(parseInt(day)));\r\n        setFechaMesDetailsEncargo(String(parseInt(month)));\r\n        setFechaAnnoDetailsEncargo(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares;\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n    setAuxOptimizacion(true);\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Deuda[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarDeudas(\r\n          usuario.token,\r\n          nombreProductoSearsh,\r\n          nombreClienteSearch,\r\n          rangoDeudaDesdeSearch,\r\n          rangoDeudaHastaSearch,\r\n          fechaDesde,\r\n          fechaHasta,\r\n          idTiendaSearch,\r\n          idTipoServicioSearch,\r\n          selecterEstadoDeudaSearch === \"ninguna\"\r\n            ? undefined\r\n            : selecterEstadoDeudaSearch === \"saldada\"\r\n            ? true\r\n            : false\r\n        );\r\n\r\n        if (result) {\r\n          const serviciosMapeados: Deuda[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Servicio: element.deuda.servicio.id_servicio,\r\n              id_Cliente: element.deuda.servicio.cliente.id_cliente,\r\n              id_Tienda: element.deuda.servicio.tienda.id_tienda,\r\n              id_Tipo_servicio:\r\n                element.deuda.servicio.tipo_servicio.id_tipo_servicio,\r\n              id_Deuda: element.deuda.id_deuda,\r\n              id_Garantia: \"\",\r\n              fecha: element.deuda.servicio.fecha,\r\n              precio: element.deuda.servicio.precio,\r\n              nota: element.deuda.servicio.nota,\r\n              descripcion: element.deuda.servicio.descripcion,\r\n              nombreCliente: element.deuda.servicio.cliente.nombre,\r\n              nombreTienda: element.deuda.servicio.tienda.nombre,\r\n              nombreTipoServicio: element.deuda.servicio.tipo_servicio.nombre,\r\n              nombreProducto: element.deuda.servicio.venta\r\n                ? element.deuda.servicio.venta.producto.nombre\r\n                : \"\", // Verifica si 'venta' no es null\r\n              cantidad: element.deuda.servicio.venta\r\n                ? element.deuda.servicio.venta.cantidad\r\n                : \"\", // Verifica si 'venta' no es null\r\n              devuelto: element.deuda.servicio.devuelto,\r\n              deuda: (element.deuda.deuda * (element.deuda.servicio.venta? element.deuda.servicio.venta.cantidad : 1)),\r\n              pagos_deuda: element.deuda.pagos_deuda,\r\n              total_pagado: element.total_pagado,\r\n              cantidad_restante: element.cantidad_restante,\r\n            }))\r\n          );\r\n          return serviciosMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Cargar datos del servicio cuando se seleccionado en la tabla\r\n  useEffect(() => {\r\n    cargarDetailsOfDeuda();\r\n  }, [modalEntradasDates]);\r\n\r\n  // Cargar datos de el producto si es que es seleccioando una venta de algun tipoServicio\r\n  useEffect(() => {\r\n    // Actualizar si es Encargo\r\n    if (parseInt(idTipoServicioDetails) === 26) {\r\n      setIsEncargoProducto(true);\r\n    } else {\r\n      setIsEncargoProducto(false);\r\n    }\r\n    cargarDetailsOfProductoVenta();\r\n  }, [idTipoServicioDetails]);\r\n  useEffect(() => {\r\n    if (auxRedondeo === \"PrecioCUP\") {\r\n      setPrecioUSDDetails(parseFloat(precioUSDDetails).toFixed(5));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"PrecioUSD\") {\r\n      setPrecioCUPDetails(parseFloat(precioCUPDetails).toFixed(2));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoCUP\") {\r\n      setCostoPromedioProductoUSDDetails(\r\n        parseFloat(costoPromedioProductoUSDDetails).toFixed(5)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoUSD\") {\r\n      setCostoPromedioProductoCUPDetails(\r\n        parseFloat(costoPromedioProductoCUPDetails).toFixed(2)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    }\r\n    setAuxRedondeo(\"\");\r\n  }, [auxRedondeo]);\r\n\r\n  useEffect(() => {\r\n    const auxiliar = async () => {\r\n      if (usuario?.token) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          idTiendaDetails\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      }\r\n    };\r\n    auxiliar();\r\n  }, [idTiendaDetails]);\r\n  useEffect(() => {\r\n    if (auxOptimizacion) {\r\n      if (\r\n        idProductoDetails !== \"\" &&\r\n        idProductoDetails !== idFirstTimeProducto &&\r\n        usuario?.token\r\n      ) {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n        const auxiliarAsyncFuncion = async () => {\r\n          const resultProdcuto = await getProductoById(\r\n            usuario.token,\r\n            idProductoDetails\r\n          );\r\n\r\n          // Cargar el costo promedio del producto seleccionado\r\n          setCostoPromedioProductoUSDDetails(resultProdcuto.costo_acumulado);\r\n          // Cargar precio del producto seleccioando en USD y CUP\r\n          setPrecioUSDDetails(resultProdcuto.precio ?? 0);\r\n          setPrecioCUPDetails(\r\n            String(parseFloat(resultProdcuto.precio) * cambioMoneda) ?? 0\r\n          );\r\n        };\r\n        auxiliarAsyncFuncion();\r\n      } else {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n      }\r\n    }\r\n  }, [idProductoDetails]);\r\n\r\n  // Funcion para controlar la vicion del campo de costo del servicio y del producto\r\n  const isCampoCostoVisible = async () => {\r\n    if (usuario?.token && usuario?.id_usuario) {\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultado =\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n          ? isPermisoServicioGeneral\r\n          : true;\r\n      return resultado;\r\n    }\r\n    return false;\r\n  };\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        setAuxOptimizacion(false);\r\n        await checkPermiso();\r\n        await getTipoServicioPikerDetails();\r\n        await getClientesPikerDetails();\r\n        await getTiendasPikerDetails();\r\n        await getProductosPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarDeudas = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let deudasFiltradas: Deuda[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortServicios?.criterioOrden && sortServicios.tipoOrden) {\r\n          deudasFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            deudasFiltradas,\r\n            sortServicios.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        } else {\r\n          deudasFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            deudasFiltradas,\r\n            \"option3\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(deudasFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarDeudas(\r\n      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n    );\r\n  }, [sortServicios, selectedOptionTipoOrden]);\r\n  useEffect(() => {\r\n    setSelecterActivoDetails(\"\");\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ]);\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setIdTiendaDetails(usuario?.id_tienda);\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setPrecioCUPDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setCostoPromedioProductoUSDDetails(\"\");\r\n    setIdTipoServicioDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setNotaDetails(\"\");\r\n    setDescripcionDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Extraemos el año, mes y día de la fecha actual\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    setFechaDiaDetails(String(parseInt(day)));\r\n    setFechaMesDetails(String(parseInt(month)));\r\n    setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n    setFechaDiaDetailsEncargo(String(parseInt(day)));\r\n    setFechaMesDetailsEncargo(String(parseInt(month)));\r\n    setFechaAnnoDetailsEncargo(String(parseInt(year)));\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarDeudas(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreClienteSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n    setIdTiendaSearch(\"\");\r\n    setIdTipoServicioSearch(\"\");\r\n    setRangoPrecioDesdeSearch(\"\");\r\n    setRangoPrecioHastaSearch(\"\");\r\n    setSelecterActivoDetails(\"\");\r\n  };\r\n\r\n  // Metodo para eliminar un pago deuda de una deuda\r\n  const deletePagoDeudaFronTabla = async (item: any) => {\r\n    if (usuario?.token) {\r\n      await deletePagoDeuda(usuario.token, item.id_pago_deuda);\r\n      setPagoDeudaByDeudaDetails((prevPagoDeuda) =>\r\n        prevPagoDeuda.filter(\r\n          (pago) => pago.id_pago_deuda !== item.id_pago_deuda\r\n        )\r\n      );\r\n      setModalMensajeView(true);\r\n      setModalMensaje(\"Pago de deuda eliminado\");\r\n      setReflechModalMensajeView(true);\r\n      setIsBotonModalMesajeVisible(true);\r\n    }\r\n  };\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewDeuda = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando Pago de Deuda. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR PAGO DE DEUDA. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (flag) {\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n        const resultPagoDeuda = await addPagoDeuda(\r\n          usuario.token,\r\n          cantidadUSDAddPagoDeuda,\r\n          `${year}-${month}-${day}`,\r\n          idDeudaDetails\r\n        );\r\n        pagoDeudaByDeudaDetails.push(resultPagoDeuda);\r\n\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un pago de deuda de una cantidad de ${cantidadUSDAddPagoDeuda}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          8\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El Pago de Deuda se agregó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método para actualizar los datos de un producto\r\n  const modificarServicioFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando servicio. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let cantidadEnTiendaNueva: number = 0;\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      if (result) {\r\n        cantidadEnTiendaNueva = result.cantidad;\r\n      }\r\n\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR EL SERVICIO. Compruebe los siguientes campos:\\n\";\r\n\r\n      if (idClienteDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione un cliente. Si no hay datos del cliente seleccione anonimo\\n\";\r\n      }\r\n      if (idTipoServicioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione el tipo de servicio que está ofreciendo.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (isGarantiaDetails && duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (costoPromedioProductoUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Digite el costo del servicio.\\n\";\r\n      }\r\n      if (precioUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina el precio cobrado al cliente.\\n\";\r\n      }\r\n      if (isGarantiaDetails && duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (isGarantiaDetails && parseInt(idClienteDetails) === 1) {\r\n        flag = false;\r\n        validarCampos += \"-El ciente Anónimo no puede tener garantías\";\r\n      }\r\n      // Validacion si es un encargo\r\n      if (parseInt(idTipoServicioDetails) === 26) {\r\n        const fechaBase = new Date(\r\n          `${fechaAnnoDetails}-${fechaMesDetails}-${fechaDiaDetails}`\r\n        );\r\n        const fechaEncargo = new Date(\r\n          `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`\r\n        );\r\n\r\n        if (parseInt(idClienteDetails) === 1) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-No se puede hacer un encargo al cliente Anónimo.\\n\";\r\n        }\r\n        if (fechaEncargo < fechaBase) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La fecha del encargo no puede ser menor que la fecha del servicio.\\n\";\r\n        }\r\n      }\r\n      // Validaciones si es una venta\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        if (idProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos += \"-Seleccione un producto para vender.\\n\";\r\n        }\r\n        if (cantidadProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Defina la cantidad que desea vender del producto.\\n\";\r\n        }\r\n      }\r\n      // validación de campos avanzada\r\n      if (\r\n        cantidadEnTiendaNueva + parseInt(cantidadProductoDetailsViejo) <\r\n        parseInt(cantidadProductoDetails)\r\n      ) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-La cantidad que desea modificar es mayor que la cantidad que hay en la tienda.\\n\";\r\n      }\r\n      // se modificó solo la cantidad del producto\r\n      if (\r\n        (cantidadProductoDetails !== cantidadProductoDetailsViejo &&\r\n          idProductoDetails === idProductoDetailsViejo &&\r\n          idTiendaDetails === idTiendaDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 2) ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        if (\r\n          cantidadEnTiendaNueva + parseInt(cantidadProductoDetailsViejo) <\r\n          parseInt(cantidadProductoDetailsViejo) -\r\n            parseInt(cantidadProductoDetails)\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que hay en la tienda no es suficiente para modificar la venta del producto.\\n\";\r\n        }\r\n      } else if (\r\n        idProductoDetails !== idProductoDetailsViejo ||\r\n        idTiendaDetails !== idTiendaDetailsViejo\r\n      ) {\r\n        if (cantidadEnTiendaNueva < parseInt(cantidadProductoDetails)) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que hay en la tienda no es suficiente para modificar la venta del producto.\\n\";\r\n        }\r\n      }\r\n      if (flag) {\r\n        await modificarServicio(\r\n          usuario.token,\r\n          idServicioDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          precioUSDDetails,\r\n          notaDetails,\r\n          idTiendaDetails,\r\n          idTipoServicioDetails,\r\n          devueltoDetails === \"devolver\",\r\n          idClienteDetails,\r\n          \"Not suport yet\",\r\n          \"not suport yet\"\r\n        );\r\n\r\n        // Actualizar Garantía\r\n        if (\r\n          isGarantiaDetails !== isGarantiaDetailsViejo ||\r\n          duracionGarantiaDetails !== duracionGarantiaDetailsVieja\r\n        ) {\r\n          if (isGarantiaDetails) {\r\n            if (idGarantiaDetails !== \"\") {\r\n              await modificarGarantia(\r\n                usuario.token,\r\n                duracionGarantiaDetails,\r\n                idServicioDetails,\r\n                idGarantiaDetails\r\n              );\r\n            } else {\r\n              await addGarantia(\r\n                usuario.token,\r\n                duracionGarantiaDetails,\r\n                idServicioDetails\r\n              );\r\n            }\r\n          } else {\r\n            await deleteGarantia(usuario.token, idGarantiaDetails);\r\n          }\r\n        }\r\n        // Actualizar encargo\r\n        if (\r\n          idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetailsViejo) === 26\r\n        ) {\r\n          await deleteEncargo(usuario.token, idEncargoDetails);\r\n        } else if (\r\n          idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 26\r\n        ) {\r\n          await addEncargo(\r\n            usuario.token,\r\n            adelantoEncargo,\r\n            `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`,\r\n            idServicioDetails\r\n          );\r\n        } else if (\r\n          idTipoServicioDetails === idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 26\r\n        ) {\r\n          await modificarEncargo(\r\n            usuario.token,\r\n            adelantoEncargo,\r\n            `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`,\r\n            idServicioDetails,\r\n            idEncargoDetails\r\n          );\r\n        }\r\n        // Si se cambio de tipo de servicio venta a otro\r\n        if (\r\n          parseInt(idTipoServicioDetailsViejo) === 2 &&\r\n          parseInt(idTipoServicioDetails) !== 2 &&\r\n          parseInt(idTipoServicioDetails) !== 4\r\n        ) {\r\n          // Se suma la cantidad de la venta pasada en la tienda\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // Se elimina la venta\r\n          await deleteVenta(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idServicioDetails\r\n          );\r\n        }\r\n\r\n        // Comprobar si solamente se cambio la cantidad si es que el tip ode sericio viejo era ya una venta\r\n        if (\r\n          cantidadProductoDetails !== cantidadProductoDetailsViejo &&\r\n          idProductoDetails === idProductoDetailsViejo &&\r\n          idTiendaDetails === idTiendaDetailsViejo\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${\r\n              parseInt(cantidadProductoDetails) -\r\n              parseInt(cantidadProductoDetailsViejo)\r\n            }`\r\n          );\r\n          // Agregar o sobreescrivir la venta\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // Si no es el caso se modificó el id del producto o l tienda volviendo para atras la venta a la tienda y haciendola denuevo con lso nuevos datos de la venta\r\n        } else if (\r\n          (idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n            parseInt(idTipoServicioDetails) === 2) ||\r\n          parseInt(idTipoServicioDetails) === 25\r\n        ) {\r\n          // Agregar o sobreescrivir la venta\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // sumar en la tienda la cantidad vieja del producto para volver atras la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // restar en la tienda nueva o vieja donde se este haciendo la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        } else if (\r\n          idTiendaDetails !== idTiendaDetailsViejo ||\r\n          idProductoDetails !== idProductoDetailsViejo\r\n        ) {\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // sumar en la tienda la cantidad vieja del producto para volver atras la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // restar en la tienda nueva o vieja donde se este haciendo la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        }\r\n\r\n        // Si es una devolucion y ademas el tipo de servicio actual es una venta se devuelve la cantidad a la tienda\r\n        if (\r\n          devueltoDetails !== devueltoDetailsViejo &&\r\n          devueltoDetails === \"devolver\" &&\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 25)\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails) * -1}`\r\n          );\r\n        } else if (\r\n          devueltoDetails !== devueltoDetailsViejo &&\r\n          devueltoDetails === \"sin devolver\" &&\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 25)\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        }\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó una entrada de originalmente ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          7\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El servicio se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setDuracionGarantiaDetails(\"\");\r\n\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarDeudaFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando deuda. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR DEUDA. Compruebe los siguientes parámetros:\\n\";\r\n\r\n      if (flag) {\r\n        const resultDeuda = await getDeudaByID(usuario.token, idDeudaDetails);\r\n        if (\r\n          Array.isArray(resultDeuda.deuda.pagos_deuda) &&\r\n          resultDeuda.deuda.pagos_deuda.length > 0\r\n        ) {\r\n          // Eliminar los pagoDeuda\r\n          resultDeuda.deuda.pagos_deuda.map(async (pagoDeuda: any) => {\r\n            await deletePagoDeuda(usuario.token, pagoDeuda.id_pago_deuda);\r\n          });\r\n        }\r\n        await deleteDeuda(usuario.token, idDeudaDetails);\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la deuda del tipo de servicio ${resultDeuda.deuda.servicio.tipo_servicio.nombre} el cual devía ${resultDeuda.cantidad_restante} y se había pagado ${resultDeuda.total_pagado}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          8\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La deuda se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setPrecioCUPDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setCostoPromedioProductoUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setNotaDetails(\"\");\r\n        setDescripcionDetails(\"\");\r\n        setDuracionGarantiaDetails(\"\");\r\n\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTablePagoDeudaModal = [\r\n    \"C.Pagada CUP\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableDesktop = [\r\n    \"Cliente\",\r\n    \"Tienda\",\r\n    \"Producto\",\r\n    \"Deuda CUP\",\r\n    \"C.Sal CUP\",\r\n    \"C.Faltnte\",\r\n    \"Saldada\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Cliente\",\r\n    \"Tienda\",\r\n    \"Producto\",\r\n    \"Deuda CUP\",\r\n    \"C.Sal CUP\",\r\n    \"C.Faltnte\",\r\n    \"Saldada\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableDeudas\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearsh}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Cliente:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del cliente\"\r\n                    value={nombreClienteSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreClienteSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Tipo de Servicio:\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadTipoServicioSearsh,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={idTipoServicioSearch}\r\n                      placeholder=\"Seleccione un tipo de servicio\"\r\n                      setValue={setIdTipoServicioSearch}\r\n                      items={dropdownItemsNombreTipoServicio}\r\n                      direction=\"BOTTOM\"\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioSearsh\")\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {isPermisoServicioGeneral && (\r\n                    <View style={styles.separatorBlanco} />\r\n                  )}\r\n\r\n                  {isPermisoServicioGeneral && (\r\n                    <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n                  )}\r\n                  {isPermisoServicioGeneral && (\r\n                    <View\r\n                      style={{\r\n                        width: \"100%\",\r\n                        zIndex: capaPrioridadTiendaSearsh,\r\n                        position: \"relative\",\r\n                      }}\r\n                    >\r\n                      <CustomDropdown\r\n                        value={idTiendaSearch}\r\n                        placeholder=\"Seleccione un tienda\"\r\n                        setValue={setIdTiendaSearch}\r\n                        items={dropdownItemsNombreTienda}\r\n                        direction=\"BOTTOM\"\r\n                        onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Rango del monto de la deuda:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyDesktop}\r\n                      placeholder=\"Desde\"\r\n                      value={rangoDeudaDesdeSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyDesktop}\r\n                      placeholder=\"Hasta\"\r\n                      value={rangoDeudaHastaSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioHastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaDesdeSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaHastaSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() =>\r\n                          filtrarYOrdenarDeudas(\r\n                            `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                            `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                          )\r\n                        }\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Servicio\"\r\n                  : \"Datos del Servicio\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idClienteDetails}\r\n                    placeholder=\"Seleccione un Cliente\"\r\n                    setValue={setIdClienteDetails}\r\n                    items={dropdownItemsNombreCliente}\r\n                    searchable={true}\r\n                    readOnly={\r\n                      !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                    }\r\n                    onDropdownOpen={() => controlarCapas(\"ClienteDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDetails}\r\n                      placeholder=\"Seleccione una tienda\"\r\n                      setValue={setIdTiendaDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={\r\n                        !(isPermisoServicioGeneral &&\r\n                        modalEntradasDates?.id_entrada === \"\"\r\n                          ? true\r\n                          : isPermisoServicioGeneral &&\r\n                            isPermisoModificarServicio)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTipoServicioDetails}\r\n                      placeholder=\"Seleccione un tipo de servicio\"\r\n                      setValue={setIdTipoServicioDetails}\r\n                      items={dropdownItemsNombreTipoServicio}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Garantías */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 100,\r\n                    }}\r\n                  >\r\n                    {true && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Tiene Garantía\r\n                      </Text>\r\n                    )}\r\n                    {true && (\r\n                      <CustomRadioButtonSingle\r\n                        onPress={() => setIsGarantiaDetails(!isGarantiaDetails)}\r\n                        selected={isGarantiaDetails}\r\n                        label=\"Garantía\"\r\n                      />\r\n                    )}\r\n\r\n                    {/*isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Adelanto del encargo\r\n                      </Text>\r\n                    )*/}\r\n                    {/*isEncargoProducto && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={adelantoEncargo}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n                          setAdelantoEncargo(validNumericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={true}\r\n                        placeholder=\"Adelanto del encargo\"\r\n                      />\r\n                    )*/}\r\n\r\n                    {isGarantiaDetails && (\r\n                      <View style={{ marginTop: \"2%\" }}>\r\n                        <Text style={styles.labelTextModalDesktop}>\r\n                          Duración en días:\r\n                        </Text>\r\n                        <CustomTextImputSearch\r\n                          style={styles.textImputModal}\r\n                          value={duracionGarantiaDetails}\r\n                          onChangeText={(text) => {\r\n                            // Permite solo números y un punto decimal\r\n                            const numericValue = text.replace(/[^0-9]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                            // Asegura que solo haya un punto decimal\r\n                            setDuracionGarantiaDetails(numericValue);\r\n                          }}\r\n                          cursorColor={Colors.azul_Oscuro}\r\n                          editable={\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          }\r\n                          placeholder=\"Duracion En días\"\r\n                        />\r\n                      </View>\r\n                    )}\r\n                  </View>\r\n\r\n                  {/*  */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    {/*isDateLoaded && isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Fecha llegada\r\n                      </Text>\r\n                    )*/}\r\n                    {/*isDateLoaded && isEncargoProducto && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetailsEncargo}\r\n                        monthValue={fechaMesDetailsEncargo}\r\n                        yearValue={fechaAnnoDetailsEncargo}\r\n                        onDayChange={setFechaDiaDetailsEncargo}\r\n                        onMonthChange={setFechaMesDetailsEncargo}\r\n                        onYearChange={setFechaAnnoDetailsEncargo}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )*/}\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdownDetails\r\n                      value={idProductoDetails}\r\n                      placeholder=\"Seleccione un produto\"\r\n                      setValue={setIdProductoDetails}\r\n                      items={dropdownItemsNombreproducto}\r\n                      searchable={true}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      onDropdownOpen={() => controlarCapas(\"ProductoDetails\")}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={cantidadProductoDetails}\r\n                        onChangeText={(text) => {\r\n                          // Filtra caracteres no numéricos\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                          setCantidadProductoDetails(numericValue);\r\n                        }}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad del producto\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en CUP\"\r\n                          : \"Costo del servicio en CUP\"}\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoUSDDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoCUPDetails(\r\n                              String(\r\n                                (\r\n                                  parseFloat(validNumericValue) * cambioMoneda\r\n                                ).toFixed(2)\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoCUPDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoUSDDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoUSD\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoCUPDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoUSDDetails(\r\n                              String(\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoUSDDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoCUPDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoCUP\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    \r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModalNOEDITABLE}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioUSDDetails(\r\n                            String(parseFloat(validNumericValue) / cambioMoneda)\r\n                          );\r\n                        } else {\r\n                          setPrecioUSDDetails(\"0\");\r\n                        }\r\n                        setPrecioCUPDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioCUP\");\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en cup\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={notaDetails}\r\n                      onChangeText={setNotaDetails}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Nota\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del servicio\"\r\n                  multiline={true}\r\n                  editable={\r\n                    isPermisoModificarServicio || isPermisoServicioLocal\r\n                  }\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                <View\r\n                  style={{\r\n                    flex: 1,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 2,\r\n                    marginTop: \"3%\",\r\n                    borderRadius: 15,\r\n                    height: 500,\r\n                    width: \"90%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <MyDateTablePagoDeudaWithButton\r\n                    columns={columnasMyDateTablePagoDeudaModal}\r\n                    items={pagoDeudaByDeudaDetails}\r\n                    onButtonPress={(item: any) =>\r\n                      deletePagoDeudaFronTabla(item)\r\n                    }\r\n                  />\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          // Sumar todos los valores de 'pagada' en el array\r\n                          const sumaPagada = pagoDeudaByDeudaDetails.reduce(\r\n                            (total, pago) => {\r\n                              return total + parseFloat(pago.pagada);\r\n                            },\r\n                            0\r\n                          );\r\n\r\n                          // Usar la suma en la condición\r\n                          if (\r\n                            parseFloat(precioUSDDetails) * parseInt(cantidadProductoDetails) - sumaPagada > 0\r\n                          ) {\r\n                            setIsModalAddPagoDeudaView(true);\r\n                          } else {\r\n                            setModalMensajeView(true);\r\n                            setModalMensaje(\"La deuda ya está saldada\");\r\n                            setReflechModalMensajeView(false);\r\n                            setIsBotonModalMesajeVisible(true);\r\n                          }\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar pago a la deuda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta deuda?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Deuda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarServicioFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal agregar pago deuda*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalAddPagoDeudaView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 400,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Agregar un pago a la deuda.`}\r\n              </Text>\r\n\r\n              <Text\r\n                style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10 }}\r\n              >\r\n                Cantidad a pagar CUP\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  marginHorizontal: \"5%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 16, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                value={cantidadCUPAddPagoDeuda}\r\n                onChangeText={(text) => {\r\n                  // Permite solo números y un punto decimal\r\n                  const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                  // Asegura que solo haya un punto decimal\r\n                  const validNumericValue =\r\n                    numericValue.split(\".\").length > 2\r\n                      ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                      : numericValue;\r\n\r\n                  setCantidadCUPAddPagoDeuda(validNumericValue);\r\n                  setCantidadUSDAddPagoDeuda(\r\n                    String((validNumericValue / cambioMoneda).toFixed(5))\r\n                  );\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                editable={true}\r\n                placeholder=\"Cantidad del pago en CUP\"\r\n              />\r\n\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  if (\r\n                    parseFloat(cantidadUSDAddPagoDeuda) <= parseFloat((parseFloat(deudaUnitaria) * parseFloat(cantidadProductoDetails) - parseFloat(total_pagado)).toFixed(5))\r\n                  ) {\r\n                    addNewDeuda();\r\n                  } else {\r\n                    setModalMensaje(\r\n                      `La cantidad de el pago de la deuda ${cantidadUSDAddPagoDeuda} es mayor a la cantidad faltante de la deuda ${((parseFloat(deudaUnitaria) * parseFloat(cantidadProductoDetails) - parseFloat(total_pagado)) * cambioMoneda).toFixed(0)}`\r\n                    );\r\n                    setModalMensajeView(true);\r\n                    setReflechModalMensajeView(false);\r\n                    setIsBotonModalMesajeVisible(true);\r\n                  }\r\n                }}\r\n                style={{\r\n                  backgroundColor: Colors.azul_Claro,\r\n                  borderRadius: 15,\r\n                  marginTop: 30,\r\n                  width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                    color: Colors.blanco_Suave,\r\n                  }}\r\n                >\r\n                  Agregar\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setIsModalAddPagoDeudaView(!isModalAddPagoDeudaView)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Deudas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearsh}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Cliente:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del cliente\"\r\n              value={nombreClienteSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreClienteSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Tipo de Servicio:</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                zIndex: capaPrioridadTipoServicioSearsh,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={idTipoServicioSearch}\r\n                placeholder=\"Seleccione un tipo de servicio\"\r\n                setValue={setIdTipoServicioSearch}\r\n                items={dropdownItemsNombreTipoServicio}\r\n                direction=\"BOTTOM\"\r\n                onDropdownOpen={() => controlarCapas(\"TipoServicioSearsh\")}\r\n              />\r\n            </View>\r\n\r\n            {isPermisoServicioGeneral && (\r\n              <View style={styles.separatorBlanco} />\r\n            )}\r\n\r\n            {isPermisoServicioGeneral && (\r\n              <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n            )}\r\n            {isPermisoServicioGeneral && (\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  zIndex: capaPrioridadTiendaSearsh,\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <CustomDropdown\r\n                  value={idTiendaSearch}\r\n                  placeholder=\"Seleccione un tienda\"\r\n                  setValue={setIdTiendaSearch}\r\n                  items={dropdownItemsNombreTienda}\r\n                  direction=\"BOTTOM\"\r\n                  onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n                />\r\n              </View>\r\n            )}\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              Rango del monto de la deuda:\r\n            </Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={rangoDeudaDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={rangoDeudaHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioHastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Estado de deuda:</Text>\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {optionsEstadoDeuda.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterEstadoDeudaSearch === option.value}\r\n                  onPress={() => setSelecterEstadoDeudaSearsh(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() =>\r\n                    filtrarYOrdenarDeudas(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    )\r\n                  }\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableDeudas\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Servicio\"\r\n                  : \"Datos de la Deuda\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.textLabelAsInput}>\r\n                    {dropdownItemsNombreCliente.find(\r\n                      (element) => element.value === idClienteDetails\r\n                    )?.label || \"Cliente no encontrado\"}\r\n                  </Text>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTienda.find(\r\n                        (element) => element.value === idTiendaDetails\r\n                      )?.label || \"Tienda no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTipoServicio.find(\r\n                        (element) => element.value === idTipoServicioDetails\r\n                      )?.label || \"Tipo de Servicio no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreproducto.find(\r\n                        (element) => element.value === idProductoDetails\r\n                      )?.label || \"Producto no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {cantidadProductoDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en CUP\"\r\n                          : \"Costo del servicio en CUP\"}\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    \r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {precioCUPDetails}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={!false}\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <Text style={styles.textLabelAsInput}>{notaDetails}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <Text style={styles.textDescroptionLabelAsInput}>\r\n                  {descripcionDetails}\r\n                </Text>\r\n\r\n                <View\r\n                  style={{\r\n                    flex: 1,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 2,\r\n                    marginTop: \"3%\",\r\n                    borderRadius: 15,\r\n                    height: 500,\r\n                    width: \"90%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <MyDateTablePagoDeudaWithButton\r\n                    columns={columnasMyDateTablePagoDeudaModal}\r\n                    items={pagoDeudaByDeudaDetails}\r\n                    onButtonPress={(item: any) =>\r\n                      deletePagoDeudaFronTabla(item)\r\n                    }\r\n                  />\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          // Sumar todos los valores de 'pagada' en el array\r\n                          const sumaPagada = pagoDeudaByDeudaDetails.reduce(\r\n                            (total, pago) => {\r\n                              return total + parseFloat(pago.pagada);\r\n                            },\r\n                            0\r\n                          );\r\n\r\n                          // Usar la suma en la condición\r\n                          if (\r\n                            parseFloat(precioUSDDetails) * parseInt(cantidadProductoDetails) - sumaPagada > 0\r\n                          ) {\r\n                            setIsModalAddPagoDeudaView(true);\r\n                          } else {\r\n                            setModalMensajeView(true);\r\n                            setModalMensaje(\"La deuda ya está saldada\");\r\n                            setReflechModalMensajeView(false);\r\n                            setIsBotonModalMesajeVisible(true);\r\n                          }\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar pago a la deuda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta deuda?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Deuda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarDeudaFunction()\r\n                      : modificarServicioFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal agregar pago deuda*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalAddPagoDeudaView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 400,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n\r\n              <Text\r\n                style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10 }}\r\n              >\r\n                Cantidad a pagar CUP\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  marginHorizontal: \"5%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 16, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                value={cantidadCUPAddPagoDeuda}\r\n                onChangeText={(text) => {\r\n                  // Permite solo números y un punto decimal\r\n                  const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                  // Asegura que solo haya un punto decimal\r\n                  const validNumericValue =\r\n                    numericValue.split(\".\").length > 2\r\n                      ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                      : numericValue;\r\n\r\n                  setCantidadCUPAddPagoDeuda(validNumericValue);\r\n                  setCantidadUSDAddPagoDeuda(\r\n                    String((validNumericValue / cambioMoneda).toFixed(5))\r\n                  );\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                editable={true}\r\n                placeholder=\"Cantidad del pago en CUP\"\r\n              />\r\n\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  if (\r\n                    parseFloat(cantidadUSDAddPagoDeuda) <= parseFloat((parseFloat(deudaUnitaria) * parseFloat(cantidadProductoDetails) - parseFloat(total_pagado)).toFixed(5))\r\n                  ) {\r\n                    addNewDeuda();\r\n                  } else {\r\n                    setModalMensaje(\r\n                      `La cantidad de el pago de la deuda ${(\r\n                        parseFloat(cantidadUSDAddPagoDeuda) * cambioMoneda\r\n                      ).toFixed(\r\n                        0\r\n                      )} es mayor a la cantidad faltante de la deuda ${((parseFloat(deudaUnitaria) * parseFloat(cantidadProductoDetails) - parseFloat(total_pagado)) * cambioMoneda).toFixed(0)}`\r\n                    );\r\n                    setModalMensajeView(true);\r\n                    setReflechModalMensajeView(false);\r\n                    setIsBotonModalMesajeVisible(true);\r\n                  }\r\n                }}\r\n                style={{\r\n                  backgroundColor: Colors.azul_Claro,\r\n                  borderRadius: 15,\r\n                  marginTop: 30,\r\n                  width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                    color: Colors.blanco_Suave,\r\n                  }}\r\n                >\r\n                  Agregar\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setIsModalAddPagoDeudaView(!isModalAddPagoDeudaView)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Deudas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { TiendaShowModal } from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport interface Diario {\r\n  id_Entrada: string;\r\n  id_Proveedor: string;\r\n  id_Producto: string;\r\n  nombre_Proveedor: string;\r\n  nombre_Producto: string;\r\n  cantidad: string;\r\n  costo: string;\r\n  fecha: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Diario[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableDiario: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortEntradas, setSortEntradas } = useSortEntradas();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Diario[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // cargar cambio de moneda\r\n              setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  // Metodo que devuelve el mensaje al final de la pagina\r\n  const mensajeOfEndTable = () =>{\r\n    let mensaje = \"La suma total de los costos de los productos filtrados es de: \";\r\n    let sumaCostos: number = 0\r\n\r\n    items.forEach((item) =>{\r\n      sumaCostos += parseFloat(item.costo)\r\n    })\r\n    mensaje += `${sumaCostos.toFixed(5)} USD   CUP: ${(sumaCostos * cambioMoneda).toFixed(2)}.`\r\n    return mensaje\r\n  }\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre Proveedor\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Producto\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Costo Por Unidad\") {\r\n      aux = \"option5\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option6\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortEntradas({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Proveedor\" ||\r\n                column === \"Nombre Producto\" ||\r\n                column === \"Costo Por Unidad\" ||\r\n                column === \"Fecha\") && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Suave,\r\n                    marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                    width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                    height: 24, // Asegúrate de que tenga tamaño consistente\r\n                    justifyContent: \"center\", // Centrar contenido del botón\r\n                    alignItems: \"center\", // Centrar contenido del botón\r\n                    borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                    marginBottom: 4, // Elevar el botón del borde inferior\r\n                    paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                  }}\r\n                  onPress={() => sortEntradasAux(column)}\r\n                >\r\n                  <Image\r\n                    source={require(\"../images/ordenar.png\")}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </TouchableOpacity>\r\n              )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Proveedor !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Entrada}\r\n                onPress={() => detailsModalView(item.id_Entrada)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Proveedor}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo USD */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.costo}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{(parseFloat(item.costo) * cambioMoneda).toFixed(2)}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <Text>{mensajeOfEndTable()}</Text>\r\n            </View>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Entrada}\r\n                onPress={() => detailsModalView(item.id_Entrada)}\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Proveedor}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo USD*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.costo}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo CUP*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {(parseFloat(item.costo) * cambioMoneda).toFixed(2)}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <Text>{mensajeOfEndTable()}</Text>\r\n          </View>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getAllTiendas, isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n  getProductoById,\r\n  getProductoCantidadTotal,\r\n  updateProductoCostoAcumulado,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { MyDateInputVencimiento } from \"../components/MyDateInputVencimiento\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport { Diario, MyDateTableDiario } from \"../components/MyDataTableDiario\";\r\n\r\nexport default function DiarioView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadProductosDetails, setCapaPrioridadProductosDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadProveedoresDetails, setCapaPrioridadProveedoresDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadProductosDetails(1500);\r\n      setCapaPrioridadProveedoresDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductosDetails(1500);\r\n      setCapaPrioridadProveedoresDetails(1500);\r\n    } else if (prioridad === \"ProductosDetails\") {\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductosDetails(2000);\r\n      setCapaPrioridadProveedoresDetails(1500);\r\n    } else if (prioridad === \"ProveedoresDetails\") {\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductosDetails(1500);\r\n      setCapaPrioridadProveedoresDetails(2000);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortEntradas, setSortEntradas } = useSortEntradas();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idEntradaDetails, setIdEntradaDetails] = useState(\"\");\r\n  const [idProveedorDetails, setIdProveedorDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [cantidadDetails, setCantidadDetails] = useState(\"\");\r\n  const [costoUSDDetails, setCostoUSDDetails] = useState(\"\");\r\n  const [costoCUPDetails, setCostoCUPDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n  const [fechaVencimientoDiaDetails, setFechaVencimientoDiaDetails] =\r\n    useState(\"\");\r\n  const [fechaVencimientoMesDetails, setFechaVencimientoMesDetails] =\r\n    useState(\"\");\r\n  const [fechaVencimientoAnnoDetails, setFechaVencimientoAnnoDetails] =\r\n    useState(\"\");\r\n  const [isFechaVencimientoDetails, setIsFechaVencimientoDetails] =\r\n    useState(false);\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [costoAuxModificarDetails, setCostoAuxModificarDetails] = useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  // Controlar el doble clic del boton\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarEntrada, setIsPermisoAgregarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarEntrada, setIsPermisoEliminarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoModificarEntrada, setIsPermisoModificarEntrada] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      // Verificar y almacenar el permiso de agregar entrada\r\n      if (localStorage.getItem(\"isPermisoAgregarEntrada\") === null) {\r\n        const resultAgregarEntrada = await isPermiso(\r\n          usuario.token,\r\n          \"10\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoAgregarEntrada(resultAgregarEntrada);\r\n        localStorage.setItem(\"isPermisoAgregarEntrada\", resultAgregarEntrada);\r\n      } else {\r\n        setIsPermisoAgregarEntrada(\r\n          Boolean(localStorage.getItem(\"isPermisoAgregarEntrada\"))\r\n        );\r\n      }\r\n\r\n      // Verificar y almacenar el permiso de eliminar entrada\r\n      if (localStorage.getItem(\"isPermisoEliminarEntrada\") === null) {\r\n        const resultEliminarEntrada = await isPermiso(\r\n          usuario.token,\r\n          \"12\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoEliminarEntrada(resultEliminarEntrada);\r\n        localStorage.setItem(\"isPermisoEliminarEntrada\", resultEliminarEntrada);\r\n      } else {\r\n        setIsPermisoEliminarEntrada(\r\n          Boolean(localStorage.getItem(\"isPermisoEliminarEntrada\"))\r\n        );\r\n      }\r\n\r\n      // Verificar y almacenar el permiso de modificar entrada\r\n      if (localStorage.getItem(\"isPermisoModificarEntrada\") === null) {\r\n        const resultModificarEntrada = await isPermiso(\r\n          usuario.token,\r\n          \"11\",\r\n          usuario.id_usuario\r\n        );\r\n        setIsPermisoModificarEntrada(resultModificarEntrada);\r\n        localStorage.setItem(\r\n          \"isPermisoModificarEntrada\",\r\n          resultModificarEntrada\r\n        );\r\n      } else {\r\n        setIsPermisoModificarEntrada(\r\n          Boolean(localStorage.getItem(\"isPermisoModificarEntrada\"))\r\n        );\r\n      }\r\n\r\n      // Cargar cambio de moneda\r\n      if (localStorage.getItem(\"cambioMoneda\") === null) {\r\n        const cambioMoneda = await getValorMonedaUSD(usuario.token);\r\n        setCambioMoneda(cambioMoneda);\r\n        localStorage.setItem(\"cambioMoneda\", cambioMoneda.toString());\r\n      } else {\r\n        setCambioMoneda(parseFloat(localStorage.getItem(\"cambioMoneda\")));\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Diario[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreProveedor, setDropDownItemsNombreProveedor] =\r\n    useState<ProveedorPiker[]>([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProveedorSearch, setNombreProveedorSearch] = useState(\"\");\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [costoDesdeSearch, setCostoDesdeSearch] = useState(\"\");\r\n  const [costoHastaSearch, setCostohastaSearch] = useState(\"\");\r\n  const [fechaDesdeSearch, setFechaDesdeSearch] = useState(new Date());\r\n  const [fechaHastaSearch, setFechaHastaSearch] = useState(new Date());\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n\r\n  const options = [\r\n    { label: \"Día\", value: \"dia\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n    { label: \"Mes\", value: \"mes\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"dia\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 6);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else if (value === \"mes\") {\r\n      // Restar 1 mes a la fecha actual\r\n      const lastMonthDate = new Date(currentDate);\r\n      lastMonthDate.setMonth(currentDate.getMonth() - 1);\r\n      const monthYear = String(lastMonthDate.getFullYear());\r\n      const monthMonth = String(lastMonthDate.getMonth() + 1).padStart(2, \"0\");\r\n      const monthDay = String(lastMonthDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${monthYear}-${monthMonth}-${monthDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarEntradas(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  const getProveedoresPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProveedores(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_proveedor,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProveedor(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([...tiendasMapeados]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdProveedorDetails(\"\");\r\n    setCostoUSDDetails(\"\");\r\n    setCantidadDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n    setIsFechaVencimientoDetails(false);\r\n    setFechaVencimientoDiaDetails(\"\");\r\n    setFechaVencimientoMesDetails(\"\");\r\n    setFechaVencimientoAnnoDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfEntradas = async () => {\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getEntradaByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.fecha.split(\"T\")[0].split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdEntradaDetails(result.id_entrada);\r\n        setIdProveedorDetails(result.proveedor.id_proveedor);\r\n        setIdProductoDetails(result.producto.id_producto);\r\n        setCantidadDetails(result.cantidad);\r\n        setIdTiendaDetails(result.tienda.id_tienda);\r\n        setCostoUSDDetails(result.costo);\r\n        setCostoCUPDetails(String((result.costo * cambioMoneda).toFixed(2)));\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n        if (result.fecha_vencimiento) {\r\n          const [yearVencimiento, monthVencimiento, dayVencimiento] =\r\n            result.fecha_vencimiento.split(\"T\")[0].split(\"-\");\r\n          setFechaVencimientoDiaDetails(String(parseInt(dayVencimiento)));\r\n          setFechaVencimientoMesDetails(String(parseInt(monthVencimiento)));\r\n          setFechaVencimientoAnnoDetails(String(parseInt(yearVencimiento)));\r\n        }\r\n\r\n        // Actualizamos los valores auxiliares\r\n        setIdProductoAuxModificarDetails(result.producto.id_producto);\r\n        setIdTiendaAuxModificarDetails(result.tienda.id_tienda);\r\n        setCantidadAuxModificarDetails(result.cantidad);\r\n        setCostoAuxModificarDetails(result.costo);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Diario[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarEntrada(\r\n          usuario.token,\r\n          nombreProveedorSearch,\r\n          nombreProductoSearch,\r\n          costoDesdeSearch,\r\n          costoHastaSearch,\r\n          fechaDesde,\r\n          fechaHasta\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Diario[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Entrada: element.id_entrada,\r\n              id_Proveedor: element.proveedor.id_proveedor,\r\n              id_Producto: element.producto.id_producto,\r\n              nombre_Proveedor: element.proveedor.nombre,\r\n              nombre_Producto: element.producto.nombre,\r\n              cantidad: element.cantidad,\r\n              costo: element.costo,\r\n              fecha: element.fecha,\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfEntradas();\r\n  }, [modalEntradasDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosProveedores = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllEntradas(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: Diario[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Entrada: element.id_entrada,\r\n                id_Proveedor: element.proveedor.id_proveedor,\r\n                id_Producto: element.producto.id_producto,\r\n                nombre_Proveedor: element.proveedor.nombre,\r\n                nombre_Producto: element.producto.nombre,\r\n                cantidad: element.cantidad,\r\n                costo: element.costo,\r\n                fecha: element.fecha,\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron entradas.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener las entradas o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de las entradas\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosProveedores();\r\n        getProveedoresPikerDetails();\r\n        getProductosPikerDetails();\r\n        getTiendasPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarEntradas = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let EntradasFiltradas: Diario[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortEntradas?.criterioOrden && sortEntradas.tipoOrden) {\r\n          EntradasFiltradas = await ordenarEntradas(\r\n            usuario.token,\r\n            EntradasFiltradas,\r\n            sortEntradas?.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        } else {\r\n          EntradasFiltradas = await ordenarEntradas(\r\n            usuario.token,\r\n            EntradasFiltradas,\r\n            \"option6\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(EntradasFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarEntradas(\r\n      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n    );\r\n  }, [sortEntradas, selectedOptionTipoOrden]);\r\n\r\n  useEffect(() => {\r\n    const obtenerFechaVencimiento = async () => {\r\n      if (idProductoDetails && usuario?.token) {\r\n        const result = await getProductoById(usuario.token, idProductoDetails);\r\n        if (result) {\r\n          if (modalEntradasDates?.id_entrada === \"\") {\r\n            const currentDate = new Date();\r\n\r\n            // Extraemos el año, mes y día de la fecha actual\r\n            const year = String(currentDate.getFullYear());\r\n            const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n            const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n            setFechaVencimientoDiaDetails(String(parseInt(day)));\r\n            setFechaVencimientoMesDetails(String(parseInt(month)));\r\n            setFechaVencimientoAnnoDetails(String(parseInt(year)));\r\n          }\r\n          setIsFechaVencimientoDetails(result.isFecha_Vencimiento);\r\n        } else {\r\n          setIsFechaVencimientoDetails(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    obtenerFechaVencimiento();\r\n  }, [idProductoDetails]);\r\n\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    setSelecterActivoDetails(\"\");\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ]);\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setIdProveedorDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n    setIdTiendaDetails(\"\");\r\n    setCantidadDetails(\"\");\r\n    setCostoUSDDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Extraemos el año, mes y día de la fecha actual\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    setFechaDiaDetails(String(parseInt(day)));\r\n    setFechaMesDetails(String(parseInt(month)));\r\n    setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarEntradas(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProveedorSearch(\"\");\r\n    setNombreProductoSearch(\"\");\r\n    setCostoDesdeSearch(\"\");\r\n    setCostohastaSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n  // Retorna el Promedio ponderado\r\n  const calcularCPP = (\r\n    cant_existencia: number,\r\n    CPP_anterior: number,\r\n    cant_i: number,\r\n    costoUnidad_i: number\r\n  ) => {\r\n    const cpp =\r\n      (cant_existencia * CPP_anterior + cant_i * costoUnidad_i) /\r\n      (cant_existencia + cant_i);\r\n    return cpp.toFixed(5);\r\n  };\r\n  const calcularCPPAjustado = (\r\n    cant_existencia: number,\r\n    CPP_anterior: number,\r\n    diferencia: number\r\n  ) => {\r\n    const cpp = (cant_existencia * CPP_anterior + diferencia) / cant_existencia;\r\n    return cpp.toFixed(5);\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewEntrada = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando entrada. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR ENTRADA. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (idProveedorDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo total de la entrada.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await addEntrada(\r\n          usuario.token,\r\n          costoUSDDetails,\r\n          cantidadDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          isFechaVencimientoDetails\r\n            ? `${fechaVencimientoMesDetails}-${fechaVencimientoDiaDetails}-${fechaVencimientoAnnoDetails}`\r\n            : null,\r\n          parseInt(idProveedorDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails),\r\n          parseFloat(costoCUPDetails)\r\n        );\r\n\r\n        setModalMensaje(\"Actualizando costo promedio ponderado del producto\");\r\n        // Actualizar costo promedio ponderado CPP\r\n        // Obtener datos necezarios\r\n        const productoData = await getProductoById(\r\n          usuario.token,\r\n          idProductoDetails\r\n        );\r\n        const cantidadExistencia = await getProductoCantidadTotal(\r\n          usuario.token,\r\n          idProductoDetails\r\n        );\r\n        const cpp = calcularCPP(\r\n          cantidadExistencia,\r\n          productoData.costo_acumulado,\r\n          parseInt(cantidadDetails),\r\n          parseFloat(costoUSDDetails) / parseInt(cantidadDetails)\r\n        );\r\n        await updateProductoCostoAcumulado(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          cpp\r\n        );\r\n\r\n        setModalMensaje(\"Actualizando cantidad en tienda\");\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(cantidadDetails)\r\n        );\r\n\r\n        setModalMensaje(\"Agregando acción\");\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó una entrada de ${cantidadDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        await createProductoInTienda(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          idTiendaDetails\r\n        );\r\n        setIdProveedorDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setIdTiendaDetails(\"\");\r\n        setCostoUSDDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La entrada fue insertado con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarEntradaFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando entrada. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR ENTRADA. Compruebe los siguientes campos:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      const resultViejo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaAuxModificarDetails\r\n      );\r\n\r\n      if (\r\n        idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n        idProductoAuxModificarDetails !== idProductoDetails\r\n      ) {\r\n        if (\r\n          parseInt(resultViejo.cantidad ?? 0) -\r\n            parseInt(cantidadAuxModificarDetails) <\r\n          0\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Operación inválida. No se dispone de sificientes productos para realizar la operoción.\";\r\n        }\r\n      }\r\n      if (\r\n        parseInt(cantidadAuxModificarDetails) - parseInt(cantidadDetails) >\r\n        parseInt(resultNuevo.cantidad ?? 0)\r\n      ) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n      if (idProveedorDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo del producto por unidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await modificarEntrada(\r\n          usuario.token,\r\n          idEntradaDetails,\r\n          costoUSDDetails,\r\n          cantidadDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          isFechaVencimientoDetails\r\n            ? `${fechaVencimientoMesDetails}-${fechaVencimientoDiaDetails}-${fechaVencimientoAnnoDetails}`\r\n            : null,\r\n          parseInt(idProveedorDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails),\r\n          parseFloat(costoCUPDetails)\r\n        );\r\n\r\n        setModalMensaje(\"Actualizando costo promedio ponderado del producto\");\r\n\r\n        // Obtener datos necesarios\r\n        const productoData = await getProductoById(\r\n          usuario.token,\r\n          idProductoDetails\r\n        );\r\n\r\n        const cantidadExistencia = await getProductoCantidadTotal(\r\n          usuario.token,\r\n          idProductoDetails\r\n        );\r\n\r\n        // Verificar valores de costo unitario\r\n        const costoUnitarioNuevo =\r\n          parseFloat(costoUSDDetails) / parseInt(cantidadDetails);\r\n        const costoUnitarioOriginal =\r\n          parseFloat(costoAuxModificarDetails) /\r\n          parseInt(cantidadAuxModificarDetails);\r\n\r\n        // Calcular la diferencia en el costo total\r\n        const diferenciaCostoTotal =\r\n          (costoUnitarioNuevo - costoUnitarioOriginal) *\r\n          parseFloat(cantidadAuxModificarDetails);\r\n\r\n        // Ajustar el costo acumulado\r\n        const costoAcumuladoActual =\r\n          cantidadExistencia * productoData.costo_acumulado;\r\n\r\n        const nuevoCostoAcumulado = costoAcumuladoActual + diferenciaCostoTotal;\r\n\r\n        // Calcular el nuevo CPP\r\n        const nuevoCPP = nuevoCostoAcumulado / cantidadExistencia;\r\n\r\n        // Actualizar el CPP en la base de datos\r\n        await updateProductoCostoAcumulado(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          nuevoCPP.toFixed(5)\r\n        );\r\n\r\n        if (\r\n          idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n          idProductoAuxModificarDetails !== idProductoDetails\r\n        ) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaAuxModificarDetails),\r\n            parseInt(idProductoAuxModificarDetails),\r\n            parseInt(cantidadAuxModificarDetails) * -1\r\n          );\r\n\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(cantidadDetails)\r\n          );\r\n        } else if (cantidadAuxModificarDetails !== cantidadDetails) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(cantidadDetails) - parseInt(cantidadAuxModificarDetails)\r\n          );\r\n        }\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó una entrada de originalmente ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La entrada se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarEntradaFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando entrada. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR ENTRADA. Compruebe los siguientes parámetros:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n\r\n      if (parseInt(cantidadDetails) > parseInt(resultNuevo.cantidad ?? 0)) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n\r\n      if (flag) {\r\n        await deleteEntrada(usuario.token, idEntradaDetails);\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(cantidadDetails) * -1\r\n        );\r\n\r\n        // Actualizar productos en 0 en productoTienda\r\n        await deleteFromProductoTiendaIn_0(usuario.token);\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la entrada con una cantidad de ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La entrada se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdProveedorDetails(\"\");\r\n        setCostoUSDDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre Proveedor\",\r\n    \"Nombre Producto\",\r\n    \"Cantidad\",\r\n    \"Costo Total USD\",\r\n    \"Costo Total CUP\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre Proveedor\",\r\n    \"Nombre Producto\",\r\n    \"Cantidad\",\r\n    \"Costo Total USD\",\r\n    \"Costo Total CUP\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarEntrada && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Entrada</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableDiario\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del Producto\"\r\n                    value={nombreProductoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Proveedor:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del proveedor\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={nombreProveedorSearch}\r\n                    onChangeText={setNombreProveedorSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Rango de Costo en USD:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={idProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setIdProductoDetails(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={idProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setIdProductoDetails(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.blanco,\r\n                        fontSize: 18,\r\n                        justifyContent: \"center\",\r\n                        marginRight: \"25%\",\r\n                        fontWeight: \"bold\", // Para negritas\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Desde\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.blanco,\r\n                        fontSize: 18,\r\n                        marginLeft: \"12%\",\r\n                        justifyContent: \"center\",\r\n                        fontWeight: \"bold\", // Para negritas\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Hasta\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaDesdeSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n\r\n                    <View\r\n                      style={{\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaHastaSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarProductos();\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProveedorDetails}\r\n                    placeholder=\"Seleccione un Proveedor\"\r\n                    setValue={setIdProveedorDetails}\r\n                    items={dropdownItemsNombreProveedor}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProveedoresDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Seleccione un Producto\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProductosDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre de la Tienda */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idTiendaDetails}\r\n                    placeholder=\"Seleccione una Tienda\"\r\n                    setValue={setIdTiendaDetails}\r\n                    items={dropdownItemsNombreTienda}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalMovil}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalMovil}>\r\n                      Costo total de la entrada en USD\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={costoUSDDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoUSDDetails(validNumericValue);\r\n                        const costoCUP =\r\n                          parseFloat(validNumericValue) * cambioMoneda;\r\n                        setCostoCUPDetails(costoCUP.toFixed(2));\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Costo en USD\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*  */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Costo de cada unidad\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      USD:{\" \"}\r\n                      {(\r\n                        parseFloat(costoUSDDetails) / parseInt(cantidadDetails)\r\n                      ).toFixed(5)}{\" \"}\r\n                      CUP:{\" \"}\r\n                      {(\r\n                        (parseFloat(costoUSDDetails) /\r\n                          parseInt(cantidadDetails)) *\r\n                        cambioMoneda\r\n                      ).toFixed(2)}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalMovil}>\r\n                      Costo total de la entrada en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={costoCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoCUPDetails(validNumericValue);\r\n                        const costoUSD =\r\n                          parseFloat(validNumericValue) / cambioMoneda;\r\n                        setCostoUSDDetails(costoUSD.toFixed(5));\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Costo en CUP\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{ width: \"90%\", marginLeft: \"2%\", marginRight: \"2%\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>Fecha</Text>\r\n                  {isDateLoaded && (\r\n                    <MyDateInput\r\n                      dayValue={fechaDiaDetails}\r\n                      monthValue={fechaMesDetails}\r\n                      yearValue={fechaAnnoDetails}\r\n                      onDayChange={setFechaDiaDetails}\r\n                      onMonthChange={setFechaMesDetails}\r\n                      onYearChange={setFechaAnnoDetails}\r\n                      style={{ margin: 20 }}\r\n                      styleText={styles.labelTextModalMovil}\r\n                    />\r\n                  )}\r\n                </View>\r\n\r\n                {/* Campo fecha vencimiento */}\r\n                {isFechaVencimientoDetails && (\r\n                  <View\r\n                    style={{\r\n                      width: \"90%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Fecha vencimiento\r\n                    </Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInputVencimiento\r\n                        dayValue={fechaVencimientoDiaDetails}\r\n                        monthValue={fechaVencimientoMesDetails}\r\n                        yearValue={fechaVencimientoAnnoDetails}\r\n                        onDayChange={setFechaVencimientoDiaDetails}\r\n                        onMonthChange={setFechaVencimientoMesDetails}\r\n                        onYearChange={setFechaVencimientoAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                )}\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar entrada */}\r\n                  {isPermisoModificarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Ajustar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar entrada */}\r\n                  {isPermisoAgregarEntrada &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewEntrada()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {false && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: \"#000\",\r\n                        marginRight: \"5%\",\r\n                        shadowOffset: { width: 3, height: 4 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        marginTop: \"3%\", // Margen adicional entre botones\r\n                      }}\r\n                      onPress={() => {\r\n                        setIsModalChekVisible(true);\r\n                        setIsModalChekEliminarEntrada(true);\r\n                        setMesajeModalChek(\r\n                          `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                        );\r\n                        setModalEntradasDates({\r\n                          id_entrada: \"\",\r\n                          isAddEntrada: false,\r\n                          isModificarEntrada: false,\r\n                          fileEditable: true,\r\n                        });\r\n                      }}\r\n                      disabled={isButtonDisabled}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Eliminar Entrada\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarEntradaFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Entradas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarEntrada && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Entrada\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del Producto\"\r\n              value={nombreProductoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Proveedor:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del proveedor\"\r\n              value={nombreProveedorSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProveedorSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Rango de Costo en USD:</Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={costoDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostoDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={costoHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostohastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() =>\r\n                    filtrarYOrdenarEntradas(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    )\r\n                  }\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableDiario\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProveedorDetails}\r\n                    placeholder=\"Seleccione un Proveedor\"\r\n                    setValue={setIdProveedorDetails}\r\n                    items={dropdownItemsNombreProveedor}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProveedoresDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Seleccione un Producto\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProductosDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre de la Tienda */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTiendasDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTiendasDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idTiendaDetails}\r\n                    placeholder=\"Seleccione una Tienda\"\r\n                    setValue={setIdTiendaDetails}\r\n                    items={dropdownItemsNombreTienda}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"TiendaDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Costo total de la entrada en USD\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={costoUSDDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoUSDDetails(validNumericValue);\r\n                        const costoCUP =\r\n                          parseFloat(validNumericValue) * cambioMoneda;\r\n                        setCostoCUPDetails(costoCUP.toFixed(2));\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Costo en USD\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Contenedor para la texto costo por unidad y el costo CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo texto costo por unidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Costo de cada unidad\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      USD:{\" \"}\r\n                      {(\r\n                        parseFloat(costoUSDDetails) / parseInt(cantidadDetails)\r\n                      ).toFixed(5)}{\" \"}\r\n                      CUP:{\" \"}\r\n                      {(\r\n                        (parseFloat(costoUSDDetails) /\r\n                          parseInt(cantidadDetails)) *\r\n                        cambioMoneda\r\n                      ).toFixed(5)}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Costo total de la entrada en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={costoCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoCUPDetails(validNumericValue);\r\n                        const costoUSD =\r\n                          parseFloat(validNumericValue) / cambioMoneda;\r\n                        setCostoUSDDetails(costoUSD.toFixed(5));\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Costo en CUP\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha entrada */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Fecha entrada\r\n                    </Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo fecha vencimiento */}\r\n                  {isFechaVencimientoDetails && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Fecha vencimiento\r\n                      </Text>\r\n                      {isDateLoaded && (\r\n                        <MyDateInputVencimiento\r\n                          dayValue={fechaVencimientoDiaDetails}\r\n                          monthValue={fechaVencimientoMesDetails}\r\n                          yearValue={fechaVencimientoAnnoDetails}\r\n                          onDayChange={setFechaVencimientoDiaDetails}\r\n                          onMonthChange={setFechaVencimientoMesDetails}\r\n                          onYearChange={setFechaVencimientoAnnoDetails}\r\n                          style={{ margin: 20 }}\r\n                          styleText={styles.labelTextModalDesktop}\r\n                          onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        />\r\n                      )}\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Ajustar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarEntrada &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewEntrada()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {false && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: \"#000\",\r\n                        marginRight: \"5%\",\r\n                        shadowOffset: { width: 3, height: 4 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        marginTop: \"3%\", // Margen adicional entre botones\r\n                      }}\r\n                      onPress={() => {\r\n                        setIsModalChekVisible(true);\r\n                        setIsModalChekEliminarEntrada(true);\r\n                        setMesajeModalChek(\r\n                          `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                        );\r\n                        setModalEntradasDates({\r\n                          id_entrada: \"\",\r\n                          isAddEntrada: false,\r\n                          isModificarEntrada: false,\r\n                          fileEditable: true,\r\n                        });\r\n                      }}\r\n                      disabled={isButtonDisabled}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Eliminar Entrada\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarEntradaFunction()\r\n                      : modificarEntradaFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Entradas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","// App.tsx\r\nimport React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport ProductosViwe from \"./Views/ProductosView\";\r\nimport { HomeScreen } from \"./Views/HomeScreen\";\r\nimport ServiciosView from \"./Views/ServiciosView\";\r\nimport LoginView from \"./Views/LoginView\";\r\nimport { UsuarioProvider } from \"./contexts/UsuarioContext\";\r\nimport { ModalProductsDatesProvider } from \"./contexts/AuxiliarContextFromModalProductsDates\";\r\nimport { SortProductosProvider } from \"./contexts/AuxiliarSortProductos\";\r\nimport { SortMovimientosDatesProvider } from \"./contexts/AuxiliarSortMovimientos\";\r\nimport { ModalProveedoresDatesProvider } from \"./contexts/AuxiliarContextFromModalProveedores\";\r\nimport { ModalEntradasDatesProvider } from \"./contexts/AuxiliarContextModalEntradas\";\r\nimport { SortEntradasProvider } from \"./contexts/AuxiliarSortEntradas\";\r\nimport { ImagenesDeleteProvider } from \"./contexts/DeleteImagenContext\";\r\nimport { SelectedButonProvider } from \"./contexts/globalButonNavbarSelected\";\r\nimport ProveedoresView from \"./Views/ProveedoresView\";\r\nimport EnMyTiendaView from \"./Views/EnMyTiendaView\";\r\nimport EntradasView from \"./Views/EntradasView\";\r\nimport { Administracion } from \"./Views/AdministracionView\";\r\nimport MovimientosView from \"./Views/MovimientosView\";\r\nimport { ModalMovimientosDatesProvider } from \"./contexts/AuxiliarContextModalMovimientos\";\r\nimport { NavigationLostDatesProvider } from \"./contexts/NavigationLostContext\";\r\nimport UsuariosView from \"./Views/UsuariosView\";\r\nimport TiendasView from \"./Views/TiendasView\";\r\nimport { SortUsuariosProvider } from \"./contexts/AuxiliarSortUsuarios\";\r\nimport AccionesView from \"./Views/AccionesView\";\r\nimport { SortAccionesProvider } from \"./contexts/AuxiliarSortAcciones\";\r\nimport PermisosView from \"./Views/PermisosView\";\r\nimport { PermisosUsuarioProvider } from \"./contexts/PermisosNavbarContext\";\r\nimport { PaginadoProductosProvider } from \"./contexts/AuxiliarContextPaginadoproductos\";\r\nimport TipoServicioView from \"./Views/TipoServicioView\";\r\nimport { SortServiciosProvider } from \"./contexts/AuxiliarSortServicios\";\r\nimport CambiarMonedaView from \"./Views/CambiarMonedaView\";\r\nimport ClientesView from \"./Views/ClientesView\";\r\nimport { SortClientesProvider } from \"./contexts/AuxiliarSortClientes\";\r\nimport GarantiasView from \"./Views/GarantiasView\";\r\nimport DeudasView from \"./Views/DeudasView\";\r\nimport DiarioView from \"./Views/DiarioView\";\r\n\r\n// Importar la referencia de navegación global\r\nimport { navigationRef } from \"./contexts/navigationRef\";\r\n\r\nexport type RootStackParamList = {\r\n  Login: undefined;\r\n  Acciones: undefined;\r\n  HomeScreen: undefined;\r\n  Productos: undefined;\r\n  Servicios: undefined;\r\n  Proveedores: undefined;\r\n  \"Mi Tienda\": undefined;\r\n  Entradas: undefined;\r\n  Movimientos: undefined;\r\n  Administración: undefined;\r\n  Usuarios: undefined;\r\n  Tiendas: undefined;\r\n  Permisos: undefined;\r\n  \"Tipo de Servicio\": undefined;\r\n  \"Cambiar Moneda\": undefined;\r\n  ClientesView: undefined;\r\n  Garantias: undefined;\r\n  DeudasView: undefined;\r\n  Diario: undefined;\r\n};\r\n\r\nconst Stack = createStackNavigator<RootStackParamList>();\r\n\r\nfunction App() {\r\n  return (\r\n    <PermisosUsuarioProvider>\r\n      <SortClientesProvider>\r\n        <SortServiciosProvider>\r\n          <PaginadoProductosProvider>\r\n            <SortAccionesProvider>\r\n              <SortUsuariosProvider>\r\n                <NavigationLostDatesProvider>\r\n                  <SelectedButonProvider>\r\n                    <ModalMovimientosDatesProvider>\r\n                      <SortMovimientosDatesProvider>\r\n                        <ImagenesDeleteProvider>\r\n                          <SortEntradasProvider>\r\n                            <ModalEntradasDatesProvider>\r\n                              <ModalProveedoresDatesProvider>\r\n                                <SortProductosProvider>\r\n                                  <ModalProductsDatesProvider>\r\n                                    <UsuarioProvider>\r\n                                      <NavigationContainer ref={navigationRef}>\r\n                                        <Stack.Navigator initialRouteName=\"Login\">\r\n                                          <Stack.Screen\r\n                                            name=\"Login\"\r\n                                            component={LoginView}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"HomeScreen\"\r\n                                            component={HomeScreen}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"Productos\"\r\n                                            component={ProductosViwe}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"Ventas\"\r\n                                            component={ServiciosView}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"Proveedores\"\r\n                                            component={ProveedoresView}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"Mi Tienda\"\r\n                                            component={EnMyTiendaView}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"Entradas\"\r\n                                            component={EntradasView}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"Movimientos\"\r\n                                            component={MovimientosView}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"Administración\"\r\n                                            component={Administracion}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"Usuarios\"\r\n                                            component={UsuariosView}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"Tiendas\"\r\n                                            component={TiendasView}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"Acciones\"\r\n                                            component={AccionesView}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"Permisos\"\r\n                                            component={PermisosView}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"Clientes\"\r\n                                            component={ClientesView}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"Tipo de Servicio\"\r\n                                            component={TipoServicioView}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"Cambiar Moneda\"\r\n                                            component={CambiarMonedaView}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"Garantías\"\r\n                                            component={GarantiasView}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"Deudas\"\r\n                                            component={DeudasView}\r\n                                          />\r\n                                          <Stack.Screen\r\n                                            name=\"Diario\"\r\n                                            component={DiarioView}\r\n                                          />\r\n                                        </Stack.Navigator>\r\n                                      </NavigationContainer>\r\n                                    </UsuarioProvider>\r\n                                  </ModalProductsDatesProvider>\r\n                                </SortProductosProvider>\r\n                              </ModalProveedoresDatesProvider>\r\n                            </ModalEntradasDatesProvider>\r\n                          </SortEntradasProvider>\r\n                        </ImagenesDeleteProvider>\r\n                      </SortMovimientosDatesProvider>\r\n                    </ModalMovimientosDatesProvider>\r\n                  </SelectedButonProvider>\r\n                </NavigationLostDatesProvider>\r\n              </SortUsuariosProvider>\r\n            </SortAccionesProvider>\r\n          </PaginadoProductosProvider>\r\n        </SortServiciosProvider>\r\n      </SortClientesProvider>\r\n    </PermisosUsuarioProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [192], () => (__webpack_require__(5819)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Colors","negro","blanco","azul_Suave","azul_Claro","azul_Oscuro","blanco_Suave","gris_claro","rojo_oscuro","verde_claro","styles","StyleSheet","create","radioButtonDesktop","flexDirection","height","width","alignItems","justifyContent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderColor","borderWidth","padding","borderRadius","marginHorizontal","backgroundColor","radioButtonMovil","marginRight","marginVertical","radioButtonSelected","radioButtonTextDesktop","fontSize","color","textShadowColor","textShadowOffset","textShadowRadius","radioButtonTextMovil","labelTextDesktop","labelTextModalDesktop","marginTop","marginLeft","labelTextModalMovil","labelTextMovil","radioButtonTextSelected","fontWeight","selectedText","navbarDekstop","position","top","zIndex","navbarMobile","menuIcon","left","scrollContainer","flexGrow","paddingVertical","buttonsContainerDesktop","flex","buttonContainterMovile","searchContainerDesktop","loginContainerStilesDesktop","loginContainerStilesMovil","searchContainerMovil","modalViewMesajeContainerDesktop","elevation","modalViewMesajeContainerMovil","textSearchDesktop","textSearchMovil","textNavbarMovil","textImputLogin","paddingHorizontal","textImputModal","textLabelAsInput","lineHeight","textDescroptionLabelAsInput","textImputModalNOEDITABLE","customTextImputSearchFullDesktop","customTextImputSearchFullMovil","customTextImputSearchFiftyDesktop","customTextImputSearchFiftyMovil","movilButtonBusqueda","separatorBlanco","separatorNegro","mobileButton","desktopButton","minWidth","marginBottom","desktopContent","mobileContent","image","text","CustomButtonNavbar","imageSource","onPress","isSelected","scale","useState","Animated","Value","useWindowDimensions","isMobile","buttonStyles","viewStyles","_jsx","TouchableOpacity","style","onPressIn","spring","toValue","useNativeDriver","start","onPressOut","children","View","transform","_jsxs","Image","source","Text","UsuarioContext","createContext","undefined","UsuarioProvider","usuario","setUsuario","Provider","value","useUsuario","context","React","Error","SortEntradasContext","SelectedButonProvider","selectedButon","setSelectedButon","useSelectedButon","modalOverlay","modalContentDesktop","maxHeight","modalContentMovil","option","borderBottomWidth","borderBottomColor","optionImage","tintColor","optionText","CustomDropdown","options","onSelect","modalVisible","setModalVisible","Modal","transparent","animationType","visible","onRequestClose","FlatList","data","keyExtractor","item","renderItem","handleSelect","label","forwardRef","placeholder","autoCapitalize","autoCompleteType","secureTextEntry","keyboardType","cursorColor","onChangeText","onBlur","multiline","numberOfLines","scrollEnabled","editable","onKeyPress","ref","TextInput","placeholderTextColor","autoComplete","cerverHost","cerverHostImages","navigationRef","createRef","navigate","name","params","current","iniciarSecionUser","async","userName","password","response","axios","post","nombre_usuario","contrasenna","msg","error","console","log","addUsuario","token","nombre","email","telefono","direccion","carnet_identidad","detalles_bancarios","rol","tienda","salario_CUP","headers","Authorization","isAxiosError","status","deleteUsuario","id_usuario","delete","actualizarUsuarioConContraseña","activo","put","actualizarUsuarioSinContraseña","getUsuarioById","id_user","get","alert","getAllUsuarios","filtrarUsuario","id_rol","id_tienda","ordenarUsuarios","items","criterio","ascendente","getAccionByID","id_accion","addAccionUsuario","descripcion","fecha","id_tipo_accion","tipo_accion","getAllTiposAccion","filtrarAcciones","fecha_limsup","fecha_liminf","ordenarAcciones","PermisosUsuarioContext","PermisosUsuarioProvider","permisosUsuario","setPermisosUsuario","permisosUsuarioNavbar","setPermisosUsuarioNavbar","usePermisosUsuario","getAllEntradas","getEntradaByID","id_entrada","addEntrada","costo","cantidad","fecha_vencimiento","id_proveedor","id_producto","costo_cup","proveedor","producto","getAllEntradasByProductoId","getAllEntradasByProveedorId","modificarEntrada","deleteEntrada","filtrarEntrada","nombre_proveedor","nombre_producto","costo_liminf","costo_limsup","ordenarEntradas","Navbar","navigation","useNavigation","isExpanded","setIsExpanded","animationValue","useRef","modalUsuarioDetails","setModalUsuarioDetails","contrasennaVieja","setContrasennaVieja","contrasennaNueva1","setContrasennaNueva1","contrasennaNueva2","setContrasennaNueva2","hasPermisoViewProducto","setHasPermisoViewProducto","hasPermisoViewTipoServicio","setHasPermisoViewTipoServicio","hasPermisoViewUsuario","setHasPermisoViewUsuario","hasPermisoViewTienda","setHasPermisoViewTienda","hasPermisoViewAccion","setHasPermisoViewAccion","hasPermisoViewEntrada","setHasPermisoViewEntrada","hasPermisoViewProveedor","setHasPermisoViewProveedor","hasPermisoViewMovimiento","setHasPermisoViewMovimiento","hasPermisoViewCliente","setHasPermisoViewCliente","hasPermisoViewGarantia","setHasPermisoViewGarantia","nombreProductoRef","usePermisosUsuarioNavbar","isModalMensajeView","setModalMensajeView","notificacionesPendientes","setNotificacionesPendientes","entradasProximasVencer","setEntradasProximasVencer","modalMensaje","setModalMensaje","isReflechModalMensajeView","setReflechModalMensajeView","isModalChekEliminarEntrada","setIsModalChekEliminarEntrada","isModalChekVisible","setIsModalChekVisible","mesajeModalChek","setMesajeModalChek","selectedOption","setSelectedOption","butonSelected","setOptions","useEffect","resultEntradaView","resultProductoView","resultProveedorView","resultAccionesView","resultMovimientoLocalView","resultMovimientoGeneralView","resultAgregarUsuario","resultModificarUsuario","resultEliminarUsuario","parseInt","resultClienteView","resultGarantiaView","newOptions","push","require","resultTipoServicio","checkPermiso","buttonsContainerStyles","fechaActual","Date","proximoMes","getFullYear","getMonth","getDate","useFocusEffect","result","localStorage","getItem","fechaLimVencimiento","getEntradasPorVencer","toISOString","length","setItem","JSON","stringify","parse","fetchData","changePassword","flag","validarCampos","trim","contrasenna_vieja","contrasenna_nueva1","contrasenna_nueva2","cambiarContrasennaUsuarios","currentDate","year","String","month","padStart","day","auxAddAccionUsuarioDescripcion","toggleExpansion","timing","duration","animatedStyle","botones","ScrollView","horizontal","contentContainerStyle","showsHorizontalScrollIndicator","CustomDropdownProvicional","LinearGradient","colors","end","overflow","paddingBottom","right","nombre_rol","nombre_tienda","CustomTextImputSearch","map","entrada","index","Math","round","getTime","split","_Fragment","container","dropdown","dropdownTextDesktop","dropdownTextMovil","dropdownContainer","setValue","title","searchable","onDropdownOpen","open","setOpen","textStyles","DropDownPicker","val","setItems","textStyle","dropDownContainerStyle","ModalProductsDatesContext","ModalProductsDatesProvider","modalProductsDates","setModalProductsDates","useModalProductsDates","SortProductosContext","SortProductosProvider","sortProductos","setSortProductos","useSortProductos","getAllRol","getPermisosOfRol","isPermiso","id_permiso","tiene","getAllTiendas","addTienda","comicion","hora_apertura","hora_cierre","tienda_Realizarventa","cantidadARestar","updateTienda","deleteTienda","getTiendaById","getAllTiendasByProduct","isProductoInTienda","getValorMonedaUSD","cambiarValorMonedaUSD","valor","getAllProductos","getAllProductosFromTable","page","getRelacionProductoByTienda","getProductoCantidadTotal","id_Producto","cantidad_total","getProductoById","addProducto","Sku","precio","precio_empresa","isFecha_Vencimiento","costo_acumulado","matchProductoInTienda","addProductoEntrada","addProductoAndImagenes","imagenes","updateProductoCostoAcumulado","updateProducto","updateProductoTienda","createProductoInTienda","deleteProducto","deleteFromProductoTiendaIn_0","filterProducts","sku","precio_liminf","precio_limsup","filterProductsEnTienda","ordenarProducts","moverProducto","id_tienda_origen","id_tienda_destino","expedirExelProductosEnMyTienda","productos","valormoneda","formatExel","precioCUP","parseFloat","precioUSD","toFixed","precioEmpresaCUP","precioEmpresaUSD","cantidadTotal","responseType","expedirExelProductosConColumnas","columnas","columns","CustomDropDownPikerFromMover","crearimagenUnProducto","selectedImages","nameImagen","url","uri","deleteImagenByProducto","id_imagen","addNewMovimiento","tienda_origen","tienda_destino","getMovimientoById","id_movimiento","updateMovimiento","deleteMovimiento","filtrarMovimientos","nombreUsuario","nombreProducto","fechaDesde","fechaHasta","tiendaOrigen","tiendaDestino","filtrarMovimientosEspecial","tiendaUsuario","ordenarMovimientos","PaginadoProductosContext","PaginadoProductosProvider","paginadoProductos","setPaginadoProductos","usePaginadoProductos","MyDateTableProductos","imtemsLength","itemsLength","cambioMoneda","setCambioMoneda","containterStyles","containerMovil","containerDesktop","setPage","itemsPerPage","setItemsPerPage","displayedItems","setDisplayedItems","isModalVisible","isModalModificarVisible","setModalModificarVisible","isModalEliminarVisible","setModalEliminarVisible","isModalMesajeMoverVisible","setModalMesajeMoverVisible","isModalMoverVisible","setModalMoverVisible","isRefleshView","setRefleshView","tiendaMoverDesde","setTiendaMoverDesde","tiendaMoverHasta","setTiendaMoverHasta","nombreTiendaUsuarioActual","setNombreTiendaUsuarioActual","cantidadTiendaUsuarioActual","setCantidadTiendaUsuarioActual","tiendasByProductoDesde","setTiendasByProductoDesde","tiendasByProductoHasta","setTiendasByProductoHasta","tiendaNombreEspecificaHasta","setTiendaNombreEspecificoHasta","tiendaNombreEspecificaDesde","setTiendaNombreEspecificoDesde","moverProductoFunction","isButtonDisabled","setIsButtonDisabled","idProductoOption","cantidadMoverProducto","nombreProductoOption","moverProdcutoFunctionValidarCampos","cantidadDelProductoEnLaTiendaDesde","encontrado","isPermisoOpcionesDeCeldaMoverGeneral","tiendaEspecificaHasta","find","tiendaEspecificaDesde","resultTienda","resultCantidadEnTienda","cargarVariablesMover","detailsModalView","isAddProducto","fileEditable","isModificarProducto","isAddProductoShowProveedoresTiendas","isAddProductoShowProveedores","isPermisoOpcionesDeCelda","setIsPermisoOpcionesDeCelda","isPermisoOpcionesDeCeldaModificar","setIsPermisoOpcionesDeCeldaModificar","isPermisoOpcionesDeCeldaEliminar","setIsPermisoOpcionesDeCeldaEliminar","isPermisoOpcionesDeCeldaMoverLocal","setIsPermisoOpcionesDeCeldaMoverLocal","setIsPermisoOpcionesDeCeldaMoverGeneral","resultadoCondicionalOpcionesDeCelda","tieneOpciones","setCantidadMoverProducto","resultPermisoButonOptionModificar","resultPermisoButonOptionEliminar","resultPermisoButonOptionMoverLocal","resultPermisoButonOptionMoverGeneral","from","to","min","setTimeout","slice","handleChangePage","newPage","showTableColumns","DataTable","Header","column","Title","headerColumn","numeric","headerTextMovil","headerTextDesktop","paddingTop","aux","criterioOrden","tipoOrden","sortProductosAux","setIdProductoOption","setNombreProductoOption","setOption","toggleModal","auxNombreProducto","toggleModalOption","resultTiendas","Array","isArray","allTiendasMapeados","Promise","all","element","auxIdTiendas","auxDataTiendasProducto","forEach","datosTendaExisteProducto","existeTienda","some","cargarDatosTiendaParaMover","auxDeleteProductoById","imagen","substring","deleteProductoById","nuevosProductos","filter","Row","Cell","handerRowMovil","textAlign","textAlignVertical","flexWrap","disabled","numericValue","replace","paginationContainer","paginationButtonMovil","disabledButton","paginationLabel","handerRowDesktop","paginationButtonDesktop","MyDateTableModalShowDatesTienda","handerRow","MyDateTableModalShowDateProveedores","runEffects","costoPorUnidad","NavigationLostDatesContext","NavigationLostDatesProvider","navigationLostDates","setNavigationLostDates","isOnToken","useNavigationLostDates","radioButton","radioButtonText","CustomRadioButton","selected","ProductosViwe","optionsIsFechaVencimiento","selecterActivoDetails","setSelecterActivoDetails","idProductoDetails","setIdProductoDetails","nombreProductoDetails","setNombreProductoDetails","precioProductoUSDDetails","setPrecioProductoUSDDetails","precioProductoCUPDetails","setPrecioProductoCUPDetails","costoPromedio","setCostopromedio","precioEmpresaProductoDetails","setPrecioEmpresaProductoDetails","skuDetails","setSkuDetails","descripcionProductoDetails","setDescripcionProductoDetails","setSelectedImages","deleteImages","setDeleteImages","modificarAddImages","setModificarAddImages","isModalMensajeViewExel","setModalMensajeViewExel","isBotonModalMesajeVisible","setIsBotonModalMesajeVisible","optimizacionAbrirPorPrimeraVesProductosView","setOptimizacionAbrirPorPrimeraVesProductosView","controlFiltrarOPaginar","setControlFiltrarOPaginar","isPermisoButtonAddProducto","setIsPermisoButtonAddProducto","isPermisoHistorialDeProveedores","setIsPermisoHistorialDeProveedores","opcionesDeCelda","onDrop","filterItems","setFilterItems","filterItemsLength","setFilterItemsLength","tiendasByProducto","setTiendasByProducto","proveedorByProducto","setProveedorByProducto","handleKeyPress","event","nativeEvent","key","filtrarYOrdenarProductos","focus","cantidad_total_productos","productosMapeados","tiendas","toString","prevFilterItems","auxiliarPagination","dropdownItems","setDropDownItems","nombreProductoSearch","setNombreProductoSearch","sKUSearch","setSKUSearch","cantidadSearch","setCantidadSearch","rangoPrecioDesdeSearch","setRangoPrecioDesdeSearch","rangoPrecioHastaSearch","setRangoPrecioHastaSearch","selectedValueNombreTienda","setSelectedValueNombreTienda","selectedOptionTipoOrden","setSelectedOptionTipoOrden","loading","setLoading","loadingOfExel","setLoadingOfExel","callModalAddProducto","cargarDetailsOfProducto","getTiendasByProducto","entradas","proveedores","cargarProveedoresPorProducto","imagesPromises","httpImage","img","id_image","parseHttp","id","images","obtenerProductosConPermisosYDatos","resultPermisoButonAddProducto","resultPermisoHistorialDeProveedores","tiendasMapeados","getDatesTiendaPiker","useCallback","auxOrdenar","setAxuOrdenar","productosFiltrados","auxiliarFunctionFilter","handleImageUpload","launchImageLibrary","mediaType","quality","includeBase64","selectionLimit","didCancel","errorMessage","assets","processedImages","asset","size","getImageFileSize","fileResponse","fetch","blob","file","File","fileName","type","compressedFile","imageCompression","maxSizeMB","maxWidthOrHeight","useWebWorker","base64","convertFileToBase64","Object","assign","isCompressed","convertUriToBase64","startsWith","resolve","reject","reader","FileReader","onload","onerror","readAsDataURL","handleRemoveImage","updatedImages","_","i","deleteImage","prevImages","clearFields","addNewProducto","validarMesaje","resultAllProductos","nuevoProducto","prevItems","auxDataImagesResponses","cont","entries","resul","modificarProducto","columnasMyDateTableTiendaModal","columnasMyDateTableProveedorModal","columnasMyDateTable","ActivityIndicator","validNumericValue","PanGestureHandler","onGestureEvent","resultAllTiendas","itemsFromExel","Nombre","Existencia","Precio_USD","Precio_CUP","Precio_Mayorista","resultProductoTienda","elemen","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","exportarExel","HomeScreen","resultAgregarTipoServicioView","resultModificarTipoServicioView","resultEliminarTipoServicioView","resultEliminarClienteView","resultModificarClienteView","resultAgregarClienteView","resultVerClienteView","cargarPermisosDeUsuario","searchInput","CustomDropdownDetails","readOnly","handleOpen","prevOpen","searchPlaceholder","searchTextInputStyle","ModalEntradasDatesContext","ModalEntradasDatesProvider","modalEntradasDates","setModalEntradasDates","useModalEntradasDates","MyDateInput","dayValue","monthValue","yearValue","onDayChange","onMonthChange","onYearChange","styleText","isReadOnly","setDay","setMonth","setYear","days","setDays","activePicker","setActivePicker","numberOfDays","getDaysInMonth","Number","daysArray","updateDate","newDay","newMonth","newYear","togglePicker","picker","inputWrapper","containerStyle","pickerContainer","dropDownContainer","MyDateTableModalDataMoverTiendas","SortServiciosContext","SortServiciosProvider","sortServicios","setSortServicios","useSortServicios","MyDateTableServicios","columnasParaLaTablaMoverProducto","isAddEntrada","isModificarEntrada","isPermisoServicioGeneral","setIsPermisoServicioGeneral","resultServicioGeneral","obtenerCambioPrecio","mensajeOfEndTable","mensaje","sumaMinoristaUSD","sumaMayoristaUSD","sumaTransferencias","devuelto","cantidad_transferida","id_Tipo_servicio","mensajeOfEndTableGanancia","sumaGanancia","costo_tipo_servicio","sortEntradasAux","idEntradaOption","setIdEntradaOption","id_Servicio","id_Deuda","nombreCliente","nombreTienda","nombreTipoServicio","id_Cliente","getServicioByID","id_servicio","addServicio","nota","id_tipo_servicio","id_cliente","id_garantia","id_encargo","tipo_servicio","cliente","garantia","deuda","encargo","modificarServicio","deleteServicio","filtrarSrvicio","nombre_cliente","ordenarServicios","getAllTipoServicios","getTipoServicioByID","id_TipoServicio","addTipoServicio","modificarTipoServicio","deleteTipoServicio","filtrarTipoSrvicio","getAllClientes","getClienteById","addCliente","Cif","actualizarCliente","deleteCliente","filtrarCliente","cif","detalle_bacario","ordenarClientes","addVenta","servicio","deleteVenta","getVentaByIDOfServicio","CustomRadioButtonSingle","getGarantiaByID","addGarantia","duracion","modificarGarantia","deleteGarantia","filtrarGarantia","duracion_limsup","duracion_liminf","addEncargo","adelanto","fecha_final","modificarEncargo","deleteEncargo","getDeudaByID","id_deuda","addDeuda","id_pagos_deuda","pago_deuda","id_pago_deuda","deleteDeuda","filtrarDeudas","deuda_liminf","deuda_limsup","saldada","addPagoDeuda","pagada","deletePagoDeuda","ServiciosView","capaPrioridadFechaDetails","setCapaPrioridadFechaDetails","capaPrioridadTiendasDetails","setCapaPrioridadTiendasDetails","capaPrioridadTipoServicioDetails","setCapaPrioridadTipoServicioDetails","capaPrioridadProductoDetails","setCapaPrioridadProductoDetails","capaPrioridadClienteDetails","setCapaPrioridadClienteDetails","capaPrioridadFechaDesdeSearsh","setCapaPrioridadFechaDesteSearsh","capaPrioridadFechaHastaSearsh","setCapaPrioridadFechaHastaSearsh","capaPrioridadTipoServicioSearsh","setCapaPrioridadTipoServicioSearsh","capaPrioridadTiendaSearsh","setCapaPrioridadTiendaSearsh","controlarCapas","prioridad","idFirstTimeProducto","setIdFirsTimeProducto","auxOptimizacion","setAuxOptimizacion","isModalAddMultiServicio","setIsModalAddMultiServicio","isModalAddMultiServicioSingle","setIsModalAddMultiServicioSingle","multiServiciosItems","setMltiServiciosItems","idClienteMutiDetails","setIdClienteMultiDetails","idTiendaMultiDetails","setIdTiendaMultiDetails","idServicioDetails","setIdServicioDetails","idClienteDetails","setIdClienteDetails","idTiendaDetails","setIdTiendaDetails","idTipoServicioDetails","setIdTipoServicioDetails","cantidadProductoDetails","setCantidadProductoDetails","costoPromedioProductoCUPDetails","setCostoPromedioProductoCUPDetails","costoPromedioProductoUSDDetails","setCostoPromedioProductoUSDDetails","precioUSDDetails","setPrecioUSDDetails","precioUSDDetailsAuxVal","setPrecioUSDDetailsAuxVal","devueltoDetails","setDevueltoDetails","precioCUPDetails","setPrecioCUPDetails","notaDetails","setNotaDetails","descripcionDetails","setDescripcionDetails","fechaDiaDetails","setFechaDiaDetails","fechaMesDetails","setFechaMesDetails","fechaAnnoDetails","setFechaAnnoDetails","fechaDiaDetailsEncargo","setFechaDiaDetailsEncargo","fechaMesDetailsEncargo","setFechaMesDetailsEncargo","fechaAnnoDetailsEncargo","setFechaAnnoDetailsEncargo","adelantoEncargo","setAdelantoEncargo","isGarantiaDetails","setIsGarantiaDetails","isDeudaDetails","setIsDeudaDetails","isGarantiaDetailsViejo","setIsGarantiaDetailsViejo","idGarantiaDetails","setIdGarantiaDetails","duracionGarantiaDetails","setDuracionGarantiaDetails","cantidadTransferencia","setCantidadTransferencia","adelantoUSDDeudaDetails","setAdelantoUSDDeudaDetails","adelantoCUPDeudaDetails","setAdelantoCUPDeudaDetails","duracionGarantiaDetailsVieja","setDuracionGarantiaDetailsVieja","idEncargoDetails","setIdEncargoDetails","idDeudaDetails","setIdDeudaDetails","auxRedondeo","setAuxRedondeo","idTiendaDetailsViejo","setIdTiendaDetailsViejo","idProductoDetailsViejo","setIdProductoDetailsViejo","cantidadProductoDetailsViejo","setCantidadProductoDetailsViejo","idTipoServicioDetailsViejo","setIdTipoServicioDetailsViejo","devueltoDetailsViejo","setDevueltoDetailsViejo","isDateLoaded","setIsDateLoaded","idProductoAuxModificarDetails","setIdProductoAuxModificarDetails","idTiendaAuxModificarDetails","setIdTiendaAuxModificarDetails","cantidadAuxModificarDetails","setCantidadAuxModificarDetails","isVentaProducto","setIsVentaProducto","isEncargoProducto","setIsEncargoProducto","isPermisoAgregarServicio","setIsPermisoAgregarServicio","isPermisoEliminarServicio","setIsPermisoEliminarServicio","isPermisoModificarServicio","setIsPermisoModificarServicio","isPermisoServicioLocal","setIsPermisoServicioLocal","isPermisoVerCostoVenta","setIsPermisoVerCostoVenta","mensajeSumaVenta","dropdownItemsNombreCliente","setDropDownItemsNombreCliente","dropdownItemsNombreproducto","setDropDownItemsNombreProducto","dropdownItemsNombreTienda","setDropDownItemsNombreTienda","dropdownItemsNombreTipoServicio","setDropDownItemsNombreTipoServicio","nombreClienteSearch","setNombreClienteSearch","nombreProductoSearsh","idTipoServicioSearch","setIdTipoServicioSearch","idTiendaSearch","setIdTiendaSearch","fechaDiaDesdeSearch","setFechaDiaDesdeSearch","fechaMesDesdeSearch","setFechaMesdesdeSearch","fechaAnnoDesdeSearch","setFechaAnnoDesdeSearch","fechaDiaHastaSearch","setFechaDiaHastaSearch","fechaMesHastaSearch","setFechaMesHastaSearch","fechaAnnoHastaSearch","setFechaAnnoHastaSearch","optionsDevueltoDetails","handleRadioButtonPress","lastWeekDate","setDate","lastMonthDate","filtrarYOrdenarServicios","callModalAddProveedor","partes","anio","mes","dia","resultventa","cargarDetailsOfServicio","resultServicio","cargarDetailsOfProductoVenta","auxiliar","resultProdcuto","auxiliarAsyncFuncion","resultAgregarServicio","Boolean","resultEliminarServicio","resultModificarServicio","resulServicioLocal","tipoServiciosMapeados","getTipoServicioPikerDetails","ClientesMapeados","getClientesPikerDetails","getTiendasPikerDetails","getProductosPikerDetails","serviciosFiltradas","id_Tienda","id_Garantia","venta","auxSetModalServicioSingleDates","auxSetModalProovedoresDates","addNewMultiServicio","sumaPreciosTotales","auxIsProductoInTienda","validarCamposSingle","auxFlag","itemsOrdenados","sort","b","transferenciaRestante","precioItem","itemActualizado","resultAddServicio","resultDeuda","addNewMultiServicioToList","fechaBase","fechaEncargo","detallesSingleServiceItem","max","addNewServicio","modificarServicioFunction","cantidadEnTiendaNueva","eliminarServicioFunction","pagos_deuda","pagoDeuda","columnasMyDateTableEntradaModal","direction","margin","ellipsizeMode","findIndex","splice","reduce","total","costoUSD","LoginView","ContainerStyle","isModalMesajeVisible","setModalMesajeVisible","modalMesaje","setModalMesaje","username","setUsername","pasword","setPasword","iniciarSecion","clear","resultUserAuth","resultUserDates","permisos","resizeMode","SortMovimientosDatesContext","SortMovimientosDatesProvider","SortMovimientosDates","setSortMovimientosDates","useSortMovimientosDates","ModalProveedoresDatesContext","ModalProveedoresDatesProvider","modalProveedoresDates","setModalProveedoresDates","useModalProveedoresDates","SortEntradasProvider","sortEntradas","setSortEntradas","useSortEntradas","ImagenesDeleteContext","ImagenesDeleteProvider","imagenesDelete","setImagenesDelete","getAllProveedores","getProveedorById","addProveedor","actualizarProveedor","detalle_bancario","deleteProveedor","filtrarProveedor","MyDateTableProveedores","isAddProveedor","isModificarProveedor","isDetallesProveedores","id_Proveedor","correo","MyDateTableModalShowDatesEntradas","ProveedoresView","idProveedorDetails","setIdProveedorDetails","nombreProveedorDetails","setNombreProveedorDetails","correoEmailProveedorDetails","setCorreoEmailProveedorDetails","direccionProveedorDetails","setDireccionProveedorDetails","telefonoProveedorDetails","setTelefonoProveedorDetails","notaProveedorDetails","setNotaProveedorDetails","cfiProveedorDetails","setCfiProveedorDetails","detallesBancariosProveedorDetils","setDetallesBancariosProveedorDetils","isModalChekEliminarVisible","setIsModalChekEliminarVisible","isPermisoAgregarProveedor","setIsPermisoAgregarProveedor","isPermisoEliminarProveedor","setIsPermisoEliminarProveedor","isPermisoModificarProveedor","setIsPermisoModificarProveedor","entradasByProveedor","setEntradasByProveedor","nombreProveedorSearch","setNombreProveedorSearch","correoEmyleSearch","setCorreoEmyleSearch","telefonoSearch","setTelefonoSearch","detallesBancariosSearch","setDetallesBancariosSearch","filtrarYOrdenarProovedores","Cfi","resultEntradasByProveedor","entradasMapeados","cargarDetailsOfProveedores","resultAgregarProveedor","resultEliminarProveedor","resultModificarProveedor","proveedoresMapeados","obtenerTodosLosProveedores","addNewProveedor","modificarProveedor","eliminarProveedor","MyDateTableEnMyTienda","tiendaByProductoSelected","setTiendaByProductoSelected","EnMyTiendaView","optimizacionFirstLoadingData","setOptimizacionFirstLoadingData","setCostoPromedio","precioProductoDetails","setPrecioProductoDetails","isModalMesajeRestarVisible","setModalMesajeRestarVisible","isModalRestarProductos","setModalRestarProductos","isModalVenderProductoVisible","setIsModalVenderProductoVisible","cantidadProductoServicioDetails","setCantidadProductoServicioDetails","cantidadRestarProducto","setCantidadRestarProducto","restarProductosValidarCampos","restarProductosFuction","cantidadNueva","isPermisoMoverGeneral","isPermisoMoverLocal","setIsPermisoMoverLocal","setIsPermisoMoverGeneral","isPermisoRestarProducto","setIsPermisoRestarProducto","resultPermisoVentaGeneral","checkPermisoServicios","resultProducto","auxiliarNombreTiendaPiker","includeExtra","availableSpace","newImages","MyDateTableEntradas","cambioMoneda_aux","sumaCostos","id_Entrada","nombre_Proveedor","nombre_Producto","MyDateInputVencimiento","EntradasView","capaPrioridadProductosDetails","setCapaPrioridadProductosDetails","capaPrioridadProveedoresDetails","setCapaPrioridadProveedoresDetails","idEntradaDetails","setIdEntradaDetails","cantidadDetails","setCantidadDetails","costoUSDDetails","setCostoUSDDetails","costoCUPDetails","setCostoCUPDetails","fechaVencimientoDiaDetails","setFechaVencimientoDiaDetails","fechaVencimientoMesDetails","setFechaVencimientoMesDetails","fechaVencimientoAnnoDetails","setFechaVencimientoAnnoDetails","isFechaVencimientoDetails","setIsFechaVencimientoDetails","costoAuxModificarDetails","setCostoAuxModificarDetails","isPermisoAgregarEntrada","setIsPermisoAgregarEntrada","isPermisoEliminarEntrada","setIsPermisoEliminarEntrada","isPermisoModificarEntrada","setIsPermisoModificarEntrada","dropdownItemsNombreProveedor","setDropDownItemsNombreProveedor","costoDesdeSearch","setCostoDesdeSearch","costoHastaSearch","setCostohastaSearch","fechaDesdeSearch","setFechaDesdeSearch","fechaHastaSearch","setFechaHastaSearch","filtrarYOrdenarEntradas","yearVencimiento","monthVencimiento","dayVencimiento","cargarDetailsOfEntradas","resultAgregarEntrada","resultEliminarEntrada","resultModificarEntrada","getProveedoresPikerDetails","EntradasFiltradas","obtenerFechaVencimiento","addNewEntrada","modificarEntradaFunction","resultNuevo","resultViejo","eliminarEntradaFunction","movilButton","textDesktop","textMovil","CustomButtonAdministradorView","Administracion","ModalMovimientosDatesContext","ModalMovimientosDatesProvider","modalMovimientosDates","setModalMovimientosDates","useModalMovimientosDates","MyDateTableMovimientos","isAddMovimiento","isModificarMovimiento","id_Movimiento","nombre_Usuario","nombreTiendaOrigen","nombreTiendaDestino","id_TiendaOrigen","MovimientosView","setCapaPrioridadFechaDesdeSearsh","capaPrioridadTiendaOrigenSearsh","setCapaPrioridadTiendaOrigenSearsh","capaPrioridadTiendaDestinoSearsh","setCapaPrioridadTiendaDestinoSearsh","capaPrioridadViewTiendasSearsh","setCapaPrioridadViewTiendasSearsh","capaPrioridadViewFechaSearsh","setCapaPrioridadViewFechaSearsh","capaPrioridadViewFechaDetails","setCapaPrioridadViewFechaDetails","capaPrioridadViewTiendasDetails","setCapaPrioridadViewTiendasDetails","capaPrioridadViewProductosDetails","setCapaPrioridadViewProductosDetails","yesterdayDate","filtrarYOrdenarMovimientos","idMovimientoDetails","setIdMovimientoDetails","idUsuarioDetails","setIdUsuarioDetails","nombreUsuarioDetails","setNombreUsuarioDetails","idTiendaOrigenDetails","setIdTiendaOrigenDetails","idTiendaDestinoDetails","setIdTiendaDestinoDetails","isMovimientoEditable","setIsMovimientoEditable","isMovimientoEliminable","setIsMovimientoEliminable","idTiendaOrigenAuxModificarDetails","setIdTiendaOrigenAuxModificarDetails","idTiendaDestinoAuxModificarDetails","setIdTiendaDestinoAuxModificarDetails","isPermisoEliminarMovimiento","setIsPermisoEliminarMovimiento","isPermisoModificarMovimiento","setIsPermisoModificarMovimiento","optimizacionAbrirPorMovimientosProPrimeraVes","setOptimizacionAbrirPorMovimientosProPrimeraVes","dropdownItemsNombreUsuario","setDropDownItemsNombreUsuario","nombreUsuarioSearch","setNombreUsuarioSearch","tiendaOrigenSearch","setTiendaOrigenSearch","tiendaDestinoSearch","setTiendaDestinoSearch","callModalAddMovimiento","id_salida","cargarDetailsOfMovimiento","resultPermisoOptionMoverLocal","resultPermisoOptionMoverGeneral","usuariosMapeados","getUsuariosPikerDetails","MovimientosFiltradas","id_TiendaDestino","modificarMovimiento","resultOrigen","resultDestino","resultNuevoOrigen","resultNuevoProductoOrigen","resultNuevoProductoNuevoOrigen","cantidadVieja","cantidadEnOrigen","cantidadEnDestino","cantidadEnNuevoOrigen","cantidadNPOrigen","cantidadNPOEnTiendaNuevoOrigen","auxNombreProductoAccion","lavel","eliminarMovimiento","cantidadEnTiendaDestino","auxNombreTiendaOrigen","auxNombreTiendaDestino","SortUsuariosContext","SortUsuariosProvider","sortUsuarios","setSortUsuarios","useSortUsuarios","MyDateTableUsuarios","id_Usuario","UsuariosView","capaPrioridadTiendasSearsh","setCapaPrioridadTiendasSearsh","capaPrioridadRolesSearsh","setCapaPrioridadRolesSearsh","dropdownItemsTiendasDetails","setDropDownItemsTiendasDetails","dropdownItemsRolesDetails","setDropDownItemsRolesDetails","setIdusuarioDetails","nombreDelUsuarioDetails","setNombreDelUsuarioDetails","salario_CUPDetails","setsalario_CUPDetails","nombreUsuarioDetailsOriginal","setNombreUsuarioDetailsOriginal","correoEmailUsuarioDetails","setCorreoEmailUsuarioDetails","contrasennaUsuarioDetails","setContrasennaUsuarioDetails","CarnetIdentidadUsuarioDetails","setCarnetIdentidadUsuarioDetails","direccionUsuarioDetails","setDireccionUsuarioDetails","telefonoUsuarioDetails","setTelefonoUsuarioDetails","detallesBancariosUsuarioDetils","setDetallesBancariosUsuarioDetils","tiendaUsuarioDetails","setTiendaUsuarioDetails","rolUsuarioDetails","setRolUsuarioDetails","isPermisoModificarGerarquico","setIsPermisoModificarGerarquico","dropdownItemsTiendasSearsh","setDropDownItemsTiendasSearsh","dropdownItemsRolesSearsh","setDropDownItemsRolesSearsh","tiendaNombreSeleccionadaSearch","setTiendaNombreSeleccionadaSearch","rolNombreSeleccionadoSearsh","setRolNombreSeleccionadoSearsh","filtrarYOrdenarUsuarios","resultRoles","rolesMapeados","cargarDetailsOfUsuario","carnet_Identidad","obtenerTodosLosUsuarios","getDatesRolesPiker","getDatesTiendasAndRolesParaAgregarUsuario","addNewUsuario","resultUsuarios","modificarUsuario","eliminarUsuario","filteredText","test","MyDateTableTiendasView","onChange","DateTimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","placeholderText","TiendasView","crearHora","hora","minutos","nombreTiendaDetails","setNombreTiendaDetails","direccionTiendaDetails","setDireccionTiendaDetails","comicionTiendaDetails","setComicionTiendaDetails","horaApertura","setHoraApertura","horaCierre","setHoraCierre","setHours","setMinutes","setSeconds","cargarDetailsOfTienda","TiendasMapeados","obtenerTodasLasTiendas","addNewTienda","includes","toLocaleTimeString","formattedValue","newValue","CustomDateTimePicker","SortAccionesContext","SortAccionesProvider","sortAcciones","setSortAcciones","useSortAcciones","MyDateTableAcciones","id_Accion","nombre_TipoAccion","AccionesView","capaPrioridadTipoAccionSearsh","setCapaPrioridadTipoAccionSearsh","idAccionDetails","setIdAccionDetails","idUsuarioAccionDetails","setIdUsuarioAccionDetails","idTipoAccionDetails","setTipoAccionDetails","nombreUsuarioAccionDetails","setNombreUsuarioAccionDetails","nombreTipoAccionDetails","setNombreTipoAccionDetails","descripcionSearch","setDescripcionSearch","selectedValueNombreTipoAccion","setSelectedValueNombreTipoAccion","dropdownItemsTipoAccion","setDropDownItemsTipoAccion","filtrarYOrdenarAcciones","cargarDetailsOfAccion","TipoAccionMapeados","getDatesTipoAccionPiker","AccionesFiltradas","id_TipoAccion","MyDateTablePermisos","PermisosView","costoDetails","setCostoDetails","MyDateTableTipoServicio","nombre_TipoServicio","TipoServicioView","nombreTipoServicioDetails","setNombreTipoServicioDetails","isPermisoAgregarTipoServicio","setIsPermisoAgregarTipoServicio","isPermisoEliminarTipoServicio","setIsPermisoEliminarTipoServicio","isPermisoModificarTipoServicio","setIsPermisoModificarTipoServicio","nombreTipoServicioSearch","setNombreTipoServicioSearch","obtenerTodosLosTipoServicios","filtrarYOrdenarTipoServicio","addNewTipoServicio","modificarTipoServicioFunction","CambiarMonedaView","cambiarMoneda","SortClientesContext","SortClientesProvider","sortClientes","setSortClientes","useSortClientes","MyDateTableClientes","ClientesView","nombreClienteDetails","setNombreClienteDetails","correoEmailClienteDetails","setCorreoEmailClienteDetails","telefonoClienteDetails","setTelefonoClienteDetails","notaClienteDetails","setNotaClienteDetails","descripcionClienteDetails","setDescripcionClienteDetails","cfiClienteDetails","setCfiClienteDetails","detallesBancariosClienteDetils","isPermisoAgregarCliente","setIsPermisoAgregarCliente","isPermisoEliminarCliente","setIsPermisoEliminarCliente","isPermisoModificarCliente","setIsPermisoModificarCliente","cifSearch","setCifSearch","filtrarYOrdenarClientes","cargarDetailsOfCliente","clientesMapeados","obtenerTodosLosClientes","addNewCliente","MyDateTableGarantias","GarantiasView","setIdGarantiaDetaisl","isPermisoModificarGarantia","setIsPermisoModificarGarantia","nombreProductoVentaDetails","setNombreProductoVentaDetails","rangoDuracionDesdeSearch","setRangoDuracionDesdeSearch","rangoDuracionHastaSearch","setRangoDuracionHastaSearch","filtrarYOrdenarGarantias","cargarDetailsOfGarantia","resultModificarGarantia","modificarGarantiaFunction","eliminarGarantiaFunction","MyDateTableDeudas","isDeudaSaldadaFromTable","pago_deudas","suma","pago","total_pagado","MyDateTablePagoDeudaWithButton","onButtonPress","actionColumn","actionButton","actionButtonText","DeudasView","pagoDeudaByDeudaDetails","setPagoDeudaByDeudaDetails","isModalAddPagoDeudaView","setIsModalAddPagoDeudaView","cantidadUSDAddPagoDeuda","setCantidadUSDAddPagoDeuda","cantidadCUPAddPagoDeuda","setCantidadCUPAddPagoDeuda","setTotal_pagado","deudaUnitaria","setDeudaUnitaria","cantidad_restante","setCantidad_restante","isDeudaSaldadaSearsh","setIsDeudaSaldadaSearsh","rangoDeudaDesdeSearch","rangoDeudaHastaSearch","selecterEstadoDeudaSearch","setSelecterEstadoDeudaSearsh","optionsEstadoDeuda","filtrarYOrdenarDeudas","cargarDetailsOfDeuda","deudasFiltradas","deletePagoDeudaFronTabla","prevPagoDeuda","addNewDeuda","resultPagoDeuda","columnasMyDateTablePagoDeudaModal","sumaPagada","eliminarDeudaFunction","MyDateTableDiario","DiarioView","productoData","cantidadExistencia","cpp","cant_existencia","CPP_anterior","cant_i","costoUnidad_i","calcularCPP","diferenciaCostoTotal","nuevoCPP","costoCUP","Stack","createStackNavigator","NavigationContainer","Navigator","initialRouteName","Screen","component","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","r","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","e","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}