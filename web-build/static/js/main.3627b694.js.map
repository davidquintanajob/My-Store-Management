{"version":3,"file":"static/js/main.3627b694.js","mappings":"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D,IACU,KAApC7wB,SAASitB,UAEHlD,GACJj2B,EAAQgF,MACRi2B,GACA,GAAGF,MAA2BF,MAA0BF,KACxD9B,IAGFM,KAA0B4D,IACU,KAApC7wB,SAASitB,WAEH/C,GACJp2B,EAAQgF,MACRi2B,GACA,GAAGF,MAA2BF,MAA0BF,KACxD9B,GACAsD,IAKwC,IAAzCjwB,SAAS6wB,KACiC,IAAzC7wB,SAAS6wB,KACyB,IAApC7wB,SAASitB,KAC2B,IAApCjtB,SAASitB,YAGH9nB,GACJrR,EAAQgF,MACR23B,GACAF,GACA,IAA6C,EAA1CvwB,SAAS2wB,WAGR3H,GACJl1B,EAAQgF,MACR23B,GACA9D,KAMFQ,KAA4BwD,IAC5B3a,KAAsBya,IACtB1D,KAAoBwD,UAEdprB,GACJrR,EAAQgF,MACRkd,GACA+W,GACA,IACE/sB,SAASmtB,IACTntB,SAAS2wB,YAIP7H,GACJh1B,EAAQgF,MACRkd,GACA2W,GACAQ,KAIDF,KAA0B4D,IACW,IAApC7wB,SAASitB,KACyB,IAApCjtB,SAASitB,KAC2B,KAApCjtB,SAASitB,WAGHnE,GACJh1B,EAAQgF,MACRkd,GACA2W,GACAQ,UAGIhoB,GACJrR,EAAQgF,MACR23B,GACAF,GACA,IAA6C,EAA1CvwB,SAAS2wB,WAGRxrB,GACJrR,EAAQgF,MACRkd,GACA+W,GACA,GAAG/sB,SAASmtB,QAGdJ,KAAoBwD,IACpBva,KAAsBya,WAEhB3H,GACJh1B,EAAQgF,MACRkd,GACA2W,GACAQ,UAGIhoB,GACJrR,EAAQgF,MACR23B,GACAF,GACA,IAA6C,EAA1CvwB,SAAS2wB,WAGRxrB,GACJrR,EAAQgF,MACRkd,GACA+W,GACA,GAAG/sB,SAASmtB,QAMdQ,KAAoBoD,IACA,aAApBpD,IACqC,IAApC3tB,SAASitB,KAC4B,IAApCjtB,SAASitB,KAC2B,KAApCjtB,SAASitB,IASXU,KAAoBoD,IACA,iBAApBpD,IACqC,IAApC3tB,SAASitB,KAC4B,IAApCjtB,SAASitB,KAC2B,KAApCjtB,SAASitB,WAEL9nB,GACJrR,EAAQgF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","sources":["styles/Colors.tsx","styles/Styles.tsx","components/CustomButtonLogin.tsx","contexts/UsuarioContext.tsx","contexts/globalButonNavbarSelected.tsx","components/CustomButonLoginOptions.tsx","components/CustomTextImputSearch.tsx","services/cerverHost.tsx","contexts/navigationRef.tsx","services/UsuarioServices.tsx","services/AccionesUsuarioServices.tsx","contexts/PermisosNavbarContext.tsx","components/Navbar.tsx","components/CustomDropDownPicker.tsx","contexts/AuxiliarContextFromModalProductsDates.tsx","contexts/AuxiliarSortProductos.tsx","services/RolPermisosAndRol.tsx","services/TiendaServices.tsx","services/MonedaService.tsx","services/ProductoServices.tsx","components/CustomDropDownPikerFromMover.tsx","services/ImageServices.tsx","services/MovimientosServices.tsx","contexts/AuxiliarContextPaginadoproductos.tsx","components/MyDateTableProductos.tsx","components/MyDateTableModalShowDatesTienda.tsx","components/MyDateTableModalShowDateProveedores.tsx","services/EntradaServices.tsx","contexts/NavigationLostContext.tsx","functions/CalcularCostoPromedioProducto.tsx","Views/ProductosView.tsx","Views/HomeScreen.tsx","components/CustomDropDownDetails.tsx","contexts/AuxiliarContextModalEntradas.tsx","components/MyDateInput.tsx","components/MyDateTableModalDataMoverTiendas.tsx","contexts/AuxiliarSortServicios.tsx","components/MyDateTableServicios.tsx","services/ServiciosServices.tsx","services/TipoServiciosServices.tsx","services/clienteServices.tsx","services/ventasServices.tsx","components/CustomRadioButtonsSearch.tsx","components/CustomRadioButtonSearch.tsx","services/GarantiaServices.tsx","services/EncargoServices.tsx","services/DeudasServices.tsx","services/PagoDeudaServices.tsx","Views/ServiciosView.tsx","Views/LoginView.tsx","contexts/AuxiliarSortMovimientos.tsx","contexts/AuxiliarContextFromModalProveedores.tsx","contexts/AuxiliarSortEntradas.tsx","contexts/DeleteImagenContext.tsx","services/ProveedorServices.tsx","components/MyDateTableProveedores.tsx","components/MyDateTableModalShowDatesEntradas.tsx","Views/ProveedoresView.tsx","components/MyDataTableEnMyTienda.tsx","Views/EnMyTiendaView.tsx","components/MyDateTableEntradas.tsx","Views/EntradasView.tsx","components/CustomButtonAdministradorView.tsx","Views/AdministracionView.tsx","contexts/AuxiliarContextModalMovimientos.tsx","components/MyDateTableMovimientos.tsx","Views/MovimientosView.tsx","contexts/AuxiliarSortUsuarios.tsx","components/MyDateTableUsuarios.tsx","Views/UsuariosView.tsx","components/MyDateTableTiendasView.tsx","Views/TiendasView.tsx","contexts/AuxiliarSortAcciones.tsx","components/MyDateTableAcciones.tsx","Views/AccionesView.tsx","components/MyDateTablePermisos.tsx","Views/PermisosView.tsx","components/MyDateTableTipoServicio.tsx","Views/TipoServicioView.tsx","Views/CambiarMonedaView.tsx","contexts/AuxiliarSortClientes.tsx","components/MyDateTableClientes.tsx","Views/ClientesView.tsx","components/MyDateTableGarantias.tsx","Views/GarantiasView.tsx","components/MydateTableDeudas.tsx","components/MyDateTableShowPagoDeudas.tsx","Views/DeudasView.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["export const Colors = {\r\n     negro: \"#000000\",\r\n     blanco: \"#ffffff\",\r\n     azul_Claro: \"#31a6bf\",\r\n     azul_Oscuro: \"#1b5dad\",\r\n     azul_Suave: \"#97e4f4\",\r\n     blanco_Suave: \"#F2F2F2\",\r\n     gris_claro: \"#D3D3D3\",\r\n     rojo_oscuro: \"#cd1111\",\r\n     verde_claro: \"#13cf3c\"\r\n}","import { Platform, StyleSheet } from \"react-native\";\r\nimport { Colors } from \"./Colors\";\r\n\r\nexport const styles = StyleSheet.create({\r\n  radioButtonDesktop: {\r\n    flexDirection: \"row\",\r\n    height: 40,\r\n    width: \"12%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    borderColor: Colors.azul_Claro,\r\n    borderWidth: 3,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginHorizontal: \"1%\",\r\n    backgroundColor: Colors.azul_Suave, // Color de fondo del botón\r\n  },\r\n  radioButtonMovil: {\r\n    flexDirection: \"row\",\r\n    height: 40,\r\n    width: \"50%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    borderColor: Colors.azul_Claro,\r\n    borderWidth: 3,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginRight: \"5%\",\r\n    marginVertical: \"5%\",\r\n    backgroundColor: Colors.azul_Suave, // Color de fondo del botón\r\n  },\r\n  radioButtonSelected: {\r\n    backgroundColor: Colors.azul_Oscuro, // Color de fondo del botón seleccionado\r\n  },\r\n  radioButtonTextDesktop: {\r\n    fontSize: 14,\r\n    color: Colors.blanco, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  radioButtonTextMovil: {\r\n    fontSize: 12,\r\n    color: Colors.blanco, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  labelTextDesktop: {\r\n    fontSize: 16,\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  labelTextModalDesktop: {\r\n    fontSize: 16,\r\n    marginTop: \"3%\",\r\n    marginLeft: \"6%\",\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  labelTextModalMovil: {\r\n    fontSize: 16,\r\n    marginTop: \"3%\",\r\n    marginLeft: \"6%\",\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  labelTextMovil: {\r\n    fontSize: 20,\r\n    marginRight: \"15%\",\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  radioButtonTextSelected: {\r\n    fontWeight: \"bold\", // Texto en negritas para el botón seleccionado\r\n    color: Colors.blanco_Suave, // Color del texto para el botón seleccionado\r\n  },\r\n  selectedText: {\r\n    marginTop: 20,\r\n    fontSize: 18,\r\n    color: \"#333\",\r\n  },\r\n  navbarDekstop: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: 15,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    width: \"100%\",\r\n    zIndex: 1000,\r\n  },\r\n  navbarMobile: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: 15,\r\n    width: \"100%\",\r\n    zIndex: 1000,\r\n  },\r\n  menuIcon: {\r\n    position: \"absolute\",\r\n    left: 15,\r\n    top: 15,\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1, // Permite que el contenido se expanda verticalmente\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10, // Añade algo de padding para mejorar el espaciado\r\n  },\r\n  buttonsContainerDesktop: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\", // Alinea los botones al inicio después de la imagen\r\n    flex: 1, // Ocupa el espacio restante\r\n  },\r\n  buttonContainterMovile: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  searchContainerDesktop: {\r\n    height: \"100%\",\r\n    width: \"20%\",\r\n    marginTop: \"2%\",\r\n    borderRadius: 20,\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  loginContainerStilesDesktop: {\r\n    height: \"70%\",\r\n    width: \"25%\",\r\n    flexDirection: \"column\", // Cambiar a columna aquí\r\n    borderRadius: 20,\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  loginContainerStilesMovil: {\r\n    height: \"70%\",\r\n    width: \"95%\",\r\n    flexDirection: \"column\", // Cambiar a columna aquí\r\n    borderRadius: 20,\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  searchContainerMovil: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    borderRadius: 20,\r\n    marginTop: \"3%\",\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  modalViewMesajeContainerDesktop: {\r\n    width: \"40%\",\r\n    padding: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 5,\r\n  },\r\n  modalViewMesajeContainerMovil: {\r\n    width: \"80%\",\r\n    padding: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 5,\r\n  },\r\n  textSearchDesktop: {\r\n    color: Colors.blanco,\r\n    fontSize: 18,\r\n    marginTop: \"5%\",\r\n    justifyContent: \"center\",\r\n    marginLeft: \"6%\",\r\n    fontWeight: \"bold\", // Para negritas\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  textSearchMovil: {\r\n    color: Colors.blanco,\r\n    fontSize: 16,\r\n    marginTop: \"5%\",\r\n    justifyContent: \"center\",\r\n    marginLeft: \"6%\",\r\n    fontWeight: \"bold\", // Para negritas\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  textNavbarMovil: {\r\n    color: Colors.blanco,\r\n    fontSize: 17,\r\n    justifyContent: \"center\",\r\n    marginLeft: \"6%\",\r\n    fontWeight: \"bold\", // Para negritas\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  textImputLogin: {\r\n    height: 35,\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"90%\",\r\n    marginTop: \"2%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    fontSize: 16, // Tamaño de letra más grande\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  textImputModal: {\r\n    height: 40,\r\n    borderColor: Colors.azul_Oscuro,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"90%\",\r\n    marginTop: \"2%\",\r\n    marginHorizontal: \"5%\",\r\n    backgroundColor: Colors.blanco_Suave,\r\n    borderRadius: 13,\r\n    fontSize: 16, // Tamaño de letra más grande\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  textLabelAsInput: {\r\n    height: 40, // Altura similar al TextInput\r\n    borderColor: Colors.negro,\r\n    borderWidth: 1, // Borde delgado\r\n    shadowColor: Colors.negro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Opacidad de la sombra\r\n    shadowRadius: 14, // Difuminado de la sombra\r\n    width: \"90%\", // Ancho similar al TextInput\r\n    marginTop: \"2%\",\r\n    marginHorizontal: \"5%\",\r\n    backgroundColor: Colors.blanco_Suave,\r\n    borderRadius: 13,\r\n    fontSize: 16, // Tamaño de letra\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno horizontal\r\n    paddingVertical: 10, // Espacio interno vertical (ajusta según sea necesario)\r\n    color: Colors.negro, // Color del texto\r\n    lineHeight: 20, // Altura de línea igual a la altura del contenedor\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  textDescroptionLabelAsInput: {\r\n    height: 150, // Altura similar al TextInput\r\n    borderColor: Colors.negro,\r\n    borderWidth: 1, // Borde delgado\r\n    shadowColor: Colors.negro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Opacidad de la sombra\r\n    shadowRadius: 14, // Difuminado de la sombra\r\n    width: \"90%\", // Ancho similar al TextInput\r\n    marginTop: \"2%\",\r\n    marginHorizontal: \"5%\",\r\n    backgroundColor: Colors.blanco_Suave,\r\n    borderRadius: 13,\r\n    fontSize: 16, // Tamaño de letra\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno horizontal\r\n    paddingVertical: 10, // Espacio interno vertical (ajusta según sea necesario)\r\n    color: Colors.negro, // Color del texto\r\n    lineHeight: 20, // Altura de línea igual a la altura del contenedor\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  textImputModalNOEDITABLE: {\r\n    height: 40,\r\n    borderColor: Colors.negro,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    width: \"90%\",\r\n    marginTop: \"2%\",\r\n    marginHorizontal: \"5%\",\r\n    backgroundColor: Colors.blanco_Suave,\r\n    borderRadius: 13,\r\n    fontSize: 16, // Tamaño de letra más grande\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  customTextImputSearchFullDesktop: {\r\n    height: 30,\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"90%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    marginLeft: \"5%\",\r\n    marginTop: \"4%\",\r\n    fontSize: 16, // Tamaño de letra más grande\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  customTextImputSearchFullMovil: {\r\n    height: 30,\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"90%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    marginLeft: \"5%\",\r\n    marginTop: \"4%\",\r\n    fontSize: 12, // Tamaño de letra más grande\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  customTextImputSearchFiftyDesktop: {\r\n    height: 30,\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"42.5%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    marginLeft: \"5%\",\r\n    marginTop: \"4%\",\r\n    fontSize: 16, // Tamaño de letra más grande\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  customTextImputSearchFiftyMovil: {\r\n    height: 30,\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"42.5%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    marginLeft: \"5%\",\r\n    marginTop: \"4%\",\r\n    fontSize: 12, // Tamaño de letra más grande\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  movilButtonBusqueda: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 15,\r\n    flexDirection: \"row\",\r\n    width: \"70%\", // Ancho fijo para pantallas de escritorio\r\n    height: 50, // Altura fija para pantallas de escritorio\r\n    marginRight: \"2%\",\r\n    marginTop: \"2%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    elevation: 3,\r\n  },\r\n  separatorBlanco: {\r\n    width: \"90%\", // Ancho del separador\r\n    marginLeft: \"5%\",\r\n    marginTop: \"5%\",\r\n    height: 1, // Altura de la línea (grosor)\r\n    backgroundColor: Colors.blanco, // Color blanco\r\n  },\r\n  separatorNegro: {\r\n    width: \"95%\", // Ancho del separador\r\n    marginTop: \"8%\",\r\n    height: 1, // Altura de la línea (grosor)\r\n    backgroundColor: Colors.negro, // Color blanco\r\n  },\r\n});\r\n","import { Colors } from '../styles/Colors';\r\nimport React, { useState } from 'react';\r\nimport { TouchableOpacity, Image, StyleSheet, Text, Animated, View, useWindowDimensions } from 'react-native';\r\n\r\ninterface CustomButtonProps {\r\n  imageSource: any;\r\n  text: any;\r\n  onPress: () => void;\r\n  isSelected: boolean; // Nuevo parámetro para cambiar el color del botón\r\n}\r\n\r\nconst CustomButtonNavbar: React.FC<CustomButtonProps> = ({ imageSource, onPress, text, isSelected }) => {\r\n  const [scale] = useState(new Animated.Value(1));\r\n  const { width } = useWindowDimensions();\r\n\r\n  const isMobile = width < 930;\r\n\r\n  // Estilos condicionales según el parámetro `isSelected`\r\n  const buttonStyles = [\r\n    isMobile ? styles.mobileButton : styles.desktopButton,\r\n    isSelected && { backgroundColor: Colors.azul_Oscuro } // Cambia solo el color si `isSelected` es true\r\n  ];\r\n  const viewStyles = isMobile ? styles.mobileContent : styles.desktopContent;\r\n\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={buttonStyles}\r\n      onPressIn={onPressIn}\r\n      onPressOut={onPressOut}\r\n      onPress={onPress}\r\n    >\r\n      <Animated.View style={{ transform: [{ scale }] }}>\r\n        <View style={viewStyles}>\r\n          <Image source={imageSource} style={styles.image} />\r\n          <Text style={styles.text}>{text}</Text>\r\n        </View>\r\n      </Animated.View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  mobileButton: {\r\n    backgroundColor: Colors.azul_Claro,\r\n    borderRadius: 15,\r\n    height: 80,\r\n    width: \"180%\",\r\n    marginLeft: \"80%\",\r\n    marginVertical: 5,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 3,\r\n  },\r\n  desktopButton: {\r\n    backgroundColor: Colors.azul_Claro,\r\n    borderRadius: 15,\r\n    width: \"4%\",\r\n    minWidth: 120,\r\n    height: 100,\r\n    marginHorizontal: 10,\r\n    marginBottom: 2,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 3,\r\n  },\r\n  desktopContent: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  mobileContent: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  image: {\r\n    width: 50,\r\n    height: 50,\r\n    marginRight: 10,\r\n  },\r\n  text: {\r\n    fontSize: 18,\r\n    color: Colors.blanco,\r\n  },\r\n});\r\n\r\nexport default CustomButtonNavbar;\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { RolPermiso } from \"../services/RolPermisosAndRol\";\r\n\r\n// Define la interfaz del Usuario\r\nexport interface Usuario {\r\n  id_usuario: string;\r\n  nombre: string;\r\n  telefono?: string;\r\n  direccion?: string;\r\n  carnet_identidad?: string;\r\n  detalles_bancarios?: string;\r\n  nombre_usuario: string;\r\n  email: string;\r\n  token: string;\r\n  id_rol: string;\r\n  nombre_rol: string;\r\n  id_tienda: string;\r\n  nombre_tienda: string;\r\n  permisos: RolPermiso[];\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface UsuarioContextType {\r\n  usuario: Usuario | null;\r\n  setUsuario: (usuario: Usuario | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst UsuarioContext = createContext<UsuarioContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const UsuarioProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [usuario, setUsuario] = useState<Usuario | null>(null);\r\n\r\n  return (\r\n    <UsuarioContext.Provider value={{ usuario: usuario, setUsuario: setUsuario }}>\r\n      {children}\r\n    </UsuarioContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useUsuario = () => {\r\n  const context = React.useContext(UsuarioContext);\r\n  if (context === undefined) {\r\n    throw new Error('useUsuario debe usarse dentro de un ProductoUsuario');\r\n  }\r\n  return context;\r\n};","import React, { createContext, useState, ReactNode } from 'react';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SelectedButon {\r\n  butonSelected: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortEntradasContextType {\r\n  selectedButon: SelectedButon | null;\r\n  setSelectedButon: (sortEntradas: SelectedButon | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortEntradasContext = createContext<SortEntradasContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SelectedButonProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [selectedButon, setSelectedButon] = useState<SelectedButon | null>(null);\r\n\r\n  return (\r\n    <SortEntradasContext.Provider value={{ selectedButon: selectedButon, setSelectedButon: setSelectedButon }}>\r\n      {children}\r\n    </SortEntradasContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSelectedButon = () => {\r\n  const context = React.useContext(SortEntradasContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortEntradas debe usarse dentro de un SortEntradas');\r\n  }\r\n  return context;\r\n};","import React, { useState } from 'react';\r\nimport {\r\n  TouchableOpacity,\r\n  Image,\r\n  StyleSheet,\r\n  Text,\r\n  Animated,\r\n  View,\r\n  Modal,\r\n  FlatList,\r\n  useWindowDimensions,\r\n} from 'react-native';\r\nimport { Colors } from '../styles/Colors';\r\n\r\ninterface CustomDropdownProps {\r\n  imageSource: any;\r\n  text: string;\r\n  options: { label: string; value: string; image: any }[]; // Agregar imagen a cada opción\r\n  onSelect: (value: string) => void;\r\n  isSelected: boolean;\r\n}\r\n\r\nconst CustomDropdown: React.FC<CustomDropdownProps> = ({\r\n  imageSource,\r\n  text,\r\n  options,\r\n  onSelect,\r\n  isSelected,\r\n}) => {\r\n  const [scale] = useState(new Animated.Value(1));\r\n  const { width } = useWindowDimensions();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const isMobile = width < 930;\r\n\r\n  const buttonStyles = [\r\n    isMobile ? styles.mobileButton : styles.desktopButton,\r\n    isSelected && { backgroundColor: Colors.azul_Oscuro },\r\n  ];\r\n  const viewStyles = isMobile ? styles.mobileContent : styles.desktopContent;\r\n\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const handleSelect = (value: string) => {\r\n    onSelect(value);\r\n    setModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      {/* Botón para abrir el dropdown */}\r\n      <TouchableOpacity\r\n        style={buttonStyles}\r\n        onPressIn={onPressIn}\r\n        onPressOut={onPressOut}\r\n        onPress={() => setModalVisible(true)}\r\n      >\r\n        <Animated.View style={{ transform: [{ scale }] }}>\r\n          <View style={viewStyles}>\r\n            <Image source={imageSource} style={styles.image} />\r\n            <Text style={styles.text}>{text}</Text>\r\n          </View>\r\n        </Animated.View>\r\n      </TouchableOpacity>\r\n\r\n      {/* Modal para mostrar las opciones */}\r\n      <Modal\r\n        transparent={true}\r\n        animationType=\"fade\"\r\n        visible={modalVisible}\r\n        onRequestClose={() => setModalVisible(false)}\r\n      >\r\n        <TouchableOpacity\r\n          style={styles.modalOverlay}\r\n          onPress={() => setModalVisible(false)}\r\n        >\r\n          <View style={isMobile? styles.modalContentMovil : styles.modalContentDesktop}>\r\n            <FlatList\r\n              data={options}\r\n              keyExtractor={(item) => item.value}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  style={styles.option}\r\n                  onPress={() => handleSelect(item.value)}\r\n                >\r\n                  <Image source={item.image} style={styles.optionImage} /> {/* Imagen antes del label */}\r\n                  <Text style={styles.optionText}>{item.label}</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            />\r\n          </View>\r\n        </TouchableOpacity>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  mobileButton: {\r\n    backgroundColor: Colors.azul_Claro,\r\n    borderRadius: 15,\r\n    height: 80,\r\n    width: \"180%\",\r\n    marginVertical: 5,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 3,\r\n  },\r\n  desktopButton: {\r\n    backgroundColor: Colors.azul_Claro,\r\n    borderRadius: 15,\r\n    width: \"4%\",\r\n    minWidth: 120,\r\n    height: 100,\r\n    marginHorizontal: 10,\r\n    marginBottom: 2,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 3,\r\n  },\r\n  desktopContent: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  mobileContent: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  image: {\r\n    width: 50,\r\n    height: 50,\r\n    marginRight: 10,\r\n  },\r\n  text: {\r\n    fontSize: 18,\r\n    color: Colors.blanco,\r\n  },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  modalContentDesktop: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    width: '30%',\r\n    maxHeight: '50%',\r\n  },\r\n  modalContentMovil: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    width: '80%',\r\n    maxHeight: '50%',\r\n  },\r\n  option: {\r\n    flexDirection: 'row', // Para alinear imagen y texto en línea\r\n    alignItems: 'center',\r\n    paddingVertical: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  optionImage: { // Estilo para la imagen de cada opción\r\n    width: 30,\r\n    height: 30,\r\n    marginRight: 10,\r\n    tintColor: Colors.negro\r\n  },\r\n  optionText: {\r\n    fontSize: 18,\r\n    color: Colors.azul_Oscuro,\r\n  },\r\n});\r\n\r\nexport default CustomDropdown;\r\n","import React, { forwardRef } from \"react\";\r\nimport { TextInput, StyleSheet, TextInputProps } from \"react-native\";\r\n\r\ninterface CustomTextInputProps {\r\n  cursorColor?: string;\r\n  style: any;\r\n  placeholder?: string;\r\n  editable?: boolean;\r\n  value?: string;\r\n  scrollEnabled?: boolean;\r\n  numberOfLines?: number;\r\n  multiline?: boolean;\r\n  onBlur?: () => void;\r\n  onChangeText?: (text: string) => void;\r\n  onKeyPress?: (event: any) => void; // Agregamos onKeyPress como opcional\r\n  autoCapitalize?: \"none\" | \"sentences\" | \"words\" | \"characters\";\r\n  autoCompleteType?:\r\n    | \"off\"\r\n    | \"username\"\r\n    | \"password\"\r\n    | \"email\"\r\n    | \"name\"\r\n    | \"tel\"\r\n    | \"street-address\"\r\n    | \"postal-code\"\r\n    | \"cc-number\"\r\n    | \"cc-csc\"\r\n    | \"cc-exp\"\r\n    | \"cc-exp-month\"\r\n    | \"cc-exp-year\";\r\n  secureTextEntry?: boolean;\r\n  keyboardType?:\r\n    | \"default\"\r\n    | \"email-address\"\r\n    | \"numeric\"\r\n    | \"phone-pad\"\r\n    | \"ascii-capable\"\r\n    | \"numbers-and-punctuation\"\r\n    | \"url\"\r\n    | \"number-pad\"\r\n    | \"name-phone-pad\"\r\n    | \"decimal-pad\"\r\n    | \"twitter\"\r\n    | \"web-search\"\r\n    | \"visible-password\";\r\n}\r\n\r\n// Usa forwardRef para pasar correctamente el ref\r\nconst CustomTextInputSearch = forwardRef<TextInput, CustomTextInputProps>(\r\n  (\r\n    {\r\n      placeholder,\r\n      autoCapitalize,\r\n      autoCompleteType,\r\n      secureTextEntry,\r\n      keyboardType,\r\n      cursorColor,\r\n      onChangeText,\r\n      value,\r\n      onBlur,\r\n      style,\r\n      multiline,\r\n      numberOfLines,\r\n      scrollEnabled,\r\n      editable,\r\n      onKeyPress, // Recibimos onKeyPress\r\n    },\r\n    ref // Aquí forwardRef expone la referencia\r\n  ) => {\r\n    return (\r\n      <TextInput\r\n        style={style}\r\n        editable={editable}\r\n        numberOfLines={numberOfLines}\r\n        placeholder={placeholder}\r\n        placeholderTextColor=\"rgba(255, 255, 255, 0.8)\"\r\n        autoCapitalize={autoCapitalize}\r\n        autoComplete={autoCompleteType}\r\n        secureTextEntry={secureTextEntry}\r\n        keyboardType={keyboardType}\r\n        cursorColor={cursorColor}\r\n        value={value}\r\n        scrollEnabled={scrollEnabled}\r\n        multiline={multiline}\r\n        onBlur={onBlur}\r\n        ref={ref} // Asigna el ref al TextInput\r\n        onChangeText={onChangeText}\r\n        onKeyPress={onKeyPress} // Pasamos onKeyPress al TextInput\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default CustomTextInputSearch;\r\n","\r\nexport const cerverHost = \"http://147.93.128.46:3000\";\r\nexport const cerverHostImages = \"http://147.93.128.46:8080/\";\r\n// 147.93.128.46","// navigationRef.ts\r\nimport { createRef } from \"react\";\r\nimport { NavigationContainerRef } from \"@react-navigation/native\";\r\nimport { RootStackParamList } from \"../App\";\r\n\r\n// Define la referencia de navegación global con el tipo correcto\r\nexport const navigationRef = createRef<NavigationContainerRef<RootStackParamList>>();\r\n\r\n// Función de navegación global\r\nexport function navigate<RouteName extends keyof RootStackParamList>(\r\n  name: RouteName,\r\n  params?: RootStackParamList[RouteName]\r\n) {\r\n  // Asegúrate de que los parámetros sean correctamente tipados y pasados\r\n  navigationRef.current?.navigate(name, params as any);\r\n}\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\nimport { UsuarioTabla } from \"../components/MyDateTableUsuarios\";\r\n\r\n// Función para que iniciar seción a los usuarios\r\nexport const iniciarSecionUser = async (userName: String, password: String) => {\r\n    try {\r\n        const response = await axios.post(\r\n          `${cerverHost}/Usuario/auth`,\r\n          {\r\n            nombre_usuario: userName,\r\n            contrasenna: password\r\n          }\r\n        );\r\n\r\n        if(response.data.msg === \"Usuario encontrado\"){\r\n          return response;\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Error al iniciar seción: \", error);\r\n        return false;\r\n      }\r\n}\r\n\r\n// Agregar usuario al sistema\r\nexport const addUsuario = async (\r\n  token: string,\r\n  nombre: string,\r\n  nombre_usuario: string,\r\n  contrasenna: string,\r\n  email: string,\r\n  telefono: string,\r\n  direccion: string,\r\n  carnet_identidad: string,\r\n  detalles_bancarios: string,\r\n  rol: string,\r\n  tienda: string,\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Usuario/createUsuario`,\r\n      {\r\n        nombre: nombre,\r\n        nombre_usuario: nombre_usuario,\r\n        contrasenna: contrasenna,\r\n        email: email,\r\n        telefono: telefono,\r\n        direccion: direccion,\r\n        carnet_identidad: (carnet_identidad === \"\")? null : carnet_identidad,\r\n        detalles_bancarios: detalles_bancarios,\r\n        rol: {\"id_rol\": rol},\r\n        tienda: {\"id_tienda\": tienda}\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error incertar el usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Usuario del sistema\r\nexport const deleteUsuario = async (token: String, id_usuario:string) => {\r\n  try {\r\n    const response = await axios.delete(`${cerverHost}/Usuario/deleteUsuario/${id_usuario}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al eliminar el usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar datos de un usuario conociendo la contraeña nueva\r\nexport const actualizarUsuarioConContraseña = async (\r\n  token: string,\r\n  id_usuario: string,\r\n  nombre: string,\r\n  nombre_usuario: string,\r\n  contrasenna: string,\r\n  email: string,\r\n  telefono: string,\r\n  direccion: string,\r\n  carnet_identidad: string,\r\n  detalles_bancarios: string,\r\n  rol: string,\r\n  tienda: string,\r\n  activo: boolean\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Usuario/updateUsuario/${id_usuario}`,\r\n      {\r\n        nombre: nombre,\r\n        nombre_usuario: nombre_usuario,\r\n        contrasenna: contrasenna,\r\n        email: email,\r\n        telefono: telefono,\r\n        direccion: direccion,\r\n        carnet_identidad: carnet_identidad,\r\n        detalles_bancarios: detalles_bancarios,\r\n        activo: activo,\r\n        rol: {\"id_rol\": rol},\r\n        tienda: {\"id_tienda\": tienda}\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error modificar el usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar datos de un usuario sin conociendo la contraeña nueva\r\nexport const actualizarUsuarioSinContraseña = async (\r\n  token: string,\r\n  id_usuario: string,\r\n  nombre: string,\r\n  nombre_usuario: string,\r\n  email: string,\r\n  telefono: string,\r\n  direccion: string,\r\n  carnet_identidad: string,\r\n  detalles_bancarios: string,\r\n  rol: string,\r\n  tienda: string,\r\n  activo: boolean\r\n) => {\r\n  console.log(\"id_usuario:\", id_usuario);\r\n  console.log(\"nombre:\", nombre);\r\n  console.log(\"nombre_usuario:\", nombre_usuario);\r\n  console.log(\"email:\", email);\r\n  console.log(\"telefono:\", telefono);\r\n  console.log(\"direccion:\", direccion);\r\n  console.log(\"carnet_identidad:\", carnet_identidad);\r\n  console.log(\"detalles_bancarios:\", detalles_bancarios);\r\n  console.log(\"rol:\", rol);\r\n  console.log(\"tienda:\", tienda);\r\n  console.log(\"activo:\", activo);\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Usuario/updateUsuario/${id_usuario}`,\r\n      {\r\n        nombre: nombre,\r\n        nombre_usuario: nombre_usuario,\r\n        email: email,\r\n        telefono: telefono,\r\n        direccion: direccion,\r\n        carnet_identidad: carnet_identidad,\r\n        detalles_bancarios: detalles_bancarios,\r\n        activo: activo,\r\n        rol: {\"id_rol\": rol},\r\n        tienda: {\"id_tienda\": tienda}\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error modificar el usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Función para obtener algunos datos de un usuario específico\r\nexport const getUsuarioById = async (token: String, id_user: String) => {\r\n  try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Usuario/${id_user}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          }\r\n        }\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error en la solicitud de datos de el usuario:', error);\r\n      alert(error);\r\n      return false;\r\n    }\r\n}\r\n\r\n// Optener todos los datos de todos los usuarios\r\nexport const getAllUsuarios = async (token: String) => {\r\n  try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Usuario`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          }\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.error('Error en la solicitud de datos de los usuarios:', error);\r\n      alert(error);\r\n      return false;\r\n    }\r\n}\r\n\r\n// Función para obtener los permisos de un usuario específico\r\nexport const allPermises = async (token: String, id_user: String) => {\r\n  try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Usuario/${id_user}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          }\r\n        }\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.error('Error en la solicitud de datos de el usuario:', error);\r\n      alert(error);\r\n      return false;\r\n    }\r\n}\r\n\r\n// Filtrar usuarios\r\nexport const filtrarUsuario = async (\r\n  token: string,\r\n  nombre_usuario: string,\r\n  email: string,\r\n  telefono: string,\r\n  id_rol: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Usuario/api/filtrar`,\r\n      {\r\n        nombre_usuario: nombre_usuario,\r\n        email: email,\r\n        telefono: telefono,\r\n        id_rol: id_rol,\r\n        id_tienda: id_tienda\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrar usuarios: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar usuarios\r\nexport const ordenarUsuarios = async (\r\n  token: string,\r\n  items: UsuarioTabla[],\r\n  criterio: string,\r\n  ascendente: boolean\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Usuario/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar los usuarios: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Cambiar contraseña\r\nexport const cambiarContrasennaUsuarios = async (\r\n  token: string,\r\n  contrasenna_vieja: string,\r\n  contrasenna_nueva1: string,\r\n  contrasenna_nueva2: string,\r\n  nombre_usuario: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Usuario/change/pass`,\r\n      {\r\n        contrasenna_vieja: contrasenna_vieja,\r\n        contrasenna_nueva1: contrasenna_nueva1,\r\n        contrasenna_nueva2: contrasenna_nueva2,\r\n        nombre_usuario: nombre_usuario\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al cambiar la contraseña del usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\nimport { Accion } from \"../components/MyDateTableAcciones\";\r\n\r\n// Obtener todas las acciones\r\nexport const getAllAcciones = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Accion`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de todas las acciones: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener una accion especifica segun el id\r\nexport const getAccionByID = async (token: String, id_accion: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Accion/${id_accion}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de una acción en específico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Traza de usuario\r\nexport const addAccionUsuario = async (\r\n  token: string,\r\n  descripcion: string,\r\n  fecha: string,\r\n  id_usuario: string,\r\n  id_tipo_accion: number\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Accion/createAccion`,\r\n      {\r\n        descripcion: descripcion,\r\n        fecha: fecha,\r\n        usuario: {\"id_usuario\": id_usuario},\r\n        tipo_accion: {\"id_tipo_accion\": id_tipo_accion},\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al agregar acción de usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todos los tipos de accion\r\nexport const getAllTiposAccion = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Tipo_accion`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de todas los tipos de acción: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar acciones\r\nexport const filtrarAcciones = async (\r\n  token: string,\r\n  id_tipo_accion: string,\r\n  nombre_usuario: string,\r\n  descripcion: string,\r\n  fecha_limsup: string,\r\n  fecha_liminf: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Accion/api/filtrar`,\r\n      {\r\n        id_tipo_accion: id_tipo_accion,\r\n        nombre_usuario: nombre_usuario,\r\n        descripcion: descripcion,\r\n        fecha_limsup: fecha_liminf,\r\n        fecha_liminf: fecha_limsup,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al filtrar acciones: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar acciones\r\nexport const ordenarAcciones = async (\r\n  token: string,\r\n  items: Accion[],\r\n  criterio: string,\r\n  ascendente: boolean\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Accion/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar las acciones: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface PermisosUsuario {\r\n    resultProductoView: boolean; //9\r\n    resultProveedorView: boolean; //38\r\n    resultEntradaView: boolean; //13\r\n    resultMovimientoLocalView: boolean; //30\r\n    resultMovimientoGeneralView: boolean; //31\r\n    resultAgregarUsuario: boolean; //1\r\n    resultModificarUsuario: boolean; //2\r\n    resultEliminarUsuario: boolean; //3\r\n    resultAccionesView: boolean; //15\r\n    resultTipoServicio: boolean; // 20, 21, 22\r\n    resultClienteView: boolean; // 16, 17, 18, 19\r\n    resultGarantiaView: boolean; // 32, 33, 34\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface PermisosUsuarioContextType {\r\n  permisosUsuarioNavbar: PermisosUsuario | null;\r\n  setPermisosUsuarioNavbar: (permisosUsuario: PermisosUsuario | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst PermisosUsuarioContext = createContext<PermisosUsuarioContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const PermisosUsuarioProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [permisosUsuario, setPermisosUsuario] = useState<PermisosUsuario | null>(null);\r\n\r\n  return (\r\n    <PermisosUsuarioContext.Provider value={{ permisosUsuarioNavbar: permisosUsuario, setPermisosUsuarioNavbar: setPermisosUsuario }}>\r\n      {children}\r\n    </PermisosUsuarioContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const usePermisosUsuario = () => {\r\n  const context = React.useContext(PermisosUsuarioContext);\r\n  if (context === undefined) {\r\n    throw new Error('usePermisosUsuario debe usarse dentro de un PermisosUsuario');\r\n  }\r\n  return context;\r\n};","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Button,\r\n  StyleSheet,\r\n  Image,\r\n  useWindowDimensions,\r\n  Animated,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Modal,\r\n  TouchableWithoutFeedback,\r\n} from \"react-native\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport CustomButtonNavbar from \"./CustomButtonLogin\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport \"../styles/ScrollView.css\";\r\nimport { useSelectedButon } from \"../contexts/globalButonNavbarSelected\";\r\nimport CustomDropdownProvicional from \"./CustomButonLoginOptions\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\nimport { cambiarContrasennaUsuarios } from \"../services/UsuarioServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport { usePermisosUsuario as usePermisosUsuarioNavbar } from \"../contexts/PermisosNavbarContext\";\r\n\r\nconst Navbar = () => {\r\n  // Para poder navegar entre vistas\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Estado para controlar si el menú está expandido\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const [modalUsuarioDetails, setModalUsuarioDetails] = useState(false);\r\n\r\n  const [contrasennaVieja, setContrasennaVieja] = useState(\"\");\r\n  const [contrasennaNueva1, setContrasennaNueva1] = useState(\"\");\r\n  const [contrasennaNueva2, setContrasennaNueva2] = useState(\"\");\r\n\r\n  const [hasPermisoViewProducto, setHasPermisoViewProducto] = useState(false);\r\n  const [hasPermisoViewTipoServicio, setHasPermisoViewTipoServicio] =\r\n    useState(false);\r\n  const [hasPermisoViewUsuario, setHasPermisoViewUsuario] = useState(false);\r\n  const [hasPermisoViewTienda, setHasPermisoViewTienda] = useState(false);\r\n  const [hasPermisoViewAccion, setHasPermisoViewAccion] = useState(false);\r\n  const [hasPermisoViewEntrada, setHasPermisoViewEntrada] = useState(false);\r\n  const [hasPermisoViewProveedor, setHasPermisoViewProveedor] = useState(false);\r\n  const [hasPermisoViewMovimiento, setHasPermisoViewMovimiento] =\r\n    useState(false);\r\n  const [hasPermisoViewCliente, setHasPermisoViewCliente] = useState(false);\r\n  const [hasPermisoViewGarantia, setHasPermisoViewGarantia] = useState(false);\r\n  const nombreProductoRef = useRef(null);\r\n  const { setUsuario, usuario } = useUsuario();\r\n  const { permisosUsuarioNavbar, setPermisosUsuarioNavbar } =\r\n    usePermisosUsuarioNavbar();\r\n  const { setSelectedButon, selectedButon } = useSelectedButon();\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  const [selectedOption, setSelectedOption] = useState<string | null>(null);\r\n\r\n  const handleSelect = (value: any) => {\r\n    setSelectedButon({\r\n      butonSelected: \"Administración\",\r\n    });\r\n    if (value === \"1\") {\r\n      navigation.navigate(\"Usuarios\");\r\n    } else if (value === \"3\") {\r\n      navigation.navigate(\"Tiendas\");\r\n    } else if (value === \"2\") {\r\n      navigation.navigate(\"Acciones\");\r\n    } else if (value === \"4\") {\r\n      navigation.navigate(\"Permisos\");\r\n    } else if (value === \"5\") {\r\n      navigation.navigate(\"Tipo de Servicio\");\r\n    } else if (value === \"6\") {\r\n      navigation.navigate(\"Cambiar Moneda\");\r\n    }\r\n    setSelectedOption(value);\r\n  };\r\n\r\n  const [options, setOptions] = useState<\r\n    { label: string; value: string; image: any }[]\r\n  >([]);\r\n  useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        setHasPermisoViewEntrada(\r\n          permisosUsuarioNavbar?.resultEntradaView ?? false\r\n        );\r\n        setHasPermisoViewProducto(\r\n          permisosUsuarioNavbar?.resultProductoView ?? false\r\n        );\r\n        setHasPermisoViewProveedor(\r\n          permisosUsuarioNavbar?.resultProveedorView ?? false\r\n        );\r\n        setHasPermisoViewAccion(\r\n          permisosUsuarioNavbar?.resultAccionesView ?? false\r\n        );\r\n        setHasPermisoViewMovimiento(\r\n          (permisosUsuarioNavbar?.resultMovimientoLocalView ?? false) ||\r\n            (permisosUsuarioNavbar?.resultMovimientoGeneralView ?? false)\r\n        );\r\n        setHasPermisoViewUsuario(\r\n          (permisosUsuarioNavbar?.resultAgregarUsuario ?? false) ||\r\n            (permisosUsuarioNavbar?.resultModificarUsuario ?? false) ||\r\n            (permisosUsuarioNavbar?.resultEliminarUsuario ?? false)\r\n        );\r\n        setHasPermisoViewTienda(parseInt(usuario.id_usuario) === 1);\r\n        setHasPermisoViewCliente(permisosUsuarioNavbar?.resultClienteView ?? false);\r\n        setHasPermisoViewGarantia(permisosUsuarioNavbar?.resultGarantiaView ?? false);\r\n\r\n        const newOptions = [];\r\n        if (\r\n          (permisosUsuarioNavbar?.resultAgregarUsuario ?? false) ||\r\n          (permisosUsuarioNavbar?.resultModificarUsuario ?? false) ||\r\n          (permisosUsuarioNavbar?.resultEliminarUsuario ?? false)\r\n        ) {\r\n          newOptions.push({\r\n            label: \"Usuarios\",\r\n            value: \"1\",\r\n            image: require(\"../images/usuarios.png\"),\r\n          });\r\n        }\r\n        if (permisosUsuarioNavbar?.resultAccionesView ?? false) {\r\n          newOptions.push({\r\n            label: \"Acciones\",\r\n            value: \"2\",\r\n            image: require(\"../images/acción.png\"),\r\n          });\r\n        }\r\n        if (parseInt(usuario.id_rol) === 1) {\r\n          newOptions.push({\r\n            label: \"Tiendas\",\r\n            value: \"3\",\r\n            image: require(\"../images/tienda.png\"),\r\n          });\r\n        }\r\n        /*\r\n        newOptions.push({\r\n          label: \"Permisos\",\r\n          value: \"4\",\r\n          image: require(\"../images/tienda.png\")\r\n        })\r\n          */\r\n        if (permisosUsuarioNavbar?.resultTipoServicio) {\r\n          newOptions.push({\r\n            label: \"Tipos de Servicios\",\r\n            value: \"5\",\r\n            image: require(\"../images/Tipo_Servicio.png\"),\r\n          });\r\n        }\r\n        if (parseInt(usuario.id_rol) === 1) {\r\n          newOptions.push({\r\n            label: \"Cambiar  moneda\",\r\n            value: \"6\",\r\n            image: require(\"../images/Cambio_moneda.png\"),\r\n          });\r\n        }\r\n\r\n        // Actualiza el estado de options\r\n        setOptions(newOptions);\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, [permisosUsuarioNavbar]);\r\n\r\n  // Estilos condicionales\r\n  const buttonStyles = isMobile ? true : false;\r\n  const buttonsContainerStyles = isMobile\r\n    ? styles.buttonContainterMovile\r\n    : styles.buttonsContainerDesktop;\r\n\r\n  // Función para cambiar la contraseña\r\n  const changePassword = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL CAMBIAR LA CONTRASEÑA. Comprueve los siguientes parámetros:\\n\";\r\n\r\n      if (contrasennaNueva1 !== contrasennaNueva2) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No ha ingresado bien su contraseña en los campos requeridos.\\n\";\r\n      }\r\n      if (contrasennaNueva1.length < 6) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-La contraseña nueva debe tener más de 6 caracteres.\\n\";\r\n      }\r\n      if (contrasennaNueva1.trim() === \"\" || contrasennaNueva2.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Deve digitar la nueva contraseña en los campos correspondientes.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        const result = cambiarContrasennaUsuarios(\r\n          usuario.token,\r\n          contrasennaVieja,\r\n          contrasennaNueva1,\r\n          contrasennaNueva2,\r\n          usuario.nombre_usuario\r\n        );\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} cambió su contraseña.`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          5\r\n        );\r\n\r\n        setIsModalChekVisible(false);\r\n        setModalMensaje(`La contraseña se cambió con éxito.`);\r\n        setReflechModalMensajeView(false);\r\n        setModalMensajeView(true);\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setReflechModalMensajeView(false);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 300, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  function botones() {\r\n    return (\r\n      <ScrollView\r\n        horizontal={true}\r\n        contentContainerStyle={{\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-start\",\r\n        }}\r\n        showsHorizontalScrollIndicator={true}\r\n      >\r\n        <View style={buttonsContainerStyles}>\r\n          {hasPermisoViewProducto && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/features.png\")}\r\n              text={\"En tu Tienda\"}\r\n              isSelected={selectedButon?.butonSelected === \"Mi Tienda\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Mi Tienda\",\r\n                });\r\n                navigation.navigate(\"Mi Tienda\");\r\n              }}\r\n            />\r\n          )}\r\n          {hasPermisoViewProducto && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/product.png\")}\r\n              text={\"Productos\"}\r\n              isSelected={selectedButon?.butonSelected === \"Productos\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Productos\",\r\n                });\r\n                navigation.navigate(\"Productos\");\r\n              }}\r\n            />\r\n          )}\r\n          {hasPermisoViewProducto && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/public-service.png\")}\r\n              text={\"Servicios\"}\r\n              isSelected={selectedButon?.butonSelected === \"Servicios\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Servicios\",\r\n                });\r\n                navigation.navigate(\"Servicios\");\r\n              }}\r\n            />\r\n          )}\r\n          {hasPermisoViewMovimiento && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/moving.png\")}\r\n              text={\"Movimientos\"}\r\n              isSelected={selectedButon?.butonSelected === \"Movimientos\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Movimientos\",\r\n                });\r\n                navigation.navigate(\"Movimientos\");\r\n              }}\r\n            />\r\n          )}\r\n          {hasPermisoViewGarantia && (<CustomButtonNavbar\r\n              imageSource={require(\"../images/reembolso.png\")}\r\n              text={\"Garantias\"}\r\n              isSelected={selectedButon?.butonSelected === \"Garantias\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Garantias\",\r\n                });\r\n                navigation.navigate(\"Garantías\");\r\n              }}\r\n            />)}\r\n          {hasPermisoViewCliente && (<CustomButtonNavbar\r\n              imageSource={require(\"../images/nueva-cuenta.png\")}\r\n              text={\"Clientes\"}\r\n              isSelected={selectedButon?.butonSelected === \"Clientes\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Clientes\",\r\n                });\r\n                navigation.navigate(\"Clientes\");\r\n              }}\r\n            />)}\r\n            {hasPermisoViewProducto && (<CustomButtonNavbar\r\n              imageSource={require(\"../images/Deudas.png\")}\r\n              text={\"Deudas\"}\r\n              isSelected={selectedButon?.butonSelected === \"Deudas\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Deudas\",\r\n                });\r\n                navigation.navigate(\"Deudas\");\r\n              }}\r\n            />)}\r\n          {hasPermisoViewProveedor && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/gente.png\")}\r\n              text={\"Proveedores\"}\r\n              isSelected={selectedButon?.butonSelected === \"Proveedores\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Proveedores\",\r\n                });\r\n                navigation.navigate(\"Proveedores\");\r\n              }}\r\n            />\r\n          )}\r\n          {hasPermisoViewEntrada && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/entrada.png\")}\r\n              text={\"Entradas\"}\r\n              isSelected={selectedButon?.butonSelected === \"Entradas\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Entradas\",\r\n                });\r\n                navigation.navigate(\"Entradas\");\r\n              }}\r\n            />\r\n          )}\r\n          {/*<CustomButtonNavbar\r\n            imageSource={require(\"../images/informe.png\")}\r\n            text={\"Reportes\"}\r\n            onPress={() => {}}\r\n          />*/}\r\n          {(hasPermisoViewUsuario ||\r\n            hasPermisoViewTienda ||\r\n            hasPermisoViewAccion) && (\r\n            <CustomDropdownProvicional\r\n              imageSource={require(\"../images/gerente.png\")} // Ajusta la ruta de la imagen\r\n              text=\"Administración\"\r\n              options={options}\r\n              onSelect={handleSelect}\r\n              isSelected={selectedButon?.butonSelected === \"Administración\"}\r\n            />\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n    );\r\n  }\r\n\r\n  // Comprobar si se está en desktop o en movil\r\n  if (buttonStyles) {\r\n    return (\r\n      <View style={{ padding: 15 }}>\r\n        <LinearGradient\r\n          colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n          start={[0, 0]}\r\n          end={[1, 0]}\r\n          style={styles.navbarMobile}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => setModalUsuarioDetails(!modalUsuarioDetails)}\r\n          >\r\n            <View\r\n              style={{\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                borderWidth: 1,\r\n                borderColor: Colors.blanco,\r\n                borderRadius: 15,\r\n                width: 300,\r\n                height: 60,\r\n                marginVertical: 10,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 20, color: Colors.blanco }}>\r\n                Usuario\r\n              </Text>\r\n              <View style={styles.separatorBlanco} />\r\n              <Text style={{ fontSize: 16, color: Colors.blanco }}>\r\n                Nombre: {usuario?.nombre}\r\n              </Text>\r\n              <Text style={{ fontSize: 16, color: Colors.blanco }}>\r\n                Usuario: {usuario?.nombre_usuario}\r\n              </Text>\r\n              <TouchableOpacity\r\n                style={{\r\n                  width: \"90%\",\r\n                  height: \"45%\",\r\n                  marginTop: \"5%\",\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n                onPress={() => navigation.navigate(\"Login\")}\r\n              >\r\n                <Text style={{ fontSize: 16, color: Colors.blanco }}>\r\n                  Cerrar Sesión\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 40, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: 35, // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              paddingHorizontal: 15, // Espaciado interno horizontal para separar el contenido del borde\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/menu.png\")}\r\n              style={{ width: 40, height: 40 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Navegación</Text>\r\n          </TouchableOpacity>\r\n        </LinearGradient>\r\n        {/* Vista animada */}\r\n        {isExpanded && (\r\n          <Animated.View style={[{ overflow: \"hidden\" }, animatedStyle]}>\r\n            <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n              {/* Llamada a la función para renderizar los botones */}\r\n              {botones()}\r\n            </ScrollView>\r\n          </Animated.View>\r\n        )}\r\n\r\n        {modalUsuarioDetails && (\r\n          <Modal\r\n            transparent={true}\r\n            visible={modalUsuarioDetails}\r\n            animationType=\"fade\"\r\n            onRequestClose={() => setModalUsuarioDetails(false)}\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"90%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 15,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 10,\r\n                    right: 10,\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    borderRadius: 30,\r\n                    height: 40,\r\n                    width: 40,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                  onPress={() => {\r\n                    setContrasennaVieja(\"\");\r\n                    setContrasennaNueva1(\"\");\r\n                    setContrasennaNueva2(\"\");\r\n                    setModalUsuarioDetails(false);\r\n                  }}\r\n                >\r\n                  <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n                </TouchableOpacity>\r\n\r\n                <View style={styles.separatorNegro} />\r\n                <Text\r\n                  style={{\r\n                    fontSize: 26,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Tus Datos\r\n                </Text>\r\n\r\n                <ScrollView\r\n                  style={{ width: \"100%\" }}\r\n                  contentContainerStyle={{\r\n                    alignItems: \"center\",\r\n                    paddingBottom: 20,\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu nombre: {usuario?.nombre}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu nombre de usuario en el sistema:{\" \"}\r\n                      {usuario?.nombre_usuario}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu rol en el sistema: {usuario?.nombre_rol}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda en la que trabajas: {usuario?.nombre_tienda}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  <View style={styles.separatorNegro} />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 20,\r\n                        color: Colors.negro, // Color del texto\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Cambiar Contraseña\r\n                    </Text>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Contraseña Vieja\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaVieja}\r\n                    onChangeText={setContrasennaVieja}\r\n                    placeholder=\"Contraseña vieja\"\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Contraseña Nueva\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaNueva1}\r\n                    onChangeText={setContrasennaNueva1}\r\n                    placeholder=\"Contraseña nueva\"\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Repita la Nueva Contraseña\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaNueva2}\r\n                    onChangeText={setContrasennaNueva2}\r\n                    placeholder=\"Contraseña nueva\"\r\n                  />\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      marginLeft: \"5%\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                      marginTop: \"3%\", // Margen adicional entre botones\r\n                    }}\r\n                    onPress={() => {\r\n                      setMesajeModalChek(\r\n                        `Estas seguro que deseas cambiar tu contraseña nueva a ${contrasennaNueva1}`\r\n                      );\r\n                      setIsModalChekVisible(true);\r\n                      setModalUsuarioDetails(!modalUsuarioDetails);\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: 16,\r\n                      }}\r\n                    >\r\n                      Cambiar Contraseña\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </ScrollView>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n        )}\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => changePassword()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.navigate(\"Login\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <LinearGradient\r\n          colors={[Colors.azul_Claro, Colors.azul_Oscuro]}\r\n          start={[0, 0]}\r\n          end={[1, 0]}\r\n          style={styles.navbarDekstop}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => setModalUsuarioDetails(!modalUsuarioDetails)}\r\n          >\r\n            <View\r\n              style={{\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                borderWidth: 1,\r\n                borderColor: Colors.blanco,\r\n                borderRadius: 15,\r\n                width: 260,\r\n                height: 60,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 18, color: Colors.blanco }}>\r\n                Usuario\r\n              </Text>\r\n              <View style={styles.separatorBlanco} />\r\n              <Text style={{ fontSize: 14, color: Colors.blanco }}>\r\n                Nombre: {usuario?.nombre}\r\n              </Text>\r\n              <Text style={{ fontSize: 14, color: Colors.blanco }}>\r\n                Usuario: {usuario?.nombre_usuario}\r\n              </Text>\r\n              <TouchableOpacity\r\n                style={{\r\n                  width: \"90%\",\r\n                  height: \"40%\",\r\n                  marginTop: \"5%\",\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n                onPress={() => navigation.navigate(\"Login\")}\r\n              >\r\n                <Text style={{ fontSize: 14, color: Colors.blanco }}>\r\n                  Cerrar Sesión\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </TouchableOpacity>\r\n          {botones()}\r\n        </LinearGradient>\r\n\r\n        {modalUsuarioDetails && (\r\n          <Modal\r\n            transparent={true}\r\n            visible={modalUsuarioDetails}\r\n            animationType=\"fade\"\r\n            onRequestClose={() => setModalUsuarioDetails(false)}\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: \"60%\",\r\n                  height: \"90%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 15,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 10,\r\n                    right: 10,\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    borderRadius: 30,\r\n                    height: 40,\r\n                    width: 40,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                  onPress={() => {\r\n                    setContrasennaVieja(\"\");\r\n                    setContrasennaNueva1(\"\");\r\n                    setContrasennaNueva2(\"\");\r\n                    setModalUsuarioDetails(false);\r\n                  }}\r\n                >\r\n                  <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n                </TouchableOpacity>\r\n\r\n                <View style={styles.separatorNegro} />\r\n                <Text\r\n                  style={{\r\n                    fontSize: 26,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Tus Datos\r\n                </Text>\r\n\r\n                <ScrollView\r\n                  style={{ width: \"100%\" }}\r\n                  contentContainerStyle={{\r\n                    alignItems: \"center\",\r\n                    paddingBottom: 20,\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu nombre: {usuario?.nombre}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu nombre de usuario en el sistema:{\" \"}\r\n                      {usuario?.nombre_usuario}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu rol en el sistema: {usuario?.nombre_rol}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda en la que trabajas: {usuario?.nombre_tienda}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  <View style={styles.separatorNegro} />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 20,\r\n                        color: Colors.negro, // Color del texto\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Cambiar Contraseña\r\n                    </Text>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Contraseña Vieja\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaVieja}\r\n                    onChangeText={setContrasennaVieja}\r\n                    placeholder=\"Contraseña vieja\"\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Contraseña Nueva\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaNueva1}\r\n                    onChangeText={setContrasennaNueva1}\r\n                    placeholder=\"Contraseña nueva\"\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Repita la Nueva Contraseña\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaNueva2}\r\n                    onChangeText={setContrasennaNueva2}\r\n                    placeholder=\"Contraseña nueva\"\r\n                  />\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      marginLeft: \"5%\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                      marginTop: \"3%\", // Margen adicional entre botones\r\n                    }}\r\n                    onPress={() => {\r\n                      setMesajeModalChek(\r\n                        `Estas seguro que deseas cambiar tu contraseña nueva a ${contrasennaNueva1}`\r\n                      );\r\n                      setIsModalChekVisible(true);\r\n                      setModalUsuarioDetails(!modalUsuarioDetails);\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: 16,\r\n                      }}\r\n                    >\r\n                      Cambiar Contraseña\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </ScrollView>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n        )}\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => changePassword()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() => {\r\n                  setContrasennaVieja(\"\");\r\n                  setContrasennaNueva1(\"\");\r\n                  setContrasennaNueva2(\"\");\r\n                  isReflechModalMensajeView\r\n                    ? navigation.navigate(\"Login\")\r\n                    : setModalMensajeView(!isModalMensajeView);\r\n                }}\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\r\nimport { Colors } from '../styles/Colors';\r\n\r\n// Definir la interfaz para los props\r\ninterface DropdownItem {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface DropdownProps {\r\n  value: string | null; // Puede ser null si no hay valor seleccionado\r\n  setValue: (value: string | null) => void; // Aceptar null como valor\r\n  placeholder: string;\r\n  items: DropdownItem[];\r\n  searchable?: boolean;\r\n  onDropdownOpen?: () => void; // Agregar el nuevo prop\r\n}\r\n\r\nconst CustomDropdown: React.FC<DropdownProps> = ({\r\n  value,\r\n  setValue,\r\n  items,\r\n  placeholder: title,\r\n  searchable = false, // Valor por defecto establecido en false\r\n  onDropdownOpen, // Recibir el nuevo prop\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  const isMobile = width < 1150; // Puedes ajustar este umbral según sea necesario\r\n\r\n  const textStyles = isMobile ? styles.dropdownTextMovil : styles.dropdownTextDesktop;\r\n\r\n  // Efecto para llamar a onDropdownOpen cuando el dropdown se abre\r\n  useEffect(() => {\r\n    if (open && onDropdownOpen) {\r\n      onDropdownOpen(); // Llama a la función cuando se abre el dropdown\r\n    }\r\n  }, [open]); // Este efecto se ejecuta cada vez que 'open' cambia\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <DropDownPicker\r\n        open={open}\r\n        value={value}\r\n        items={items}\r\n        setOpen={setOpen} // Esto ahora es correcto\r\n        setValue={(val) => {\r\n          setValue(val); // Aquí se espera un valor de tipo string | null\r\n          setOpen(false); // Cerrar el dropdown al seleccionar un valor\r\n        }}\r\n        setItems={() => {}} // En este caso no se usa ya que los items se pasan como prop\r\n        placeholder={title}\r\n        style={styles.dropdown}\r\n        textStyle={textStyles}\r\n        dropDownContainerStyle={styles.dropdownContainer}\r\n        searchable={searchable}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginLeft: '5%',\r\n    marginTop: '4%',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  dropdown: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    width: '90%',\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n  },\r\n  dropdownTextDesktop: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    color: Colors.blanco,\r\n  },\r\n  dropdownTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    color: Colors.blanco,\r\n  },\r\n  dropdownContainer: {\r\n    borderColor: Colors.azul_Suave,\r\n    backgroundColor: Colors.azul_Claro,\r\n    width: '90%',\r\n  },\r\n});\r\n\r\nexport default CustomDropdown;\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface ModalProductsDates {\r\n    id_producto: string;\r\n    isAddProducto: boolean;\r\n    isModificarProducto: boolean;\r\n    fileEditable: boolean;\r\n    isAddProductoShowProveedoresTiendas: boolean;\r\n    isAddProductoShowProveedores: boolean;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface ModalProductsDatesContextType {\r\n  modalProductsDates: ModalProductsDates | null;\r\n  setModalProductsDates: (modalProductsDates: ModalProductsDates | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst ModalProductsDatesContext = createContext<ModalProductsDatesContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const ModalProductsDatesProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [modalProductsDates, setModalProductsDates] = useState<ModalProductsDates | null>(null);\r\n\r\n  return (\r\n    <ModalProductsDatesContext.Provider value={{ modalProductsDates: modalProductsDates, setModalProductsDates: setModalProductsDates }}>\r\n      {children}\r\n    </ModalProductsDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useModalProductsDates = () => {\r\n  const context = React.useContext(ModalProductsDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useModalProductsDates debe usarse dentro de un ModalProductsDates');\r\n  }\r\n  return context;\r\n};","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Producto } from '../components/MyDateTableProductos';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortProductos {\r\n  items: Producto[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortProductosContextType {\r\n  sortProductos: SortProductos | null;\r\n  setSortProductos: (sortProductos: SortProductos | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortProductosContext = createContext<SortProductosContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortProductosProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortProductos, setSortProductos] = useState<SortProductos | null>(null);\r\n\r\n  return (\r\n    <SortProductosContext.Provider value={{ sortProductos: sortProductos, setSortProductos: setSortProductos }}>\r\n      {children}\r\n    </SortProductosContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortProductos = () => {\r\n  const context = React.useContext(SortProductosContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortProductos debe usarse dentro de un SortProductos');\r\n  }\r\n  return context;\r\n};","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\nexport interface RolPermiso{\r\n    id_permiso: string,\r\n    tiene: boolean\r\n}\r\n\r\n// Optener todos los roles\r\nexport const getAllRol = async (token: string) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Rol`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener todos los roles: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Optener toos los permisos de un usuario en específico\r\nexport const getPermisosOfRol = async (token: string, id_rol: string) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Rol_permiso/getPermisosbyRol/${id_rol}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          },\r\n        }\r\n      );\r\n  \r\n      return response.data as RolPermiso[];\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error al obtener datos de los productos por el rol: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Saver si un rol en especifico tiene hhavilitado un permiso en específico\r\n  export const isPermiso = async (token: string, id_permiso: string, id_usuario: string) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Usuario/tiene_permiso/${id_usuario}/${id_permiso}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          },\r\n        }\r\n      );\r\n      \r\n      return response.data.tiene;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error al obtener datos de los permisos: \", error);\r\n      return false;\r\n    }\r\n  };","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener Todos los datos de las tiendas\r\nexport const getAllTiendas = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Tienda`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de las tiendas: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar tienda\r\nexport const addTienda = async (\r\n  token: string,\r\n  nombre: string,\r\n  direccion: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Tienda/createTienda`,\r\n      {\r\n        nombre: nombre,\r\n        direccion: direccion,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar la tienda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Realizar venta\r\nexport const tienda_Realizarventa = async (\r\n  token: string,\r\n  id_producto: string,\r\n  id_tienda: string,\r\n  cantidadARestar: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto_tienda/realizarVenta`,\r\n      {\r\n        id_producto: id_producto,\r\n        id_tienda: id_tienda,\r\n        cantidad: cantidadARestar,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al realizar venta en producto tienda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modiciar Tienda\r\nexport const updateTienda = async (\r\n  token: string,\r\n  id_tienda: string,\r\n  nombre: string,\r\n  direccion: string\r\n) => {\r\n  try {\r\n    await axios.put(\r\n      `${cerverHost}/Tienda/updateTienda/${id_tienda}`,\r\n      {\r\n        nombre: nombre,\r\n        direccion: direccion,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error actualizar la tienda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Tienda\r\nexport const deleteTienda = async (token: string, id_tienda: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Tienda/deleteTienda/${id_tienda}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return true;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error eliminar la tienda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener Tienda segun su identificador\r\nexport const getTiendaById = async (token: String, id_tienda: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Tienda/${id_tienda}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener dato de la tienda en específico: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todas las tiendas en las que se encuentre un producto específico\r\nexport const getAllTiendasByProduct = async (\r\n  token: String,\r\n  id_producto: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto_tienda/getTiendas/${id_producto}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de las tiendas según el producto: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Saver si un producto en específico está en una tienda específica\r\nexport const isProductoInTienda = async (\r\n  token: String,\r\n  id_producto: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto_tiendabyID/${id_producto}/${id_tienda}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de las tiendas: \", error);\r\n    return 0;\r\n  }\r\n};\r\n\r\n// Obtener la cantidad que hay de un producto en una tienda específica\r\nexport const getCantidadProductoInTiendaEspecifica = async (\r\n  token: String,\r\n  id_producto: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto_tiendabyID/${id_producto}/${id_tienda}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data.cantidad;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener la cantidad del producto en tienda específica: \",\r\n      error\r\n    );\r\n    return 0;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener moneda\r\nexport const getValorMonedaUSD = async (token: String) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Moneda/obtener/USD`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error al obtener valor de la moneda USD: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // cambiar valor de moneda\r\nexport const cambiarValorMonedaUSD = async (token: String, valor: String) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `${cerverHost}/Moneda/cambiar/USD/${valor}`,\r\n        {\r\n          \r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error al cambiar el valor de la monea USD: \", error);\r\n      return false;\r\n    }\r\n  };","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { Producto } from \"../components/MyDateTableProductos\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\nimport { getValorMonedaUSD } from \"./MonedaService\";\r\n\r\nexport interface ExelProductoAll {\r\n  id_Producto: string;\r\n  nombre: string;\r\n  sku: string;\r\n  cantidadTotal: string;\r\n  precio: number;\r\n  almacen: number;\r\n  taller_cell: number;\r\n  taller_pc: number;\r\n  tienda: number;\r\n  cienfuegos: number;\r\n}\r\n\r\n// Obtener todos los productos\r\nexport const getAllProductos = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Producto`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n      console.log(\"Error al obtener datos de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todos los productos con el formato para mostrar\r\nexport const getAllProductosFromTable = async (token: String, page: number) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Producto/getPaginated/${page}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n      console.log(\"Error al obtener datos de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener los identificadores de todos los productos que esten en una tienda específica\r\nexport const getRelacionProductoByTienda = async (\r\n  token: String,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/producto_tienda/getProductos/${id_tienda}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de los identificadores de  productos con la tienda: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener la cantidad total de un producto en específico que hay en la empresa\r\nexport const getProductoCantidadTotal = async (\r\n  token: string,\r\n  id_Producto: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto_tienda/getCantidadTotal/${id_Producto}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data.cantidad_total;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todos los datos principales de un producto en específico\r\nexport const getProductoById = async (\r\n  token: String,\r\n  id_Producto: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Producto/${id_Producto}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos principales de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todos las imagenes segun el producto\r\nexport const getAllImagenes = async (token: String, id_Producto: string) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto/getAllimagenes/${id_Producto}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos principales de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar producto\r\nexport const addProducto = async (\r\n  token: string,\r\n  nombre: string,\r\n  Sku: string,\r\n  precio: string,\r\n  precio_empresa: string,\r\n  descripcion: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/createProducto`,\r\n      {\r\n        nombre: nombre,\r\n        Sku: Sku,\r\n        precio: precio,\r\n        precio_empresa: precio_empresa,\r\n        descripcion: descripcion,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error incertar el producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Importar Productos del Exel\r\nexport const importarDataProductos = async (token: string, path: string) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/import/excel`,\r\n      {\r\n        path: path\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error importar productos del exel: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Importar tiendas de productos en exel\r\nexport const importarDataProducto_Tiendas = async (token: string, path: string) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto_tienda/import/excel`,\r\n      {\r\n        path: path\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error importar productos_tiendas del exel: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener producto que coincida con el SKU\r\nexport const getProductoBySku = async (token: string, sku: string) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto/getSku/${sku}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos del producto por sku: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar entradas a un producto especifico\r\nexport const addProductoEntrada = async (\r\n  token: string,\r\n  id_tienda: number,\r\n  id_producto: number,\r\n  cantidad: number\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto_tienda/HacerEntrada`,\r\n      {\r\n        id_producto: id_producto,\r\n        id_tienda: id_tienda,\r\n        cantidad: cantidad,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error incertar el la entrada al producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar imagenes del producto producto\r\nexport const addProductoAndImagenes = async (\r\n  token: string,\r\n  id_producto: string,\r\n  imagenes: any[]\r\n) => {\r\n  console.log(id_producto, imagenes);\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/createProducto`,\r\n      {\r\n        id_producto: id_producto,\r\n        imagenes: imagenes,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error incertar el producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// ModiciarProducto\r\nexport const updateProducto = async (\r\n  token: string,\r\n  id_producto: string,\r\n  nombre: string,\r\n  Sku: string,\r\n  precio: string,\r\n  precio_empresa: string,\r\n  descripcion: string\r\n) => {\r\n  try {\r\n    await axios.put(\r\n      `${cerverHost}/Producto/updateProducto/${id_producto}`,\r\n      {\r\n        nombre: nombre,\r\n        Sku: Sku,\r\n        precio: precio,\r\n        precio_empresa: precio_empresa,\r\n        descripcion: descripcion,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error actualizar el producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar producto tienda\r\nexport const updateProductoTienda = async (\r\n  token: string,\r\n  id_producto: string,\r\n  id_tienda: string,\r\n  cantidad: string\r\n) => {\r\n  try {\r\n    await axios.put(\r\n      `${cerverHost}/Producto_tienda/updateProducto_tienda`,\r\n      {\r\n        id_producto: id_producto,\r\n        id_tienda: id_tienda,\r\n        cantidad: cantidad\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error actualizar el producto_tienda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar relación al producto de la tienda a la hora de hacer la entrada\r\nexport const createProductoInTienda = async (\r\n  token: string,\r\n  id_producto: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    await axios.post(\r\n      `${cerverHost}/Producto/agregar/Tienda`,\r\n      {\r\n        id_tienda: id_tienda,\r\n        id_producto: id_producto,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\r\n      \"Error crear la relación con la tienda en el producto: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Producto\r\nexport const deleteProducto = async (token: string, id_producto: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Producto/deleteProducto/${id_producto}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return true;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos principales de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Producto\r\nexport const deleteFromProductoTiendaIn_0 = async (token: string) => {\r\n  try {\r\n    const response2 = await axios.delete(\r\n      `${cerverHost}/Producto_tienda/DeleteAllTiendas/inProducto`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Producto_tienda/delete/in0`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return true;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al eliminar en productos en 0: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar productos\r\nexport const filterProducts = async (\r\n  token: string,\r\n  nombre: string,\r\n  sku: string,\r\n  precio_liminf: string,\r\n  precio_limsup: string,\r\n  cantidad: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/api/filtrar`,\r\n      {\r\n        nombre: nombre || \"\",\r\n        sku: sku || \"\",\r\n        precio_liminf: precio_liminf || \"\",\r\n        precio_limsup: precio_limsup || \"\",\r\n        cantidad: (cantidad === \"0\")? 0 : parseInt(cantidad),\r\n        id_tienda: id_tienda || null,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos principales de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar productos_tienda\r\nexport const filterProductsEnTienda = async (\r\n  token: string,\r\n  nombre: string,\r\n  sku: string,\r\n  precio_liminf: string,\r\n  precio_limsup: string,\r\n  cantidad: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto_tienda/api/filtrar`,\r\n      {\r\n        nombre: nombre || \"\",\r\n        sku: sku || \"\",\r\n        precio_liminf: precio_liminf || \"\",\r\n        precio_limsup: precio_limsup || \"\",\r\n        cantidad: (cantidad === \"0\")? 0 : parseInt(cantidad),\r\n        id_tienda: parseInt(id_tienda),\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos principales de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar productos\r\nexport const ordenarProducts = async (\r\n  token: string,\r\n  items: Producto[],\r\n  criterio: string,\r\n  ascendente: boolean\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Mover producto\r\nexport const moverProducto = async (\r\n  token: String,\r\n  id_producto: string,\r\n  id_tienda_origen: string,\r\n  id_tienda_destino: string,\r\n  cantidad: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto_tienda/MoverProducto_tienda`,\r\n      {\r\n        id_producto: id_producto,\r\n        id_tienda_origen: id_tienda_origen,\r\n        id_tienda_destino: id_tienda_destino,\r\n        cantidad: cantidad,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al mover el producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Expedir docuemnto exel en my tienda\r\nexport const expedirExelProductosEnMyTienda = async (token: string, productos: Producto[]) => {\r\n  try {\r\n    // Crear formato para la tabla del exel\r\n    interface ExelTable{\r\n      sku: string;\r\n      nombre: string;\r\n      precioUSD: string;\r\n      precioCUP: string;\r\n      precioEmpresaCUP: string;\r\n      cantidad: string;\r\n    }\r\n\r\n    const valormoneda = await getValorMonedaUSD(token);\r\n    \r\n    const formatExel: ExelTable[] = productos.map((producto) => ({\r\n      sku: producto.sku,\r\n      nombre: producto.nombre,\r\n      precioUSD: producto.precioUSD,\r\n      precioCUP: (parseFloat(producto.precioUSD) * valormoneda).toFixed(2), // Convierte a string con dos decimales\r\n      precioEmpresaCUP: producto.precioEmpresaUSD ?? \"0\",\r\n      cantidad: producto.cantidadTotal ?? \"0\",\r\n    }));\r\n\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/to/excel`,\r\n      { productos: formatExel },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n        responseType: 'blob', // Esto asegura que la respuesta sea un Blob\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al crear excel: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Expedir docuemnto exel de todos los productos\r\n// NOTA: Este método solo funciona con las tiendas: (Almacén, Taller Cell, Taller PC, Tienda) ya que son las que se requieren en el model específico\r\nexport const expedirExelProductos = async (token: string, productos: ExelProductoAll[]) => {\r\n  try {\r\n    // Crear formato para la tabla del exel\r\n    interface ExelTable{\r\n      Sku: string;\r\n      Nombre: string;\r\n      Existencia: string;\r\n      Precio: number;\r\n      Almacén: number;\r\n      \"Taller Cell\": number;\r\n      \"Taller PC\": number;\r\n      Tienda: number;\r\n      Cienfuegos: number;\r\n    }\r\n\r\n    const formatExel: ExelTable[] = productos.map((producto) => ({\r\n      Sku: producto.sku,\r\n      Nombre: producto.nombre,\r\n      Existencia: producto.cantidadTotal ?? \"0\",\r\n      Precio: producto.precio? producto.precio : 0, // Convierte a string con dos decimales\r\n      Almacén: producto.almacen? producto.almacen : 0,\r\n      \"Taller Cell\":producto.taller_cell? producto.taller_cell : 0,\r\n      \"Taller PC\": producto.taller_pc? producto.taller_pc : 0,\r\n      Tienda: producto.tienda? producto.tienda : 0,\r\n      Cienfuegos: producto.cienfuegos? producto.cienfuegos : 0\r\n    }));\r\n\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/to/excel`,\r\n      { productos: formatExel },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n        responseType: 'blob', // Esto asegura que la respuesta sea un Blob\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al crear excel: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Expedir docuemnto exel con columnas especificas\r\nexport const expedirExelProductosConColumnas = async (token: string, columnas: string[], productos: any[]) => {\r\n  // productos: any[], columnas: String[]\r\n  try {\r\n    const columnsasxd: any = ([\"id del producto\", \"nombre\", \"precio\"]);\r\n    const pepe: any = ([\r\n      { \"id del producto\": \"1\", nombre: \"Pepe\", precio: \"12\"},\r\n      { \"id del producto\": \"1\", nombre: \"Pepe\", precio: \"12\"},\r\n      { \"id del producto\": \"1\", nombre: \"Pepe\", precio: \"12\"},\r\n      { \"id del producto\": \"1\", nombre: \"Pepe\", precio: \"12\"},\r\n    ]);\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/to/excelwithcolumns`,\r\n      { \r\n        productos: productos,\r\n        columns: columnas\r\n       },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n        responseType: 'blob', // Esto asegura que la respuesta sea un Blob\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al crear excel: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\r\nimport { Colors } from '../styles/Colors';\r\n\r\ninterface DropdownProps {\r\n  value: string;\r\n  setValue: (value: string) => void;\r\n  placeholder: string;\r\n  items: { label: string; value: string }[];\r\n  onDropdownOpen?: () => void; // Agregar el prop\r\n}\r\n\r\nconst CustomDropDownPikerFromMover: React.FC<DropdownProps> = ({\r\n  value,\r\n  setValue,\r\n  items,\r\n  placeholder: title,\r\n  onDropdownOpen, // Añadir el prop a los parámetros\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const { width } = useWindowDimensions();\r\n\r\n  useEffect(() => {\r\n    if (open && onDropdownOpen) {\r\n      onDropdownOpen(); // Llama a la función cuando el dropdown se abre\r\n    }\r\n  }, [open, onDropdownOpen]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <DropDownPicker\r\n        open={open}\r\n        value={value}\r\n        items={items}\r\n        setOpen={setOpen}\r\n        setValue={setValue}\r\n        setItems={() => {}}\r\n        placeholder={title}\r\n        style={styles.dropdown}\r\n        dropDownContainerStyle={styles.dropdownContainer}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    width: '90%',\r\n  },\r\n  dropdown: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    width: '90%',\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n  },\r\n  dropdownContainer: {\r\n    borderColor: Colors.azul_Suave,\r\n    backgroundColor: Colors.azul_Claro,\r\n    width: '90%',\r\n  },\r\n});\r\n\r\nexport default CustomDropDownPikerFromMover;\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Aux para agregar imagen\r\n  export const crearimagenUnProducto = async (token: string, selectedImages: any, nameImagen:string) => {\r\n    try {\r\n        const response = await axios.post(\r\n          `${cerverHost}/Imagen/createImagen`,\r\n          {\r\n            url: nameImagen,\r\n            uri: selectedImages,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `${token}`,\r\n            },\r\n          }\r\n        );\r\n        return response.data;\r\n      } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n          navigate(\"Login\")\r\n        }\r\n        console.log(`Error al guardar imagenes en los archivos ${error}`)\r\n        return false;\r\n      }\r\n  };\r\n\r\n  // Obtener datos de la imagen pro el id\r\n  export const getImagenById = async (token: string, id_imagen: string) => {\r\n    try {\r\n        const response = await axios.get(\r\n          `${cerverHost}/Imagen/${id_imagen}`,\r\n          {\r\n            headers: {\r\n              Authorization: `${token}`,\r\n            },\r\n          }\r\n        );\r\n        return response.data;\r\n      } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n          navigate(\"Login\")\r\n        }\r\n        alert(`Error al obtener imagen ${error}`)\r\n        return false;\r\n      }\r\n  };\r\n\r\n  // Axu para eliminar imagen\r\n  export const deleteImagenByProducto = async (token: string, id_imagen: string, nameImagen:string) => {\r\n    try {\r\n        const response = await axios.delete(\r\n          `${cerverHost}/Imagen/deleteImagen/${id_imagen}/${nameImagen}`,\r\n          {\r\n            headers: {\r\n              Authorization: `${token}`,\r\n            },\r\n          }\r\n        );\r\n        return response.data;\r\n      } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n          navigate(\"Login\")\r\n        }\r\n        alert(`Error al eliminar la imagenes en los archivos ${error}`)\r\n        return false;\r\n      }\r\n  };","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { Movimiento } from \"../components/MyDateTableMovimientos\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todos los movimientos\r\nexport const getAllMovimientos = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Salida`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener todos los datos de los movimientos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Movimiento\r\nexport const addNewMovimiento = async (\r\n  token: String,\r\n  fecha: string,\r\n  id_tienda_origen: string,\r\n  id_tienda_destino: string,\r\n  cantidad: string,\r\n  id_producto: string,\r\n  id_usuario: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Salida/createSalida`,\r\n      {\r\n        fecha: fecha,\r\n        cantidad: cantidad,\r\n        producto: id_producto,\r\n        tienda_origen: id_tienda_origen,\r\n        tienda_destino: id_tienda_destino,\r\n        usuario: id_usuario,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al crear la salida del producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener datos de movimiento por id\r\nexport const getMovimientoById = async (\r\n  token: String,\r\n  id_movimiento: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Salida/${id_movimiento}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al obtener datos del movimiento en específico: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Actualizar movimiento\r\nexport const updateMovimiento = async (\r\n  token: String,\r\n  id_movimiento: string,\r\n  fecha: string,\r\n  id_tienda_origen: string,\r\n  id_tienda_destino: string,\r\n  cantidad: string,\r\n  id_producto: string,\r\n  id_usuario: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Salida/updateSalida/${id_movimiento}`,\r\n      {\r\n        fecha: fecha,\r\n        cantidad: cantidad,\r\n        producto: id_producto,\r\n        tienda_origen: id_tienda_origen,\r\n        tienda_destino: id_tienda_destino,\r\n        usuario: id_usuario,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al actualizar datos del movimiento: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar movimiento\r\nexport const deleteMovimiento = async (\r\n  token: String,\r\n  id_movimiento: string,\r\n) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Salida/deleteSalida/${id_movimiento}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al eliminar el movimiento: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar Movimiento\r\nexport const filtrarMovimientos = async (\r\n  token: String,\r\n  nombreUsuario: string,\r\n  nombreProducto: string,\r\n  cantidad: string,\r\n  fechaDesde: string,\r\n  fechaHasta: string,\r\n  tiendaOrigen: string,\r\n  tiendaDestino: string\r\n) => {\r\n  console.log(tiendaOrigen, tiendaDestino);\r\n  \r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Salida/api/filtrar`,\r\n      {\r\n        nombre_usuario: nombreUsuario ?? null,\r\n        nombre_producto: nombreProducto ?? null,\r\n        cantidad: parseInt(cantidad) ?? null,\r\n        fecha_liminf: fechaDesde ?? null,\r\n        fecha_limsup: fechaHasta ?? null,\r\n        id_tienda_origen: tiendaOrigen ?? null,\r\n        id_tienda_destino: tiendaDestino ?? null,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrar movimientos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar movimientos especial\r\nexport const filtrarMovimientosEspecial = async (\r\n  token: String,\r\n  nombreUsuario: string,\r\n  nombreProducto: string,\r\n  cantidad: string,\r\n  fechaDesde: string,\r\n  fechaHasta: string,\r\n  tiendaUsuario: string,\r\n  tienda_origen: string,\r\n  tienda_destino: string\r\n) => {\r\n  console.log(\r\n    \"NombreUsuario: \",nombreUsuario,\r\n    \"NombreProducto: \",nombreProducto,\r\n    \"Cantidad: \",cantidad,\r\n    \"fechaDesde: \",fechaDesde,\r\n    \"fechaHasta: \",fechaHasta,\r\n    \"TiendaUsuario: \",tiendaUsuario,\r\n    \"TiendaOr: \",tienda_origen,\r\n    \"tiendaDes: \",tienda_destino\r\n  );\r\n  \r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Salida/api/filtrarJT`,\r\n      {\r\n        nombre_usuario: nombreUsuario ?? null,\r\n        nombre_producto: nombreProducto ?? null,\r\n        cantidad: parseInt(cantidad) ?? null,\r\n        fecha_liminf: fechaDesde ?? null,\r\n        fecha_limsup: fechaHasta ?? null,\r\n        id_tienda: tiendaUsuario ?? null,\r\n        id_tienda_origen: tienda_origen ?? null,\r\n        id_tienda_destino: tienda_destino ?? null\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrarEspecial movimientos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar movimientos\r\nexport const ordenarMovimientos = async (token: string, items: Movimiento[], criterio: string, ascendente: boolean) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Salida/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar las entradas: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import React, { createContext, useState, ReactNode } from \"react\";\r\n\r\n// Define la interfaz del Usuario\r\nexport interface PaginadoProductos {\r\n  page: number;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface PaginadoProductosContextType {\r\n  paginadoProductos: PaginadoProductos;\r\n  setPaginadoProductos: (paginadoProductos: PaginadoProductos) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst PaginadoProductosContext = createContext<\r\n  PaginadoProductosContextType | undefined\r\n>(undefined);\r\n\r\n// Define el proveedor\r\nexport const PaginadoProductosProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [paginadoProductos, setPaginadoProductos] = useState<PaginadoProductos>({\r\n    page: 1, // Valor por defecto\r\n  });\r\n\r\n  return (\r\n    <PaginadoProductosContext.Provider\r\n      value={{\r\n        paginadoProductos: paginadoProductos,\r\n        setPaginadoProductos: setPaginadoProductos,\r\n      }}\r\n    >\r\n      {children}\r\n    </PaginadoProductosContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const usePaginadoProductos = () => {\r\n  const context = React.useContext(PaginadoProductosContext);\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      \"usePaginadoProductos debe usarse dentro de un PaginadoProductos\"\r\n    );\r\n  }\r\n  return context;\r\n};\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useModalProductsDates } from \"../contexts/AuxiliarContextFromModalProductsDates\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n  isProductoInTienda,\r\n} from \"../services/TiendaServices\";\r\nimport {\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  deleteProducto,\r\n  getProductoCantidadTotal,\r\n  getProductoById,\r\n  getRelacionProductoByTienda,\r\n  moverProducto,\r\n} from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { TiendaPiker } from \"./MyDateTableTiendas\";\r\nimport CustomDropDownPikerFromMover from \"./CustomDropDownPikerFromMover\";\r\nimport { useImagenesDelete } from \"../contexts/DeleteImagenContext\";\r\nimport { deleteImagenByProducto } from \"../services/ImageServices\";\r\nimport { addNewMovimiento } from \"../services/MovimientosServices\";\r\nimport { getProveedorById } from \"../services/ProveedorServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport { usePaginadoProductos } from \"../contexts/AuxiliarContextPaginadoproductos\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport interface Producto {\r\n  id_Producto: string;\r\n  nombre: string;\r\n  sku: string;\r\n  cantidadTotal: string;\r\n  precioUSD: string;\r\n  precioEmpresaUSD?: string;\r\n  tieneOpciones?: boolean;\r\n}\r\n\r\nexport interface ProductoPiker {\r\n  label: string;\r\n  value: string;\r\n}\r\ninterface Props {\r\n  items: Producto[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableProveedorModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n  imtemsLength: number;\r\n}\r\n\r\nexport const MyDateTableProductos: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n  imtemsLength: itemsLength\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalProductsDates, setModalProductsDates } = useModalProductsDates();\r\n  const { sortProductos, setSortProductos } = useSortProductos();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { paginadoProductos, setPaginadoProductos } = usePaginadoProductos();\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Producto[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMesajeMoverVisible, setModalMesajeMoverVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [isRefleshView, setRefleshView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendaMoverDesde, setTiendaMoverDesde] = React.useState(\"\");\r\n  const [tiendaMoverHasta, setTiendaMoverHasta] = React.useState(\"\");\r\n  const [nombreTiendaUsuarioActual, setNombreTiendaUsuarioActual] =\r\n    React.useState(\"\");\r\n  const [cantidadTiendaUsuarioActual, setCantidadTiendaUsuarioActual] =\r\n    React.useState(\"\");\r\n  const [tiendasByProductoDesde, setTiendasByProductoDesde] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [tiendasByProductoHasta, setTiendasByProductoHasta] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [tiendaNombreEspecificaHasta, setTiendaNombreEspecificoHasta] =\r\n    React.useState(\"\");\r\n  const [tiendaNombreEspecificaDesde, setTiendaNombreEspecificoDesde] =\r\n    React.useState(\"\");\r\n\r\n  // Función para mover los productos\r\n  const moverProductoFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    if (usuario?.token) {\r\n      await moverProducto(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto\r\n      );\r\n      const currentDate = new Date();\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n      await addNewMovimiento(\r\n        usuario.token,\r\n        `${month}-${day}-${year}`,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto,\r\n        idProductoOption,\r\n        usuario.id_usuario\r\n      );\r\n\r\n      await createProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverHasta\r\n      );\r\n\r\n      // Agregar Acción de usuario mover producto\r\n      \r\n      let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} movió ${cantidadMoverProducto} de ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} hasta la tienda ${tiendaNombreEspecificaHasta}`;\r\n      await addAccionUsuario(\r\n        usuario.token,\r\n        auxAddAccionUsuarioDescripcion,\r\n        `${year}-${month}-${day}`,\r\n        usuario.id_usuario,\r\n        1\r\n      );\r\n      \r\n\r\n      setModalMensaje(\r\n        `Se movieron ${cantidadMoverProducto} de ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}`\r\n      );\r\n      setModalMesajeMoverVisible(false);\r\n      setRefleshView(true);\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  // Función para validar los campos al mover\r\n  const moverProdcutoFunctionValidarCampos = async () => {\r\n    let flag: boolean = true;\r\n    let validarCampos: string = \"Error. Compruebe los siguientes parámetros:\\n\";\r\n    let cantidadDelProductoEnLaTiendaDesde: number = 0;\r\n    // Obtener cantidad del producto en la tienda especifica desde dodne se quiere mover\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverDesde\r\n      );\r\n      if (result.encontrado) {\r\n        cantidadDelProductoEnLaTiendaDesde = parseInt(result.cantidad);\r\n      }\r\n    }\r\n    if (tiendaMoverDesde === tiendaMoverHasta) {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La tienda origen no puede ser igual a la tienda destino.\\n\";\r\n    }\r\n    if (cantidadMoverProducto === \"0\") {\r\n      flag = false;\r\n      validarCampos += \"-La cantidad a mover debe ser mayor a 0.\\n\"\r\n    }\r\n    if (cantidadMoverProducto === \"\") {\r\n      flag = false;\r\n      validarCampos += \"-La cantidad a mover no puede ser vacio.\\n\";\r\n    } else if (\r\n      parseInt(cantidadMoverProducto) > cantidadDelProductoEnLaTiendaDesde\r\n    ) {\r\n      // Comprobar que la cantidad que se desea mover no es mayor que la cantidad que existe en la tienda\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La cantidad a mover es mayor que la cantidad que existe en la tienda.\\n\";\r\n    }\r\n    if (isPermisoOpcionesDeCeldaMoverGeneral && tiendaMoverDesde === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija la tienda desde la que decea hacer el movimiento.\\n\";\r\n    }\r\n    if (tiendaMoverHasta === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija una tienda a la que desea hacer el movimiento.\\n\";\r\n    }\r\n\r\n    if (flag) {\r\n      const tiendaEspecificaHasta = tiendasByProductoHasta.find(\r\n        (tienda) => tienda.value === tiendaMoverHasta\r\n      );\r\n      setTiendaNombreEspecificoHasta(String(tiendaEspecificaHasta?.label));\r\n      const tiendaEspecificaDesde = tiendasByProductoDesde.find(\r\n        (tienda) => tienda.value === tiendaMoverDesde\r\n      );\r\n      setTiendaNombreEspecificoDesde(String(tiendaEspecificaDesde?.label));\r\n      setModalMoverVisible(false);\r\n      setModalMesajeMoverVisible(true);\r\n    } else {\r\n      setModalMensaje(validarCampos);\r\n      setRefleshView(false);\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  // Cargar datos de las tiendas para mover un producto\r\n  const cargarDatosTiendaParaMover = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n      const resultTiendas = await getAllTiendasByProduct(\r\n        usuario.token,\r\n        idProductoOption\r\n      );\r\n\r\n      if (\r\n        result &&\r\n        Array.isArray(result.data) &&\r\n        resultTiendas !== false &&\r\n        Array.isArray(resultTiendas)\r\n      ) {\r\n        const allTiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n        let auxIdTiendas: string[] = [];\r\n        let auxDataTiendasProducto: TiendaPiker[] = [];\r\n        resultTiendas.forEach(async (element) => {\r\n          // Filtrar productos que esten en la tienda pero que no esten en 0\r\n          if (parseInt(element.cantidad) > 0) {\r\n            auxIdTiendas.push(element.id_tienda);\r\n          }\r\n        });\r\n        for (let element of auxIdTiendas) {\r\n          let item: TiendaPiker = { value: \"\", label: \"\" };\r\n          const datosTendaExisteProducto = await getTiendaById(\r\n            usuario.token,\r\n            element\r\n          );\r\n          item.label = datosTendaExisteProducto.nombre;\r\n          item.value = element;\r\n          auxDataTiendasProducto.push(item);\r\n        }\r\n\r\n        // Verificar si el valor existe en auxDataTiendasProducto\r\n        let existeTienda: boolean = false;\r\n\r\n        existeTienda = auxDataTiendasProducto.some((tienda) => {\r\n          tienda.value === usuario.id_tienda;\r\n        });\r\n\r\n        for (let index = 0; index < auxDataTiendasProducto.length; index++) {\r\n          if (auxDataTiendasProducto[index].value === usuario.id_tienda) {\r\n            existeTienda = true;\r\n          }\r\n        }\r\n        \r\n        if (existeTienda) {\r\n          // Agregar un valor si es que la tienda del usuario es la desde\r\n          setTiendaMoverDesde(usuario.id_tienda)\r\n        }\r\n        if (!isPermisoOpcionesDeCeldaMoverGeneral) {\r\n          setTiendaMoverDesde(usuario.id_tienda);\r\n        }\r\n\r\n        setTiendasByProductoDesde(auxDataTiendasProducto);\r\n        setTiendasByProductoHasta(allTiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const cargarVariablesMover = async () => {\r\n    if (usuario?.token) {\r\n      const resultTienda = await getTiendaById(usuario.token, tiendaMoverDesde);\r\n      const resultCantidadEnTienda = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverDesde\r\n      );\r\n\r\n      setCantidadTiendaUsuarioActual(resultCantidadEnTienda.cantidad);\r\n      setNombreTiendaUsuarioActual(resultTienda.nombre);\r\n    }\r\n  };\r\n  // Controlar las variables que se muestran en el modal de mover\r\n  React.useEffect(() => {\r\n    cargarVariablesMover();\r\n  }, [tiendaMoverDesde]);\r\n\r\n  const detailsModalView = (id_producto: string) => {\r\n    setModalProductsDates({\r\n      id_producto: id_producto,\r\n      isAddProducto: true,\r\n      fileEditable: false,\r\n      isModificarProducto: false,\r\n      isAddProductoShowProveedoresTiendas: true,\r\n      isAddProductoShowProveedores: true,\r\n    });\r\n  };\r\n\r\n  // Controlar el doble clic del boton\r\n    const [isButtonDisabled, setIsButtonDisabled] = React.useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  const resultadoCondicionalOpcionesDeCelda = (item: Producto) => {\r\n    if (usuario?.id_rol) {\r\n      return (usuario.id_rol == \"1\" && isPermisoOpcionesDeCelda) ||\r\n        (usuario.id_rol == \"2\" && isPermisoOpcionesDeCelda)\r\n        ? true\r\n        : item.tieneOpciones && isPermisoOpcionesDeCelda\r\n        ? true\r\n        : false;\r\n    }\r\n  };\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // cargar datos de moneda\r\n        setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, itemsLength);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < itemsLength) {\r\n    setPage(newPage); // Cambia de página si es válido\r\n    setPaginadoProductos({ page: newPage }); // Cambia el estado\r\n    }\r\n  };\r\n\r\n  const sortProductosAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"USD\" || column === \"CUP\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Cantidad\") {\r\n      aux = \"option5\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortProductos({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n            </Text>\r\n            {(column === \"USD\" ||\r\n              column === \"Nombre\" ||\r\n              column === \"CUP\" ||\r\n              column === \"Cantidad\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortProductosAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idProductoOption, setIdProductoOption] = React.useState(\"\");\r\n  const [nombreProductoOption, setNombreProductoOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = async (id_producto: string) => {\r\n    // Capturar el id del producto que se está abriendo las opciones\r\n    setIdProductoOption(id_producto);\r\n    // Capturar el nombre del producto que se está abriendo las opciones\r\n    if (usuario?.token) {\r\n      const auxNombreProducto = await getProductoById(\r\n        usuario.token,\r\n        id_producto\r\n      );\r\n      if (auxNombreProducto) {\r\n        setNombreProductoOption(auxNombreProducto.nombre);\r\n      }\r\n    }\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalProductsDates({\r\n        id_producto: idProductoOption,\r\n        isAddProducto: true,\r\n        fileEditable: true,\r\n        isModificarProducto: true,\r\n        isAddProductoShowProveedoresTiendas: true,\r\n        isAddProductoShowProveedores: true,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      // Cargar tiendas para mover el producto\r\n      cargarDatosTiendaParaMover();\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    // Eliminar las imagenes del producto\r\n    if (usuario?.token) {\r\n      const result = await getProductoById(\r\n        usuario.token,\r\n        idProductoOption\r\n      );\r\n      if (result) {\r\n        for (let imagen of result.imagenes) {\r\n          if (imagen.id_imagen && imagen.url) {\r\n            await deleteImagenByProducto(\r\n              usuario?.token,\r\n              imagen.id_imagen,\r\n              imagen.url.substring(1, imagen.url.length)\r\n            );\r\n          } else {\r\n            console.log(\"Error en comprobar el id o el uri de la imagen\");\r\n          }\r\n        }\r\n      }\r\n      // Eliminar producto\r\n      const aux = await deleteProductoById();\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n      if (aux) {\r\n        const nuevosProductos = displayedItems.filter(\r\n          (producto) => producto.id_Producto !== idProductoOption\r\n        );\r\n\r\n        // Agregar Acción de usuario eliminar producto\r\n        \r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó el producto ${nombreProductoOption}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          1\r\n        );\r\n        \r\n\r\n        setDisplayedItems(nuevosProductos);\r\n        setModalMensaje(\"Producto eliminado con éxito\");\r\n        setModalMensajeView(true);\r\n      } else {\r\n        setModalMensaje(\r\n          \"ERROR AL ELIMINAR: Ya se han hecho operaciones con el producto o ya está en una tienda\"\r\n        );\r\n        setRefleshView(false);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      await deleteFromProductoTiendaIn_0(usuario.token);\r\n      const auxDelete = await deleteProducto(usuario.token, idProductoOption);\r\n      if (auxDelete) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"180%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Producto}\r\n                onPress={() => detailsModalView(item.id_Producto)}\r\n                style={{ justifyContent: \"space-around\" }}\r\n              >\r\n                <DataTable.Cell style={styles.handerRowMovil}>\r\n                  {item.sku}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell style={styles.handerRowMovil}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRowMovil}>\r\n                  {item.precioUSD}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRowMovil}>\r\n                  {(parseFloat(item.precioUSD) * cambioMoneda).toFixed(2)}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRowMovil}>\r\n                  <Text>{item.cantidadTotal} </Text>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    flex: 0.5,\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  {resultadoCondicionalOpcionesDeCelda(item) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        borderRadius: 12,\r\n                        height: \"50%\",\r\n                        width: \"70%\", // Ajustar tamaño del botón\r\n                        shadowColor: Colors.azul_Oscuro,\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6,\r\n                        shadowRadius: 14,\r\n                        marginRight: \"100%\",\r\n                      }}\r\n                      onPressIn={onPressIn}\r\n                      onPressOut={onPressOut}\r\n                      onPress={() => toggleModal(item.id_Producto)}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/option.png\")}\r\n                        style={{ width: \"70%\", height: \"70%\" }}\r\n                      />\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idProductoOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                      disabled={isButtonDisabled}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {tiendaMoverDesde === \"\"\r\n                    ? \"Seleccione una tienda origen\"\r\n                    : `Mover Producto \"${nombreProductoOption}\" en la Tienda\\n ${nombreTiendaUsuarioActual} con una cantidad de ${cantidadTiendaUsuarioActual}`}\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                      <CustomDropDownPikerFromMover\r\n                        value={tiendaMoverDesde}\r\n                        items={tiendasByProductoDesde}\r\n                        placeholder=\"Tienda desde donde se quiere mover\"\r\n                        setValue={setTiendaMoverDesde}\r\n                      />\r\n                    )}\r\n                    <CustomDropDownPikerFromMover\r\n                      value={tiendaMoverHasta}\r\n                      items={tiendasByProductoHasta}\r\n                      placeholder=\"Tienda a la que se quiere mover\"\r\n                      setValue={setTiendaMoverHasta}\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      marginTop: 150,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n            {/* Modal mensaje para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMesajeMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 450,\r\n                    height: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {`Desea mover ${cantidadMoverProducto} producto ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}?`}\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => moverProductoFunction()}\r\n                      disabled={isButtonDisabled}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                      <CustomDropDownPikerFromMover\r\n                        value={tiendaMoverDesde}\r\n                        items={tiendasByProductoDesde}\r\n                        placeholder=\"Tienda desde donde se quiere mover\"\r\n                        setValue={setTiendaMoverDesde}\r\n                      />\r\n                    )}\r\n                    <CustomDropDownPikerFromMover\r\n                      value={tiendaMoverHasta}\r\n                      items={tiendasByProductoHasta}\r\n                      placeholder=\"Tienda a la que se quiere mover\"\r\n                      setValue={setTiendaMoverHasta}\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      marginTop: 150,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  itemsLength\r\n                )} de ${itemsLength}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= itemsLength &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= itemsLength} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Producto}\r\n                onPress={() => detailsModalView(item.id_Producto)}\r\n              >\r\n                <DataTable.Cell style={styles.handerRowDesktop}>\r\n                  {item.sku}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell style={styles.handerRowDesktop}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRowDesktop}>\r\n                  {item.precioUSD}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRowDesktop}>\r\n                  {(parseFloat(item.precioUSD) * cambioMoneda).toFixed(2)}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    flex: 1.5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      marginRight: \"13%\",\r\n                    }}\r\n                  >\r\n                    {item.cantidadTotal}{\" \"}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    flex: 0.5,\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  {resultadoCondicionalOpcionesDeCelda(item) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        borderRadius: 12,\r\n                        height: \"60%\",\r\n                        width: \"80%\", // Ajustar tamaño del botón\r\n                        shadowColor: Colors.azul_Oscuro,\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6,\r\n                        shadowRadius: 14,\r\n                        marginRight: \"100%\",\r\n                      }}\r\n                      onPressIn={onPressIn}\r\n                      onPressOut={onPressOut}\r\n                      onPress={() => toggleModal(item.id_Producto)}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/option.png\")}\r\n                        style={{ width: \"70%\", height: \"70%\" }}\r\n                      />\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalVisible}\r\n            animationType=\"fade\"\r\n            onRequestClose={() => toggleModal(\"\")}\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 250,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  Opciones\r\n                </Text>\r\n\r\n                {isPermisoOpcionesDeCeldaModificar && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Modificar\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/edit.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                      Modificar\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {isPermisoOpcionesDeCeldaEliminar && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Eliminar\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/delete.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                  isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Mover\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/mover.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\" }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {/* Botón para cerrar el modal */}\r\n                <TouchableOpacity\r\n                  onPress={() => toggleModal(\"\")}\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/* Modal para el Eliminar*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalEliminarVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 350,\r\n                  height: 200,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  ¿Estás seguro de que deseas eliminar este producto?\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\", // Espacio entre los botones\r\n                    width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => auxDeleteProductoById()}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Sí</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>No</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    setModalEliminarVisible(!isModalEliminarVisible)\r\n                  }\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n\r\n          {/* Modal para el Mover*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMoverVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 500, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {tiendaMoverDesde === \"\"\r\n                    ? \"Seleccione una tienda origen\"\r\n                    : `Mover Producto \"${nombreProductoOption}\" en la Tienda ${nombreTiendaUsuarioActual} con una cantidad de ${cantidadTiendaUsuarioActual}`}\r\n                </Text>\r\n\r\n                <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                  La cantidad que desea mover\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 50,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                    shadowRadius: 14, // Difuminado\r\n                    width: \"90%\",\r\n                    marginTop: \"2%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18, // Tamaño de letra más grande\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                    fontWeight: \"bold\", // Letra en negritas\r\n                    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Cantidad a mover\"\r\n                  value={cantidadMoverProducto}\r\n                  onChangeText={(text) => {\r\n                    const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                    setCantidadMoverProducto(numericValue);\r\n                  }}\r\n                />\r\n\r\n                <Text style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}>\r\n                  Tiendas para mover los productos\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                  {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                    <CustomDropDownPikerFromMover\r\n                      value={tiendaMoverDesde}\r\n                      items={tiendasByProductoDesde}\r\n                      placeholder=\"Tienda desde donde se quiere mover\"\r\n                      setValue={setTiendaMoverDesde}\r\n                    />\r\n                  )}\r\n                  <CustomDropDownPikerFromMover\r\n                    value={tiendaMoverHasta}\r\n                    items={tiendasByProductoHasta}\r\n                    placeholder=\"Tienda a la que se quiere mover\"\r\n                    setValue={setTiendaMoverHasta}\r\n                  />\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Claro,\r\n                    borderRadius: 15,\r\n                    marginTop: 150,\r\n                    width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                    height: 50, // Altura fija para pantallas de escritorio\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 3, height: 4 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/* Modal mensaje para el Mover*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMesajeMoverVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 450,\r\n                  height: 250,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {`Desea mover ${cantidadMoverProducto} producto ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}?`}\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\", // Espacio entre los botones\r\n                    width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => moverProductoFunction()}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Sí</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                    }\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>No</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                  }\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => {isRefleshView? navigation.replace(\"Productos\") : setModalMensajeView(!isModalMensajeView)}}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                itemsLength\r\n              )} of ${itemsLength}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= itemsLength &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= itemsLength} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRowDesktop: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  handerRowMovil: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport interface TiendaShowModal {\r\n  id_tienda: string;\r\n  nombre: string;\r\n  cantidad: string;\r\n}\r\n\r\ninterface Props {\r\n  items: TiendaShowModal[];\r\n  columns: string[];\r\n}\r\n\r\nexport const MyDateTableModalShowDatesTienda: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(3);\r\n  const [displayedItems, setDisplayedItems] = React.useState<TiendaShowModal[]>(\r\n    []\r\n  ); // Estado para los elementos mostrados\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text style={styles.headerTextDesktop}>{column}</Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerDesktop}>\r\n      <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n        <DataTable style={{ width: \"150%\" }}>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.filter((item)=>parseInt(item.cantidad) !== 0).map((item) => (\r\n            <DataTable.Row\r\n              key={item.id_tienda}\r\n              onPress={() => {}}\r\n            >\r\n              <DataTable.Cell style={styles.handerRow}>\r\n                <Text\r\n                  style={{ flexWrap: \"wrap\", width: \"100%\", textAlign: \"left\" }}\r\n                  numberOfLines={2} // Limita a 2 líneas\r\n                >\r\n                  {item.nombre}\r\n                </Text>\r\n              </DataTable.Cell>\r\n              <DataTable.Cell numeric style={styles.handerRow}>\r\n                {item.cantidad}\r\n              </DataTable.Cell>\r\n            </DataTable.Row>\r\n          ))}\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport interface ProveedoresShowModal {\r\n  id_proveedor: string;\r\n  nombre: string;\r\n  cantidad: string;\r\n  costoPorUnidad: number;\r\n}\r\n\r\ninterface Props {\r\n  items: ProveedoresShowModal[];\r\n  columns: string[];\r\n}\r\n\r\nexport const MyDateTableModalShowDateProveedores: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(3);\r\n  const [displayedItems, setDisplayedItems] = React.useState<\r\n    ProveedoresShowModal[]\r\n  >([]); // Estado para los elementos mostrados\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text style={styles.headerTextDesktop}>{column}</Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerDesktop}>\r\n      <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n        <DataTable style={{ width: \"150%\" }}>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => (\r\n            <DataTable.Row\r\n              key={item.id_proveedor}\r\n              onPress={() => {}}\r\n            >\r\n              <DataTable.Cell style={styles.handerRow}>\r\n                <Text\r\n                  style={{ flexWrap: \"wrap\", width: \"100%\", textAlign: \"left\" }}\r\n                  numberOfLines={2} // Limita a 2 líneas\r\n                >\r\n                  {item.nombre}\r\n                </Text>\r\n              </DataTable.Cell>\r\n              <DataTable.Cell numeric style={styles.handerRow}>\r\n                {item.cantidad}\r\n              </DataTable.Cell>\r\n              <DataTable.Cell numeric style={styles.handerRow}>\r\n                {item.costoPorUnidad}\r\n              </DataTable.Cell>\r\n            </DataTable.Row>\r\n          ))}\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { Entrada } from \"../components/MyDateTableEntradas\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todas las entradas\r\nexport const getAllEntradas = async (token: String) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Entrada`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error al obtener datos de todas las entradas: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Obtener una entrada especifica segun el id\r\nexport const getEntradaByID = async (token: String, id_entrada: string) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Entrada/${id_entrada}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error al obtener datos de una entrada en específico segun el ID: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Agregar Entrada\r\nexport const addEntrada = async (token: string, costo: string, cantidad: string, fecha: string, id_proveedor: number, id_producto: number, id_tienda: number) => {\r\n  \r\n    try {\r\n      const response = await axios.post(\r\n        `${cerverHost}/Entrada/createEntrada`,\r\n        {\r\n            costo: costo,\r\n            cantidad: cantidad,\r\n            fecha: fecha,\r\n            proveedor: {\"id_proveedor\": id_proveedor},\r\n            producto: {\"id_producto\": id_producto},\r\n            tienda: {\"id_tienda\": id_tienda}\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error incertar la entrada: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Obtener todas las entradas segun el id del producto\r\n  export const getAllEntradasByProductoId = async (token: string, id_producto: string) => {\r\n  \r\n    try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Entrada/Producto/${id_producto}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error al obtener todos las entradas según el producto: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Obtener todas las entradas segun el id del proveedor\r\n  export const getAllEntradasByProveedorId = async (token: string, id_proveedor: string) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Entrada/getProveedores/${id_proveedor}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error al obtener todos las entradas según el proveedor: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n    // Modificar Entrada\r\nexport const modificarEntrada = async (token: string, id_entrada:string, costo: string, cantidad: string, fecha: string, id_proveedor: number, id_producto: number, id_tienda: number) => {\r\n  \r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Entrada/updateEntrada/${id_entrada}`,\r\n      {\r\n          costo: costo,\r\n          cantidad: cantidad,\r\n          fecha: fecha,\r\n          proveedor: {\"id_proveedor\": id_proveedor},\r\n          producto: {\"id_producto\": id_producto},\r\n          tienda: {\"id_tienda\": id_tienda}\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error modificar la entrada: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n  // Eliminar Entrada\r\n  export const deleteEntrada = async (token: string, id_entrada: string) => {\r\n  \r\n    try {\r\n      const response = await axios.delete(\r\n        `${cerverHost}/Entrada/deleteEntrada/${id_entrada}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error incertar la entrada: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n// Filtrar Entradas\r\nexport const filtrarEntrada = async (token: string, nombre_proveedor: string, nombre_producto: string, costo_liminf: string, costo_limsup: string, fecha_liminf: string, fecha_limsup: string) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Entrada/api/filtrar`,\r\n      {\r\n          nombre_producto: nombre_producto,\r\n          nombre_proveedor: nombre_proveedor,\r\n          costo_liminf: costo_liminf,\r\n          costo_limsup: costo_limsup,\r\n          fecha_liminf: fecha_liminf,\r\n          fecha_limsup: fecha_limsup\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrar los datos: \", error);\r\n    return false;\r\n  }\r\n};\r\n// Ordenar entradas\r\nexport const ordenarEntradas = async (token: string, items: Entrada[], criterio: string, ascendente: boolean) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Entrada/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar las entradas: \", error);\r\n    return false;\r\n  }\r\n};","import React, { createContext, useState, ReactNode } from 'react';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface NavigationLost {\r\n    isOnToken: boolean;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface NavigationLostDatesContextType {\r\n  navigationLostDates: NavigationLost | null;\r\n  setNavigationLostDates: (navigationLostDates: NavigationLost | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst NavigationLostDatesContext = createContext<NavigationLostDatesContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const NavigationLostDatesProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  // Inicializa navigationLostDates con isOnToken en false\r\n  const [navigationLostDates, setNavigationLostDates] = useState<NavigationLost | null>({\r\n    isOnToken: false,\r\n  });\r\n\r\n  return (\r\n    <NavigationLostDatesContext.Provider value={{ navigationLostDates, setNavigationLostDates }}>\r\n      {children}\r\n    </NavigationLostDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useNavigationLostDates = () => {\r\n  const context = React.useContext(NavigationLostDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useNavigationLostDates debe usarse dentro de un NavigationLostDatesProvider');\r\n  }\r\n  return context;\r\n};\r\n","import { Float } from \"react-native/Libraries/Types/CodegenTypes\";\r\nimport { Entrada } from \"../components/MyDateTableEntradas\";\r\n\r\n// Recive las entradas de un producto y devuelve el costo promedio de ese producto\r\nexport const calcularPromedioAcomulado = (\r\n  entradas: any[],\r\n  cantidadEnLaEmpresa: number\r\n) => {\r\n  let cantidad_existencia: number = 0;\r\n  let costo_promedio: Float = 0;\r\n  let cantidadVendida: number = 0;\r\n\r\n  // Sacar cantidad vendida\r\n  entradas.forEach((entrada) => {\r\n    cantidadVendida += entrada.cantidad;\r\n  });\r\n  cantidadVendida = cantidadVendida - cantidadEnLaEmpresa;\r\n  \r\n  entradas.forEach((entrada) => {\r\n    let entradaActual: any = entrada;\r\n\r\n    if (parseInt(entradaActual.cantidad) > cantidadVendida) {\r\n      entradaActual.cantidad -= cantidadVendida;\r\n      cantidadVendida = 0;\r\n      let costo_i: Float = parseFloat(entradaActual.costo);\r\n      let cantidad_i: Float = parseFloat(entradaActual.cantidad);\r\n      costo_promedio =\r\n        (cantidad_existencia * costo_promedio + cantidad_i * costo_i) /\r\n        (cantidad_existencia + cantidad_i);\r\n      cantidad_existencia = cantidad_existencia + cantidad_i;\r\n    } else {\r\n      cantidadVendida -= parseInt(entradaActual.cantidad);\r\n    }\r\n  });\r\n\r\n  return costo_promedio.toFixed(5);\r\n};\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport compressImage from \"react-native-compressor\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport {\r\n  Producto,\r\n  MyDateTableProductos,\r\n} from \"../components/MyDateTableProductos\";\r\nimport {\r\n  addProducto,\r\n  addProductoAndImagenes,\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  ExelProductoAll,\r\n  expedirExelProductos,\r\n  filterProducts,\r\n  getProductoBySku,\r\n  getProductoCantidadTotal,\r\n  getProductoById,\r\n  getAllProductos,\r\n  importarDataProducto_Tiendas,\r\n  importarDataProductos,\r\n  ordenarProducts,\r\n  updateProducto,\r\n  getAllProductosFromTable,\r\n  expedirExelProductosConColumnas,\r\n} from \"../services/ProductoServices\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n  isProductoInTienda,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport {\r\n  launchImageLibrary,\r\n  ImagePickerResponse,\r\n  Asset,\r\n} from \"react-native-image-picker\";\r\nimport {\r\n  PanGestureHandler,\r\n  PanGestureHandlerGestureEvent,\r\n} from \"react-native-gesture-handler\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport {\r\n  MyDateTableModalShowDateProveedores,\r\n  ProveedoresShowModal,\r\n} from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { useModalProductsDates } from \"../contexts/AuxiliarContextFromModalProductsDates\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { SortProductos } from \"../functions/SortFromPacientesView\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport axios from \"axios\";\r\nimport { cerverHost, cerverHostImages } from \"../services/cerverHost\";\r\nimport {\r\n  crearimagenUnProducto,\r\n  deleteImagenByProducto,\r\n  getImagenById,\r\n} from \"../services/ImageServices\";\r\nimport {\r\n  addEntrada,\r\n  getAllEntradasByProductoId,\r\n  getEntradaByID,\r\n} from \"../services/EntradaServices\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport { useNavigationLostDates } from \"../contexts/NavigationLostContext\";\r\nimport { usePaginadoProductos } from \"../contexts/AuxiliarContextPaginadoproductos\";\r\nimport { calcularPromedioAcomulado } from \"../functions/CalcularCostoPromedioProducto\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport default function ProductosViwe() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario } = useUsuario();\r\n  const { sortProductos } = useSortProductos();\r\n  const { modalProductsDates, setModalProductsDates } = useModalProductsDates();\r\n  const { navigationLostDates, setNavigationLostDates } =\r\n    useNavigationLostDates();\r\n  const { paginadoProductos, setPaginadoProductos } = usePaginadoProductos();\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar producto y ver datos\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [nombreProductoDetails, setNombreProductoDetails] = useState(\"\");\r\n  const [precioProductoDetails, setPrecioProductoDetails] = useState(\"\");\r\n  const [costoPromedio, setCostopromedio] = useState(\"\");\r\n  const [precioEmpresaProductoDetails, setPrecioEmpresaProductoDetails] =\r\n    useState(\"\");\r\n  const [skuDetails, setSkuDetails] = useState(\"\");\r\n  const [descripcionProductoDetails, setDescripcionProductoDetails] =\r\n    useState(\"\");\r\n  // Estado para almacenar las imágenes seleccionadas\r\n  const [selectedImages, setSelectedImages] = useState<Asset[]>([]);\r\n  const [deleteImages, setDeleteImages] = useState<Asset[]>([]);\r\n  const [modificarAddImages, setModificarAddImages] = useState<Asset[]>([]);\r\n\r\n  const [isModalMensajeViewExel, setModalMensajeViewExel] =\r\n    React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] = useState(false);\r\n\r\n  const [\r\n    optimizacionAbrirPorPrimeraVesProductosView,\r\n    setOptimizacionAbrirPorPrimeraVesProductosView,\r\n  ] = useState(false);\r\n  const [controlFiltrarOPaginar, setControlFiltrarOPaginar] = useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  // Controlar el doble clic del boton\r\n      const [isButtonDisabled, setIsButtonDisabled] = React.useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoButtonAddProducto, setIsPermisoButtonAddProducto] =\r\n    useState(false);\r\n  const [isPermisoHistorialDeProveedores, setIsPermisoHistorialDeProveedores] =\r\n    useState(false);\r\n  let opcionesDeCelda: boolean = false;\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultPermisoButonAddProducto = await isPermiso(\r\n        usuario.token,\r\n        \"6\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoHistorialDeProveedores = await isPermiso(\r\n        usuario.token,\r\n        \"38\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionModificar = await isPermiso(\r\n        usuario.token,\r\n        \"7\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionEliminar = await isPermiso(\r\n        usuario.token,\r\n        \"8\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n        usuario.token,\r\n        \"30\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"31\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      // Actualizar cambio de moneda\r\n      setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n\r\n      // Actualiza el estado con los resultado\r\n      opcionesDeCelda =\r\n        resultPermisoButonOptionEliminar ||\r\n        resultPermisoButonOptionModificar ||\r\n        resultPermisoButonOptionMoverLocal ||\r\n        resultPermisoButonOptionMoverGeneral;\r\n\r\n      setIsPermisoButtonAddProducto(resultPermisoButonAddProducto);\r\n      setIsPermisoHistorialDeProveedores(resultPermisoHistorialDeProveedores);\r\n    }\r\n  };\r\n\r\n  const onDrop = () => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Producto[]>([]);\r\n  const [filterItemsLength, setFilterItemsLength] = useState(0);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([]);\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarProductos();\r\n    }\r\n  };\r\n\r\n  const cargarProveedoresPorProducto = async (id_producto: string) => {\r\n    try {\r\n      if (usuario?.token) {\r\n        // Llamamos a la API para obtener todas las entradas según el producto\r\n        const entradas = await getAllEntradasByProductoId(\r\n          usuario?.token,\r\n          id_producto\r\n        );\r\n        const cantidadTotalProducto = await getProductoCantidadTotal(\r\n          usuario.token,\r\n          id_producto\r\n        );\r\n\r\n        if (entradas) {\r\n          setCostopromedio(\r\n            calcularPromedioAcomulado(entradas, cantidadTotalProducto)\r\n          );\r\n          // Mapeamos los datos de las entradas para obtener solo la información que necesitamos\r\n          const proveedores = entradas.map((entrada: any) => ({\r\n            id_proveedor: entrada.proveedor.id_proveedor,\r\n            nombre: entrada.proveedor.nombre,\r\n            cantidad: entrada.cantidad,\r\n            costoPorUnidad: entrada.costo,\r\n          }));\r\n\r\n          // Actualizamos el estado con los datos obtenidos\r\n          setProveedorByProducto(proveedores);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error al cargar los proveedores por producto:\", error);\r\n    }\r\n  };\r\n\r\n  const getTiendasByProducto = async (id_producto: string) => {\r\n    if (usuario?.token) {\r\n      const result = await getAllTiendasByProduct(usuario.token, id_producto);\r\n\r\n      // Asegurándonos de que `result` es un array y contiene los datos esperados.\r\n      if (Array.isArray(result)) {\r\n        // Mapeamos los datos de tiendas al formato de TiendaShowModal.\r\n        const tiendas: TiendaShowModal[] = result.map((item) => ({\r\n          id_tienda: item.tienda.id_tienda.toString(),\r\n          nombre: item.tienda.nombre,\r\n          cantidad: item.cantidad.toString(), // Aquí usamos `item.cantidad` directamente.\r\n        }));\r\n\r\n        // Actualizamos el estado con las tiendas formateadas.\r\n        setTiendasByProducto(tiendas);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método para exportar a exel\r\n  const exportarExel = async () => {\r\n    interface Item {\r\n      sku: string;\r\n      Nombre: string;\r\n      Existencia: string;\r\n      Precio_USD: string;\r\n      Precio_CUP: string;\r\n      Precio_Mayorista: string;\r\n      [key: string]: any; // Permite propiedades adicionales con claves de tipo string\r\n    }\r\n\r\n    setModalMensaje(\r\n      \"Recopilando datos de todos los productos filtrados para el Exel. Espere un momento por favor.\"\r\n    );\r\n    setLoadingOfExel(true);\r\n    setModalMensajeViewExel(true);\r\n    if (usuario?.token) {\r\n      if (filterItems.length < filterItemsLength) {\r\n        \r\n        const resultAllTiendas = await getAllTiendas(usuario.token);\r\n        const resultAllProductos = await filterProducts(usuario.token,\"\",\"\",\"\",\"\",\"\",\"\");\r\n  \r\n        if (resultAllTiendas && Array.isArray(resultAllTiendas.data) && resultAllProductos && Array.isArray(resultAllProductos)) {\r\n          let itemsFromExel: Item[] = []; // Cambia el tipo a Item[]\r\n          for (let index of resultAllProductos) {\r\n            const item: Item = {\r\n              sku: index.Sku,\r\n              Nombre: index.nombre,\r\n              Existencia: index.cantidad_total,\r\n              Precio_USD: parseFloat(index.precio).toFixed(2),\r\n              Precio_CUP: (parseFloat(index.precio) * cambioMoneda).toFixed(0),\r\n              Precio_Mayorista: index.precio_empresa,\r\n            };\r\n            \r\n              const resultProductoTienda = await getAllTiendasByProduct(usuario.token, index.id_producto);\r\n              if (resultProductoTienda && Array.isArray(resultProductoTienda)) {\r\n                for(let elemen of resultProductoTienda){\r\n                  item[elemen.tienda.nombre] = elemen.cantidad ?? 0; // Ahora esto no dará error\r\n                }\r\n                for(let element of resultAllTiendas.data){\r\n                  if (!item[element.nombre]) {\r\n                    item[element.nombre] = 0;\r\n                  }\r\n                }\r\n              }\r\n  \r\n            itemsFromExel.push(item);\r\n          }\r\n  \r\n          const result = await expedirExelProductosConColumnas(\r\n            usuario.token,\r\n            [],\r\n            itemsFromExel\r\n          );\r\n          if (result) {\r\n            const currentDate = new Date();\r\n            const year = String(currentDate.getFullYear());\r\n            const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n            const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n  \r\n            const url = window.URL.createObjectURL(result);\r\n  \r\n            // Crea un enlace de descarga\r\n            const a = document.createElement(\"a\");\r\n            a.href = url;\r\n            a.download = `Productos_${year}-${month}-${day}.xlsx`; // Nombre del archivo descargado\r\n            document.body.appendChild(a);\r\n  \r\n            // Haz clic en el enlace para iniciar la descarga\r\n            a.click();\r\n  \r\n            // Limpia el enlace creado y la URL Blob\r\n            document.body.removeChild(a);\r\n            window.URL.revokeObjectURL(url);\r\n          } else {\r\n            console.error(\"No se pudo descargar el archivo.\");\r\n          }\r\n        }\r\n        \r\n      }else{\r\n        const resultAllTiendas = await getAllTiendas(usuario.token);\r\n  \r\n        if (resultAllTiendas && Array.isArray(resultAllTiendas.data)) {\r\n          let itemsFromExel: Item[] = []; // Cambia el tipo a Item[]\r\n          for (let index of filterItems) {\r\n            const item: Item = {\r\n              sku: index.sku,\r\n              Nombre: index.nombre,\r\n              Existencia: index.cantidadTotal,\r\n              Precio_USD: parseFloat(index.precioUSD).toFixed(2),\r\n              Precio_CUP: (parseFloat(index.precioUSD) * cambioMoneda).toFixed(0),\r\n              Precio_Mayorista: index.precioEmpresaUSD ?? \"0\"\r\n            };\r\n            \r\n              const resultProductoTienda = await getAllTiendasByProduct(usuario.token, index.id_Producto);\r\n              if (resultProductoTienda && Array.isArray(resultProductoTienda)) {\r\n                for(let elemen of resultProductoTienda){\r\n                  item[elemen.tienda.nombre] = elemen.cantidad ?? 0; // Ahora esto no dará error\r\n                }\r\n                for(let element of resultAllTiendas.data){\r\n                  if (!item[element.nombre]) {\r\n                    item[element.nombre] = 0;\r\n                  }\r\n                }\r\n              }\r\n  \r\n            itemsFromExel.push(item);\r\n          }\r\n  \r\n          const result = await expedirExelProductosConColumnas(\r\n            usuario.token,\r\n            [],\r\n            itemsFromExel\r\n          );\r\n          if (result) {\r\n            const currentDate = new Date();\r\n            const year = String(currentDate.getFullYear());\r\n            const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n            const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n  \r\n            const url = window.URL.createObjectURL(result);\r\n  \r\n            // Crea un enlace de descarga\r\n            const a = document.createElement(\"a\");\r\n            a.href = url;\r\n            a.download = `Productos_${year}-${month}-${day}.xlsx`; // Nombre del archivo descargado\r\n            document.body.appendChild(a);\r\n  \r\n            // Haz clic en el enlace para iniciar la descarga\r\n            a.click();\r\n  \r\n            // Limpia el enlace creado y la URL Blob\r\n            document.body.removeChild(a);\r\n            window.URL.revokeObjectURL(url);\r\n          } else {\r\n            console.error(\"No se pudo descargar el archivo.\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setLoadingOfExel(false);\r\n  };\r\n\r\n  const nombreProductoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Cuando el modal esté visible, enfocar el campo del nombre del producto\r\n    if (modalProductsDates?.isAddProducto) {\r\n      nombreProductoRef.current?.focus();\r\n    }\r\n  }, [modalProductsDates?.isAddProducto]);\r\n\r\n  useEffect(() => {\r\n    if (navigationLostDates?.isOnToken) {\r\n      alert(navigationLostDates.isOnToken);\r\n    }\r\n  }, [navigationLostDates?.isOnToken]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      optimizacionAbrirPorPrimeraVesProductosView &&\r\n      paginadoProductos?.page !== undefined &&\r\n      usuario?.token &&\r\n      controlFiltrarOPaginar\r\n    ) {\r\n      const auxiliarPagination = async () => {\r\n        if (usuario?.token != undefined) {\r\n          try {\r\n            // Obtener productos desde la tabla\r\n            const result = await getAllProductosFromTable(\r\n              usuario.token,\r\n              paginadoProductos.page + 1\r\n            );\r\n\r\n            setFilterItemsLength(result.cantidad_total_productos);\r\n            if (result && Array.isArray(result.productos)) {\r\n              // Mapeamos los productos y obtenemos tanto la cantidadTotal como si tienen opciones\r\n              const productosMapeados: Producto[] = await Promise.all(\r\n                result.productos.map(async (element: any) => {\r\n                  // Verificar si el producto tiene opciones (en la tienda)\r\n                  let tieneOpciones: boolean = false;\r\n\r\n                  for (let index of element.tiendas) {\r\n                    if (usuario.id_tienda === index.id_tienda) {\r\n                      tieneOpciones = true;\r\n                      break;\r\n                    }\r\n                  }\r\n\r\n                  // Devolvemos el producto con todas las propiedades mapeadas\r\n                  return {\r\n                    id_Producto: element.id_producto, // Mapea 'id_producto' a 'id_Producto'\r\n                    nombre: element.nombre, // Mapea 'nombre' directamente\r\n                    sku: element.Sku, // Mapea 'Sku' a 'sku'\r\n                    cantidadTotal: element.cantidad_total, // Asigna el valor obtenido para cantidadTotal\r\n                    precioUSD: element.precio.toString(), // Mapea 'precio' a 'precioUSD' y lo convierte a string\r\n                    tieneOpciones: tieneOpciones, // Añade el valor de tieneOpciones\r\n                  };\r\n                })\r\n              );\r\n              // Actualizamos el estado de filterItems con los productos mapeados\r\n              setFilterItems((prevFilterItems) => [\r\n                ...prevFilterItems,\r\n                ...productosMapeados,\r\n              ]);\r\n            } else {\r\n              console.log(\"No se encontraron productos.\");\r\n            }\r\n          } catch (error) {\r\n            console.log(\r\n              \"Error al obtener los productos o verificar permisos:\",\r\n              error\r\n            );\r\n            alert(\"Ocurrió un problema al cargar los datos de los productos\");\r\n          }\r\n        } else {\r\n          alert(\r\n            \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de los productos\"\r\n          );\r\n        }\r\n      };\r\n\r\n      auxiliarPagination();\r\n    }\r\n  }, [paginadoProductos]);\r\n\r\n  const [dropdownItems, setDropDownItems] = useState<TiendaPiker[]>([]);\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [sKUSearch, setSKUSearch] = useState(\"\");\r\n  const [cantidadSearch, setCantidadSearch] = useState(\"\");\r\n  const [rangoPrecioDesdeSearch, setRangoPrecioDesdeSearch] = useState(\"\");\r\n  const [rangoPrecioHastaSearch, setRangoPrecioHastaSearch] = useState(\"\");\r\n  const [selectedValueNombreTienda, setSelectedValueNombreTienda] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingOfExel, setLoadingOfExel] = useState(false);\r\n\r\n  const getDatesTiendaPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItems([\r\n          { label: \"Seleccione una tienda\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar producto\r\n  const callModalAddProducto = () => {\r\n    setModalProductsDates({\r\n      id_producto: \"\",\r\n      isAddProducto: false,\r\n      isModificarProducto: false,\r\n      fileEditable: true,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isAddProductoShowProveedores: false,\r\n    });\r\n  };\r\n  const cargarDetailsOfProducto = async () => {\r\n    if (usuario?.token && modalProductsDates?.id_producto) {\r\n      const result = await getProductoById(\r\n        usuario.token,\r\n        modalProductsDates.id_producto\r\n      );\r\n\r\n      if (result) {\r\n        // Establecer los detalles del producto\r\n        setIdProductoDetails(result.id_producto);\r\n        setNombreProductoDetails(result.nombre);\r\n        setPrecioProductoDetails(result.precio);\r\n        setPrecioEmpresaProductoDetails(result.precio_empresa);\r\n        setSkuDetails(result.Sku);\r\n        setDescripcionProductoDetails(result.descripcion || \"\"); // Maneja el caso de descripción nula\r\n\r\n        // Cargar historial de proveedores y tiendas en el que existe el producto\r\n        getTiendasByProducto(result.id_producto);\r\n        cargarProveedoresPorProducto(result.id_producto);\r\n\r\n        // Convertir las imágenes de URL a base64\r\n        const imagesPromises = result.imagenes.map(async (img: any) => {\r\n          let httpImage: string = await img.url;\r\n          let id_image: string = await img.id_imagen;\r\n          let parseHttp = httpImage.substring(1, httpImage.length);\r\n          httpImage = cerverHostImages + parseHttp;\r\n          return { uri: httpImage, id: id_image }; // Almacenar en el formato adecuado\r\n        });\r\n\r\n        // Esperar a que todas las promesas se resuelvan\r\n        const images = await Promise.all(imagesPromises);\r\n        setSelectedImages(images);\r\n      }\r\n    }\r\n  };\r\n  const auxiliarFunctionFilter = async (): Promise<Producto[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filterProducts(\r\n          usuario.token,\r\n          nombreProductoSearch,\r\n          sKUSearch,\r\n          rangoPrecioDesdeSearch,\r\n          rangoPrecioHastaSearch,\r\n          cantidadSearch,\r\n          selectedValueNombreTienda ?? \"\"\r\n        );\r\n\r\n        if (result) {\r\n          const productosMapeados: Producto[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Producto: element.id_producto, // Mapea 'id_producto' a 'id_Producto'\r\n              nombre: element.nombre, // Mapea 'nombre' directamente\r\n              sku: element.Sku, // Mapea 'Sku' a 'sku'\r\n              cantidadTotal: element.cantidad_total,\r\n              precioUSD: element.precio.toString(), // Mapea 'precio' a 'precioUSD' y lo convierte a string\r\n              precioEmpresaUSD: element.precio_empresa\r\n            }))\r\n          );\r\n          return productosMapeados; // Devuelve los productos mapeados\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los productos:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null; // Devuelve null si no hay token o no se pudieron filtrar productos\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optimizacionAbrirPorPrimeraVesProductosView) {\r\n      cargarDetailsOfProducto();\r\n    }\r\n  }, [modalProductsDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerProductosConPermisosYDatos = async (page: number) => {\r\n    setModalMensajeView(false);\r\n    setLoading(true);\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener productos desde la tabla\r\n        const result = await getAllProductosFromTable(usuario.token, page);\r\n\r\n        setFilterItemsLength(result.cantidad_total_productos);\r\n        if (result && Array.isArray(result.productos)) {\r\n          // Mapeamos los productos y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const productosMapeados: Producto[] = await Promise.all(\r\n            result.productos.map(async (element: any) => {\r\n              // Verificar si el producto tiene opciones (en la tienda)\r\n              let tieneOpciones: boolean = false;\r\n\r\n              if (opcionesDeCelda) {\r\n                for (let index of element.tiendas) {\r\n                  if (usuario.id_tienda === index.id_tienda) {\r\n                    tieneOpciones = true;\r\n                    break;\r\n                  }\r\n                }\r\n              }\r\n\r\n              // Devolvemos el producto con todas las propiedades mapeadas\r\n              return {\r\n                id_Producto: element.id_producto, // Mapea 'id_producto' a 'id_Producto'\r\n                nombre: element.nombre, // Mapea 'nombre' directamente\r\n                sku: element.Sku, // Mapea 'Sku' a 'sku'\r\n                cantidadTotal: element.cantidad_total, // Asigna el valor obtenido para cantidadTotal\r\n                precioUSD: element.precio.toString(), // Mapea 'precio' a 'precioUSD' y lo convierte a string\r\n                tieneOpciones: tieneOpciones, // Añade el valor de tieneOpciones\r\n              };\r\n            })\r\n          );\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(productosMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron productos.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener los productos o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de los productos\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de los productos\"\r\n      );\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const consumerKey = \"ck_aaae303d49b4ac57c713472aca2f610d4c99e195\";\r\n  const consumerSecret = \"cs_646f2fd371adc5d405a5a7bb9a464909e94a0c75\";\r\n\r\n  async function convertImageUrlToBase64(imageUrl: string): Promise<string> {\r\n    try {\r\n      // Codifica las credenciales en base64 para la autenticación básica\r\n      const credentials = btoa(`${consumerKey}:${consumerSecret}`);\r\n\r\n      const response = await fetch(imageUrl, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Basic ${credentials}`,\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error al obtener la imagen: ${response.statusText}`);\r\n      }\r\n\r\n      const blob = await response.blob();\r\n\r\n      return await new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => resolve(reader.result as string);\r\n        reader.onerror = (error) =>\r\n          reject(`Error al convertir la imagen a Base64: ${error}`);\r\n        reader.readAsDataURL(blob);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error al descargar y convertir la imagen:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  const runEffects = async () => {\r\n    setOptimizacionAbrirPorPrimeraVesProductosView(false);\r\n    /*\r\n    if (usuario?.token) {\r\n      const resultProducto = await importarDataProductos(\r\n        usuario.token,\r\n        \"E:\\\\Solutel\\\\Sitio Web De gestión\\\\Libro1.xlsx\"\r\n      );\r\n      if (resultProducto && Array.isArray(resultProducto)) {\r\n        for(let element of resultProducto){\r\n          if (element.nombre) {\r\n            const result = await addProducto(\r\n              usuario.token,\r\n              element.nombre,\r\n              element.Sku,\r\n              element.precio ?? \"0\",\r\n              element.precio_empresa ?? \"0\",\r\n              \"\"\r\n            );\r\n            if (result) {\r\n              console.log(\"Producto Agregado\");\r\n            }else{\r\n              console.log(\"Error\")\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    /*\r\n    /*\r\n    (async () => {\r\n      const imageUrl =\r\n        \"https://solutelcuba.com/wp-content/uploads/2024/09/ZOSI-C303-Sistema-de-Seguridad-CCTV-8-Camaras-con-Audio-y-DVR-de-1-TB1.jpg\";\r\n      try {\r\n        const base64Image = await convertImageUrlToBase64(imageUrl);\r\n        console.log(`Imagen en Base64: ${base64Image}`);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    })();\r\n    */\r\n    /*\r\n    if (usuario?.token) {\r\n      const resultProducto = await importarDataProducto_Tiendas(\r\n        usuario.token,\r\n        \"E:\\\\Solutel\\\\Sitio Web De gestión\\\\Libro1.xlsx\"\r\n      );\r\n      if (resultProducto && Array.isArray(resultProducto)) {\r\n        for (let element of resultProducto) {\r\n          // Condición para producto tienda \"element && Object.keys(element).length > 0\"\r\n          if (element && Object.keys(element).length > 0) {\r\n            const resultProducto = await getProductoBySku(\r\n              usuario.token,\r\n              element.Sku\r\n            );\r\n            \r\n            if (resultProducto) {\r\n              const currentDate = new Date();\r\n              const year = String(currentDate.getFullYear());\r\n              const month = String(currentDate.getMonth() + 1).padStart(\r\n                2,\r\n                \"0\"\r\n              ); // Los meses comienzan desde 0, por lo que sumamos 1\r\n              const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n              // Almacen\r\n              if (parseInt(element.Almacen) > 0) {\r\n                await addProductoEntrada(usuario.token, 1, resultProducto.id_producto,element.Almacen);\r\n                await addEntrada(usuario.token, \"0\", element.Almacen,`${year}-${month}-${day}`,15, resultProducto.id_producto,1);\r\n                await createProductoInTienda(usuario.token, String(resultProducto.id_producto), \"1\")  \r\n              }\r\n              // Taller_Cell\r\n              if (parseInt(element.Taller_Cell) > 0) {\r\n                await addProductoEntrada(usuario.token, 2, resultProducto.id_producto,element.Taller_Cell);\r\n                await addEntrada(usuario.token, \"0\", element.Taller_Cell,`${year}-${month}-${day}`,15, resultProducto.id_producto,2);\r\n                await createProductoInTienda(usuario.token, String(resultProducto.id_producto), \"2\") \r\n              }\r\n              // Taller_PC\r\n              if (parseInt(element.Taller_PC) > 0) {\r\n                await addProductoEntrada(usuario.token, 3, resultProducto.id_producto,element.Taller_PC);\r\n                await addEntrada(usuario.token, \"0\", element.Taller_PC,`${year}-${month}-${day}`,15, resultProducto.id_producto,3);\r\n                await createProductoInTienda(usuario.token, String(resultProducto.id_producto), \"3\")\r\n              }\r\n              // Tienda\r\n              if (parseInt(element.Tienda) > 0) {\r\n                await addProductoEntrada(usuario.token, 4, resultProducto.id_producto,element.Tienda);\r\n                await addEntrada(usuario.token, \"0\", element.Tienda,`${year}-${month}-${day}`,15, resultProducto.id_producto,4);\r\n                await createProductoInTienda(usuario.token, String(resultProducto.id_producto), \"4\")  \r\n              }\r\n              console.log(true);\r\n            }\r\n              \r\n          }\r\n        }\r\n      }\r\n    }\r\n    */\r\n    setPaginadoProductos({ page: 1 });\r\n    await checkPermiso();\r\n    await obtenerProductosConPermisosYDatos(paginadoProductos.page);\r\n    await getDatesTiendaPiker();\r\n    setOptimizacionAbrirPorPrimeraVesProductosView(true);\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  // Filtrar productos simepre que el usuario seleccione una tienda\r\n  useEffect(() => {\r\n    // Evitar que se ejecute apenas se abre la vista que e filtren los productos solo por primera vez\r\n    if (optimizacionAbrirPorPrimeraVesProductosView) {\r\n      filtrarYOrdenarProductos();\r\n    }\r\n  }, [sortProductos, selectedOptionTipoOrden]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      nombreProductoSearch === \"\" &&\r\n      sKUSearch === \"\" &&\r\n      cantidadSearch === \"\" &&\r\n      rangoPrecioDesdeSearch === \"\" &&\r\n      rangoPrecioHastaSearch === \"\" &&\r\n      selectedValueNombreTienda === null\r\n    ) {\r\n      setControlFiltrarOPaginar(true); // No se está filtrando\r\n    } else {\r\n      setControlFiltrarOPaginar(false); //Se está filtrando\r\n    }\r\n  }, [\r\n    nombreProductoSearch,\r\n    sKUSearch,\r\n    cantidadSearch,\r\n    rangoPrecioDesdeSearch,\r\n    rangoPrecioHastaSearch,\r\n    selectedValueNombreTienda,\r\n  ]);\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarProductos = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let productosFiltrados: Producto[] = await auxiliarFunctionFilter();\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortProductos?.criterioOrden && sortProductos.tipoOrden) {\r\n          productosFiltrados = await ordenarProducts(\r\n            usuario.token,\r\n            productosFiltrados,\r\n            sortProductos.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItemsLength(productosFiltrados.length);\r\n        setFilterItems(productosFiltrados);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los productos:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const auxSetModalProductsDates = () => {\r\n    setNombreProductoDetails(\"\");\r\n    setPrecioProductoDetails(\"\");\r\n    setPrecioEmpresaProductoDetails(\"\");\r\n    setSkuDetails(\"\");\r\n    setDescripcionProductoDetails(\"\");\r\n    setSelectedImages([]);\r\n\r\n    setModalProductsDates({\r\n      id_producto: \"\",\r\n      isAddProducto: true,\r\n      fileEditable: true,\r\n      isModificarProducto: false,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isAddProductoShowProveedores: false,\r\n    });\r\n  };\r\n\r\n  // Método para cargar las imágenes\r\n  /*\r\n  const handleImageUpload = () => {\r\n    const options = {\r\n      mediaType: \"photo\" as const, // Solo fotos\r\n      quality: 1, // Calidad máxima de la imagen\r\n      includeBase64: false, // No incluir en base64\r\n      selectionLimit: 100,\r\n      includeExtra: true,\r\n    };\r\n\r\n    // Abre la galería de imágenes\r\n    launchImageLibrary(options, (response: ImagePickerResponse) => {\r\n      if (response.didCancel) {\r\n        console.log(\"El usuario canceló la selección de la imagen.\");\r\n      } else if (response.errorMessage) {\r\n        console.error(\r\n          \"Error al seleccionar la imagen: \",\r\n          response.errorMessage\r\n        );\r\n      } else if (response.assets && response.assets.length > 0) {\r\n        // Agregar la nueva imagen al estado\r\n        setSelectedImages((prevImages) => {\r\n          // Calcula cuántas imágenes se pueden agregar sin exceder el límite de 100\r\n          const availableSpace = 100 - prevImages.length; // Espacio disponible en el estado\r\n          const newImages = response.assets.slice(0, availableSpace); // Selecciona solo las imágenes necesarias para no exceder el límite\r\n          return [...prevImages, ...newImages]; // Agrega las nuevas imágenes al estado\r\n        });\r\n      } else {\r\n        console.log(\"No se seleccionó ninguna imagen.\");\r\n      }\r\n    });\r\n  };\r\n  */\r\n\r\n  const handleImageUpload = async () => {\r\n    const options = {\r\n      mediaType: \"photo\" as const,\r\n      quality: 0.8,\r\n      includeBase64: false,\r\n      selectionLimit: 100,\r\n    };\r\n\r\n    launchImageLibrary(options, async (response: ImagePickerResponse) => {\r\n      if (response.didCancel) {\r\n        console.log(\"El usuario canceló la selección de la imagen.\");\r\n        return;\r\n      }\r\n\r\n      if (response.errorMessage) {\r\n        console.error(\r\n          \"Error al seleccionar la imagen: \",\r\n          response.errorMessage\r\n        );\r\n        return;\r\n      }\r\n\r\n      if (response.assets && response.assets.length > 0) {\r\n        const processedImages = await Promise.all(\r\n          response.assets.map(async (asset) => {\r\n            if (asset.uri) {\r\n              const size = await getImageFileSize(asset.uri);\r\n\r\n              try {\r\n                if (size > 300 * 1024) {\r\n                  // Compresión de la imagen\r\n                  const fileResponse = await fetch(asset.uri);\r\n                  const blob = await fileResponse.blob();\r\n                  const file = new File([blob], asset.fileName || \"image.jpg\", {\r\n                    type: blob.type,\r\n                  });\r\n\r\n                  const compressedFile = await imageCompression(file, {\r\n                    maxSizeMB: 1,\r\n                    maxWidthOrHeight: 1920,\r\n                    useWebWorker: true,\r\n                  });\r\n\r\n                  // Convertir el archivo comprimido en base64\r\n                  const base64 = await convertFileToBase64(compressedFile);\r\n\r\n                  return {\r\n                    ...asset,\r\n                    uri: base64, // Guardar como base64\r\n                    isCompressed: true,\r\n                  };\r\n                } else {\r\n                  // Convertir imágenes no comprimidas a base64 desde la URI\r\n                  const base64 = await convertUriToBase64(asset.uri);\r\n\r\n                  // Validar que la conversión a base64 fue exitosa\r\n                  if (!base64.startsWith(\"data:image\")) {\r\n                    throw new Error(\"Conversión incorrecta de la URI a base64\");\r\n                  }\r\n\r\n                  return { ...asset, uri: base64, isCompressed: false };\r\n                }\r\n              } catch (error) {\r\n                console.error(\r\n                  `Error al procesar la imagen (${\r\n                    asset.fileName || \"sin nombre\"\r\n                  }):`,\r\n                  error\r\n                );\r\n              }\r\n            }\r\n\r\n            return asset; // Si no tiene URI, devolver el asset original\r\n          })\r\n        );\r\n\r\n        setSelectedImages(processedImages);\r\n      } else {\r\n        console.log(\"No se seleccionó ninguna imagen.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  // Función para convertir un archivo en base64\r\n  const convertFileToBase64 = (file: File): Promise<string> => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => resolve(reader.result as string);\r\n      reader.onerror = (error) => reject(error);\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  // Función para convertir URI en base64\r\n  const convertUriToBase64 = async (uri: string): Promise<string> => {\r\n    try {\r\n      const response = await fetch(uri);\r\n      const blob = await response.blob();\r\n      return convertFileToBase64(\r\n        new File([blob], \"image.jpg\", { type: blob.type })\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error al convertir URI a base64:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Función auxiliar para obtener el tamaño de un archivo de imagen desde su URI\r\n  const getImageFileSize = async (uri: string): Promise<number> => {\r\n    try {\r\n      const response = await fetch(uri);\r\n      const blob = await response.blob();\r\n      return blob.size;\r\n    } catch (error) {\r\n      console.error(\"Error al obtener el tamaño del archivo:\", error);\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // Función auxiliar para obtener el tamaño de un archivo de imagen desde su URI\r\n\r\n  // Función para eliminar una imagen por su índice\r\n  const handleRemoveImage = (index: number) => {\r\n    const updatedImages = selectedImages.filter((_, i) => i !== index);\r\n    const deleteImage = selectedImages.filter((_, i) => i === index)[0]; // Obtener el primer elemento del resultado\r\n    setDeleteImages((prevImages) => [...prevImages, deleteImage]);\r\n    //const aux:ImagenesDelete = ImagenesDelete(deleteImages);\r\n    //setImagenesDelete(deleteImages);\r\n    setSelectedImages(updatedImages);\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProductoSearch(\"\");\r\n    setSKUSearch(\"\");\r\n    setCantidadSearch(\"\");\r\n    setRangoPrecioDesdeSearch(\"\");\r\n    setRangoPrecioHastaSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n    setSelectedValueNombreTienda(null);\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewProducto = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Agregando producto. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarMesaje: string =\r\n        \"ERROR AL INSERTAR PRODUCTO. Por favor compruebe los siguientes campos:\\n\";\r\n      const resultAllProductos = await getAllProductos(usuario.token);\r\n      if (resultAllProductos && Array.isArray(resultAllProductos.data)) {\r\n        resultAllProductos.data.forEach((element) =>{\r\n          if (element.Sku === skuDetails) {\r\n            flag = false,\r\n            validarMesaje += `-El SKU debe ser único. Coincide con el SKU de  ${element.nombre}`\r\n          }\r\n        })\r\n      }\r\n\r\n      // Condiciones para validar campos\r\n      if (nombreProductoDetails.trim() === \"\") {\r\n        validarMesaje += \"-El nombre no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (skuDetails.trim() == \"\") {\r\n        validarMesaje += \"-El SKU no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (String(precioProductoDetails).trim() === \"\") {\r\n        validarMesaje += \"-El precio en USD del producto no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (String(precioEmpresaProductoDetails).trim() === \"\") {\r\n        validarMesaje +=\r\n          \"-El precio de la empresa en USD no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (flag) {\r\n        const result = await addProducto(\r\n          usuario.token,\r\n          nombreProductoDetails,\r\n          skuDetails,\r\n          precioProductoDetails,\r\n          precioEmpresaProductoDetails,\r\n          descripcionProductoDetails\r\n        );\r\n        if (result) {\r\n          // agregar el nuevo producto a la tabla\r\n          const nuevoProducto: Producto = {\r\n            id_Producto: result.id_producto,\r\n            nombre: nombreProductoDetails,\r\n            sku: skuDetails,\r\n            cantidadTotal: await getProductoCantidadTotal(\r\n              usuario.token,\r\n              result.id_producto\r\n            ),\r\n            precioUSD: precioProductoDetails,\r\n            tieneOpciones: true,\r\n          };\r\n          setFilterItems((prevItems) => [...prevItems, nuevoProducto]);\r\n\r\n          let auxDataImagesResponses: any[] = [];\r\n          let imagenes: any[] = [];\r\n\r\n          // Cambia forEach por un for...of\r\n          for (const [cont, element] of selectedImages.entries()) {\r\n            const resul = await crearimagenUnProducto(\r\n              usuario.token,\r\n              element,\r\n              `\\\\${result.id_producto}_${cont}.jpg`\r\n            );\r\n            if (resul) {\r\n              auxDataImagesResponses.push(resul);\r\n            } else {\r\n              alert(\"Error en algo de las imagenes\");\r\n            }\r\n          }\r\n\r\n          let i = 0;\r\n\r\n          while (i < auxDataImagesResponses.length) {\r\n            imagenes.push({\r\n              id_imagen: auxDataImagesResponses[i].id_imagen,\r\n            });\r\n            i++;\r\n          }\r\n\r\n          await addProductoAndImagenes(\r\n            usuario.token,\r\n            result.id_producto,\r\n            imagenes\r\n          );\r\n\r\n          // Agregar Acción de usuario mover producto\r\n\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó al sistema el producto ${nombreProductoDetails} a un precio en usd de ${precioProductoDetails} y con un precio de empresa en usd de ${precioEmpresaProductoDetails}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            1\r\n          );\r\n\r\n          setModalMensaje(\r\n            `El Producto ${nombreProductoDetails} fue agregado con éxito`\r\n          );\r\n          setIsBotonModalMesajeVisible(true)\r\n          setModalMensajeView(true);\r\n\r\n          setSkuDetails(\"\");\r\n          setNombreProductoDetails(\"\");\r\n          setPrecioProductoDetails(\"\");\r\n          setDescripcionProductoDetails(\"\");\r\n          setPrecioEmpresaProductoDetails(\"\");\r\n          setSelectedImages([]);\r\n          setModalProductsDates({\r\n            id_producto: \"\",\r\n      isAddProducto: false,\r\n      fileEditable: true,\r\n      isModificarProducto: false,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isAddProductoShowProveedores: false,\r\n          })\r\n        } else {\r\n          alert(\"Error al agregar prducto\");\r\n        }\r\n      } else {\r\n        setModalMensaje(validarMesaje);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(false);\r\n        setIsBotonModalMesajeVisible(true)\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Metodo para actualizar los datos de un producto\r\n  const modificarProducto = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n    \r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Modificando producto. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarMesaje: string =\r\n        \"ERROR AL MODIFICAR PRODUCTO. Por favor compruebe los siguientes campos:\\n\";\r\n\r\n      // Condiciones para validar campos\r\n      if (nombreProductoDetails.trim() === \"\") {\r\n        validarMesaje += \"-El nombre no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (skuDetails.trim() === \"\") {\r\n        validarMesaje += \"-El SKU no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (String(precioProductoDetails).trim() === \"\") {\r\n        validarMesaje += \"-El precio en USD del producto no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (String(precioEmpresaProductoDetails).trim() === \"\") {\r\n        validarMesaje +=\r\n          \"-El precio de la empresa en USD no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      let auxDataImagesResponses: any[] = [];\r\n      let imagenes: any[] = [];\r\n\r\n      if (flag) {\r\n        // Actualizar datos de las imagenes\r\n        for (const [cont, image] of selectedImages.entries()) {\r\n          if (image.id) {\r\n            const resul = await crearimagenUnProducto(\r\n              usuario.token,\r\n              image,\r\n              `\\\\${idProductoDetails}_${cont}.jpg`\r\n            );\r\n            if (resul) {\r\n              auxDataImagesResponses.push(resul);\r\n            } else {\r\n              alert(\"Error en algo de las imagenes\");\r\n            }\r\n          }\r\n        }\r\n\r\n        let i = 0;\r\n        while (i < auxDataImagesResponses.length) {\r\n          imagenes.push({\r\n            id_imagen: auxDataImagesResponses[i].id_imagen,\r\n          });\r\n          i++;\r\n        }\r\n\r\n        // Agregar a la relación de imagen producto\r\n        await addProductoAndImagenes(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          imagenes\r\n        );\r\n\r\n        // Actualizar datos del producto\r\n        await updateProducto(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          nombreProductoDetails,\r\n          skuDetails,\r\n          precioProductoDetails,\r\n          precioEmpresaProductoDetails,\r\n          descripcionProductoDetails\r\n        );\r\n        // Eliminar imagenes necesarias datos de las imagenes\r\n        deleteImages.forEach(async (image) => {\r\n          if (image.id && image.uri) {\r\n            await deleteImagenByProducto(\r\n              usuario.token,\r\n              image.id,\r\n              image.uri.split(\"/\")[3]\r\n            );\r\n          }\r\n        });\r\n\r\n        // Agregar Acción de usuario modificar producto\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó el producto ${nombreProductoDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          1\r\n        );\r\n\r\n        setReflechModalMensajeView(true);\r\n        setModalMensaje(\r\n          `El Producto \"${nombreProductoDetails}\" se modificó con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setIsBotonModalMesajeVisible(true)\r\n      } else {\r\n        setModalMensaje(validarMesaje);\r\n        setIsBotonModalMesajeVisible(true)\r\n        setReflechModalMensajeView(false);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"SKU\",\r\n    \"Nombre\",\r\n    \"USD\",\r\n    \"CUP\",\r\n    \"Cantidad\",\r\n    \" \",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\"Nombre\", \"Cantidad\", \"Costo\"];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"SKU\",\r\n    \"Nombre\",\r\n    \"USD\",\r\n    \"CUP\",\r\n    \"Cantidad\",\r\n    \" \",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoButtonAddProducto && (\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                setModalProductsDates({\r\n                  id_producto: \"\",\r\n                  isAddProducto: true,\r\n                  fileEditable: true,\r\n                  isModificarProducto: false,\r\n                  isAddProductoShowProveedoresTiendas: false,\r\n                  isAddProductoShowProveedores: false,\r\n                })\r\n              }\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Producto</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableProductos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n              imtemsLength={filterItemsLength}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <Text style={styles.textSearchMovil}>SKU:</Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}>Cantidad:</Text>\r\n                  </View>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"SKU\"\r\n                      value={sKUSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={setSKUSearch}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Cantidad\"\r\n                      value={cantidadSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Rango de Precio USD:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={rangoPrecioDesdeSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={rangoPrecioHastaSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioHastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Buscar por Tienda:</Text>\r\n                  <View\r\n                    style={{ position: \"relative\", zIndex: 500, height: 100 }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={selectedValueNombreTienda}\r\n                      placeholder=\"Seleccione un Tiendas\"\r\n                      setValue={setSelectedValueNombreTienda}\r\n                      items={dropdownItems}\r\n                    />\r\n                  </View>\r\n                  <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarProductos();\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProductsDates?.isAddProducto ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProducto}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProducto}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {/*(modalProductsDates?.isModificarProducto ?? false)? \"Modificar Producto\" : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                false */}\r\n                {modalProductsDates?.isModificarProducto ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Producto\"\r\n                  : \"Agregar Producto\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  value={nombreProductoDetails}\r\n                  onChangeText={setNombreProductoDetails}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  placeholder=\"Nombre del producto\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Precio y Precio de Empresa */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio en USD\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioProductoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio en USD\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Precio de Empresa */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio de empresa en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioEmpresaProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioEmpresaProductoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio de empresa en CUP\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Contenedor para los precios en CUP */}\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          width: \"100%\",\r\n                          justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                          alignItems: \"center\",\r\n                          flexDirection: \"row\",\r\n                          paddingHorizontal: 10,\r\n                        }}\r\n                      >\r\n                        {/* Campo Precio en CUP*/}\r\n                        <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                          <Text style={styles.labelTextModalDesktop}>\r\n                            Precio en CUP\r\n                          </Text>\r\n                          <CustomTextImputSearch\r\n                            style={styles.textImputModal}\r\n                            value={(\r\n                              parseFloat(precioProductoDetails) * cambioMoneda\r\n                            ).toFixed(2)}\r\n                            cursorColor={Colors.azul_Oscuro}\r\n                            editable={false}\r\n                            placeholder=\"Precio en CUP\"\r\n                          />\r\n                        </View>\r\n\r\n                        {/* Campo Costo Promedio*/}\r\n                        <View\r\n                          style={{\r\n                            width: \"45%\",\r\n                            marginLeft: \"2%\",\r\n                            marginRight: \"2%\",\r\n                          }}\r\n                        >\r\n                          {isPermisoHistorialDeProveedores && (\r\n                            <Text style={styles.labelTextModalDesktop}>\r\n                              Costo Promedio\r\n                            </Text>\r\n                          )}\r\n                          {isPermisoHistorialDeProveedores && (\r\n                            <CustomTextImputSearch\r\n                              style={styles.textImputModal}\r\n                              value={costoPromedio}\r\n                              cursorColor={Colors.azul_Oscuro}\r\n                              editable={false}\r\n                              placeholder=\"Costo Promedio\"\r\n                            />\r\n                          )}\r\n                        </View>\r\n                      </View>\r\n                    )}\r\n                {/* Campo SKU */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Sku</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={skuDetails}\r\n                      onChangeText={setSkuDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Sku\"\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={{ width: \"45%\", marginRight: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Descripción\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={descripcionProductoDetails}\r\n                      onChangeText={setDescripcionProductoDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Descripción\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          flexDirection: \"row\",\r\n                          height: 350,\r\n                          width: \"90%\",\r\n                        }}\r\n                      >\r\n                        <View\r\n                          style={{\r\n                            flexDirection: \"column\",\r\n                            height: 340,\r\n                            width: \"45%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalMovil}>\r\n                            Tiendas en las que existe el producto\r\n                          </Text>\r\n                          <MyDateTableModalShowDatesTienda\r\n                            columns={columnasMyDateTableTiendaModal}\r\n                            items={tiendasByProducto}\r\n                          />\r\n                        </View>\r\n                        {(modalProductsDates?.isAddProductoShowProveedores ??\r\n                          false) &&\r\n                          isPermisoHistorialDeProveedores && (\r\n                            <View\r\n                              style={{\r\n                                height: 340,\r\n                                width: \"45%\",\r\n                              }}\r\n                            >\r\n                              <Text style={styles.labelTextModalMovil}>\r\n                                Historial de proveedores\r\n                              </Text>\r\n                              <MyDateTableModalShowDateProveedores\r\n                                columns={columnasMyDateTableProveedorModal}\r\n                                items={proveedorByProducto}\r\n                              />\r\n                            </View>\r\n                          )}\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Descripción */}\r\n                {/*<Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  value={descripcionProductoDetails}\r\n                  onChangeText={setDescripcionProductoDetails}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  numberOfLines={5}\r\n                  scrollEnabled={true}\r\n                />*/}\r\n\r\n                {/* Campo para cargar fotos */}\r\n                <PanGestureHandler onGestureEvent={onDrop}>\r\n                  <View\r\n                    style={{\r\n                      marginTop: 20,\r\n                      width: \"90%\",\r\n                      borderWidth: 1,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderRadius: 13,\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Colors.negro,\r\n                        marginBottom: \"5%\",\r\n                      }}\r\n                    >\r\n                      Imágenes del producto\r\n                    </Text>\r\n\r\n                    {/* Botón para cargar imágenes */}\r\n                    {(modalProductsDates?.fileEditable ?? false) && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                        }}\r\n                        onPress={handleImageUpload}\r\n                      >\r\n                        <Text style={{ color: Colors.blanco }}>\r\n                          Seleccionar Imágenes\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Vista para mostrar las imágenes seleccionadas */}\r\n                    {selectedImages.length > 0 && (\r\n                      <ScrollView\r\n                        horizontal={true}\r\n                        style={{\r\n                          marginTop: 10,\r\n                          width: \"100%\",\r\n                          height: 100, // Ajusta la altura de la vista de imágenes\r\n                        }}\r\n                      >\r\n                        {selectedImages.map((image, index) => (\r\n                          <View\r\n                            key={index}\r\n                            style={{\r\n                              position: \"relative\",\r\n                              width: 100,\r\n                              height: 100,\r\n                              marginRight: 10,\r\n                            }}\r\n                          >\r\n                            <Image\r\n                              key={index}\r\n                              source={{ uri: image.uri }} // Usa la URI de la imagen\r\n                              style={{\r\n                                width: 100,\r\n                                height: 100,\r\n                                marginRight: 10,\r\n                                borderRadius: 10,\r\n                              }}\r\n                            />\r\n                            <TouchableOpacity\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                top: 5,\r\n                                right: 5,\r\n                                backgroundColor: \"red\",\r\n                                borderRadius: 15,\r\n                                width: 20,\r\n                                height: 20,\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                zIndex: 1,\r\n                              }}\r\n                              onPress={() => handleRemoveImage(index)}\r\n                            >\r\n                              <Text\r\n                                style={{\r\n                                  color: \"white\",\r\n                                  fontSize: 14,\r\n                                }}\r\n                              >\r\n                                X\r\n                              </Text>\r\n                            </TouchableOpacity>\r\n                          </View>\r\n                        ))}\r\n                      </ScrollView>\r\n                    )}\r\n                  </View>\r\n                </PanGestureHandler>\r\n                {(modalProductsDates?.fileEditable ?? false) && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                      marginTop: \"3%\",\r\n                    }}\r\n                    onPress={() =>\r\n                      modalProductsDates?.isModificarProducto\r\n                        ? modificarProducto()\r\n                        : addNewProducto()\r\n                    }\r\n                    disabled={isButtonDisabled}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: 14,\r\n                      }}\r\n                    >\r\n                      {modalProductsDates?.isModificarProducto\r\n                        ? \"Modificar Producto\"\r\n                        : \"Agregar Producto\"}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (<TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? obtenerProductosConPermisosYDatos(1)\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje para el exel */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeViewExel}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {loadingOfExel ? (\r\n                <ActivityIndicator\r\n                  size={100}\r\n                  color=\"#007BFF\"\r\n                  style={{\r\n                    flex: 1,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"15%\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <View\r\n                  style={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Datos Recopilados. Espere a que termine la descarga.\r\n                  </Text>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: \"#007BFF\", // Cambia esto por Colors.azul_Oscuro si lo tienes definido\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho del botón\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMensajeViewExel(!isModalMensajeViewExel)\r\n                    } // Llama a la función onClose para cerrar el modal\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {isPermisoButtonAddProducto && (\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                auxSetModalProductsDates()\r\n              }}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginHorizontal: \"1%\",\r\n                marginTop: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  sortProductos?.criterioOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Producto\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n\r\n          <TouchableOpacity\r\n            onPress={() => exportarExel()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              height: 30,\r\n              width: \"12%\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n              shadowOffset: { width: 0, height: 0 },\r\n              shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n              shadowRadius: 14, // Difuminado\r\n              borderColor: Colors.verde_claro,\r\n              borderWidth: 3,\r\n              padding: 10,\r\n              borderRadius: 10,\r\n              marginHorizontal: \"1%\",\r\n              marginTop: \"1%\",\r\n              backgroundColor: Colors.verde_claro, // Color de fondo del botón\r\n            }}\r\n          >\r\n            <Image\r\n              source={require(\"../images/exel.png\")}\r\n              style={{ width: 20, height: 20, marginRight: \"10%\" }}\r\n            />\r\n            <Text\r\n              style={[\r\n                styles.radioButtonTextDesktop,\r\n                sortProductos?.criterioOrden === \"option1\" &&\r\n                  styles.radioButtonSelected &&\r\n                  styles.radioButtonTextSelected,\r\n              ]}\r\n            >\r\n              Exportar a Excel\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <Text style={styles.textSearchDesktop}>SKU:</Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}>Cantidad:</Text>\r\n            </View>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"SKU\"\r\n                onKeyPress={handleKeyPress}\r\n                value={sKUSearch}\r\n                onChangeText={setSKUSearch}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Cantidad\"\r\n                value={cantidadSearch}\r\n                onKeyPress={handleKeyPress}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              Rango de Precio en USD:\r\n            </Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                onKeyPress={handleKeyPress}\r\n                value={rangoPrecioDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={rangoPrecioHastaSearch}\r\n                onKeyPress={handleKeyPress}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioHastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Buscar por Tienda:</Text>\r\n            <View style={{ position: \"relative\", zIndex: 500, height: 100 }}>\r\n              <CustomDropdown\r\n                value={selectedValueNombreTienda}\r\n                placeholder=\"Seleccione una Tienda\"\r\n                setValue={setSelectedValueNombreTienda}\r\n                items={dropdownItems}\r\n              />\r\n            </View>\r\n            <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarProductos()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableProductos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n              imtemsLength={filterItemsLength}\r\n            />\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProductsDates?.isAddProducto ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProducto}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProducto}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProductsDates?.isModificarProducto ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Producto\"\r\n                  : \"Agregar Producto\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={modalProductsDates?.fileEditable}\r\n                  value={nombreProductoDetails}\r\n                  onChangeText={setNombreProductoDetails}\r\n                  placeholder=\"Nombre del producto\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Precio y Precio de Empresa */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio en USD\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={precioProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioProductoDetails(validNumericValue);\r\n                      }}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio en USD\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Precio de Empresa */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio de empresa en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioEmpresaProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioEmpresaProductoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio de empresa en CUP\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          width: \"100%\",\r\n                          justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                          alignItems: \"center\",\r\n                          flexDirection: \"row\",\r\n                          paddingHorizontal: 10,\r\n                        }}\r\n                      >\r\n                        {/* Campo Precio en CUP*/}\r\n                        <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                          <Text style={styles.labelTextModalDesktop}>\r\n                            Precio en CUP\r\n                          </Text>\r\n                          <CustomTextImputSearch\r\n                            style={styles.textImputModal}\r\n                            value={(\r\n                              parseFloat(precioProductoDetails) * cambioMoneda\r\n                            ).toFixed(2)}\r\n                            cursorColor={Colors.azul_Oscuro}\r\n                            editable={false}\r\n                            placeholder=\"Precio en CUP\"\r\n                          />\r\n                        </View>\r\n\r\n                        {/* Campo Precio de Empresa en CUP*/}\r\n                        <View\r\n                          style={{\r\n                            width: \"45%\",\r\n                            marginLeft: \"2%\",\r\n                            marginRight: \"2%\",\r\n                          }}\r\n                        >\r\n                          {isPermisoHistorialDeProveedores && (\r\n                            <Text style={styles.labelTextModalDesktop}>\r\n                              Costo Promedio\r\n                            </Text>\r\n                          )}\r\n                          {isPermisoHistorialDeProveedores && (\r\n                            <CustomTextImputSearch\r\n                              style={styles.textImputModal}\r\n                              value={costoPromedio}\r\n                              cursorColor={Colors.azul_Oscuro}\r\n                              editable={false}\r\n                              placeholder=\"Costo Promedio\"\r\n                            />\r\n                          )}\r\n                        </View>\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Campo SKU */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Sku</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={skuDetails}\r\n                      onChangeText={setSkuDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Sku\"\r\n                    />\r\n                  </View>\r\n                  <View style={{ width: \"45%\", marginRight: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Descripción\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={descripcionProductoDetails}\r\n                      onChangeText={setDescripcionProductoDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Descripción\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n                {/* Descripción */}\r\n                {/*(<Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                \r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  numberOfLines={5}\r\n                  value={descripcionProductoDetails}\r\n                  onChangeText={setDescripcionProductoDetails}\r\n                  scrollEnabled={true}\r\n                />*/}\r\n\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          flexDirection: \"row\",\r\n                          height: 350,\r\n                          width: \"90%\",\r\n                        }}\r\n                      >\r\n                        <View\r\n                          style={{\r\n                            flexDirection: \"column\",\r\n                            height: 350,\r\n                            width: \"50%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalDesktop}>\r\n                            Tiendas en las que existe el producto\r\n                          </Text>\r\n                          <MyDateTableModalShowDatesTienda\r\n                            columns={columnasMyDateTableTiendaModal}\r\n                            items={tiendasByProducto}\r\n                          />\r\n                        </View>\r\n                        {(modalProductsDates?.isAddProductoShowProveedores ??\r\n                          false) &&\r\n                          isPermisoHistorialDeProveedores && (\r\n                            <View\r\n                              style={{\r\n                                height: 350,\r\n                                width: \"50%\",\r\n                              }}\r\n                            >\r\n                              <Text style={styles.labelTextModalDesktop}>\r\n                                Historial de proveedores\r\n                              </Text>\r\n                              <MyDateTableModalShowDateProveedores\r\n                                columns={columnasMyDateTableProveedorModal}\r\n                                items={proveedorByProducto}\r\n                              />\r\n                            </View>\r\n                          )}\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Campo para cargar fotos */}\r\n                <PanGestureHandler onGestureEvent={onDrop}>\r\n                  <View\r\n                    style={{\r\n                      marginTop: 20,\r\n                      width: \"90%\",\r\n                      borderWidth: 1,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderRadius: 13,\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Colors.negro,\r\n                        marginBottom: \"5%\",\r\n                      }}\r\n                    >\r\n                      Imágenes del producto\r\n                    </Text>\r\n\r\n                    {/* Botón para cargar imágenes */}\r\n                    {(modalProductsDates?.fileEditable ?? false) && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                        }}\r\n                        onPress={handleImageUpload}\r\n                      >\r\n                        <Text style={{ color: Colors.blanco }}>\r\n                          Seleccionar Imágenes\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Vista para mostrar las imágenes seleccionadas */}\r\n                    {selectedImages.length > 0 && (\r\n                      <ScrollView\r\n                        horizontal={true}\r\n                        style={{\r\n                          marginTop: 10,\r\n                          width: \"100%\",\r\n                          height: 100, // Ajusta la altura de la vista de imágenes\r\n                        }}\r\n                      >\r\n                        {selectedImages.map((image, index) => (\r\n                          <View\r\n                            key={index}\r\n                            style={{\r\n                              position: \"relative\",\r\n                              width: 100,\r\n                              height: 100,\r\n                              marginRight: 10,\r\n                            }}\r\n                          >\r\n                            <Image\r\n                              key={index}\r\n                              source={{ uri: image.uri }} // Usa la URI de la imagen\r\n                              style={{\r\n                                width: 100,\r\n                                height: 100,\r\n                                marginRight: 10,\r\n                                borderRadius: 10,\r\n                              }}\r\n                            />\r\n                            {modalProductsDates?.fileEditable && (\r\n                              <TouchableOpacity\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  top: 5,\r\n                                  right: 5,\r\n                                  backgroundColor: \"red\",\r\n                                  borderRadius: 15,\r\n                                  width: 20,\r\n                                  height: 20,\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                  zIndex: 1,\r\n                                }}\r\n                                onPress={() => handleRemoveImage(index)}\r\n                              >\r\n                                <Text\r\n                                  style={{\r\n                                    color: \"white\",\r\n                                    fontSize: 14,\r\n                                  }}\r\n                                >\r\n                                  X\r\n                                </Text>\r\n                              </TouchableOpacity>\r\n                            )}\r\n                          </View>\r\n                        ))}\r\n                      </ScrollView>\r\n                    )}\r\n                  </View>\r\n                </PanGestureHandler>\r\n                {(modalProductsDates?.fileEditable ?? false) && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                      marginTop: \"3%\",\r\n                    }}\r\n                    onPress={() =>\r\n                      modalProductsDates?.isModificarProducto\r\n                        ? modificarProducto()\r\n                        : addNewProducto()\r\n                    }\r\n                    disabled={isButtonDisabled}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: 14,\r\n                      }}\r\n                    >\r\n                      {modalProductsDates?.isModificarProducto\r\n                        ? \"Modificar Producto\"\r\n                        : \"Agregar Producto\"}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (<TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? obtenerProductosConPermisosYDatos(1)\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>)}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje para el exel */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeViewExel}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {loadingOfExel ? (\r\n                <ActivityIndicator\r\n                  size={100}\r\n                  color=\"#007BFF\"\r\n                  style={{\r\n                    flex: 1,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"15%\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <View\r\n                  style={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Datos Recopilados. Espere a que termine la descarga.\r\n                  </Text>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: \"#007BFF\", // Cambia esto por Colors.azul_Oscuro si lo tienes definido\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho del botón\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMensajeViewExel(!isModalMensajeViewExel)\r\n                    } // Llama a la función onClose para cerrar el modal\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import Navbar from \"../components/Navbar\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport React, { useEffect, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport { Image, Text, useWindowDimensions, View } from \"react-native\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { usePermisosUsuario as usePermisosUsuarioNavbar } from \"../contexts/PermisosNavbarContext\";\r\n\r\n\r\nexport function HomeScreen() {\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  const isMobile = width < 930;\r\n  const navigation = useNavigation();\r\n  const { setUsuario, usuario } = useUsuario();\r\n  const { permisosUsuarioNavbar, setPermisosUsuarioNavbar } = usePermisosUsuarioNavbar();\r\n  \r\n  useEffect(() =>{\r\n\r\n    const cargarPermisosDeUsuario = async () =>{\r\n      if (usuario?.token) {\r\n        \r\n        const resultProductoView = await isPermiso(\r\n          usuario.token,\r\n          \"9\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultProveedorView = await isPermiso(\r\n          usuario.token,\r\n          \"38\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultEntradaView = await isPermiso(\r\n          usuario.token,\r\n          \"13\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultMovimientoLocalView = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultMovimientoGeneralView = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultAgregarUsuario = await isPermiso(\r\n          usuario.token,\r\n          \"1\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultModificarUsuario = await isPermiso(\r\n          usuario.token,\r\n          \"2\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultEliminarUsuario = await isPermiso(\r\n          usuario.token,\r\n          \"3\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultAccionesView = await isPermiso(\r\n          usuario.token,\r\n          \"15\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultAgregarTipoServicioView = await isPermiso(\r\n          usuario.token,\r\n          \"20\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultModificarTipoServicioView = await isPermiso(\r\n          usuario.token,\r\n          \"21\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultEliminarTipoServicioView = await isPermiso(\r\n          usuario.token,\r\n          \"22\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultEliminarClienteView = await isPermiso(\r\n          usuario.token,\r\n          \"18\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultModificarClienteView = await isPermiso(\r\n          usuario.token,\r\n          \"17\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultAgregarClienteView = await isPermiso(\r\n          usuario.token,\r\n          \"16\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultVerClienteView = await isPermiso(\r\n          usuario.token,\r\n          \"19\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultExpedirGarantiaView = await isPermiso(\r\n          usuario.token,\r\n          \"32\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultModificarGarantiaView = await isPermiso(\r\n          usuario.token,\r\n          \"33\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultVerGarantiaView = await isPermiso(\r\n          usuario.token,\r\n          \"34\",\r\n          usuario.id_usuario\r\n        );\r\n        \r\n        setPermisosUsuarioNavbar({\r\n          resultAccionesView: resultAccionesView,\r\n          resultAgregarUsuario: resultAgregarUsuario,\r\n          resultEliminarUsuario: resultEliminarUsuario,\r\n          resultEntradaView: resultEntradaView,\r\n          resultModificarUsuario: resultModificarUsuario,\r\n          resultMovimientoGeneralView: resultMovimientoGeneralView,\r\n          resultMovimientoLocalView: resultMovimientoLocalView,\r\n          resultProductoView: resultProductoView,\r\n          resultProveedorView: resultProveedorView,\r\n          resultTipoServicio: (resultAgregarTipoServicioView || resultModificarTipoServicioView || resultEliminarTipoServicioView),\r\n          resultClienteView: (resultVerClienteView || resultAgregarClienteView || resultModificarClienteView || resultEliminarClienteView),\r\n          resultGarantiaView: (resultVerGarantiaView || resultExpedirGarantiaView || resultModificarGarantiaView)\r\n        });\r\n\r\n      }\r\n    }\r\n\r\n    cargarPermisosDeUsuario();\r\n\r\n  },[])\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\"\r\n          }}\r\n        >\r\n          <Image\r\n            source={require(\"../images/solutel.jpg\")}\r\n            style={{ width: \"60%\", height: \"55%\" }}\r\n          />\r\n          <Image\r\n            source={require(\"../images/solutel1.jpg\")}\r\n            style={{ width: \"90%\", height: \"30%\" }}\r\n          />\r\n        </View>\r\n      </View>\r\n    );\r\n  }else{\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"row\"\r\n          }}\r\n        >\r\n          <Image\r\n            source={require(\"../images/solutel.jpg\")}\r\n            style={{ width: \"25%\", height: \"60%\", marginTop: \"5%\" }}\r\n          />\r\n          <Image\r\n            source={require(\"../images/solutel1.jpg\")}\r\n            style={{ width: \"50%\", height: \"40%\" }}\r\n          />\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\r\nimport { Colors } from '../styles/Colors';\r\n\r\ninterface DropdownProps {\r\n  value: string;\r\n  setValue: (value: string) => void;\r\n  placeholder: string;\r\n  items: { label: string; value: string }[];\r\n  searchable: boolean;\r\n  readOnly?: boolean;\r\n  onDropdownOpen?: () => void; // Nueva propiedad opcional\r\n}\r\n\r\nconst CustomDropdownDetails: React.FC<DropdownProps> = ({\r\n  value,\r\n  setValue,\r\n  items,\r\n  placeholder: title,\r\n  searchable,\r\n  readOnly = false,\r\n  onDropdownOpen,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const { width } = useWindowDimensions();\r\n  const isMobile = width < 1150;\r\n  const textStyles = isMobile ? styles.dropdownTextMovil : styles.dropdownTextDesktop;\r\n\r\n  // Efecto para llamar a `onDropdownOpen` cuando el dropdown se abre\r\n  useEffect(() => {\r\n    if (open && onDropdownOpen) {\r\n      onDropdownOpen();\r\n    }\r\n  }, [open]);\r\n\r\n  // Función de apertura condicional basada en `readOnly`\r\n  const handleOpen = () => {\r\n    if (!readOnly) {\r\n      setOpen((prevOpen) => !prevOpen);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <DropDownPicker\r\n        open={open}\r\n        value={value}\r\n        items={items}\r\n        setOpen={handleOpen} // Llamada a la función `handleOpen`\r\n        setValue={setValue}\r\n        setItems={() => {}}\r\n        placeholder={title}\r\n        style={styles.dropdown}\r\n        textStyle={textStyles}\r\n        dropDownContainerStyle={styles.dropdownContainer}\r\n        searchable={searchable && !readOnly}\r\n        searchPlaceholder=\"Buscar...\"\r\n        searchTextInputStyle={styles.searchInput}\r\n        zIndex={1000}\r\n        disabled={readOnly}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: '1%',\r\n    marginLeft: '5%',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    zIndex: 1,\r\n    position: 'relative',\r\n  },\r\n  dropdown: {\r\n    backgroundColor: Colors.blanco,\r\n    borderColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    width: '95%',\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    zIndex: 1000,\r\n  },\r\n  dropdownTextDesktop: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: Colors.negro,\r\n  },\r\n  dropdownTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    color: Colors.negro,\r\n  },\r\n  dropdownContainer: {\r\n    borderColor: Colors.azul_Suave,\r\n    backgroundColor: Colors.blanco,\r\n    width: '95%',\r\n    zIndex: 1000,\r\n  },\r\n  searchInput: {\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport default CustomDropdownDetails;\r\n","import React, { createContext, useState, ReactNode } from \"react\";\r\n\r\n// Define la interfaz del Usuario\r\nexport interface ModalEntradasDates {\r\n  id_entrada: string;\r\n  isAddEntrada: boolean;\r\n  isModificarEntrada: boolean;\r\n  fileEditable: boolean;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface ModalEntradasDatesContextType {\r\n  modalEntradasDates: ModalEntradasDates | null;\r\n  setModalEntradasDates: (\r\n    modalEntradasDates: ModalEntradasDates | null\r\n  ) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst ModalEntradasDatesContext = createContext<\r\n  ModalEntradasDatesContextType | undefined\r\n>(undefined);\r\n\r\n// Define el proveedor\r\nexport const ModalEntradasDatesProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [modalEntradasDates, setModalEntradasDates] =\r\n    useState<ModalEntradasDates | null>(null);\r\n\r\n  return (\r\n    <ModalEntradasDatesContext.Provider\r\n      value={{\r\n        modalEntradasDates: modalEntradasDates,\r\n        setModalEntradasDates: setModalEntradasDates,\r\n      }}\r\n    >\r\n      {children}\r\n    </ModalEntradasDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useModalEntradasDates = () => {\r\n  const context = React.useContext(ModalEntradasDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      \"useModalEntradasDates debe usarse dentro de un ModalEntradasDates\"\r\n    );\r\n  }\r\n  return context;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Text, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\n\r\ninterface DateInputProps {\r\n  dayValue: string;\r\n  monthValue: string;\r\n  yearValue: string;\r\n  onDayChange: (day: string) => void;\r\n  onMonthChange: (month: string) => void;\r\n  onYearChange: (year: string) => void;\r\n  style?: StyleProp<ViewStyle>;\r\n  styleText?: StyleProp<TextStyle>;\r\n  isReadOnly?: boolean;\r\n  onDropdownOpen?: () => void; // Nueva propiedad para manejar la apertura del dropdown\r\n}\r\n\r\nexport const MyDateInput: React.FC<DateInputProps> = ({\r\n  dayValue,\r\n  monthValue,\r\n  yearValue,\r\n  onDayChange,\r\n  onMonthChange,\r\n  onYearChange,\r\n  style,\r\n  styleText,\r\n  isReadOnly = false,\r\n  onDropdownOpen, // Desestructuración de la nueva propiedad\r\n}) => {\r\n  const [day, setDay] = useState<string>(dayValue);\r\n  const [month, setMonth] = useState<string>(monthValue);\r\n  const [year, setYear] = useState<string>(yearValue);\r\n  const [days, setDays] = useState<Array<{ label: string; value: string }>>([]);\r\n\r\n  const [activePicker, setActivePicker] = useState<'day' | 'month' | 'year' | null>(null);\r\n\r\n  const getDaysInMonth = (month: number, year: number) => {\r\n    return new Date(year, month, 0).getDate();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const numberOfDays = getDaysInMonth(Number(month), Number(year));\r\n    const daysArray = Array.from({ length: numberOfDays }, (_, i) => ({\r\n      label: String(i + 1),\r\n      value: String(i + 1),\r\n    }));\r\n\r\n    if (Number(day) > numberOfDays) {\r\n      setDay(String(numberOfDays));\r\n    }\r\n\r\n    setDays(daysArray);\r\n  }, [month, year]);\r\n\r\n  const updateDate = (newDay: string, newMonth: string, newYear: string) => {\r\n    onDayChange(newDay);\r\n    onMonthChange(newMonth);\r\n    onYearChange(newYear);\r\n  };\r\n\r\n  const togglePicker = (picker: 'day' | 'month' | 'year') => {\r\n    if (activePicker === picker) {\r\n      setActivePicker(null);\r\n    } else {\r\n      setActivePicker(picker);\r\n      onDropdownOpen && onDropdownOpen(); // Llama a onDropdownOpen cuando se abre un picker\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, style]}>\r\n      <View style={styles.inputWrapper}>\r\n        <Text style={[styles.label, styleText]}>Día</Text>\r\n        <DropDownPicker\r\n          open={activePicker === 'day'}\r\n          value={day}\r\n          items={days}\r\n          setOpen={() => !isReadOnly && togglePicker('day')}\r\n          setValue={(value) => {\r\n            setDay(value);\r\n            updateDate(value, month, year);\r\n          }}\r\n          style={styles.picker}\r\n          containerStyle={[styles.pickerContainer, { zIndex: activePicker === 'day' ? 2 : 1 }]}\r\n          dropDownContainerStyle={styles.dropDownContainer}\r\n          disabled={isReadOnly}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputWrapper}>\r\n        <Text style={[styles.label, styleText]}>Mes</Text>\r\n        <DropDownPicker\r\n          open={activePicker === 'month'}\r\n          value={month}\r\n          items={Array.from({ length: 12 }, (_, i) => ({\r\n            label: String(i + 1),\r\n            value: String(i + 1),\r\n          }))}\r\n          setOpen={() => !isReadOnly && togglePicker('month')}\r\n          setValue={(value) => {\r\n            setMonth(value);\r\n            updateDate(day, value, year);\r\n          }}\r\n          style={styles.picker}\r\n          containerStyle={[styles.pickerContainer, { zIndex: activePicker === 'month' ? 2 : 1 }]}\r\n          dropDownContainerStyle={styles.dropDownContainer}\r\n          disabled={isReadOnly}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputWrapper}>\r\n        <Text style={[styles.label, styleText]}>Año</Text>\r\n        <DropDownPicker\r\n          open={activePicker === 'year'}\r\n          value={year}\r\n          items={Array.from({ length: 101 }, (_, i) => {\r\n            const year = new Date().getFullYear() - i;\r\n            return { label: String(year), value: String(year) };\r\n          })}\r\n          setOpen={() => !isReadOnly && togglePicker('year')}\r\n          setValue={(value) => {\r\n            setYear(value);\r\n            updateDate(day, month, value);\r\n          }}\r\n          style={styles.picker}\r\n          containerStyle={[styles.pickerContainer, { zIndex: activePicker === 'year' ? 2 : 1 }]}\r\n          dropDownContainerStyle={styles.dropDownContainer}\r\n          disabled={isReadOnly}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  inputWrapper: {\r\n    flex: 1,\r\n    marginHorizontal: 5,\r\n  },\r\n  label: {\r\n    fontSize: 14,\r\n    marginBottom: 5,\r\n    color: '#000',\r\n  },\r\n  picker: {\r\n    height: 20,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    borderRadius: 12,\r\n  },\r\n  pickerContainer: {\r\n    height: 35,\r\n    width: 80,\r\n  },\r\n  dropDownContainer: {\r\n    borderColor: 'gray',\r\n    zIndex: 9999,\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport interface TiendaMoverShowModal {\r\n  id_tienda: string;\r\n  nombre: string;\r\n}\r\n\r\ninterface Props {\r\n  items: TiendaMoverShowModal[];\r\n  columns: string[];\r\n}\r\n\r\nexport const MyDateTableModalDataMoverTiendas: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(3);\r\n  const [displayedItems, setDisplayedItems] = React.useState<TiendaMoverShowModal[]>(\r\n    []\r\n  ); // Estado para los elementos mostrados\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text style={styles.headerTextDesktop}>{column}</Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerDesktop}>\r\n      <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n        <DataTable style={{ width: \"150%\" }}>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => (\r\n            <DataTable.Row\r\n              key={item.id_tienda}\r\n              onPress={() => alert(\"Not supported yet\")}\r\n            >\r\n              <DataTable.Cell style={styles.handerRow}>\r\n                <Text\r\n                  style={{ flexWrap: \"wrap\", width: \"100%\", textAlign: \"left\" }}\r\n                  numberOfLines={2} // Limita a 2 líneas\r\n                >\r\n                  {item.nombre}\r\n                </Text>\r\n              </DataTable.Cell>\r\n            </DataTable.Row>\r\n          ))}\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n    width: \"100%\"\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 16,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 50,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 20,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Servicio } from '../components/MyDateTableServicios';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortServicios {\r\n  items: Servicio[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortServiciosContextType {\r\n  sortServicios: SortServicios | null;\r\n  setSortServicios: (sortServicios: SortServicios | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortServiciosContext = createContext<SortServiciosContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortServiciosProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortServicios, setSortServicios] = useState<SortServicios | null>(null);\r\n\r\n  return (\r\n    <SortServiciosContext.Provider value={{ sortServicios: sortServicios, setSortServicios: setSortServicios }}>\r\n      {children}\r\n    </SortServiciosContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortServicios = () => {\r\n  const context = React.useContext(SortServiciosContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortServicios debe usarse dentro de un SortServicios');\r\n  }\r\n  return context;\r\n};","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { TiendaShowModal } from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport interface Servicio {\r\n  id_Servicio: string;\r\n  id_Cliente: string;\r\n  id_Tienda: string;\r\n  id_Tipo_servicio: string;\r\n  id_Deuda: string;\r\n  id_Garantia: string;\r\n  fecha: string;\r\n  precio: string;\r\n  nota: string;\r\n  descripcion: string;\r\n  nombreCliente: string;\r\n  nombreTienda: string;\r\n  nombreTipoServicio: string;\r\n  nombreProducto?: string;\r\n  cantidad?: string;\r\n  devuelto: boolean;\r\n  costo: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Servicio[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableServicios: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Servicio[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n  const [isPermisoServicioGeneral, setIsPermisoServicioGeneral] =\r\n    React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      // Actualiza el estado con los resultado\r\n      setIsPermisoServicioGeneral(resultServicioGeneral);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const obtenerCambioPrecio = async () => {\r\n      if (usuario?.token) {\r\n        // Obtener alro de oneda de cambio\r\n        setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n      }\r\n    };\r\n    checkPermiso();\r\n    obtenerCambioPrecio();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Este métodod devuelve el mensaje el fodo de la tabla con los parámetros requeridos\r\n  const mensajeOfEndTable = () => {\r\n    let mensaje = \"Suma de precios de servicios minoristas filtrados:   \";\r\n    let sumaMinoristaUSD = 0;\r\n    let sumaMayoristaUSD = 0;\r\n\r\n    items.forEach((item) => {\r\n      if (!item.devuelto) {\r\n        if (parseInt(item.id_Tipo_servicio) === 25) {\r\n          sumaMayoristaUSD +=\r\n            parseFloat(item.precio) *\r\n            (item.cantidad ? parseInt(item.cantidad ?? \"0\") : 0);\r\n        } else {\r\n          sumaMinoristaUSD +=\r\n            parseFloat(item.precio) *\r\n            (parseInt(item.id_Tipo_servicio) === 2 ||\r\n            parseInt(item.id_Tipo_servicio) === 4\r\n              ? item.cantidad\r\n                ? parseInt(item.cantidad ?? \"0\")\r\n                : 0\r\n              : 1); //\r\n        }\r\n      }\r\n    });\r\n\r\n    mensaje += `USD: ${sumaMinoristaUSD.toFixed(4)}   CUP: ${(\r\n      sumaMinoristaUSD * cambioMoneda\r\n    ).toFixed(\r\n      0\r\n    )}      Suma de precios de servicios mayoristas filtrados:  CUP: ${(\r\n      sumaMayoristaUSD * cambioMoneda\r\n    ).toFixed(0)} `;\r\n    return String(mensaje);\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Fecha\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Cliente\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Precio\") {\r\n      aux = \"option5\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortServicios({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Cliente\" ||\r\n                column === \"Precio\" ||\r\n                column === \"Fecha\") && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Suave,\r\n                    marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                    width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                    height: 24, // Asegúrate de que tenga tamaño consistente\r\n                    justifyContent: \"center\", // Centrar contenido del botón\r\n                    alignItems: \"center\", // Centrar contenido del botón\r\n                    borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                    marginBottom: 4, // Elevar el botón del borde inferior\r\n                    paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                  }}\r\n                  onPress={() => sortEntradasAux(column)}\r\n                >\r\n                  <Image\r\n                    source={require(\"../images/ordenar.png\")}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </TouchableOpacity>\r\n              )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Cliente !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Servicio}\r\n                onPress={() => detailsModalView(item.id_Servicio)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Precio USD */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.nombreTipoServicio}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {parseFloat(item.precio).toFixed(4)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(parseFloat(item.precio) * cambioMoneda).toFixed(0)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Cantidad Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.cantidad ? item.cantidad : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Servicios\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <Text>{mensajeOfEndTable()}</Text>\r\n            </View>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Servicio}\r\n                onPress={() => detailsModalView(item.id_Servicio)}\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Nombre Del Tipo de Servicio */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombreTipoServicio}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio USD */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {parseFloat(item.precio).toFixed(4)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(parseFloat(item.precio) * cambioMoneda).toFixed(0)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Cantidad Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.cantidad ? item.cantidad : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <Text>{mensajeOfEndTable()}</Text>\r\n          </View>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\nimport { Servicio } from \"../components/MyDateTableServicios\";\r\n\r\n// Obtener todos los servicios\r\nexport const getAllServicios = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Servicio`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de todos los servicios: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener un servicio según el id específico\r\nexport const getServicioByID = async (token: String, id_servicio: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Servicio/${id_servicio}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de un servicio en específico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Servicio\r\nexport const addServicio = async (\r\n  token: string,\r\n  fecha: string,\r\n  precio: string,\r\n  nota: string,\r\n  descripcion: string,\r\n  id_tienda: string,\r\n  id_tipo_servicio: string,\r\n  costo: string,\r\n  id_cliente?: string,\r\n  id_garantia?: string,\r\n  id_encargo?: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Servicio/createServicio`,\r\n      {\r\n        fecha: fecha,\r\n        precio: precio,\r\n        nota: nota,\r\n        descripcion: descripcion,\r\n        tienda: { id_tienda: id_tienda },\r\n        tipo_servicio: { id_tipo_servicio: id_tipo_servicio },\r\n        cliente: { id_cliente: id_cliente ?? null },\r\n        costo: costo,\r\n        garantia: null,\r\n        deuda: null,\r\n        encargo: null,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error agregar servicio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Servicio\r\nexport const modificarServicio = async (\r\n  token: string,\r\n  id_Servicio: string,\r\n  fecha: string,\r\n  precio: string,\r\n  nota: string,\r\n  id_tienda: string,\r\n  id_tipo_servicio: string,\r\n  costo: string,\r\n  devuelto: boolean,\r\n  id_cliente?: string,\r\n  id_garantia?: string,\r\n  id_encargo?: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Servicio/updateServicio/${id_Servicio}`,\r\n      {\r\n        fecha: fecha,\r\n        precio: precio,\r\n        nota: nota,\r\n        costo: costo,\r\n        devuelto: devuelto,\r\n        tienda: { id_tienda: id_tienda },\r\n        tipo_servicio: { id_tipo_servicio: id_tipo_servicio },\r\n        cliente: { id_cliente: id_cliente ?? null }\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar servicio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Servicio\r\nexport const deleteServicio = async (token: string, id_servicio: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Servicio/deleteServicio/${id_servicio}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al eliminar servicio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar Servicio\r\nexport const filtrarSrvicio = async (\r\n  token: string,\r\n  nombre_cliente: string,\r\n  id_tipo_servicio: string,\r\n  id_tienda: string,\r\n  precio_liminf: string,\r\n  precio_limsup: string,\r\n  fecha_liminf: string,\r\n  fecha_limsup: string,\r\n  nombre_producto: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Servicio/api/filtrar`,\r\n      {\r\n        nombre_cliente: nombre_cliente,\r\n        id_tipo_servicio: id_tipo_servicio,\r\n        id_tienda: id_tienda,\r\n        precio_liminf: precio_liminf,\r\n        precio_limsup: precio_limsup,\r\n        fecha_liminf: fecha_liminf,\r\n        fecha_limsup: fecha_limsup,\r\n        nombre_producto: nombre_producto\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al filtrar los datos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar servicio\r\nexport const ordenarServicios = async (token: string, items: any[], criterio: string, ascendente: boolean) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Servicio/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar las servicios: \", error);\r\n    return false;\r\n  }\r\n};","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todos los tipos de servicios\r\nexport const getAllTipoServicios = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Tipo_servicio`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de todos los Tipos de Servicios: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener un tipo de servicio especifico segun el id\r\nexport const getTipoServicioByID = async (\r\n  token: String,\r\n  id_TipoServicio: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Tipo_servicio/${id_TipoServicio}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de un Tipo de Servicio espesifico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar tipo de servicio\r\nexport const addTipoServicio = async (\r\n  token: string,\r\n  nombre: string,\r\n  costo: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Tipo_servicio/createTipo_servicio`,\r\n      {\r\n        nombre: nombre,\r\n        costo: costo,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar el tipo de servicio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Tipo de servicio\r\nexport const modificarTipoServicio = async (\r\n  token: string,\r\n  id_TipoServicio: string,\r\n  nombre: string,\r\n  costo: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Tipo_servicio/updateTipo_servicio/${id_TipoServicio}`,\r\n      {\r\n        nombre: nombre,\r\n        costo: costo,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar el tipo de servicio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Tipo de servicio\r\nexport const deleteTipoServicio = async (\r\n  token: string,\r\n  id_TipoServicio: string\r\n) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Tipo_servicio/deleteTipo_servicio/${id_TipoServicio}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error eliminar el tipo de servocio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar TipoServicio\r\nexport const filtrarTipoSrvicio = async (\r\n  token: string,\r\n  nombre: string,\r\n  costo_liminf: string,\r\n  costo_limsup: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Tipo_servicio/api/filtrar`,\r\n      {\r\n        nombre: nombre,\r\n        costo_liminf: costo_liminf,\r\n        costo_limsup: costo_limsup,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al filtrar los datos: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\nimport { Cliente } from \"../components/MyDateTableClientes\";\r\n\r\n// Obtener todos los clientes\r\nexport const getAllClientes = async (token: String) => {\r\n    try {\r\n      const response = await axios.get(`${cerverHost}/cliente`, {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\"Error al obtener datos de todos los Clientes: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n// Obtener cliente por el id\r\nexport const getClienteById = async (token: String, id_cliente: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Cliente/${id_cliente}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al obtener datos del cliente: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar un nuevo cliente\r\nexport const addCliente = async (token: String, nombre: string, email: string, telefono:string, descripcion :string, nota: string, Cif:string, detalles_bancarios:string) => {\r\n  try {\r\n    const response = await axios.post(`${cerverHost}/Cliente/createCliente`, {\r\n      nombre: nombre,\r\n      email: email || \"\",\r\n      descripcion: descripcion || \"\",\r\n      nota: nota || \"\",\r\n      telefono: telefono || \"\",\r\n      Cif: Cif || \"\",\r\n      detalles_bancarios: detalles_bancarios || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al incertar un nuevo cliente: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Actualizar cliente\r\nexport const actualizarCliente = async (token: String, id_cliente: string, nombre: string, email: string, telefono:string, descripcion :string, nota: string, Cif:string, detalles_bancarios:string) => {\r\n  try {\r\n    const response = await axios.put(`${cerverHost}/Cliente/updateCliente/${id_cliente}`, {\r\n      nombre: nombre,\r\n      email: email || \"\",\r\n      descripcion: descripcion || \"\",\r\n      nota: nota || \"\",\r\n      telefono: telefono || \"\",\r\n      Cif: Cif || \"\",\r\n      detalles_bancarios: detalles_bancarios || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al actualizar el cliente: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar cliente\r\nexport const deleteCliente = async (token: String, id_cliente:string) => {\r\n  try {\r\n    const response = await axios.delete(`${cerverHost}/Cliente/deleteCliente/${id_cliente}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al eliminar el cliente: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar clientes\r\nexport const filtrarCliente = async (token: String, nombre: string, telefono:string, cif: string, detalle_bacario:string) => {\r\n  try {\r\n    const response = await axios.post(`${cerverHost}/Cliente/api/filtrar`, {\r\n      nombre: nombre || \"\",\r\n      cif: cif || \"\",\r\n      telefono: telefono || \"\",\r\n      detalles_bancarios: detalle_bacario || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrar los clientes: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar clientes\r\nexport const ordenarClientes = async (token: string, items: Cliente[], criterio: string, ascendente: boolean) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Cliente/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar los clientes: \", error);\r\n    return false;\r\n  }\r\n};","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todas las ventas\r\nexport const getAllVentas = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Venta`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de todas las ventas: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener una venta especifica por id\r\nexport const getVentaByID = async (token: String, id_venta: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Venta/${id_venta}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de una venta especifica segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Venta\r\nexport const addVenta = async (\r\n  token: string,\r\n  id_producto: string,\r\n  id_servicio: string,\r\n  cantidad: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Venta/createVenta`,\r\n      {\r\n        producto: { id_producto: id_producto },\r\n        servicio: { id_servicio: id_servicio },\r\n        cantidad: cantidad,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error agregar venta: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Venta\r\nexport const modificarVenta = async (\r\n  token: string,\r\n  id_venta: string,\r\n  id_producto: string,\r\n  id_servicio: string,\r\n  cantidad: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Venta/updateVenta/${id_venta}`,\r\n      {\r\n        producto: { id_producto: id_producto },\r\n        servicio: { id_servicio: id_servicio },\r\n        cantidad: cantidad,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar venta: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Venta\r\nexport const deleteVenta = async (token: string, id_producto: string, id_servicio: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Venta/deleteVenta/${id_producto}/${id_servicio}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al eliminar venta: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener venta según el id del servicio\r\nexport const getVentaByIDOfServicio = async (token: String, id_servicio: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Venta/getbyServicio/${id_servicio}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de la venta segun el id del servicio: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};","import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport RadioGroup, { RadioButtonProps } from \"react-native-radio-buttons-group\";\r\nimport { Colors } from \"../styles/Colors\";\r\n\r\nconst CustomRadioButton = ({\r\n  onPress,\r\n  selected,\r\n  label,\r\n}: {\r\n  onPress: () => void;\r\n  selected: boolean;\r\n  label: string;\r\n}) => (\r\n  <TouchableOpacity\r\n    onPress={onPress}\r\n    style={[styles.radioButton, selected && styles.radioButtonSelected]}\r\n  >\r\n    <Text\r\n      style={[\r\n        styles.radioButtonText,\r\n        selected && styles.radioButtonTextSelected,\r\n      ]}\r\n    >\r\n      {label}\r\n    </Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  radioButton: {\r\n    flexDirection: \"row\",\r\n    height: 50,\r\n    width: \"45%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    borderColor: Colors.azul_Claro,\r\n    borderWidth: 3,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginHorizontal: \"2%\",\r\n    backgroundColor: Colors.azul_Suave, // Color de fondo del botón\r\n  },\r\n  radioButtonSelected: {\r\n    backgroundColor: Colors.azul_Oscuro, // Color de fondo del botón seleccionado\r\n  },\r\n  radioButtonText: {\r\n    fontSize: 16,\r\n    color: Colors.blanco, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  radioButtonTextSelected: {\r\n    fontWeight: \"bold\", // Texto en negritas para el botón seleccionado\r\n    color: Colors.blanco_Suave, // Color del texto para el botón seleccionado\r\n  },\r\n  selectedText: {\r\n    marginTop: 20,\r\n    fontSize: 18,\r\n    color: \"#333\",\r\n  },\r\n});\r\n\r\nexport default CustomRadioButton;\r\n","import React from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\n\r\ninterface CustomRadioButtonProps {\r\n  onPress: () => void;\r\n  selected: boolean;\r\n  label: string;\r\n}\r\n\r\nconst CustomRadioButtonSingle: React.FC<CustomRadioButtonProps> = ({\r\n  onPress,\r\n  selected,\r\n  label,\r\n}) => (\r\n  <TouchableOpacity\r\n    onPress={onPress}\r\n    style={[styles.radioButton, selected && styles.radioButtonSelected]}\r\n  >\r\n    <Text\r\n      style={[\r\n        styles.radioButtonText,\r\n        selected && styles.radioButtonTextSelected,\r\n      ]}\r\n    >\r\n      {label}\r\n    </Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  radioButton: {\r\n    flexDirection: \"row\",\r\n    height: 40,\r\n    width: \"35%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Oscuro,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    borderColor: Colors.azul_Claro,\r\n    borderWidth: 3,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginLeft: \"5%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n  },\r\n  radioButtonSelected: {\r\n    backgroundColor: Colors.azul_Oscuro,\r\n  },\r\n  radioButtonText: {\r\n    fontSize: 16,\r\n    color: Colors.blanco,\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n    textShadowOffset: { width: 1, height: 1 },\r\n    textShadowRadius: 2,\r\n  },\r\n  radioButtonTextSelected: {\r\n    fontWeight: \"bold\",\r\n    color: Colors.blanco_Suave,\r\n  },\r\n});\r\n\r\nexport default CustomRadioButtonSingle;","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todas las garantias\r\nexport const getAllGarantias = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Garantia`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al obtener datos de las garantias: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener una garantia especifica segun el id\r\nexport const getGarantiaByID = async (token: String, id_garantia: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Garantia/${id_garantia}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de una garantia en específico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Garantia\r\nexport const addGarantia = async (\r\n  token: string,\r\n  duracion: string,\r\n  id_servicio: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Garantia/createGarantia`,\r\n      {\r\n        duracion: duracion,\r\n        servicio: { id_servicio: id_servicio },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar la garantia: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Garantia\r\nexport const modificarGarantia = async (\r\n  token: string,\r\n  duracion: string,\r\n  id_servicio: string,\r\n  id_garantia: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Garantia/updateGarantia/${id_garantia}`,\r\n      {\r\n        duracion: duracion,\r\n        servicio: { id_servicio: id_servicio },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar la garantia: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Garantia\r\nexport const deleteGarantia = async (token: string, id_garantia: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Garantia/deleteGarantia/${id_garantia}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error eliminar la garantia: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar Garantia\r\nexport const filtrarGarantia = async (token: string, nombre_cliente: string, duracion_limsup: string, duracion_liminf: string, nombre_producto: string, fecha_liminf: string, fecha_limsup: string, id_tienda: string) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Garantia/api/filtrar`,\r\n      {\r\n          nombre_producto: nombre_producto,\r\n          nombre_cliente: nombre_cliente,\r\n          duracion_liminf: duracion_liminf,\r\n          duracion_limsup: duracion_limsup,\r\n          fecha_liminf: fecha_liminf,\r\n          fecha_limsup: fecha_limsup,\r\n          id_tienda: id_tienda\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrar los datos: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todos los encargos\r\nexport const getAllEncargos = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Encargo`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al obtener datos de los encargos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener un encargo especifica segun el id\r\nexport const getEncargoByID = async (token: String, id_encargo: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Encargo/${id_encargo}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de un encargo en específico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Encargo\r\nexport const addEncargo = async (\r\n  token: string,\r\n  adelanto: string,\r\n  fecha_final: string,\r\n  id_servicio: string\r\n) => {\r\n  console.log(adelanto, fecha_final, id_servicio);\r\n  \r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Encargo/createEncargo`,\r\n      {\r\n        adelanto: adelanto,\r\n        fecha_final: fecha_final,\r\n        servicio: { id_servicio: id_servicio }\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar el encargo: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Encargo\r\nexport const modificarEncargo = async (\r\n    token: string,\r\n    adelanto: string,\r\n    fecha_final: string,\r\n    id_servicio: string,\r\n    id_encargo: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Encargo/updateEncargo/${id_encargo}`,\r\n      {\r\n        adelanto: adelanto,\r\n        fecha_final: fecha_final,\r\n        servicio: { id_servicio: id_servicio },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar el encargo: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Encargo\r\nexport const deleteEncargo = async (token: string, id_encargo: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Encargo/deleteEncargo/${id_encargo}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error eliminar el encargo: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todas las deudas\r\nexport const getAllDeudas = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Deuda`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de todas las deudas: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener una deuda especifica segun el id\r\nexport const getDeudaByID = async (token: String, id_deuda: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Deuda/${id_deuda}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de una deuda en específico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Deuda\r\nexport const addDeuda = async (\r\n  token: string,\r\n  deuda: string,\r\n  id_servicio: string,\r\n  id_pagos_deuda?: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Deuda/createDeuda`,\r\n      {\r\n        deuda: deuda,\r\n        pago_deuda: { id_pago_deuda: id_pagos_deuda },\r\n        servicio: { id_servicio: id_servicio },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar la deuda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Deuda\r\nexport const modificarDeuda = async (\r\n  token: string,\r\n  id_deuda: string,\r\n  deuda: string,\r\n  id_pagos_deuda: string,\r\n  id_servicio: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Deuda/updateDeuda/${id_deuda}`,\r\n      {\r\n        deuda: deuda,\r\n        pago_deuda: { id_pago_deuda: id_pagos_deuda },\r\n        servicio: { id_servicio: id_servicio },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar la deuda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Dedua\r\nexport const deleteDeuda = async (token: string, id_deuda: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Deuda/deleteDeuda/${id_deuda}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error eliminar la deuda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar Deudas\r\nexport const filtrarDeudas = async (\r\n  token: string,\r\n  nombre_producto: string,\r\n  nombre_cliente: string,\r\n  deuda_liminf: string,\r\n  deuda_limsup: string,\r\n  fecha_liminf: string,\r\n  fecha_limsup: string,\r\n  id_tienda: string,\r\n  id_tipo_servicio: string,\r\n  saldada?: boolean\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Deuda/api/filtrar`,\r\n      {\r\n        nombre_producto: nombre_producto,\r\n        nombre_cliente: nombre_cliente,\r\n        deuda_liminf: deuda_liminf,\r\n        deuda_limsup: deuda_limsup,\r\n        id_tienda: id_tienda,\r\n        id_tipo_servicio: id_tipo_servicio,\r\n        fecha_liminf: fecha_liminf,\r\n        fecha_limsup: fecha_limsup,\r\n        saldada: saldada\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al filtrar los datos: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todas las pago_deudas\r\nexport const getAllPagoDeudas = async (token: String) => {\r\n    try {\r\n      const response = await axios.get(`${cerverHost}/Pago_Deuda`, {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\"Error al obtener datos de todas las pago deudas: \", error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Obtener una pago_deuda especifica segun el id\r\n  export const getPagoDeudaByID = async (token: String, id_pago_deuda: string) => {\r\n    try {\r\n      const response = await axios.get(`${cerverHost}/Pago_Deuda/${id_pago_deuda}`, {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\r\n        \"Error al obtener datos de una pago deuda en específico segun el ID: \",\r\n        error\r\n      );\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Agregar Pago Deuda\r\n  export const addPagoDeuda = async (\r\n    token: string,\r\n    pagada: string,\r\n    fecha: string,\r\n    id_deuda: string\r\n  ) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${cerverHost}/Pago_Deuda/createPago_Deuda`,\r\n        {\r\n          pagada: pagada,\r\n          fecha: fecha,\r\n          deuda: {\"id_deuda\": id_deuda}\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\"Error incertar la pago deuda: \", error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Modificar Pago Deuda\r\n  export const modificarPagoDeuda = async (\r\n    token: string,\r\n    id_pago_deuda: string,\r\n    pagada: string,\r\n    fecha: string,\r\n    id_deuda: string\r\n  ) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `${cerverHost}/Pago_Deuda/updatePago_Deuda/${id_pago_deuda}`,\r\n        {\r\n            pagada: pagada,\r\n            fecha: fecha,\r\n            deuda: {\"id_deuda\": id_deuda}\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\"Error modificar la pago deuda: \", error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Eliminar Pago Dedua\r\n  export const deletePagoDeuda = async (token: string, id_pago_deuda: string) => {\r\n    try {\r\n      const response = await axios.delete(\r\n        `${cerverHost}/Pago_Deuda/deletePago_Deuda/${id_pago_deuda}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\"Error eliminar la pago deuda: \", error);\r\n      return false;\r\n    }\r\n  };","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getCantidadProductoInTiendaEspecifica,\r\n  isProductoInTienda,\r\n  tienda_Realizarventa,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getAllEntradasByProductoId,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n  getProductoById,\r\n  getProductoCantidadTotal,\r\n  getRelacionProductoByTienda,\r\n  updateProductoTienda,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  MyDateTableServicios,\r\n  Servicio,\r\n} from \"../components/MyDateTableServicios\";\r\nimport {\r\n  addServicio,\r\n  deleteServicio,\r\n  filtrarSrvicio,\r\n  getAllServicios,\r\n  getServicioByID,\r\n  modificarServicio,\r\n  ordenarServicios,\r\n} from \"../services/ServiciosServices\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport { getAllTipoServicios } from \"../services/TipoServiciosServices\";\r\nimport { getAllClientes } from \"../services/clienteServices\";\r\nimport { calcularPromedioAcomulado } from \"../functions/CalcularCostoPromedioProducto\";\r\nimport {\r\n  addVenta,\r\n  deleteVenta,\r\n  getAllVentas,\r\n  getVentaByIDOfServicio,\r\n} from \"../services/ventasServices\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\nimport CustomRadioButtonSingle from \"../components/CustomRadioButtonSearch\";\r\nimport {\r\n  addGarantia,\r\n  deleteGarantia,\r\n  modificarGarantia,\r\n} from \"../services/GarantiaServices\";\r\nimport {\r\n  addEncargo,\r\n  deleteEncargo,\r\n  modificarEncargo,\r\n} from \"../services/EncargoServices\";\r\nimport { addDeuda, deleteDeuda, getDeudaByID } from \"../services/DeudasServices\";\r\nimport { addPagoDeuda, deletePagoDeuda } from \"../services/PagoDeudaServices\";\r\n\r\nexport default function ServiciosView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n  const [\r\n    capaPrioridadTipoServicioDetails,\r\n    setCapaPrioridadTipoServicioDetails,\r\n  ] = useState(1000);\r\n  const [capaPrioridadProductoDetails, setCapaPrioridadProductoDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadClienteDetails, setCapaPrioridadClienteDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTipoServicioSearsh, setCapaPrioridadTipoServicioSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendaSearsh, setCapaPrioridadTiendaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"TipoServicioDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ProductoDetails\") {\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(2000);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ClienteDetails\") {\r\n      setCapaPrioridadClienteDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"TipoServicioSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(2000);\r\n    } else if (prioridad === \"TiendaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(2000);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n\r\n  const [idFirstTimeProducto, setIdFirsTimeProducto] = useState(\"\");\r\n  const [auxOptimizacion, setAuxOptimizacion] = useState(false);\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idServicioDetails, setIdServicioDetails] = useState(\"\");\r\n  const [idClienteDetails, setIdClienteDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [idTipoServicioDetails, setIdTipoServicioDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [cantidadProductoDetails, setCantidadProductoDetails] = useState(\"1\");\r\n  const [costoPromedioProductoCUPDetails, setCostoPromedioProductoCUPDetails] =\r\n    useState(\"0\");\r\n  const [costoPromedioProductoUSDDetails, setCostoPromedioProductoUSDDetails] =\r\n    useState(\"0\");\r\n  const [precioUSDDetails, setPrecioUSDDetails] = useState(\"\");\r\n  const [devueltoDetails, setDevueltoDetails] = useState(\"sin Devolver\");\r\n  const [precioCUPDetails, setPrecioCUPDetails] = useState(\"\");\r\n  const [notaDetails, setNotaDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n  const [fechaDiaDetailsEncargo, setFechaDiaDetailsEncargo] = useState(\"\");\r\n  const [fechaMesDetailsEncargo, setFechaMesDetailsEncargo] = useState(\"\");\r\n  const [fechaAnnoDetailsEncargo, setFechaAnnoDetailsEncargo] = useState(\"\");\r\n  const [adelantoEncargo, setAdelantoEncargo] = useState(\"\");\r\n  const [isGarantiaDetails, setIsGarantiaDetails] = useState(false);\r\n  const [isDeudaDetails, setIsDeudaDetails] = useState(false);\r\n  const [isGarantiaDetailsViejo, setIsGarantiaDetailsViejo] = useState(false);\r\n  const [idGarantiaDetails, setIdGarantiaDetails] = useState(\"\");\r\n  const [duracionGarantiaDetails, setDuracionGarantiaDetails] = useState(\"\");\r\n  const [adelantoDeudaDetails, setAdelantoDeudaDetails] = useState(\"0\");\r\n  const [adelantoCUPDeudaDetails, setAdelantoCUPDeudaDetails] = useState(\"0\");\r\n  const [duracionGarantiaDetailsVieja, setDuracionGarantiaDetailsVieja] =\r\n    useState(\"\");\r\n  const [idEncargoDetails, setIdEncargoDetails] = useState(\"\");\r\n  const [idDeudaDetails, setIdDeudaDetails] = useState(\"\");\r\n\r\n  // Variable auxiliar para el redondeo de memerio\r\n  const [auxRedondeo, setAuxRedondeo] = useState(\"\");\r\n\r\n  // Variables axiliares para lavalidación de campos\r\n  const [idTiendaDetailsViejo, setIdTiendaDetailsViejo] = useState(\"\");\r\n  const [idProductoDetailsViejo, setIdProductoDetailsViejo] = useState(\"\");\r\n  const [cantidadProductoDetailsViejo, setCantidadProductoDetailsViejo] =\r\n    useState(\"\");\r\n  const [idTipoServicioDetailsViejo, setIdTipoServicioDetailsViejo] =\r\n    useState(\"\");\r\n  const [devueltoDetailsViejo, setDevueltoDetailsViejo] =\r\n    useState(\"sin Devolver\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  // Variable que controla si se está haciendo una venta o se hizo una venta\r\n  const [isVentaProducto, setIsVentaProducto] = useState(false);\r\n  const [isEncargoProducto, setIsEncargoProducto] = useState<boolean>(false);\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Controlar el doble clic del boton\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarServicio, setIsPermisoAgregarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarServicio, setIsPermisoEliminarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoModificarServicio, setIsPermisoModificarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoServicioLocal, setIsPermisoServicioLocal] =\r\n    React.useState(false);\r\n  const [isPermisoServicioGeneral, setIsPermisoServicioGeneral] =\r\n    React.useState(false);\r\n\r\n  const [isPermisoVerCostoVenta, setIsPermisoVerCostoVenta] = useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultEliminarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"25\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"24\",\r\n        usuario.id_usuario\r\n      );\r\n      const resulServicioLocal = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      // cargar cambio de moneda\r\n      setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n\r\n      setIsPermisoServicioLocal(resulServicioLocal);\r\n      setIsPermisoServicioGeneral(resultServicioGeneral);\r\n      setIsPermisoAgregarServicio(resultAgregarServicio);\r\n      setIsPermisoEliminarServicio(resultEliminarServicio);\r\n      setIsPermisoModificarServicio(resultModificarServicio);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Servicio[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreCliente, setDropDownItemsNombreCliente] = useState<\r\n    ProveedorPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreTipoServicio, setDropDownItemsNombreTipoServicio] =\r\n    useState<ProductoPiker[]>([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreClienteSearch, setNombreClienteSearch] = useState(\"\");\r\n  const [nombreProductoSearsh, setNombreProductoSearch] = useState(\"\");\r\n  const [idTipoServicioSearch, setIdTipoServicioSearch] = useState(\"\");\r\n  const [idTiendaSearch, setIdTiendaSearch] = useState(\"\");\r\n  const [rangoPrecioDesdeSearch, setRangoPrecioDesdeSearch] = useState(\"\");\r\n  const [rangoPrecioHastaSearch, setRangoPrecioHastaSearch] = useState(\"\");\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2024\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n\r\n  const options = [\r\n    { label: \"Día\", value: \"dia\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n    { label: \"Mes\", value: \"mes\" },\r\n  ];\r\n\r\n  const optionsDevueltoDetails = [\r\n    { label: \"Devolver\", value: \"devolver\" },\r\n    { label: \"Sin Devolver\", value: \"sin devolver\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"dia\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 6);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else if (value === \"mes\") {\r\n      // Restar 1 mes a la fecha actual\r\n      const lastMonthDate = new Date(currentDate);\r\n      lastMonthDate.setMonth(currentDate.getMonth() - 1);\r\n      const monthYear = String(lastMonthDate.getFullYear());\r\n      const monthMonth = String(lastMonthDate.getMonth() + 1).padStart(2, \"0\");\r\n      const monthDay = String(lastMonthDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${monthYear}-${monthMonth}-${monthDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarServicios(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      let result: any;\r\n\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n      const resulServicioLocal = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      if (resultServicioGeneral) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          usuario.id_tienda\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      } else if (resulServicioLocal) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          usuario.id_tienda\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTipoServicioPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTipoServicios(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const tipoServiciosMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tipo_servicio,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTipoServicio([\r\n          { label: \"Todos los tipos de servicios\", value: \"\" },\r\n          ...tipoServiciosMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getClientesPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllClientes(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const ClientesMapeados: ProductoPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_cliente,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreCliente(ClientesMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Todas las tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setIdTipoServicioDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  // Cargar datos de lprodcut o del servicio de venta\r\n  const cargarDetailsOfProductoVenta = async () => {\r\n    if (usuario?.token) {\r\n      const resultServicio = await getServicioByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 4 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        const resultventa = await getVentaByIDOfServicio(\r\n          usuario.token,\r\n          idServicioDetails\r\n        );\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(true);\r\n\r\n        // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n        if (resultventa) {\r\n          // Obtener entradas del produto para calcular datos del producto\r\n          const entradas = await getAllEntradasByProductoId(\r\n            usuario?.token,\r\n            resultventa.producto.id_producto\r\n          );\r\n          const cantidadTotalProducto = await getProductoCantidadTotal(\r\n            usuario.token,\r\n            resultventa.producto.id_producto\r\n          );\r\n\r\n          // Actualizar variables para la validación de campos\r\n          setIdProductoDetailsViejo(resultventa.producto.id_producto);\r\n          setCantidadProductoDetailsViejo(resultventa.cantidad);\r\n          setIdTiendaDetailsViejo(resultServicio.tienda.id_tienda);\r\n\r\n          setIdProductoDetails(resultventa.producto.id_producto);\r\n          setIdFirsTimeProducto(resultventa.producto.id_producto);\r\n          setCantidadProductoDetails(resultventa.cantidad);\r\n          setIdTiendaDetails(resultServicio.tienda.id_tienda);\r\n          setPrecioUSDDetails(resultServicio.precio);\r\n          setPrecioCUPDetails(\r\n            String(parseFloat(resultServicio.precio) * cambioMoneda)\r\n          );\r\n          setCostoPromedioProductoUSDDetails(\r\n            calcularPromedioAcomulado(entradas, cantidadTotalProducto)\r\n          );\r\n        } else {\r\n          // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(true);\r\n\r\n          setIdProductoDetails(\"\");\r\n          setCantidadProductoDetails(\"\");\r\n          setPrecioUSDDetails(\"\");\r\n          setPrecioCUPDetails(\"\");\r\n          setCostoPromedioProductoUSDDetails(\"\");\r\n        }\r\n      } else {\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(false);\r\n        setPrecioUSDDetails(resultServicio.precio);\r\n        setPrecioCUPDetails(\r\n          String(parseInt(resultServicio.precio) * cambioMoneda)\r\n        );\r\n        setCostoPromedioProductoUSDDetails(resultServicio.costo);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Cargar todos los datos de el servicio pro primera ves que se abre el servicio\r\n  const cargarDetailsOfServicio = async () => {\r\n    setAuxOptimizacion(false);\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getServicioByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.fecha.split(\"T\")[0].split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdServicioDetails(result.id_servicio);\r\n        setIdClienteDetails(result.cliente.id_cliente);\r\n        setIdTipoServicioDetails(result.tipo_servicio.id_tipo_servicio);\r\n        setNotaDetails(result.nota);\r\n        setDescripcionDetails(result.descripcion);\r\n        setDevueltoDetails(result.devuelto ? \"devolver\" : \"sin devolver\");\r\n        setIsGarantiaDetails(result.garantia !== null);\r\n        setDuracionGarantiaDetails(\r\n          result.garantia !== null ? result.garantia.duracion : \"\"\r\n        );\r\n        setIdGarantiaDetails(\r\n          result.garantia !== null ? result.garantia.id_garantia : \"\"\r\n        );\r\n        setIdEncargoDetails(\r\n          result.encargo !== null ? result.encargo.id_encargo : \"\"\r\n        );\r\n        setAdelantoEncargo(\r\n          result.encargo !== null ? result.encargo.adelanto : \"\"\r\n        );\r\n        setIdDeudaDetails(\r\n          result.deuda !== null ? result.deuda.id_deuda : \"\"\r\n        )\r\n        if (result.encargo !== null) {\r\n          const partes: string[] = String(result.encargo.fecha).split(\"-\");\r\n\r\n          // Asignar las partes a variables separadas\r\n          const anio: string = partes[0]; // \"2024\"\r\n          const mes: string = partes[1]; // \"12\"\r\n          const dia: string = partes[2]; // \"16\"\r\n          setFechaAnnoDetailsEncargo(String(parseInt(anio)));\r\n          setFechaMesDetailsEncargo(String(parseInt(mes)));\r\n          setFechaDiaDetailsEncargo(String(parseInt(dia)));\r\n        }\r\n\r\n        // Actualizar variables para la validación de campos\r\n        setIdTipoServicioDetailsViejo(result.tipo_servicio.id_tipo_servicio);\r\n        setDevueltoDetailsViejo(result.devuelto ? \"devolver\" : \"sin devolver\");\r\n        setDuracionGarantiaDetailsVieja(\r\n          result.garantia !== null ? result.garantia.duracion : \"\"\r\n        );\r\n        setIsGarantiaDetailsViejo(result.garantia !== null);\r\n\r\n        // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n        if (\r\n          parseInt(result.tipo_servicio.id_tipo_servicio) === 2 ||\r\n          parseInt(result.tipo_servicio.id_tipo_servicio) === 4\r\n        ) {\r\n          const resultventa = await getVentaByIDOfServicio(\r\n            usuario.token,\r\n            idServicioDetails\r\n          );\r\n          // Obtener entradas del produto para calcular datos del producto\r\n\r\n          // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n          if (resultventa) {\r\n            // Obtener entradas del produto para calcular datos del producto\r\n            const entradas = await getAllEntradasByProductoId(\r\n              usuario?.token,\r\n              resultventa.producto.id_producto\r\n            );\r\n            const cantidadTotalProducto = await getProductoCantidadTotal(\r\n              usuario.token,\r\n              resultventa.producto.id_producto\r\n            );\r\n\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setIdProductoDetails(resultventa.producto.id_producto);\r\n            setCantidadProductoDetails(resultventa.cantidad);\r\n            setIdTiendaDetails(result.tienda.id_tienda);\r\n            setPrecioUSDDetails(result.precio);\r\n            setPrecioCUPDetails(\r\n              String(parseFloat(result.precio) * cambioMoneda)\r\n            );\r\n            setCostoPromedioProductoUSDDetails(\r\n              calcularPromedioAcomulado(entradas, cantidadTotalProducto)\r\n            );\r\n          } else {\r\n            // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setIdProductoDetails(\"\");\r\n            setCantidadProductoDetails(\"\");\r\n            setIdTiendaDetails(\"\");\r\n            setPrecioUSDDetails(\"\");\r\n            setPrecioCUPDetails(\"\");\r\n            setCostoPromedioProductoUSDDetails(\"\");\r\n          }\r\n        } else {\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(false);\r\n          setPrecioUSDDetails(result.precio);\r\n          setPrecioCUPDetails(String(parseInt(result.precio) * cambioMoneda));\r\n          setCostoPromedioProductoUSDDetails(result.costo);\r\n        }\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n        // Actualizar fechas para el encargo\r\n        setFechaDiaDetailsEncargo(String(parseInt(day)));\r\n        setFechaMesDetailsEncargo(String(parseInt(month)));\r\n        setFechaAnnoDetailsEncargo(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares;\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n    setAuxOptimizacion(true);\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Servicio[] | null> => {\r\n    if (usuario?.token) {\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      try {\r\n        const result = await filtrarSrvicio(\r\n          usuario.token,\r\n          nombreClienteSearch,\r\n          idTipoServicioSearch,\r\n          resultServicioGeneral ? idTiendaSearch : usuario.id_tienda,\r\n          rangoPrecioDesdeSearch,\r\n          rangoPrecioHastaSearch,\r\n          fechaDesde,\r\n          fechaHasta,\r\n          nombreProductoSearsh\r\n        );\r\n\r\n        if (result) {\r\n          const serviciosMapeados: Servicio[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Servicio: element.id_servicio,\r\n              id_Cliente: element.cliente.id_cliente,\r\n              id_Tienda: element.tienda.id_tienda,\r\n              id_Tipo_servicio: element.tipo_servicio.id_tipo_servicio,\r\n              id_Deuda: \"\",\r\n              id_Garantia: \"\",\r\n              fecha: element.fecha,\r\n              precio: element.precio,\r\n              nota: element.nota,\r\n              descripcion: element.descripcion,\r\n              nombreCliente: element.cliente.nombre,\r\n              nombreTienda: element.tienda.nombre,\r\n              nombreTipoServicio: element.tipo_servicio.nombre,\r\n              nombreProducto: element.venta\r\n                ? element.venta.producto.nombre\r\n                : \"\", // Verifica si 'venta' no es null\r\n              cantidad: element.venta ? element.venta.cantidad : \"\", // Verifica si 'venta' no es null\r\n              devuelto: element.devuelto,\r\n              costo: element.costo\r\n            }))\r\n          );\r\n          return serviciosMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Cargar datos del servicio cuando se seleccionado en la tabla\r\n  useEffect(() => {\r\n    cargarDetailsOfServicio();\r\n  }, [modalEntradasDates]);\r\n\r\n  // Cargar datos de el producto si es que es seleccioando una venta de algun tipoServicio\r\n  useEffect(() => {\r\n    // Actualizar si es Encargo\r\n    if (parseInt(idTipoServicioDetails) === 26) {\r\n      setIsEncargoProducto(true);\r\n    } else {\r\n      setIsEncargoProducto(false);\r\n    }\r\n    cargarDetailsOfProductoVenta();\r\n  }, [idTipoServicioDetails]);\r\n  useEffect(() => {\r\n    if (auxRedondeo === \"PrecioCUP\") {\r\n      setPrecioUSDDetails(parseFloat(precioUSDDetails).toFixed(4));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"PrecioUSD\") {\r\n      setPrecioCUPDetails(parseFloat(precioCUPDetails).toFixed(0));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoCUP\") {\r\n      setCostoPromedioProductoUSDDetails(\r\n        parseFloat(costoPromedioProductoUSDDetails).toFixed(4)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoUSD\") {\r\n      setCostoPromedioProductoCUPDetails(\r\n        parseFloat(costoPromedioProductoCUPDetails).toFixed(0)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    }\r\n    setAuxRedondeo(\"\");\r\n  }, [auxRedondeo]);\r\n\r\n  useEffect(() => {\r\n    const auxiliar = async () => {\r\n      if (usuario?.token) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          idTiendaDetails\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      }\r\n    };\r\n    auxiliar();\r\n  }, [idTiendaDetails]);\r\n  useEffect(() => {\r\n    if (auxOptimizacion) {\r\n      if (\r\n        idProductoDetails !== \"\" &&\r\n        idProductoDetails !== idFirstTimeProducto &&\r\n        usuario?.token\r\n      ) {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n        const auxiliarAsyncFuncion = async () => {\r\n          // Obtener entradas del produto para calcular datos del producto\r\n          const entradas = await getAllEntradasByProductoId(\r\n            usuario?.token,\r\n            idProductoDetails\r\n          );\r\n          const resultProdcuto = await getProductoById(\r\n            usuario.token,\r\n            idProductoDetails\r\n          );\r\n          const cantidadTotalProducto = await getProductoCantidadTotal(\r\n            usuario.token,\r\n            idProductoDetails\r\n          );\r\n\r\n          // Cargar el costo promedio del producto seleccionado\r\n          setCostoPromedioProductoUSDDetails(\r\n            calcularPromedioAcomulado(entradas, cantidadTotalProducto)\r\n          );\r\n          // Cargar precio del producto seleccioando en USD y CUP\r\n          setPrecioUSDDetails(resultProdcuto.precio ?? 0);\r\n          setPrecioCUPDetails(\r\n            String(parseFloat(resultProdcuto.precio) * cambioMoneda) ?? 0\r\n          );\r\n        };\r\n        auxiliarAsyncFuncion();\r\n      } else {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n      }\r\n    }\r\n  }, [idProductoDetails]);\r\n\r\n  // Funcion para controlar la vicion del campo de costo del servicio y del producto\r\n  const isCampoCostoVisible = async () => {\r\n    if (usuario?.token && usuario?.id_usuario) {\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultado =\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(resultServicioGeneral) === 4 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n          ? isPermisoServicioGeneral\r\n          : true;\r\n      return resultado;\r\n    }\r\n    return false;\r\n  };\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        setAuxOptimizacion(false);\r\n        await checkPermiso();\r\n        await getTipoServicioPikerDetails();\r\n        await getClientesPikerDetails();\r\n        await getTiendasPikerDetails();\r\n        await getProductosPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarServicios = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let serviciosFiltradas: Servicio[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortServicios?.criterioOrden && sortServicios.tipoOrden) {\r\n          serviciosFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            serviciosFiltradas,\r\n            sortServicios.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }else{\r\n          serviciosFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            serviciosFiltradas,\r\n            \"option3\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(serviciosFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarServicios(\r\n      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n    );\r\n  }, [\r\n    sortServicios,\r\n    selectedOptionTipoOrden,\r\n  ]);\r\n  useEffect(() =>{\r\n    setSelecterActivoDetails(\"\");\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ])\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setIdTiendaDetails(usuario?.id_tienda);\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setPrecioCUPDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setCostoPromedioProductoUSDDetails(\"\");\r\n    setIdTipoServicioDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setNotaDetails(\"\");\r\n    setDescripcionDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Extraemos el año, mes y día de la fecha actual\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    setFechaDiaDetails(String(parseInt(day)));\r\n    setFechaMesDetails(String(parseInt(month)));\r\n    setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n    setFechaDiaDetailsEncargo(String(parseInt(day)));\r\n    setFechaMesDetailsEncargo(String(parseInt(month)));\r\n    setFechaAnnoDetailsEncargo(String(parseInt(year)));\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarServicios(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreClienteSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n    setIdTiendaSearch(\"\");\r\n    setIdTipoServicioSearch(\"\");\r\n    setRangoPrecioDesdeSearch(\"\");\r\n    setRangoPrecioHastaSearch(\"\");\r\n    setSelecterActivoDetails(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewServicio = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando servicio. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      const auxIsProductoInTienda = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR SERVICIO. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (\r\n        costoPromedioProductoUSDDetails === \"\" ||\r\n        costoPromedioProductoUSDDetails === undefined\r\n      ) {\r\n        flag = false;\r\n        validarCampos += \"-Digite el costo del servicio.\\n\";\r\n      }\r\n\r\n      if (\r\n        precioUSDDetails === \"\" ||\r\n        costoPromedioProductoUSDDetails === undefined\r\n      ) {\r\n        flag = false;\r\n        validarCampos += \"-Defina el precio cobrado al cliente.\\n\";\r\n      }\r\n      if (idClienteDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione un cliente. Si no hay datos del cliente seleccione anonimo\\n\";\r\n      }\r\n      if (idTipoServicioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione el tipo de servicio que está ofreciendo.\\n\";\r\n      }\r\n      if (isGarantiaDetails && duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (isGarantiaDetails && parseInt(idClienteDetails) === 1) {\r\n        flag = false;\r\n        validarCampos += \"-El ciente Anónimo no puede tener garantías\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (auxIsProductoInTienda) {\r\n        if (\r\n          parseInt(auxIsProductoInTienda.cantidad) <\r\n          parseInt(cantidadProductoDetails)\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que desea vender es mayor que la cantidad que hay en la tienda.\\n\";\r\n        }\r\n      }\r\n      // Validaciones si es una venta\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 4 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        if (idProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos += \"-Seleccione un producto para vender.\\n\";\r\n        }\r\n        if (cantidadProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Defina la cantidad que desea vender del producto.\\n\";\r\n        }\r\n      }\r\n      // Validacion si es un encargo\r\n      if (parseInt(idTipoServicioDetails) === 26) {\r\n        const fechaBase = new Date(\r\n          `${fechaAnnoDetails}-${fechaMesDetails}-${fechaDiaDetails}`\r\n        );\r\n        const fechaEncargo = new Date(\r\n          `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`\r\n        );\r\n\r\n        if (parseInt(idClienteDetails) === 1) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-No se puede hacer un encargo al cliente Anónimo.\\n\";\r\n        }\r\n        if (fechaEncargo < fechaBase) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La fecha del encargo no puede ser menor que la fecha del servicio.\\n\";\r\n        }\r\n      }\r\n      // Validacion de deuda\r\n      if (isDeudaDetails && !isEncargoProducto) {\r\n        if (parseFloat(adelantoDeudaDetails) > parseFloat(precioUSDDetails)) {\r\n          flag = false;\r\n          validarCampos += \"-El adelanto inicial de la deuda es mayor que el monto a cobrar por el servicio.\\n\";\r\n        }\r\n        if (parseInt(idClienteDetails) === 1) {\r\n          flag = false;\r\n          validarCampos += \"-El cliente Anónimo no puede tener deudas\";\r\n        }\r\n      }\r\n\r\n      if (flag) {\r\n        const resultAddServicio = await addServicio(\r\n          usuario.token,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          precioUSDDetails,\r\n          notaDetails,\r\n          descripcionDetails,\r\n          idTiendaDetails,\r\n          idTipoServicioDetails,\r\n          costoPromedioProductoUSDDetails,\r\n          idClienteDetails,\r\n          \"Not suport yet\",\r\n          \"not suport yet\"\r\n        );\r\n\r\n        //Agregar Garantía si es que hay\r\n        if (isGarantiaDetails) {\r\n          await addGarantia(\r\n            usuario.token,\r\n            duracionGarantiaDetails,\r\n            resultAddServicio.id_servicio\r\n          );\r\n        }\r\n        // Agregar Deuda y pago de deuda si es que existen\r\n        if (isDeudaDetails) {\r\n          const resultDeuda = await addDeuda(usuario.token, precioUSDDetails, resultAddServicio.id_servicio, undefined);\r\n          if (adelantoDeudaDetails && parseFloat(adelantoDeudaDetails) > 0) {\r\n            await addPagoDeuda(usuario.token, adelantoDeudaDetails, `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`, resultDeuda.id_deuda);\r\n          }\r\n        }\r\n\r\n        //Agregar venta si es que es necezario\r\n        if (\r\n          parseInt(idTipoServicioDetails) === 2 ||\r\n          parseInt(idTipoServicioDetails) === 4 ||\r\n          parseInt(idTipoServicioDetails) === 25\r\n        ) {\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            resultAddServicio.id_servicio,\r\n            cantidadProductoDetails\r\n          );\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n\r\n          // Agregar Acción de usuario agregar servicio normal\r\n          const nombreCliente = dropdownItemsNombreCliente.find((element) => {\r\n            return element.value === idClienteDetails;\r\n          });\r\n          const nombreTipoServicio = dropdownItemsNombreTipoServicio.find(\r\n            (element) => {\r\n              return element.value === idTipoServicioDetails;\r\n            }\r\n          );\r\n          const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n            return element.value === idProductoDetails;\r\n          });\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un servicio del tipo de servicio ${nombreTipoServicio?.label} al cliente ${nombreCliente?.label}. Se vendió una cantidad de ${cantidadProductoDetails} del producto ${nombreProducto?.label} a un precio de ${precioUSDDetails} USD`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        } else {\r\n          // Si no es venta de ningun tipo comprobar si es encargo\r\n          if (parseInt(idTipoServicioDetails) === 26) {\r\n            await addEncargo(\r\n              usuario.token,\r\n              adelantoEncargo,\r\n              `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`,\r\n              resultAddServicio.id_servicio\r\n            );\r\n          }\r\n\r\n          // Agregar Acción de usuario agregar servicio normal\r\n          const nombreCliente = dropdownItemsNombreCliente.find((element) => {\r\n            return element.value === idClienteDetails;\r\n          });\r\n          const nombreTipoServicio = dropdownItemsNombreTipoServicio.find(\r\n            (element) => {\r\n              return element.value === idTipoServicioDetails;\r\n            }\r\n          );\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un servicio del tipo de servicio ${nombreTipoServicio?.label} a un precio de ${precioUSDDetails} USD al cliente ${nombreCliente?.label}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        }\r\n\r\n        await createProductoInTienda(\r\n          usuario.token,\r\n          idTipoServicioDetails,\r\n          idTiendaDetails\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El servicio se agregó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setPrecioCUPDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setCostoPromedioProductoUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setNotaDetails(\"\");\r\n        setDescripcionDetails(\"\");\r\n        setDuracionGarantiaDetails(\"\");\r\n\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarServicioFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando servicio. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let cantidadEnTiendaNueva: number = 0;\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      if (result) {\r\n        cantidadEnTiendaNueva = result.cantidad;\r\n      }\r\n\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR EL SERVICIO. Compruebe los siguientes campos:\\n\";\r\n\r\n      if (idClienteDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione un cliente. Si no hay datos del cliente seleccione anonimo\\n\";\r\n      }\r\n      if (idTipoServicioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione el tipo de servicio que está ofreciendo.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (isGarantiaDetails && duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (costoPromedioProductoUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Digite el costo del servicio.\\n\";\r\n      }\r\n      if (precioUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina el precio cobrado al cliente.\\n\";\r\n      }\r\n      if (isGarantiaDetails && duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (isGarantiaDetails && parseInt(idClienteDetails) === 1) {\r\n        flag = false;\r\n        validarCampos += \"-El ciente Anónimo no puede tener garantías\";\r\n      }\r\n      // Validacion si es un encargo\r\n      if (parseInt(idTipoServicioDetails) === 26) {\r\n        const fechaBase = new Date(\r\n          `${fechaAnnoDetails}-${fechaMesDetails}-${fechaDiaDetails}`\r\n        );\r\n        const fechaEncargo = new Date(\r\n          `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`\r\n        );\r\n\r\n        if (parseInt(idClienteDetails) === 1) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-No se puede hacer un encargo al cliente Anónimo.\\n\";\r\n        }\r\n        if (fechaEncargo < fechaBase) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La fecha del encargo no puede ser menor que la fecha del servicio.\\n\";\r\n        }\r\n      }\r\n      // Validaciones si es una venta\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 4 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        if (idProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos += \"-Seleccione un producto para vender.\\n\";\r\n        }\r\n        if (cantidadProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Defina la cantidad que desea vender del producto.\\n\";\r\n        }\r\n      }\r\n      // validación de campos avanzada\r\n      if (\r\n        cantidadEnTiendaNueva + parseInt(cantidadProductoDetailsViejo) <\r\n        parseInt(cantidadProductoDetails)\r\n      ) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-La cantidad que desea modificar es mayor que la cantidad que hay en la tienda.\\n\";\r\n      }\r\n      // se modificó solo la cantidad del producto\r\n      if (\r\n        (cantidadProductoDetails !== cantidadProductoDetailsViejo &&\r\n          idProductoDetails === idProductoDetailsViejo &&\r\n          idTiendaDetails === idTiendaDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 2) ||\r\n        parseInt(idTipoServicioDetails) === 4 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        if (\r\n          cantidadEnTiendaNueva + parseInt(cantidadProductoDetailsViejo) <\r\n          parseInt(cantidadProductoDetailsViejo) -\r\n            parseInt(cantidadProductoDetails)\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que hay en la tienda no es suficiente para modificar la venta del producto.\\n\";\r\n        }\r\n      } else if (\r\n        idProductoDetails !== idProductoDetailsViejo ||\r\n        idTiendaDetails !== idTiendaDetailsViejo\r\n      ) {\r\n        if (cantidadEnTiendaNueva < parseInt(cantidadProductoDetails)) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que hay en la tienda no es suficiente para modificar la venta del producto.\\n\";\r\n        }\r\n      }\r\n      if (flag) {\r\n        await modificarServicio(\r\n          usuario.token,\r\n          idServicioDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          precioUSDDetails,\r\n          notaDetails,\r\n          idTiendaDetails,\r\n          idTipoServicioDetails,\r\n          costoPromedioProductoUSDDetails,\r\n          devueltoDetails === \"devolver\",\r\n          idClienteDetails,\r\n          \"Not suport yet\",\r\n          \"not suport yet\"\r\n        );\r\n\r\n        // Actualizar Garantía\r\n        if (\r\n          isGarantiaDetails !== isGarantiaDetailsViejo ||\r\n          duracionGarantiaDetails !== duracionGarantiaDetailsVieja\r\n        ) {\r\n          if (isGarantiaDetails) {\r\n            if (idGarantiaDetails !== \"\") {\r\n              await modificarGarantia(\r\n                usuario.token,\r\n                duracionGarantiaDetails,\r\n                idServicioDetails,\r\n                idGarantiaDetails\r\n              );\r\n            } else {\r\n              await addGarantia(\r\n                usuario.token,\r\n                duracionGarantiaDetails,\r\n                idServicioDetails\r\n              );\r\n            }\r\n          } else {\r\n            await deleteGarantia(usuario.token, idGarantiaDetails);\r\n          }\r\n        }\r\n        // Actualizar encargo\r\n        if (\r\n          idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetailsViejo) === 26\r\n        ) {\r\n          await deleteEncargo(usuario.token, idEncargoDetails);\r\n        } else if (\r\n          idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 26\r\n        ) {\r\n          await addEncargo(\r\n            usuario.token,\r\n            adelantoEncargo,\r\n            `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`,\r\n            idServicioDetails\r\n          );\r\n        } else if (\r\n          idTipoServicioDetails === idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 26\r\n        ) {\r\n          await modificarEncargo(\r\n            usuario.token,\r\n            adelantoEncargo,\r\n            `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`,\r\n            idServicioDetails,\r\n            idEncargoDetails\r\n          );\r\n        }\r\n        // Si se cambio de tipo de servicio venta a otro\r\n        if (\r\n          (parseInt(idTipoServicioDetailsViejo) === 2 ||\r\n            parseInt(idTipoServicioDetailsViejo) === 4) &&\r\n          parseInt(idTipoServicioDetails) !== 2 &&\r\n          parseInt(idTipoServicioDetails) !== 4\r\n        ) {\r\n          // Se suma la cantidad de la venta pasada en la tienda\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // Se elimina la venta\r\n          await deleteVenta(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idServicioDetails\r\n          );\r\n        }\r\n\r\n        // Comprobar si solamente se cambio la cantidad si es que el tip ode sericio viejo era ya una venta\r\n        if (\r\n          cantidadProductoDetails !== cantidadProductoDetailsViejo &&\r\n          idProductoDetails === idProductoDetailsViejo &&\r\n          idTiendaDetails === idTiendaDetailsViejo\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${\r\n              parseInt(cantidadProductoDetails) -\r\n              parseInt(cantidadProductoDetailsViejo)\r\n            }`\r\n          );\r\n          // Agregar o sobreescrivir la venta\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // Si no es el caso se modificó el id del producto o l tienda volviendo para atras la venta a la tienda y haciendola denuevo con lso nuevos datos de la venta\r\n        } else if (\r\n          (idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n            parseInt(idTipoServicioDetails) === 2) ||\r\n          parseInt(idTipoServicioDetails) === 4 ||\r\n          parseInt(idTipoServicioDetails) === 25\r\n        ) {\r\n          // Agregar o sobreescrivir la venta\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // sumar en la tienda la cantidad vieja del producto para volver atras la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // restar en la tienda nueva o vieja donde se este haciendo la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        } else if (\r\n          idTiendaDetails !== idTiendaDetailsViejo ||\r\n          idProductoDetails !== idProductoDetailsViejo\r\n        ) {\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // sumar en la tienda la cantidad vieja del producto para volver atras la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // restar en la tienda nueva o vieja donde se este haciendo la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        }\r\n\r\n        // Si es una devolucion y ademas el tipo de servicio actual es una venta se devuelve la cantidad a la tienda\r\n        if (\r\n          devueltoDetails !== devueltoDetailsViejo &&\r\n          devueltoDetails === \"devolver\" &&\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 4 ||\r\n            parseInt(idTipoServicioDetails) === 25)\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails) * -1}`\r\n          );\r\n        } else if (\r\n          devueltoDetails !== devueltoDetailsViejo &&\r\n          devueltoDetails === \"sin devolver\" &&\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 4 ||\r\n            parseInt(idTipoServicioDetails) === 25)\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        }\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó una entrada de originalmente ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          7\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El servicio se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarServicioFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando servicio. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR SERVICIO. Compruebe los siguientes parámetros:\\n\";\r\n\r\n      if (flag) {\r\n        const resultServicio = await getServicioByID(\r\n          usuario.token,\r\n          idServicioDetails\r\n        );\r\n        const resultventa = await getVentaByIDOfServicio(\r\n          usuario.token,\r\n          idServicioDetails\r\n        );\r\n        // Eliminar Garantía si es que existe\r\n        if (isGarantiaDetailsViejo) {\r\n          await deleteGarantia(usuario.token, idGarantiaDetails);\r\n        }\r\n        // Eliminar deuda\r\n        if (idDeudaDetails !== \"\") {\r\n          const resultDeuda = await getDeudaByID(usuario.token, idDeudaDetails);\r\n          if (Array.isArray(resultDeuda.deuda.pagos_deuda) && resultDeuda.deuda.pagos_deuda.length > 0) {\r\n            // Eliminar los pagoDeuda\r\n            resultDeuda.deuda.pagos_deuda.map(async (pagoDeuda: any) => {\r\n              await deletePagoDeuda(usuario.token, pagoDeuda.id_pago_deuda);\r\n            });\r\n          }\r\n          await deleteDeuda(usuario.token, idDeudaDetails);\r\n        }\r\n        // Eliminar Encargo\r\n        // Actualizar encargo\r\n        if (parseInt(idTipoServicioDetailsViejo) === 26) {\r\n          await deleteEncargo(usuario.token, idEncargoDetails);\r\n        }\r\n        // Eliminar la venta y sumar en proucto tienda si es que era una venta y no se havia echo devolución\r\n        if (\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 4 ||\r\n            parseInt(idTipoServicioDetails) === 25) &&\r\n          devueltoDetailsViejo === \"sin devolver\"\r\n        ) {\r\n          await deleteVenta(\r\n            usuario.token,\r\n            resultventa.producto.id_producto,\r\n            resultServicio.id_servicio\r\n          );\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            resultventa.producto.id_producto,\r\n            resultServicio.tienda.id_tienda,\r\n            `${parseInt(resultventa.cantidad) * -1}`\r\n          );\r\n        } else if (\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 4 ||\r\n            parseInt(idTipoServicioDetails) === 25) &&\r\n          devueltoDetailsViejo === \"devolver\"\r\n        ) {\r\n          // Solo se elimina la venta porque ya se sumó en producto tienda si es devolución\r\n          await deleteVenta(\r\n            usuario.token,\r\n            resultventa.producto.id_producto,\r\n            resultServicio.id_servicio\r\n          );\r\n        }\r\n        await deleteServicio(usuario.token, idServicioDetails);\r\n\r\n        if (parseInt(idServicioDetails) === 2) {\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la el servicio de venta de la tienda ${resultServicio.tienda.nombre}. La venta eliminada fue del producto ${nombreClienteSearch}, se sumo una canidad de ${resultventa.cantidad} nuevamente en la tienda cuyo producto valía ${resultventa.precio} y se vendió una cantidad de ${resultventa.cantidad}.`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        } else {\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la un servicio de la tienda ${resultServicio.tienda.nombre} por el cual se había cobrado ${resultServicio.precio} y tenía un costo de ${resultServicio.costo}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        }\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El servicio se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setPrecioCUPDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setCostoPromedioProductoUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setNotaDetails(\"\");\r\n        setDescripcionDetails(\"\");\r\n        setDuracionGarantiaDetails(\"\");\r\n\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre Cliente\",\r\n    \"Tienda\",\r\n    \"Tipo de Servicio\",\r\n    \"Precio USD\",\r\n    \"Precio CUP\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre Cliente\",\r\n    \"Tienda\",\r\n    \"Tipo de Servicio\",\r\n    \"Precio USD\",\r\n    \"Precio CUP\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarServicio && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Servicio</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableServicios\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearsh}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Cliente:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del cliente\"\r\n                    value={nombreClienteSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreClienteSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Tipo de Servicio:\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadTipoServicioSearsh,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={idTipoServicioSearch}\r\n                      placeholder=\"Seleccione un tipo de servicio\"\r\n                      setValue={setIdTipoServicioSearch}\r\n                      items={dropdownItemsNombreTipoServicio}\r\n                      direction=\"BOTTOM\"\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioSearsh\")\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {isPermisoServicioGeneral && (\r\n                    <View style={styles.separatorBlanco} />\r\n                  )}\r\n\r\n                  {isPermisoServicioGeneral && (\r\n                    <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n                  )}\r\n                  {isPermisoServicioGeneral && (\r\n                    <View\r\n                      style={{\r\n                        width: \"100%\",\r\n                        zIndex: capaPrioridadTiendaSearsh,\r\n                        position: \"relative\",\r\n                      }}\r\n                    >\r\n                      <CustomDropdown\r\n                        value={idTiendaSearch}\r\n                        placeholder=\"Seleccione un tienda\"\r\n                        setValue={setIdTiendaSearch}\r\n                        items={dropdownItemsNombreTienda}\r\n                        direction=\"BOTTOM\"\r\n                        onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Rango de Precio en USD:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyDesktop}\r\n                      placeholder=\"Desde\"\r\n                      value={rangoPrecioDesdeSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyDesktop}\r\n                      placeholder=\"Hasta\"\r\n                      value={rangoPrecioHastaSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioHastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaDesdeSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaHastaSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() =>\r\n                          filtrarYOrdenarServicios(\r\n                            `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                            `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                          )\r\n                        }\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Servicio\"\r\n                  : \"Datos del Servicio\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idClienteDetails}\r\n                    placeholder=\"Seleccione un Cliente\"\r\n                    setValue={setIdClienteDetails}\r\n                    items={dropdownItemsNombreCliente}\r\n                    searchable={true}\r\n                    readOnly={\r\n                      !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                    }\r\n                    onDropdownOpen={() => controlarCapas(\"ClienteDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDetails}\r\n                      placeholder=\"Seleccione una tienda\"\r\n                      setValue={setIdTiendaDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={\r\n                        !(isPermisoServicioGeneral &&\r\n                        modalEntradasDates?.id_entrada === \"\"\r\n                          ? true\r\n                          : isPermisoServicioGeneral &&\r\n                            isPermisoModificarServicio)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTipoServicioDetails}\r\n                      placeholder=\"Seleccione un tipo de servicio\"\r\n                      setValue={setIdTipoServicioDetails}\r\n                      items={dropdownItemsNombreTipoServicio}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: 500,\r\n                  }}\r\n                >\r\n                  {/* Garantías */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    {!isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Tiene Garantía\r\n                      </Text>\r\n                    )}\r\n                    {(!isEncargoProducto && modalEntradasDates?.id_entrada === \"\" )&& (\r\n                      <CustomRadioButtonSingle\r\n                        onPress={() => setIsGarantiaDetails(!isGarantiaDetails)}\r\n                        selected={isGarantiaDetails}\r\n                        label=\"Garantía\"\r\n                      />\r\n                    )}\r\n\r\n                    {isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Adelanto del encargo\r\n                      </Text>\r\n                    )}\r\n                    {isEncargoProducto && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={adelantoEncargo}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n                          setAdelantoEncargo(validNumericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={true}\r\n                        placeholder=\"Adelanto del encargo\"\r\n                      />\r\n                    )}\r\n\r\n                    {isGarantiaDetails && !isEncargoProducto && (\r\n                      <View style={{ marginTop: \"2%\" }}>\r\n                        <Text style={styles.labelTextModalDesktop}>\r\n                          Duración en días:\r\n                        </Text>\r\n                        <CustomTextImputSearch\r\n                          style={styles.textImputModal}\r\n                          value={duracionGarantiaDetails}\r\n                          onChangeText={(text) => {\r\n                            // Permite solo números y un punto decimal\r\n                            const numericValue = text.replace(/[^0-9]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                            // Asegura que solo haya un punto decimal\r\n                            setDuracionGarantiaDetails(numericValue);\r\n                          }}\r\n                          cursorColor={Colors.azul_Oscuro}\r\n                          editable={\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          }\r\n                          placeholder=\"Duracion En días\"\r\n                        />\r\n                      </View>\r\n                    )}\r\n                  </View>\r\n\r\n                  {/*  */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    {!isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Genera Deuda\r\n                      </Text>\r\n                    )}\r\n                    {!isEncargoProducto && (\r\n                      <CustomRadioButtonSingle\r\n                        onPress={() => setIsDeudaDetails(!isDeudaDetails)}\r\n                        selected={isDeudaDetails}\r\n                        label=\"Deuda\"\r\n                      />\r\n                    )}\r\n\r\n                    {isDateLoaded && isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Fecha llegada\r\n                      </Text>\r\n                    )}\r\n                    {isDateLoaded && isEncargoProducto && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetailsEncargo}\r\n                        monthValue={fechaMesDetailsEncargo}\r\n                        yearValue={fechaAnnoDetailsEncargo}\r\n                        onDayChange={setFechaDiaDetailsEncargo}\r\n                        onMonthChange={setFechaMesDetailsEncargo}\r\n                        onYearChange={setFechaAnnoDetailsEncargo}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n\r\n                    {(isDeudaDetails && !isEncargoProducto && modalEntradasDates?.id_entrada === \"\") && (\r\n                      <View style={{ marginTop: \"2%\" }}>\r\n                        <Text style={styles.labelTextModalDesktop}>\r\n                          Adelanto inicial de la deuda en USD:\r\n                        </Text>\r\n                        <CustomTextImputSearch\r\n                          style={styles.textImputModal}\r\n                          value={adelantoDeudaDetails}\r\n                          onChangeText={(text) => {\r\n                            // Permite solo números y un punto decimal\r\n                            const numericValue = text.replace(/[^0-9]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                            // Asegura que solo haya un punto decimal\r\n                            setAdelantoDeudaDetails(numericValue);\r\n                            setAdelantoCUPDeudaDetails(String((parseFloat(String(numericValue)) * cambioMoneda).toFixed(2)))\r\n                          }}\r\n                          cursorColor={Colors.azul_Oscuro}\r\n                          editable={\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          }\r\n                          placeholder=\"Adelanto\"\r\n                        />\r\n                      </View>\r\n                    )}\r\n\r\n                    {(!isEncargoProducto && isDeudaDetails && modalEntradasDates?.id_entrada === \"\") && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Conv. CUP\r\n                      </Text>\r\n                    )}\r\n                    {(!isEncargoProducto && isDeudaDetails && modalEntradasDates?.id_entrada === \"\") && (\r\n                      <Text style={styles.textLabelAsInput}>{adelantoCUPDeudaDetails}</Text>\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdownDetails\r\n                      value={idProductoDetails}\r\n                      placeholder=\"Seleccione un produto\"\r\n                      setValue={setIdProductoDetails}\r\n                      items={dropdownItemsNombreproducto}\r\n                      searchable={true}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      onDropdownOpen={() => controlarCapas(\"ProductoDetails\")}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={cantidadProductoDetails}\r\n                        onChangeText={(text) => {\r\n                          // Filtra caracteres no numéricos\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                          setCantidadProductoDetails(numericValue);\r\n                        }}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad del producto\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en USD\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoUSDDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoCUPDetails(\r\n                              String(\r\n                                (\r\n                                  parseFloat(validNumericValue) * cambioMoneda\r\n                                ).toFixed(0)\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoCUPDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoUSDDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoUSD\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 4 ||\r\n                          parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoCUPDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoUSDDetails(\r\n                              String(\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoUSDDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoCUPDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoCUP\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 4 ||\r\n                          parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={precioUSDDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioCUPDetails(\r\n                            String(\r\n                              (\r\n                                parseFloat(validNumericValue) * cambioMoneda\r\n                              ).toFixed(0)\r\n                            )\r\n                          );\r\n                        } else {\r\n                          setPrecioCUPDetails(\"0\");\r\n                        }\r\n                        setPrecioUSDDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioUSD\");\r\n                      }}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en usd\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModalNOEDITABLE}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioUSDDetails(\r\n                            String(parseFloat(validNumericValue) / cambioMoneda)\r\n                          );\r\n                        } else {\r\n                          setPrecioUSDDetails(\"0\");\r\n                        }\r\n                        setPrecioCUPDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioCUP\");\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en cup\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={notaDetails}\r\n                      onChangeText={setNotaDetails}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Nota\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del servicio\"\r\n                  multiline={true}\r\n                  editable={\r\n                    isPermisoModificarServicio || isPermisoServicioLocal\r\n                  }\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este servicio?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarServicio &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewServicio()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al este servicio?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => isModalChekEliminarEntrada\r\n                    ? eliminarServicioFunction()\r\n                    : modificarServicioFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Servicios\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarServicio && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Servicio\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearsh}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Cliente:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del cliente\"\r\n              value={nombreClienteSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreClienteSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Tipo de Servicio:</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                zIndex: capaPrioridadTipoServicioSearsh,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={idTipoServicioSearch}\r\n                placeholder=\"Seleccione un tipo de servicio\"\r\n                setValue={setIdTipoServicioSearch}\r\n                items={dropdownItemsNombreTipoServicio}\r\n                direction=\"BOTTOM\"\r\n                onDropdownOpen={() => controlarCapas(\"TipoServicioSearsh\")}\r\n              />\r\n            </View>\r\n\r\n            {isPermisoServicioGeneral && (\r\n              <View style={styles.separatorBlanco} />\r\n            )}\r\n\r\n            {isPermisoServicioGeneral && (\r\n              <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n            )}\r\n            {isPermisoServicioGeneral && (\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  zIndex: capaPrioridadTiendaSearsh,\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <CustomDropdown\r\n                  value={idTiendaSearch}\r\n                  placeholder=\"Seleccione un tienda\"\r\n                  setValue={setIdTiendaSearch}\r\n                  items={dropdownItemsNombreTienda}\r\n                  direction=\"BOTTOM\"\r\n                  onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n                />\r\n              </View>\r\n            )}\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              Rango de Precio en USD:\r\n            </Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={rangoPrecioDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={rangoPrecioHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioHastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() =>\r\n                    filtrarYOrdenarServicios(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    )\r\n                  }\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableServicios\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Servicio\"\r\n                  : \"Datos del Servicio\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idClienteDetails}\r\n                    placeholder=\"Seleccione un Cliente\"\r\n                    setValue={setIdClienteDetails}\r\n                    items={dropdownItemsNombreCliente}\r\n                    searchable={true}\r\n                    readOnly={\r\n                      !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                    }\r\n                    onDropdownOpen={() => controlarCapas(\"ClienteDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDetails}\r\n                      placeholder=\"Seleccione una tienda\"\r\n                      setValue={setIdTiendaDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={\r\n                        !(isPermisoServicioGeneral &&\r\n                        modalEntradasDates?.id_entrada === \"\"\r\n                          ? true\r\n                          : isPermisoServicioGeneral &&\r\n                            isPermisoModificarServicio)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTipoServicioDetails}\r\n                      placeholder=\"Seleccione un tipo de servicio\"\r\n                      setValue={setIdTipoServicioDetails}\r\n                      items={dropdownItemsNombreTipoServicio}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: 500,\r\n                  }}\r\n                >\r\n                  {/* Garantías */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    {!isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Tiene Garantía\r\n                      </Text>\r\n                    )}\r\n                    {!isEncargoProducto && (\r\n                      <CustomRadioButtonSingle\r\n                        onPress={() => setIsGarantiaDetails(!isGarantiaDetails)}\r\n                        selected={isGarantiaDetails}\r\n                        label=\"Garantía\"\r\n                      />\r\n                    )}\r\n\r\n                    {isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Adelanto del encargo\r\n                      </Text>\r\n                    )}\r\n                    {isEncargoProducto && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={adelantoEncargo}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n                          setAdelantoEncargo(validNumericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={true}\r\n                        placeholder=\"Adelanto del encargo\"\r\n                      />\r\n                    )}\r\n\r\n                    {isGarantiaDetails && !isEncargoProducto && (\r\n                      <View style={{ marginTop: \"2%\" }}>\r\n                        <Text style={styles.labelTextModalDesktop}>\r\n                          Duración en días:\r\n                        </Text>\r\n                        <CustomTextImputSearch\r\n                          style={styles.textImputModal}\r\n                          value={duracionGarantiaDetails}\r\n                          onChangeText={(text) => {\r\n                            // Permite solo números y un punto decimal\r\n                            const numericValue = text.replace(/[^0-9]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                            // Asegura que solo haya un punto decimal\r\n                            setDuracionGarantiaDetails(numericValue);\r\n                          }}\r\n                          cursorColor={Colors.azul_Oscuro}\r\n                          editable={\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          }\r\n                          placeholder=\"Duracion En días\"\r\n                        />\r\n                      </View>\r\n                    )}\r\n                  </View>\r\n\r\n                  {/*  */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    {(!isEncargoProducto && modalEntradasDates?.id_entrada === \"\") && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Genera Deuda\r\n                      </Text>\r\n                    )}\r\n                    {(!isEncargoProducto && modalEntradasDates?.id_entrada === \"\" )&& (\r\n                      <CustomRadioButtonSingle\r\n                        onPress={() => setIsDeudaDetails(!isDeudaDetails)}\r\n                        selected={isDeudaDetails}\r\n                        label=\"Deuda\"\r\n                      />\r\n                    )}\r\n\r\n                    {isDateLoaded && isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Fecha llegada\r\n                      </Text>\r\n                    )}\r\n                    {isDateLoaded && isEncargoProducto && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetailsEncargo}\r\n                        monthValue={fechaMesDetailsEncargo}\r\n                        yearValue={fechaAnnoDetailsEncargo}\r\n                        onDayChange={setFechaDiaDetailsEncargo}\r\n                        onMonthChange={setFechaMesDetailsEncargo}\r\n                        onYearChange={setFechaAnnoDetailsEncargo}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n\r\n                    {isDeudaDetails && !isEncargoProducto && (\r\n                      <View style={{ marginTop: \"2%\" }}>\r\n                        <Text style={styles.labelTextModalDesktop}>\r\n                          Adelanto inicial de la deuda en USD:\r\n                        </Text>\r\n                        <CustomTextImputSearch\r\n                          style={styles.textImputModal}\r\n                          value={adelantoDeudaDetails}\r\n                          onChangeText={(text) => {\r\n                            // Permite solo números y un punto decimal\r\n                            const numericValue = text.replace(/[^0-9]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                            // Asegura que solo haya un punto decimal\r\n                            setAdelantoDeudaDetails(numericValue);\r\n                            setAdelantoCUPDeudaDetails(String((parseFloat(String(numericValue)) * cambioMoneda).toFixed(2)))\r\n                          }}\r\n                          cursorColor={Colors.azul_Oscuro}\r\n                          editable={\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          }\r\n                          placeholder=\"Adelanto\"\r\n                        />\r\n                      </View>\r\n                    )}\r\n\r\n                    {(!isEncargoProducto && isDeudaDetails) && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Conv. CUP\r\n                      </Text>\r\n                    )}\r\n                    {(!isEncargoProducto && isDeudaDetails) && (\r\n                      <Text style={styles.textLabelAsInput}>{adelantoCUPDeudaDetails}</Text>\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdownDetails\r\n                      value={idProductoDetails}\r\n                      placeholder=\"Seleccione un produto\"\r\n                      setValue={setIdProductoDetails}\r\n                      items={dropdownItemsNombreproducto}\r\n                      searchable={true}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      onDropdownOpen={() => controlarCapas(\"ProductoDetails\")}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={cantidadProductoDetails}\r\n                        onChangeText={(text) => {\r\n                          // Filtra caracteres no numéricos\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                          setCantidadProductoDetails(numericValue);\r\n                        }}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad del producto\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en USD\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoUSDDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoCUPDetails(\r\n                              String(\r\n                                (\r\n                                  parseFloat(validNumericValue) * cambioMoneda\r\n                                ).toFixed(0)\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoCUPDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoUSDDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoUSD\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 4 ||\r\n                          parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoCUPDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoUSDDetails(\r\n                              String(\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoUSDDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoCUPDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoCUP\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 4 ||\r\n                          parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={precioUSDDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioCUPDetails(\r\n                            String(\r\n                              (\r\n                                parseFloat(validNumericValue) * cambioMoneda\r\n                              ).toFixed(0)\r\n                            )\r\n                          );\r\n                        } else {\r\n                          setPrecioCUPDetails(\"0\");\r\n                        }\r\n                        setPrecioUSDDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioUSD\");\r\n                      }}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en usd\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModalNOEDITABLE}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioUSDDetails(\r\n                            String(parseFloat(validNumericValue) / cambioMoneda)\r\n                          );\r\n                        } else {\r\n                          setPrecioUSDDetails(\"0\");\r\n                        }\r\n                        setPrecioCUPDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioCUP\");\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en cup\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campo de los check bootom */}\r\n                {modalEntradasDates?.id_entrada !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        marginTop: \"3%\",\r\n                        color: Colors.negro, // Color del texto\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Hacer Devolución\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                {modalEntradasDates?.id_entrada !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    {optionsDevueltoDetails.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={devueltoDetails === option.value}\r\n                        onPress={() => {\r\n                          if (\r\n                            modalEntradasDates?.id_entrada === \"\"\r\n                              ? true\r\n                              : isPermisoModificarServicio\r\n                          ) {\r\n                            setDevueltoDetails(option.value);\r\n                          }\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n                )}\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={notaDetails}\r\n                      onChangeText={setNotaDetails}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Nota\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del servicio\"\r\n                  multiline={true}\r\n                  editable={\r\n                    isPermisoModificarServicio || isPermisoServicioLocal\r\n                  }\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este servicio?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarServicio &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewServicio()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al este servicio?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarServicioFunction()\r\n                      : modificarServicioFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Servicios\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import Navbar from \"../components/Navbar\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport React, { useEffect, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  Image,\r\n  Modal,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getUsuarioById, iniciarSecionUser } from \"../services/UsuarioServices\";\r\nimport { getPermisosOfRol, RolPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { useSelectedButon } from \"../contexts/globalButonNavbarSelected\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\n\r\nexport default function LoginView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  //Datos de el usuario\r\n  const { setUsuario, usuario } = useUsuario();\r\n  const { setSelectedButon, selectedButon } = useSelectedButon();\r\n\r\n  // Estilo según la vita desktop o movil\r\n  const ContainerStyle = isMobile\r\n    ? styles.loginContainerStilesMovil\r\n    : styles.loginContainerStilesDesktop;\r\n\r\n  // Constantes para controlar el estado del Modal\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n  // Variables para los datos de los usuarios\r\n  const [username, setUsername] = useState(\"\");\r\n  const [pasword, setPasword] = useState(\"\");\r\n\r\n  // Funciones de servicios con los usuarios\r\n  const iniciarSecion = async () => {\r\n    \r\n    if (username.trim() != \"\" && pasword.trim() != \"\") {\r\n      \r\n      const resultUserAuth = await iniciarSecionUser(username, pasword);\r\n    // Comprueba si result es false\r\n    if (resultUserAuth) {\r\n      // Si result no es false, se manejan la resuesta\r\n      // Obtener más datos de los usuarios\r\n      const resultUserDates = await getUsuarioById(resultUserAuth.data.token,resultUserAuth.data.id_usuario);\r\n      \r\n      if (resultUserDates) {\r\n        // Guardamos el usuario en el contexto\r\n        const permisos: RolPermiso[] | false = await getPermisosOfRol(resultUserAuth.data.token, resultUserAuth.data.rol.id_rol);\r\n        if (permisos) {\r\n          setUsuario({\r\n            id_usuario: resultUserDates.data.id_usuario,\r\n            nombre: resultUserAuth.data.nombre,\r\n            telefono: resultUserDates.data.telefono, // Usa undefined si no hay valor\r\n            direccion: resultUserDates.data.direccion, // Usa undefined si no hay valor\r\n            carnet_identidad: resultUserDates.data.carnet_identidad, // Usa undefined si no hay valor\r\n            detalles_bancarios: resultUserDates.data.detalles_bancarios, // Usa undefined si no hay valor\r\n            nombre_usuario: username, // Esta propiedad es obligatoria\r\n            email: resultUserDates.data.email, // Esta propiedad es obligatoria\r\n            token: resultUserAuth.data.token,\r\n            id_rol: resultUserAuth.data.rol.id_rol,\r\n            nombre_rol: resultUserAuth.data.rol.nombre,\r\n            id_tienda: resultUserAuth.data.tienda.id_tienda,\r\n            nombre_tienda: resultUserAuth.data.tienda.nombre,\r\n            permisos: permisos\r\n          });\r\n\r\n          // Agregar Acción de usuario iniciar seción\r\n          \r\n          const currentDate = new Date();\r\n          \r\n          // Extraemos el año, mes y día de la fecha actual\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${resultUserAuth.data.nombre} con el nombre de usuario ${username} inició sesión`;\r\n          await addAccionUsuario(resultUserAuth.data.token, auxAddAccionUsuarioDescripcion, `${year}-${month}-${day}`, resultUserDates.data.id_usuario, 5);\r\n          \r\n          // Navegar\r\n          navigation.navigate(\"HomeScreen\");\r\n        }\r\n      }else{\r\n        alert(\"Error en userDates\");\r\n        toggleModal();\r\n      }\r\n    } else {\r\n      // Maneja el caso en que la autenticación falla\r\n      setPasword(\"\");\r\n      toggleModal();\r\n    }\r\n    }else{\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === 'Enter') {\r\n      // Aquí ejecutas la función que deseas\r\n      iniciarSecion()\r\n    }\r\n  };\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Image\r\n        source={require(\"../images/wallpaper.jpg\")}\r\n        style={{\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          resizeMode: \"cover\", // O 'stretch', según lo que necesites\r\n        }}\r\n      />\r\n\r\n      <LinearGradient\r\n        colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n        start={[0, 0]}\r\n        end={[1, 0]}\r\n        style={ContainerStyle}\r\n      >\r\n        <Image\r\n          source={require(\"../images/logo.png\")}\r\n          style={{\r\n            position: \"absolute\",\r\n            resizeMode: \"cover\",\r\n            height: \"50%\",\r\n            width: \"70%\",\r\n            marginBottom: \"95%\",\r\n            shadowOffset: { width: 3, height: 4 },\r\n            shadowOpacity: 0.3,\r\n            shadowRadius: 5,\r\n          }}\r\n        />\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            marginTop: \"35%\",\r\n          }}\r\n        >\r\n          <Text style={styles.textSearchDesktop}>Nombre de Usuario:</Text>\r\n          <CustomTextImputSearch\r\n            style={styles.textImputLogin}\r\n            placeholder=\"Nombre de Usuario\"\r\n            value={username}\r\n            onChangeText={setUsername}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n\r\n          <Text style={styles.textSearchDesktop}>Contraseña</Text>\r\n          <CustomTextImputSearch\r\n            style={styles.textImputLogin}\r\n            placeholder=\"Contraseña\"\r\n            value={pasword}\r\n            secureTextEntry={true}\r\n            onChangeText={setPasword}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              borderRadius: 15,\r\n              borderColor: Colors.azul_Suave,\r\n              borderWidth: 2,\r\n              width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n              height: 35, // Altura fija para pantallas de escritorio\r\n              alignItems: \"center\",\r\n              marginTop: \"5%\",\r\n              justifyContent: \"center\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={() => {\r\n              setSelectedButon({\r\n                butonSelected: \"\"\r\n              })\r\n              iniciarSecion()\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: Colors.blanco,\r\n                fontSize: 20,\r\n                justifyContent: \"center\",\r\n                fontWeight: \"bold\", // Para negritas\r\n                textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                textShadowRadius: 200, // Difuminado de la sombra\r\n              }}\r\n            >\r\n              Iniciar Sesión\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <View\r\n            style={{\r\n              justifyContent: \"center\",\r\n              alignItems: \"flex-end\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <TouchableOpacity\r\n              style={{\r\n                backgroundColor: Colors.azul_Claro,\r\n                borderRadius: 15,\r\n                borderColor: Colors.azul_Suave,\r\n                borderWidth: 2,\r\n                width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                height: 30, // Altura fija para pantallas de escritorio\r\n                alignItems: \"center\",\r\n                marginRight: \"5%\",\r\n                marginTop: \"5%\",\r\n                justifyContent: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 3, height: 4 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n              }}\r\n              onPress={() => alert(\"Not Suport Yet\")}\r\n            >\r\n              <Text\r\n                style={{\r\n                  color: Colors.blanco,\r\n                  fontSize: 14,\r\n                  justifyContent: \"center\",\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                }}\r\n              >\r\n                Recuperar Contraseña\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={toggleModal}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={isMobile? styles.modalViewMesajeContainerMovil : styles.modalViewMesajeContainerDesktop}\r\n                >\r\n                  <Text style={styles.labelTextDesktop}>\r\n                    Error al iniciar sesión, posibles errores:\r\n                  </Text>\r\n                  <Text style={styles.labelTextDesktop}>\r\n                    -Nombre de usuario o contraseña incorrecta.\r\n                  </Text>\r\n                  <Text style={styles.labelTextDesktop}>\r\n                    -Debe llenar todos los campos.\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      marginTop: \"5%\",\r\n                      width: \"100%\", // Hacer que el botón ocupe todo el ancho\r\n                      paddingVertical: 10, // Espaciado vertical\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      borderRadius: 5, // Bordes redondeados\r\n                    }}\r\n                    onPress={toggleModal}\r\n                  >\r\n                    <Text style={{ color: \"white\", fontWeight: \"bold\" }}>\r\n                      Intentar de nuevo\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n          </View>\r\n        </View>\r\n      </LinearGradient>\r\n    </View>\r\n  );\r\n}\r\n","import React, { createContext, useState, ReactNode } from \"react\";\r\nimport { Movimiento } from \"../components/MyDateTableMovimientos\";\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortMovimientosDates {\r\n    items: Movimiento[];\r\n    criterioOrden: string;\r\n    tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortMovimientosDatesContextType {\r\n  SortMovimientosDates: SortMovimientosDates | null;\r\n  setSortMovimientosDates: (\r\n    SortMovimientosDates: SortMovimientosDates | null\r\n  ) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortMovimientosDatesContext = createContext<\r\n  SortMovimientosDatesContextType | undefined\r\n>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortMovimientosDatesProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [SortMovimientosDates, setSortMovimientosDates] =\r\n    useState<SortMovimientosDates | null>(null);\r\n\r\n  return (\r\n    <SortMovimientosDatesContext.Provider\r\n      value={{\r\n        SortMovimientosDates: SortMovimientosDates,\r\n        setSortMovimientosDates: setSortMovimientosDates,\r\n      }}\r\n    >\r\n      {children}\r\n    </SortMovimientosDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortMovimientosDates = () => {\r\n  const context = React.useContext(SortMovimientosDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      \"useModalMovimientosDates debe usarse dentro de un ModalMovimientosDates\"\r\n    );\r\n  }\r\n  return context;\r\n};\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface ModalProveedoresDates {\r\n    id_proveedor: string;\r\n    isAddProveedor: boolean;\r\n    isModificarProveedor: boolean;\r\n    fileEditable: boolean;\r\n    isAddProductoShowProveedoresTiendas: boolean;\r\n    isDetallesProveedores: boolean;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface ModalProductsDatesContextType {\r\n  modalProveedoresDates: ModalProveedoresDates | null;\r\n  setModalProveedoresDates: (modalProveedoresDates: ModalProveedoresDates | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst ModalProveedoresDatesContext = createContext<ModalProductsDatesContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const ModalProveedoresDatesProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [modalProveedoresDates, setModalProveedoresDates] = useState<ModalProveedoresDates | null>(null);\r\n\r\n  return (\r\n    <ModalProveedoresDatesContext.Provider value={{ modalProveedoresDates: modalProveedoresDates, setModalProveedoresDates: setModalProveedoresDates }}>\r\n      {children}\r\n    </ModalProveedoresDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useModalProveedoresDates = () => {\r\n  const context = React.useContext(ModalProveedoresDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useModalProveedoresDates debe usarse dentro de un ModalProveedoresDates');\r\n  }\r\n  return context;\r\n};","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Entrada } from '../components/MyDateTableEntradas';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortEntradas {\r\n  items: Entrada[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortEntradasContextType {\r\n  sortEntradas: SortEntradas | null;\r\n  setSortEntradas: (sortEntradas: SortEntradas | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortEntradasContext = createContext<SortEntradasContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortEntradasProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortEntradas, setSortEntradas] = useState<SortEntradas | null>(null);\r\n\r\n  return (\r\n    <SortEntradasContext.Provider value={{ sortEntradas: sortEntradas, setSortEntradas: setSortEntradas }}>\r\n      {children}\r\n    </SortEntradasContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortEntradas = () => {\r\n  const context = React.useContext(SortEntradasContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortEntradas debe usarse dentro de un SortEntradas');\r\n  }\r\n  return context;\r\n};","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Producto } from '../components/MyDateTableProductos';\r\nimport { Asset } from 'react-native-image-picker';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface ImagenesDelete {\r\n  imagenes: Asset[];\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface ImagenesDeleteContextType {\r\n  imagenesDelete: ImagenesDelete | null;\r\n  setImagenesDelete: (imagenesDelete: ImagenesDelete | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst ImagenesDeleteContext = createContext<ImagenesDeleteContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const ImagenesDeleteProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [imagenesDelete, setImagenesDelete] = useState<ImagenesDelete | null>(null);\r\n\r\n  return (\r\n    <ImagenesDeleteContext.Provider value={{ imagenesDelete: imagenesDelete, setImagenesDelete: setImagenesDelete }}>\r\n      {children}\r\n    </ImagenesDeleteContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useImagenesDelete = () => {\r\n  const context = React.useContext(ImagenesDeleteContext);\r\n  if (context === undefined) {\r\n    throw new Error('useImagenesDelete debe usarse dentro de un ImagenesDelete');\r\n  }\r\n  return context;\r\n};","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { Proveedor } from \"../components/MyDateTableProveedores\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n\r\n// Obtener todos los proveedores\r\nexport const getAllProveedores = async (token: String) => {\r\n    try {\r\n      const response = await axios.get(`${cerverHost}/Proveedor`, {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      console.log(\"Error al obtener datos de los proveedores: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n// Obtener proveedor por el id\r\nexport const getProveedorById = async (token: String, id_proveedor: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Proveedor/${id_proveedor}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al obtener datos de el proveedor: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar un nuevo proveedor\r\nexport const addProveedor = async (token: String, nombre: string, email: string, telefono:string, direccion:string, nota: string, Cif:string, detalle_bacario:string) => {\r\n  try {\r\n    const response = await axios.post(`${cerverHost}/Proveedor/createProveedor`, {\r\n      nombre: nombre,\r\n      email: email || \"\",\r\n      direccion: direccion || \"\",\r\n      nota: nota || \"\",\r\n      telefono: telefono || \"\",\r\n      Cif: Cif || \"\",\r\n      detalle_bacario: detalle_bacario || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al incertar un nuevo proveedor: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Actualizar proveedor\r\nexport const actualizarProveedor = async (token: String, id_proveedor:string, nombre: string, email: string, telefono:string, direccion:string, nota: string, Cif:string, detalle_bacario:string) => {\r\n  try {\r\n    const response = await axios.put(`${cerverHost}/Proveedor/updateProveedor/${id_proveedor}`, {\r\n      nombre: nombre,\r\n      email: email || \"\",\r\n      direccion: direccion || \"\",\r\n      nota: nota || \"\",\r\n      telefono: telefono || \"\",\r\n      Cif: Cif || \"\",\r\n      detalle_bancario: detalle_bacario || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al actualizar el proveedor: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar proveedor\r\nexport const deleteProveedor = async (token: String, id_proveedor:string) => {\r\n  try {\r\n    const response = await axios.delete(`${cerverHost}/Proveedor/deleteProveedor/${id_proveedor}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al eliminar el proveedor: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar proveedores\r\nexport const filtrarProveedor = async (token: String, nombre: string, telefono:string, email: string, detalle_bacario:string) => {\r\n  try {\r\n    const response = await axios.post(`${cerverHost}/Proveedor/api/filtrar`, {\r\n      nombre: nombre,\r\n      email: email || \"\",\r\n      telefono: telefono || \"\",\r\n      detalle_bacario: detalle_bacario || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrar los proveedores: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar proveedores\r\nexport const ordenarProveedor = async (token: String, items: Proveedor[], criterio:string, ascendente: boolean) => {\r\n  try {\r\n    const response = await axios.post(`${cerverHost}/Proveedor/api/filtrar`, {\r\n      items: items,\r\n      criterio: criterio,\r\n      ascendente: ascendente\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar los proveedores: \", error);\r\n    return false;\r\n  }\r\n};","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\n\r\nexport interface Proveedor {\r\n  id_Proveedor: string;\r\n  nombre: string;\r\n  correo: string;\r\n  direccion?: string;\r\n  telefono: string;\r\n  nota?: string;\r\n  cif?: string;\r\n  detalle_bancario: string;\r\n}\r\n\r\nexport interface ProveedorPiker {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Proveedor[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableProveedorModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableProveedores: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n  const { sortProductos, setSortProductos } = useSortProductos();\r\n  const { usuario, setUsuario } = useUsuario();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Proveedor[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_producto: string) => {\r\n    setModalProveedoresDates({\r\n      id_proveedor: id_producto,\r\n      isAddProveedor: true,\r\n      fileEditable: false,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: true,\r\n      isDetallesProveedores: true,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  const resultadoCondicionalOpcionesDeCelda = (item: Proveedor) => {\r\n    if (usuario?.id_rol) {\r\n      return (usuario.id_rol == \"1\" && isPermisoOpcionesDeCelda) ||\r\n        (usuario.id_rol == \"2\" && isPermisoOpcionesDeCelda)\r\n        ? true\r\n        : item.telefono && isPermisoOpcionesDeCelda\r\n        ? true\r\n        : false;\r\n    }\r\n  };\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario,\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario,\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idProductoOption, setIdProductoOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdProductoOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalProveedoresDates({\r\n        id_proveedor: idProductoOption,\r\n        isAddProveedor: true,\r\n        fileEditable: true,\r\n        isModificarProveedor: true,\r\n        isAddProductoShowProveedoresTiendas: true,\r\n        isDetallesProveedores: true,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Proveedor !== idProductoOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idProductoOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Proveedor}\r\n                onPress={() => detailsModalView(item.id_Proveedor)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.detalle_bancario}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Teléfono */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.telefono}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idProductoOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Proveedor}\r\n                onPress={() => detailsModalView(item.id_Proveedor)}\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.detalle_bancario}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Teléfono */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    flex: 1.5,\r\n                    justifyContent: \"center\", // Centrar horizontalmente\r\n                    alignItems: \"center\", // Centrar verticalmente\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text>{item.telefono}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 16,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport interface EntradaShowModal {\r\n  id_entrada: string;\r\n  nombreProducto: string;\r\n  cantidad: string;\r\n  costo: string;\r\n  fecha: string;\r\n}\r\n\r\ninterface Props {\r\n  items: EntradaShowModal[];\r\n  columns: string[];\r\n}\r\n\r\nexport const MyDateTableModalShowDatesEntradas: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(3);\r\n  const [displayedItems, setDisplayedItems] = React.useState<EntradaShowModal[]>(\r\n    []\r\n  ); // Estado para los elementos mostrados\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text style={styles.headerTextDesktop}>{column}</Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerDesktop}>\r\n        <DataTable style={{ width: \"100%\", height: \"auto\" }}>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.filter((item)=>parseInt(item.cantidad) !== 0).map((item) => (\r\n            <DataTable.Row\r\n              key={item.id_entrada}\r\n              onPress={() => {}}\r\n            >\r\n              <DataTable.Cell style={styles.handerRow}>\r\n                <Text\r\n                  style={{ flexWrap: \"wrap\", width: \"100%\", textAlign: \"left\" }}\r\n                  numberOfLines={2} // Limita a 2 líneas\r\n                >\r\n                  {item.nombreProducto}\r\n                </Text>\r\n              </DataTable.Cell>\r\n              <DataTable.Cell numeric style={styles.handerRow}>\r\n                {item.cantidad}\r\n              </DataTable.Cell>\r\n              <DataTable.Cell numeric style={styles.handerRow}>\r\n                {item.costo}\r\n              </DataTable.Cell>\r\n              <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n            </DataTable.Row>\r\n          ))}\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    justifyContent:\"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport {\r\n  actualizarProveedor,\r\n  addProveedor,\r\n  deleteProveedor,\r\n  filtrarProveedor,\r\n  getAllProveedores,\r\n  getProveedorById,\r\n} from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport {\r\n  PanGestureHandler,\r\n  PanGestureHandlerGestureEvent,\r\n} from \"react-native-gesture-handler\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport {\r\n  MyDateTableModalShowDateProveedores,\r\n  ProveedoresShowModal,\r\n} from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  MyDateTableProveedores,\r\n  Proveedor,\r\n} from \"../components/MyDateTableProveedores\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\nimport {\r\n  EntradaShowModal,\r\n  MyDateTableModalShowDatesEntradas,\r\n} from \"../components/MyDateTableModalShowDatesEntradas\";\r\nimport { getAllEntradasByProveedorId } from \"../services/EntradaServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\n\r\nexport default function ProveedoresView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar proovedores y ver datos\r\n  const [idProveedorDetails, setIdProveedorDetails] = useState(\"\");\r\n  const [nombreProveedorDetails, setNombreProveedorDetails] = useState(\"\");\r\n  const [correoEmailProveedorDetails, setCorreoEmailProveedorDetails] =\r\n    useState(\"\");\r\n  const [direccionProveedorDetails, setDireccionProveedorDetails] =\r\n    useState(\"\");\r\n  const [telefonoProveedorDetails, setTelefonoProveedorDetails] = useState(\"\");\r\n  const [notaProveedorDetails, setNotaProveedorDetails] = useState(\"\");\r\n  const [cfiProveedorDetails, setCfiProveedorDetails] = useState(\"\");\r\n  const [\r\n    detallesBancariosProveedorDetils,\r\n    setDetallesBancariosProveedorDetils,\r\n  ] = useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [isModalChekEliminarVisible, setIsModalChekEliminarVisible] =\r\n    useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] = useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarProveedor, setIsPermisoAgregarProveedor] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarProveedor, setIsPermisoEliminarProveedor] =\r\n    React.useState(false);\r\n  const [isPermisoModificarProveedor, setIsPermisoModificarProveedor] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarProveedor = await isPermiso(\r\n        usuario.token,\r\n        \"35\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultEliminarProveedor = await isPermiso(\r\n        usuario.token,\r\n        \"37\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarProveedor = await isPermiso(\r\n        usuario.token,\r\n        \"36\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      setIsPermisoAgregarProveedor(resultAgregarProveedor);\r\n      setIsPermisoEliminarProveedor(resultEliminarProveedor);\r\n      setIsPermisoModificarProveedor(resultModificarProveedor);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [entradasByProveedor, setEntradasByProveedor] = useState<\r\n    EntradaShowModal[]\r\n  >([]);\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Proveedor[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItems, setDropDownItems] = useState<TiendaPiker[]>([]);\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProveedorSearch, setNombreProveedorSearch] = useState(\"\");\r\n  const [correoEmyleSearch, setCorreoEmyleSearch] = useState(\"\");\r\n  const [telefonoSearch, setTelefonoSearch] = useState(\"\");\r\n  const [detallesBancariosSearch, setDetallesBancariosSearch] = useState(\"\");\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getDatesTiendaPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItems([{ label: \"Tiendas\", value: \"\" }, ...tiendasMapeados]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setNombreProveedorDetails(\"\");\r\n    setCfiProveedorDetails(\"\");\r\n    setNotaProveedorDetails(\"\");\r\n    setTelefonoProveedorDetails(\"\");\r\n    setDireccionProveedorDetails(\"\");\r\n    setCorreoEmailProveedorDetails(\"\");\r\n    setDetallesBancariosProveedorDetils(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: false,\r\n      isModificarProveedor: false,\r\n      fileEditable: true,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n  };\r\n  const cargarDetailsOfProveedores = async () => {\r\n    if (usuario?.token && modalProveedoresDates?.id_proveedor) {\r\n      const result = await getProveedorById(\r\n        usuario.token,\r\n        modalProveedoresDates.id_proveedor\r\n      );\r\n      if (result) {\r\n        setIdProveedorDetails(modalProveedoresDates.id_proveedor);\r\n        setNombreProveedorDetails(result.nombre);\r\n        setCorreoEmailProveedorDetails(result.email || \"\");\r\n        setDireccionProveedorDetails(result.direccion || \"\");\r\n        setTelefonoProveedorDetails(result.telefono || \"\");\r\n        setNotaProveedorDetails(result.nota || \"\");\r\n        setCfiProveedorDetails(result.Cfi || \"\");\r\n        setDetallesBancariosProveedorDetils(result.detalle_bancario || \"\");\r\n\r\n        const resultEntradasByProveedor = await getAllEntradasByProveedorId(\r\n          usuario.token,\r\n          modalProveedoresDates.id_proveedor\r\n        );\r\n        if (resultEntradasByProveedor) {\r\n          const entradasMapeados: EntradaShowModal[] = await Promise.all(\r\n            resultEntradasByProveedor.map(async (element: any) => ({\r\n              id_entrada: element.id_entrada,\r\n              nombreProducto: element.producto.nombre,\r\n              cantidad: element.cantidad,\r\n              costo: element.costo,\r\n              fecha: element.fecha,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setEntradasByProveedor(entradasMapeados);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<Proveedor[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarProveedor(\r\n          usuario.token,\r\n          nombreProveedorSearch,\r\n          telefonoSearch,\r\n          correoEmyleSearch,\r\n          detallesBancariosSearch\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Proveedor[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Proveedor: element.id_proveedor,\r\n              nombre: element.nombre,\r\n              correo: element.email || \"\",\r\n              direccion: element.direccion || \"\",\r\n              telefono: element.telefono || \"\",\r\n              nota: element.nota || \"\",\r\n              cif: element.Cif || \"\",\r\n              detalle_bancario: element.detalle_bancario || \"\",\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    filtrarYOrdenarProovedores();\r\n  }, [selectedOptionTipoOrden]);\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfProveedores();\r\n  }, [modalProveedoresDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosProveedores = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllProveedores(usuario.token);\r\n\r\n        if (result && Array.isArray(result.data)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: Proveedor[] = await Promise.all(\r\n            result.data.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Proveedor: element.id_proveedor, // Mapea 'id_proovedor' a 'id_Proveedor'\r\n                nombre: element.nombre, // Mapea 'nombre' directamente\r\n                correo: element.email || \"\", // Asume que hay un campo 'correo' o usa un valor por defecto\r\n                detalle_bancario: element.detalle_bancario || \"\", // Asume que hay un campo 'detalle_bancario' o usa un valor por defecto\r\n                telefono: element.telefono || \"\", // Mapea un teléfono o usa un valor por defecto\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron proveedoress.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener los proveedores o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de los proveedores\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de los proovedores\"\r\n      );\r\n    }\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarProovedores();\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosProveedores();\r\n        getDatesTiendaPiker();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarProovedores = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let productosFiltrados: Proveedor[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n        /*\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortProductos?.criterioOrden && selectedOptionTipoOrden) {\r\n          productosFiltrados = await ordenarProducts(\r\n            usuario.token,\r\n            productosFiltrados,\r\n            sortProductos.criterioOrden,\r\n            selectedOptionTipoOrden === \"option1\" ? true : false\r\n          );\r\n        }\r\n*/\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(productosFiltrados);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setNombreProveedorDetails(\"\");\r\n    setCorreoEmailProveedorDetails(\"\");\r\n    setDireccionProveedorDetails(\"\");\r\n    setTelefonoProveedorDetails(\"\");\r\n    setNotaProveedorDetails(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: true,\r\n      fileEditable: true,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProveedorSearch(\"\");\r\n    setCorreoEmyleSearch(\"\");\r\n    setDetallesBancariosSearch(\"\");\r\n    setTelefonoSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewProveedor = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Agregando proveedor. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL AGREGAR PROVEEDOR. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (nombreProveedorDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombre del proveedor no puede ser vacío\";\r\n        flag = false;\r\n      }\r\n\r\n      if (flag) {\r\n        await addProveedor(\r\n          usuario.token,\r\n          nombreProveedorDetails,\r\n          correoEmailProveedorDetails,\r\n          telefonoProveedorDetails,\r\n          direccionProveedorDetails,\r\n          notaProveedorDetails,\r\n          cfiProveedorDetails,\r\n          detallesBancariosProveedorDetils\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó al sistema al proveedor ${nombreProveedorDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          3\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(\r\n          `El Proveedor \"${nombreProveedorDetails}\" fue insertado con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreProveedorDetails(\"\");\r\n        setTelefonoProveedorDetails(\"\");\r\n        setCorreoEmailProveedorDetails(\"\");\r\n        setDireccionProveedorDetails(\"\");\r\n        setNotaProveedorDetails(\"\");\r\n        setCfiProveedorDetails(\"\");\r\n        setDetallesBancariosProveedorDetils(\"\");\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarProveedor = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Modificando proveedor. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR PROVEEDOR. Compruebe los siguientes campos:\\n\";\r\n\r\n      if (nombreProveedorDetails.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-El nombre del proveedor no puede ser vacío\";\r\n      }\r\n\r\n      if (flag) {\r\n        await actualizarProveedor(\r\n          usuario.token,\r\n          idProveedorDetails,\r\n          nombreProveedorDetails,\r\n          correoEmailProveedorDetails,\r\n          telefonoProveedorDetails,\r\n          direccionProveedorDetails,\r\n          notaProveedorDetails,\r\n          cfiProveedorDetails,\r\n          detallesBancariosProveedorDetils\r\n        );\r\n        // Agregar Acción de usuario modificar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó al proveedor ${nombreProveedorDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          3\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(\r\n          `El Proveedor \"${nombreProveedorDetails}\" se modificó con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar proveedor\r\n  const eliminarProveedor = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Eliminando proveedor. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL TRATAR DE ELIMINAR EL PROVEEDOR. Motivos:\\n\";\r\n\r\n      if (flag) {\r\n        const resulDeletProveedor = await deleteProveedor(\r\n          usuario.token,\r\n          idProveedorDetails\r\n        );\r\n        if (resulDeletProveedor) {\r\n          // Agregar Acción de usuario agregar proveedor\r\n\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó al proveedor ${nombreProveedorDetails}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            3\r\n          );\r\n\r\n          setIsBotonModalMesajeVisible(true)\r\n          setModalMensaje(\r\n            `El Proveedor \"${nombreProveedorDetails}\" se eliminó con éxito`\r\n          );\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(true);\r\n        } else {\r\n          setIsBotonModalMesajeVisible(true)\r\n          validarCampos +=\r\n            \"-El proveedor ya ha echo operaciones en el sistema.\\n\";\r\n          setModalMensaje(validarCampos);\r\n          setModalMensajeView(true);\r\n        }\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n  const columnasMyDateTableEntradaModal = [\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Costo\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"telefono\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarProveedor && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Proveedor</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableProveedores\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Proveedor:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del proveedor\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={nombreProveedorSearch}\r\n                    onChangeText={setNombreProveedorSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Correo del Proveedor:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Correo del Proveedor\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={correoEmyleSearch}\r\n                    onChangeText={setCorreoEmyleSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Detalles Bancarios:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Detalles Bancarios\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={detallesBancariosSearch}\r\n                    onChangeText={setDetallesBancariosSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Número de Teléfono:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Número de Teléfono\"\r\n                    value={telefonoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setTelefonoSearch}\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarProovedores();\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Proveedor\"\r\n                  : \"Agregar Proveedor\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  value={nombreProveedorDetails}\r\n                  onChangeText={setNombreProveedorDetails}\r\n                  placeholder=\"Nombre del proveedor\"\r\n                />\r\n\r\n                {/* Dirección del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  value={direccionProveedorDetails}\r\n                  onChangeText={setDireccionProveedorDetails}\r\n                  placeholder=\"Dirección del Proveedor\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y CIF */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoProveedorDetails}\r\n                      onChangeText={setTelefonoProveedorDetails}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CIF */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Código de Identificación Fiscal (CIF)\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={cfiProveedorDetails}\r\n                      onChangeText={setCfiProveedorDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Código de Identificación Fiscal\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailProveedorDetails}\r\n                      onChangeText={setCorreoEmailProveedorDetails}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosProveedorDetils}\r\n                      onChangeText={setDetallesBancariosProveedorDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {modalProveedoresDates?.isModificarProveedor\r\n                  ? false\r\n                  : (modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          alignItems: \"center\",\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          flexDirection: \"row\",\r\n                          height: 350,\r\n                          width: \"90%\",\r\n                        }}\r\n                      >\r\n                        <MyDateTableModalShowDatesEntradas\r\n                          columns={columnasMyDateTableEntradaModal}\r\n                          items={entradasByProveedor}\r\n                        />\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Nota */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Nota\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  numberOfLines={5}\r\n                  value={notaProveedorDetails}\r\n                  onChangeText={setNotaProveedorDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos proveedor ${nombreProveedorDetails}?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al proveedor ${nombreProveedorDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarProveedor &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewProveedor()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarProveedor()\r\n                      : modificarProveedor()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (<TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Proveedores\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>)}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {(isPermisoAgregarProveedor ||\r\n            isPermisoModificarProveedor ||\r\n            isPermisoEliminarProveedor) && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Proveedor\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Proveedor:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del proveedor\"\r\n              value={nombreProveedorSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProveedorSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Correo del Proveedor:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Correo del Proveedor\"\r\n              value={correoEmyleSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setCorreoEmyleSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Detalles Bancarios:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Detalles Bancarios\"\r\n              value={detallesBancariosSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setDetallesBancariosSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Número de Teléfono:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Número de Teléfono\"\r\n              value={telefonoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setTelefonoSearch}\r\n            />\r\n\r\n            <View\r\n              style={{ width: \"100%\", flexDirection: \"row\", marginTop: \"5%\" }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarProovedores()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableProveedores\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Proveedor\"\r\n                  : \"Agregar Proveedor\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  value={nombreProveedorDetails}\r\n                  onChangeText={setNombreProveedorDetails}\r\n                  placeholder=\"Nombre del proveedor\"\r\n                />\r\n\r\n                {/* Dirección del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  value={direccionProveedorDetails}\r\n                  onChangeText={setDireccionProveedorDetails}\r\n                  placeholder=\"Dirección del Proveedor\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y CIF */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoProveedorDetails}\r\n                      onChangeText={setTelefonoProveedorDetails}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CIF */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Código de Identificación Fiscal (CIF)\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={cfiProveedorDetails}\r\n                      onChangeText={setCfiProveedorDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Código de Identificación Fiscal\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailProveedorDetails}\r\n                      onChangeText={setCorreoEmailProveedorDetails}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosProveedorDetils}\r\n                      onChangeText={setDetallesBancariosProveedorDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {modalProveedoresDates?.isModificarProveedor\r\n                  ? false\r\n                  : (modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          flex: 1,\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          height: 500,\r\n                          width: \"90%\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <MyDateTableModalShowDatesEntradas\r\n                          columns={columnasMyDateTableEntradaModal}\r\n                          items={entradasByProveedor}\r\n                        />\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Nota */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Nota\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  numberOfLines={5}\r\n                  value={notaProveedorDetails}\r\n                  onChangeText={setNotaProveedorDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos proveedor ${nombreProveedorDetails}?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al proveedor ${nombreProveedorDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarProveedor &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewProveedor()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarProveedor()\r\n                      : modificarProveedor()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (<TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Proveedores\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>)}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useModalProductsDates } from \"../contexts/AuxiliarContextFromModalProductsDates\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n  isProductoInTienda,\r\n} from \"../services/TiendaServices\";\r\nimport { deleteProducto, moverProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { TiendaPiker } from \"./MyDateTableTiendas\";\r\nimport CustomDropDownPikerFromMover from \"./CustomDropDownPikerFromMover\";\r\nimport { addNewMovimiento } from \"../services/MovimientosServices\";\r\nimport { Producto } from \"./MyDateTableProductos\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\ninterface Props {\r\n  items: Producto[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableProveedorModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableEnMyTienda: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalProductsDates, setModalProductsDates } = useModalProductsDates();\r\n  const { sortProductos, setSortProductos } = useSortProductos();\r\n  const { usuario, setUsuario } = useUsuario();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Producto[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [isModalMesajeMoverVisible, setModalMesajeMoverVisible] =\r\n    React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendaByProductoSelected, setTiendaByProductoSelected] =\r\n    React.useState<string | null>(\"\");\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaPiker[]\r\n  >([\r\n    { value: \"1\", label: \"Tienda 1\" },\r\n    { value: \"2\", label: \"Tienda 2\" },\r\n    { value: \"3\", label: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_producto: string) => {\r\n    setModalProductsDates({\r\n      id_producto: id_producto,\r\n      isAddProducto: true,\r\n      fileEditable: false,\r\n      isModificarProducto: false,\r\n      isAddProductoShowProveedoresTiendas: true,\r\n      isAddProductoShowProveedores: true,\r\n    });\r\n  };\r\n\r\n  // Controlar el doble clic del boton\r\n    const [isButtonDisabled, setIsButtonDisabled] = React.useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [tiendaMoverDesde, setTiendaMoverDesde] = React.useState(\"\");\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  const [nombreProductoOption, setNombreProductoOption] = React.useState(\"\");\r\n  const [tiendaNombreEspecificaDesde, setTiendaNombreEspecificoDesde] =\r\n    React.useState(\"\");\r\n  const [tiendaNombreEspecificaHasta, setTiendaNombreEspecificoHasta] =\r\n    React.useState(\"\");\r\n  const [tiendaMoverHasta, setTiendaMoverHasta] = React.useState(\"\");\r\n  const [tiendasByProductoDesde, setTiendasByProductoDesde] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [tiendasByProductoHasta, setTiendasByProductoHasta] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const moverProductoFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    if (usuario?.token) {\r\n      await moverProducto(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto\r\n      );\r\n      const currentDate = new Date();\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n      await addNewMovimiento(\r\n        usuario.token,\r\n        `${month}-${day}-${year}`,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto,\r\n        idProductoOption,\r\n        usuario.id_usuario\r\n      );\r\n\r\n      setModalMensaje(\r\n        `Se movieron ${cantidadMoverProducto} de ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}`\r\n      );\r\n      setModalMesajeMoverVisible(false);\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n\r\n  const moverProdcutoFunctionValidarCampos = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    let flag: boolean = true;\r\n    let validarCampos: string = \"Error. Comprueve los siguientes parámetros:\\n\";\r\n    let cantidadDelProductoEnLaTiendaDesde: number = 0;\r\n    // Obtener cantidad del producto en la tienda especifica desde dodne se quiere mover\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverDesde\r\n      );\r\n      if (result.encontrado) {\r\n        cantidadDelProductoEnLaTiendaDesde = parseInt(result.cantidad);\r\n      }\r\n    }\r\n    if (tiendaMoverDesde === tiendaMoverHasta) {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La tienda origen no puede ser igual a la tienda destino.\\n\";\r\n    }\r\n    if (cantidadMoverProducto === \"\") {\r\n      flag = false;\r\n      validarCampos += \"-La cantidad a mover no puede ser vacio.\\n\";\r\n    } else if (\r\n      parseInt(cantidadMoverProducto) > cantidadDelProductoEnLaTiendaDesde\r\n    ) {\r\n      // Comprobar que la cantidad que se desea mover no es mayor que la cantidad que existe en la tienda\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La cantidad a mover es mayor que la cantidad que existe en la tienda.\\n\";\r\n    }\r\n    if (isPermisoOpcionesDeCeldaMoverGeneral && tiendaMoverDesde === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija la tienda desde la que decea hacer el movimiento.\\n\";\r\n    }\r\n    if (tiendaMoverHasta === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija una tienda a la que desea hacer el movimiento.\\n\";\r\n    }\r\n\r\n    if (flag) {\r\n      const tiendaEspecificaHasta = tiendasByProductoHasta.find(\r\n        (tienda) => tienda.value === tiendaMoverHasta\r\n      );\r\n      setTiendaNombreEspecificoHasta(String(tiendaEspecificaHasta?.label));\r\n      const tiendaEspecificaDesde = tiendasByProductoDesde.find(\r\n        (tienda) => tienda.value === tiendaMoverDesde\r\n      );\r\n      setTiendaNombreEspecificoDesde(String(tiendaEspecificaDesde?.label));\r\n      setModalMoverVisible(false);\r\n      setModalMesajeMoverVisible(true);\r\n    } else {\r\n      setModalMensaje(validarCampos);\r\n      setModalMoverVisible(false);\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n\r\n  // Cargar datos de las tiendas para mover un producto\r\n  const cargarDatosTiendaParaMover = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n      const resultTiendas = await getAllTiendasByProduct(\r\n        usuario.token,\r\n        idProductoOption\r\n      );\r\n\r\n      if (\r\n        result &&\r\n        Array.isArray(result.data) &&\r\n        resultTiendas !== false &&\r\n        Array.isArray(resultTiendas)\r\n      ) {\r\n        const allTiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n        let auxIdTiendas: string[] = [];\r\n        let auxDataTiendasProducto: TiendaPiker[] = [];\r\n        resultTiendas.forEach(async (element) => {\r\n          // Filtrar productos que esten en la tienda pero que no esten en 0\r\n          if (parseInt(element.cantidad) > 0) {\r\n            auxIdTiendas.push(element.id_tienda);\r\n          }\r\n        });\r\n        for (let element of auxIdTiendas) {\r\n          let item: TiendaPiker = { value: \"\", label: \"\" };\r\n          const datosTendaExisteProducto = await getTiendaById(\r\n            usuario.token,\r\n            element\r\n          );\r\n          item.label = datosTendaExisteProducto.nombre;\r\n          item.value = element;\r\n          auxDataTiendasProducto.push(item);\r\n        }\r\n\r\n        // Verificar si el valor existe en auxDataTiendasProducto\r\n        let existeTienda: boolean = false;\r\n\r\n        existeTienda = auxDataTiendasProducto.some((tienda) => {\r\n          tienda.value === usuario.id_tienda;\r\n        });\r\n\r\n        for (let index = 0; index < auxDataTiendasProducto.length; index++) {\r\n          if (auxDataTiendasProducto[index].value === usuario.id_tienda) {\r\n            existeTienda = true;\r\n          }\r\n        }\r\n\r\n        if (existeTienda) {\r\n          // Agregar un valor si es que la tienda del usuario es la desde\r\n          setTiendaMoverDesde(usuario.id_tienda);\r\n        }\r\n        if (!isPermisoOpcionesDeCeldaMoverGeneral) {\r\n          setTiendaMoverDesde(usuario.id_tienda);\r\n        }\r\n\r\n        alert(`Datos cargador: ${auxDataTiendasProducto.length}`);\r\n        setTiendasByProductoDesde(auxDataTiendasProducto);\r\n        setTiendasByProductoHasta(allTiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n\r\n        // Cargar cambio de moneda\r\n        setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Función para comunicarse con el context de Sortroductos para ordenar luego\r\n  const sortProductosAux = (column: string) => {\r\n    let aux = \"\";\r\n    if (column === \"Nombre\") {\r\n      aux = \"option3\";\r\n    } else if (\r\n      column === \"PrecioUSD\" ||\r\n      column === \"PrecioCUP\" ||\r\n      column === \"Precio\"\r\n    ) {\r\n      aux = \"option4\";\r\n    } else if (column === \"Cantidad Total\" || column === \"Cantidad\") {\r\n      aux = \"option5\";\r\n    }\r\n    setSortProductos({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\",\r\n    });\r\n  };\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n            </Text>\r\n            {(column === \"PrecioUSD\" ||\r\n              column === \"Nombre\" ||\r\n              column === \"Precio\" ||\r\n              column === \"PrecioCUP\" ||\r\n              column === \"Cantidad\" ||\r\n              column === \"Cantidad Total\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortProductosAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idProductoOption, setIdProductoOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdProductoOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalProductsDates({\r\n        id_producto: idProductoOption,\r\n        isAddProducto: true,\r\n        fileEditable: true,\r\n        isModificarProducto: true,\r\n        isAddProductoShowProveedoresTiendas: true,\r\n        isAddProductoShowProveedores: true,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      alert(\"Entró a mover\");\r\n      cargarDatosTiendaParaMover();\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Producto !== idProductoOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idProductoOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Producto}\r\n                onPress={() => detailsModalView(item.id_Producto)}\r\n                style={{ justifyContent: \"space-around\" }}\r\n              >\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  {item.sku}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRow}>\r\n                  {item.precioUSD}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRow}>\r\n                  {(parseFloat(item.precioUSD) * cambioMoneda).toFixed(2)}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRow}>\r\n                  <Text>{item.cantidadTotal} </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idProductoOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Producto}\r\n                onPress={() => detailsModalView(item.id_Producto)}\r\n              >\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  {item.sku}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRow}>\r\n                  {item.precioUSD}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRow}>\r\n                  {(parseFloat(item.precioUSD) * cambioMoneda).toFixed(2)}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRow}>\r\n                  <Text>{item.cantidadTotal} </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalVisible}\r\n            animationType=\"fade\"\r\n            onRequestClose={() => toggleModal(\"\")}\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 250,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  Opciones\r\n                </Text>\r\n\r\n                {isPermisoOpcionesDeCeldaModificar && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Modificar\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/edit.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                      Modificar\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {isPermisoOpcionesDeCeldaEliminar && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Eliminar\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/delete.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                  isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Mover\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/mover.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\" }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {/* Botón para cerrar el modal */}\r\n                <TouchableOpacity\r\n                  onPress={() => toggleModal(\"\")}\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/* Modal para el Eliminar*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalEliminarVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 350,\r\n                  height: 200,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  ¿Estás seguro de que deseas eliminar este producto?\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\", // Espacio entre los botones\r\n                    width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => auxDeleteProductoById()}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Sí</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>No</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    setModalEliminarVisible(!isModalEliminarVisible)\r\n                  }\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/* Modal mensaje para el Mover*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMesajeMoverVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 350,\r\n                  height: 200,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {`Estas seguro de que deseas mover una cantidad de ${cantidadMoverProducto} del producto ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}?`}\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\", // Espacio entre los botones\r\n                    width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => moverProductoFunction()}\r\n                    disabled={isButtonDisabled}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Sí</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                    }\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>No</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                  }\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/* Modal para el Mover*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMoverVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {`Mover Producto \"${nombreProductoOption}\" a una Tienda\\ncon una cantidad de ${cantidadMoverProducto} en ${tiendaNombreEspecificaDesde}`}\r\n                </Text>\r\n\r\n                <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                  La cantidad que desea mover\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 50,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                    shadowRadius: 14, // Difuminado\r\n                    width: \"90%\",\r\n                    marginTop: \"2%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18, // Tamaño de letra más grande\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                    fontWeight: \"bold\", // Letra en negritas\r\n                    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Cantidad a mover\"\r\n                  value={cantidadMoverProducto}\r\n                  onChangeText={(text) => {\r\n                    const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                    setCantidadMoverProducto(numericValue);\r\n                  }}\r\n                />\r\n\r\n                <Text style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}>\r\n                  Tiendas para mover los productos\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                  {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                    <CustomDropDownPikerFromMover\r\n                      value={tiendaMoverDesde}\r\n                      items={tiendasByProductoDesde}\r\n                      placeholder=\"Tienda desde donde se quiere mover\"\r\n                      setValue={setTiendaMoverDesde}\r\n                    />\r\n                  )}\r\n                  <CustomDropDownPikerFromMover\r\n                    value={tiendaMoverHasta}\r\n                    items={tiendasByProductoHasta}\r\n                    placeholder=\"Tienda a la que se quiere mover\"\r\n                    setValue={setTiendaMoverHasta}\r\n                  />\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                  disabled={isButtonDisabled}\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Claro,\r\n                    borderRadius: 15,\r\n                    marginTop: 150,\r\n                    width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                    height: 50, // Altura fija para pantallas de escritorio\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 3, height: 4 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport {\r\n  createProductoInTienda,\r\n  expedirExelProductosEnMyTienda,\r\n  filterProductsEnTienda,\r\n  getAllProductos,\r\n  getProductoById,\r\n  getProductoCantidadTotal,\r\n  getRelacionProductoByTienda,\r\n  moverProducto,\r\n  ordenarProducts,\r\n  updateProductoTienda,\r\n} from \"../services/ProductoServices\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getCantidadProductoInTiendaEspecifica,\r\n  getTiendaById,\r\n  isProductoInTienda,\r\n  tienda_Realizarventa,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport {\r\n  launchImageLibrary,\r\n  ImagePickerResponse,\r\n  Asset,\r\n} from \"react-native-image-picker\";\r\nimport {\r\n  PanGestureHandler,\r\n  PanGestureHandlerGestureEvent,\r\n} from \"react-native-gesture-handler\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport {\r\n  MyDateTableModalShowDateProveedores,\r\n  ProveedoresShowModal,\r\n} from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { useModalProductsDates } from \"../contexts/AuxiliarContextFromModalProductsDates\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { crearimagenUnProducto } from \"../services/ImageServices\";\r\nimport { MyDateTableEnMyTienda } from \"../components/MyDataTableEnMyTienda\";\r\nimport CustomDropDownPikerFromMover from \"../components/CustomDropDownPikerFromMover\";\r\nimport { cerverHostImages } from \"../services/cerverHost\";\r\nimport { addNewMovimiento } from \"../services/MovimientosServices\";\r\nimport { Producto, ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport { getAllEntradasByProductoId } from \"../services/EntradaServices\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport { calcularPromedioAcomulado } from \"../functions/CalcularCostoPromedioProducto\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { getAllTipoServicios } from \"../services/TipoServiciosServices\";\r\nimport { getAllClientes } from \"../services/clienteServices\";\r\nimport { addVenta, getVentaByIDOfServicio } from \"../services/ventasServices\";\r\nimport { addServicio, getServicioByID } from \"../services/ServiciosServices\";\r\n\r\nexport default function EnMyTiendaView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortProductos, setSortProductos } = useSortProductos();\r\n  const { modalProductsDates, setModalProductsDates } = useModalProductsDates();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variable auxiliar para la optimización\r\n  const [optimizacionFirstLoadingData, setOptimizacionFirstLoadingData] =\r\n    useState(false);\r\n\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n  // Variables para controlar los campos de los formularios de agregar producto y ver datos\r\n  const [costoPromedio, setCostoPromedio] = useState(\"\");\r\n  const [cantidadProductoDetails, setCantidadProductoDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [nombreProductoDetails, setNombreProductoDetails] = useState(\"\");\r\n  const [precioProductoDetails, setPrecioProductoDetails] = useState(\"\");\r\n  const [precioEmpresaProductoDetails, setPrecioEmpresaProductoDetails] =\r\n    useState(\"\");\r\n  const [skuDetails, setSkuDetails] = useState(\"\");\r\n  const [descripcionProductoDetails, setDescripcionProductoDetails] =\r\n    useState(\"\");\r\n  // Estado para almacenar las imágenes seleccionadas\r\n  const [selectedImages, setSelectedImages] = useState<Asset[]>([]);\r\n\r\n  const [isModalMensajeViewExel, setModalMensajeViewExel] =\r\n    React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [isModalMesajeMoverVisible, setModalMesajeMoverVisible] =\r\n    React.useState(false);\r\n  const [isModalMesajeRestarVisible, setModalMesajeRestarVisible] =\r\n    React.useState(false);\r\n  const [isModalRestarProductos, setModalRestarProductos] =\r\n    React.useState(false);\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] = useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalVenderProductoVisible, setIsModalVenderProductoVisible] =\r\n    React.useState(false);\r\n\r\n  // ********** Variables y metodos para servicio **************\r\n  const [dropdownItemsNombreCliente, setDropDownItemsNombreCliente] = useState<\r\n    ProveedorPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreTipoServicio, setDropDownItemsNombreTipoServicio] =\r\n    useState<ProductoPiker[]>([]);\r\n\r\n  const [isVentaProducto, setIsVentaProducto] = useState(false);\r\n\r\n  const [isPermisoAgregarServicio, setIsPermisoAgregarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarServicio, setIsPermisoEliminarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoModificarServicio, setIsPermisoModificarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoServicioLocal, setIsPermisoServicioLocal] =\r\n    React.useState(false);\r\n  const [isPermisoServicioGeneral, setIsPermisoServicioGeneral] =\r\n    React.useState(false);\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idServicioDetails, setIdServicioDetails] = useState(\"\");\r\n  const [idClienteDetails, setIdClienteDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\r\n    usuario?.id_tienda ?? \"\"\r\n  );\r\n  const [idTipoServicioDetails, setIdTipoServicioDetails] = useState(\"2\");\r\n  const [cantidadProductoServicioDetails, setCantidadProductoServicioDetails] =\r\n    useState(\"1\");\r\n  const [costoPromedioProductoUSDDetails, setCostoPromedioProductoUSDDetails] =\r\n    useState(\"0\");\r\n  const [costoPromedioProductoCUPDetails, setCostoPromedioProductoCUPDetails] =\r\n    useState(\"0\");\r\n  const [precioUSDDetails, setPrecioUSDDetails] = useState(\"\");\r\n  const [precioCUPDetails, setPrecioCUPDetails] = useState(\"\");\r\n  const [notaDetails, setNotaDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n\r\n  // Variable auxiliar para el redondeo de memerio\r\n  const [auxRedondeo, setAuxRedondeo] = useState(\"\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const checkPermisoServicios = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultEliminarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"25\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"24\",\r\n        usuario.id_usuario\r\n      );\r\n      const resulServicioLocal = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      // cargar cambio de moneda\r\n      setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n\r\n      setIsPermisoServicioLocal(resulServicioLocal);\r\n      setIsPermisoServicioGeneral(resultServicioGeneral);\r\n      setIsPermisoAgregarServicio(resultAgregarServicio);\r\n      setIsPermisoEliminarServicio(resultEliminarServicio);\r\n      setIsPermisoModificarServicio(resultModificarServicio);\r\n    }\r\n  };\r\n  const getTipoServicioPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTipoServicios(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const tipoServiciosMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tipo_servicio,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTipoServicio(tipoServiciosMapeados);\r\n        setIdTipoServicioDetails(\"2\");\r\n      }\r\n    }\r\n  };\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Todas las tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n  const getClientesPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllClientes(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const ClientesMapeados: ProductoPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_cliente,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreCliente(ClientesMapeados);\r\n      }\r\n    }\r\n  };\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      let result: any;\r\n\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n      const resulServicioLocal = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      if (resultServicioGeneral) {\r\n        result = await getAllProductos(usuario.token);\r\n        if (result && Array.isArray(result.data)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.data.map(async (element: any) => ({\r\n              label: element.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      } else if (resulServicioLocal) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          usuario.id_tienda\r\n        );\r\n        if (result && Array.isArray(result.data)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.data.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const cargarDetailsOfProductoVenta = async () => {\r\n    if (usuario?.token) {\r\n      const result = await getServicioByID(usuario.token, idProductoDetails);\r\n\r\n      // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 4\r\n      ) {\r\n        const resultventa = await getVentaByIDOfServicio(\r\n          usuario.token,\r\n          idServicioDetails\r\n        );\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(true);\r\n\r\n        // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n        if (resultventa) {\r\n          // Obtener entradas del produto para calcular datos del producto\r\n          const entradas = await getAllEntradasByProductoId(\r\n            usuario?.token,\r\n            resultventa.producto.id_producto\r\n          );\r\n          const cantidadTotalProducto = await getProductoCantidadTotal(\r\n            usuario.token,\r\n            resultventa.producto.id_producto\r\n          );\r\n\r\n          setIdProductoDetails(resultventa.producto.id_producto);\r\n          setCantidadProductoServicioDetails(resultventa.cantidad);\r\n          setIdTiendaDetails(result.tienda.id_tienda);\r\n          setPrecioUSDDetails(resultventa.producto.precio);\r\n          setPrecioCUPDetails(\r\n            String(parseInt(resultventa.producto.precio) * cambioMoneda)\r\n          );\r\n          setCostoPromedioProductoUSDDetails(\r\n            calcularPromedioAcomulado(entradas, cantidadTotalProducto)\r\n          );\r\n        } else {\r\n          // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(true);\r\n\r\n          setIdProductoDetails(\"\");\r\n          setCantidadProductoServicioDetails(\"\");\r\n          setPrecioUSDDetails(\"\");\r\n          setPrecioCUPDetails(\"\");\r\n          setCostoPromedioProductoUSDDetails(\"\");\r\n        }\r\n      } else {\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(false);\r\n        setPrecioUSDDetails(result.precio);\r\n        setPrecioCUPDetails(String(parseInt(result.precio) * cambioMoneda));\r\n        setCostoPromedioProductoUSDDetails(result.costo);\r\n      }\r\n    }\r\n  };\r\n  const addNewServicio = async () => {\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      const auxIsProductoInTienda = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR SERVICIO. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (idClienteDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione un cliente. Si no hay datos del cliente seleccione anonimo\\n\";\r\n      }\r\n      if (idTipoServicioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione el tipo de servicio que está ofreciendo.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (auxIsProductoInTienda) {\r\n        if (\r\n          parseInt(auxIsProductoInTienda.cantidad) <\r\n          parseInt(cantidadProductoServicioDetails)\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que desea vender es mayor que la cantidad que hay en la tienda.\\n\";\r\n        }\r\n      }\r\n      if (costoPromedioProductoUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Digite el costo del servicio.\\n\";\r\n      }\r\n      if (precioUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina el precio cobrado al cliente.\\n\";\r\n      }\r\n      // Validaciones si es una venta\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 4\r\n      ) {\r\n        if (idProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos += \"-Seleccione un producto para vender.\\n\";\r\n        }\r\n        if (cantidadProductoServicioDetails === \"\") {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Defina la cantidad que desea vender del producto.\\n\";\r\n        }\r\n      }\r\n      if (flag) {\r\n        const resultAddServicio = await addServicio(\r\n          usuario.token,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          precioUSDDetails,\r\n          notaDetails,\r\n          idTiendaDetails,\r\n          idTipoServicioDetails,\r\n          idClienteDetails,\r\n          \"Not suport yet\",\r\n          \"not suport yet\"\r\n        );\r\n\r\n        //Agregar venta si es que es necezario\r\n        if (\r\n          parseInt(idTipoServicioDetails) === 2 ||\r\n          parseInt(idTipoServicioDetails) === 4\r\n        ) {\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            resultAddServicio.id_servicio,\r\n            cantidadProductoServicioDetails\r\n          );\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoServicioDetails)}`\r\n          );\r\n\r\n          // Agregar Acción de usuario agregar servicio normal\r\n          const nombreCliente = dropdownItemsNombreCliente.find((element) => {\r\n            return element.value === idClienteDetails;\r\n          });\r\n          const nombreTipoServicio = dropdownItemsNombreTipoServicio.find(\r\n            (element) => {\r\n              return element.value === idTipoServicioDetails;\r\n            }\r\n          );\r\n          const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n            return element.value === idProductoDetails;\r\n          });\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un servicio del tipo de servicio ${nombreTipoServicio?.label} al cliente ${nombreCliente?.label}. Se vendió una cantidad de ${cantidadProductoServicioDetails} del producto ${nombreProducto?.label} a un precio de ${precioUSDDetails} USD`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        } else {\r\n          // Agregar Acción de usuario agregar servicio normal\r\n          const nombreCliente = dropdownItemsNombreCliente.find((element) => {\r\n            return element.value === idClienteDetails;\r\n          });\r\n          const nombreTipoServicio = dropdownItemsNombreTipoServicio.find(\r\n            (element) => {\r\n              return element.value === idTipoServicioDetails;\r\n            }\r\n          );\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un servicio del tipo de servicio ${nombreTipoServicio?.label} a un precio de ${precioUSDDetails} USD al cliente ${nombreCliente?.label}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        }\r\n\r\n        await createProductoInTienda(\r\n          usuario.token,\r\n          idTipoServicioDetails,\r\n          idTiendaDetails\r\n        );\r\n        setModalMensaje(`El servicio se agregó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setPrecioCUPDetails(\"\");\r\n        setCantidadProductoServicioDetails(\"\");\r\n        setCostoPromedioProductoUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setNotaDetails(\"\");\r\n        setDescripcionDetails(\"\");\r\n        setIsModalVenderProductoVisible(false);\r\n        setModalProductsDates({\r\n          id_producto: \"\",\r\n          isAddProducto: false,\r\n          fileEditable: true,\r\n          isModificarProducto: false,\r\n          isAddProductoShowProveedoresTiendas: false,\r\n          isAddProductoShowProveedores: false,\r\n        });\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  const callVenta = async () => {\r\n    if (usuario?.token) {\r\n      setIsDateLoaded(false);\r\n      const currentDate = new Date();\r\n\r\n      // Extraemos el año, mes y día de la fecha actual\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n      setFechaDiaDetails(String(parseInt(day)));\r\n      setFechaMesDetails(String(parseInt(month)));\r\n      setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n      setIsModalVenderProductoVisible(true);\r\n      setIsDateLoaded(true);\r\n    }\r\n  };\r\n  // ********** Variables y metodos para servicio **************\r\n\r\n  // Constante para almacenar variables para mover roducto\r\n  const [nombreTiendaUsuarioActual, setNombreTiendaUsuarioActual] =\r\n    React.useState(\"\");\r\n  const [cantidadTiendaUsuarioActual, setCantidadTiendaUsuarioActual] =\r\n    React.useState(\"\");\r\n  const [tiendaMoverDesde, setTiendaMoverDesde] = React.useState(\"\");\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  const [cantidadRestarProducto, setCantidadRestarProducto] =\r\n    React.useState(\"\");\r\n  const [tiendaNombreEspecificaDesde, setTiendaNombreEspecificoDesde] =\r\n    React.useState(\"\");\r\n  const [tiendaNombreEspecificaHasta, setTiendaNombreEspecificoHasta] =\r\n    React.useState(\"\");\r\n  const [tiendaMoverHasta, setTiendaMoverHasta] = React.useState(\"\");\r\n  const [tiendasByProductoDesde, setTiendasByProductoDesde] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [tiendasByProductoHasta, setTiendasByProductoHasta] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  // Restar productos function\r\n  const restarProductosValidarCampos = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string = `ERROR AL RESTAR PRODUCTOS. Verifique los siguientes parámetros.\\n`;\r\n\r\n      if (\r\n        parseInt(cantidadTiendaUsuarioActual) < parseInt(cantidadRestarProducto)\r\n      ) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-La cantidad a restar es mayor que la cantidad en la tienda.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        setModalRestarProductos(false);\r\n        setModalMesajeRestarVisible(true);\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n        setIsBotonModalMesajeVisible(true)\r\n        setReflechModalMensajeView(false);\r\n      }\r\n    }\r\n  };\r\n  const restarProductosFuction = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Restando producto. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    if (usuario) {\r\n      let cantidadNueva: number =\r\n        parseInt(cantidadTiendaUsuarioActual) -\r\n        parseInt(cantidadRestarProducto);\r\n      await updateProductoTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        selectedValueNombreTienda,\r\n        String(cantidadNueva)\r\n      );\r\n\r\n      // Agregar Acción de usuario mover producto\r\n\r\n      const currentDate = new Date();\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n      let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} restó una cantidad de ${cantidadRestarProducto} de ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual}`;\r\n      await addAccionUsuario(\r\n        usuario.token,\r\n        auxAddAccionUsuarioDescripcion,\r\n        `${year}-${month}-${day}`,\r\n        usuario.id_usuario,\r\n        1\r\n      );\r\n\r\n      setModalMensaje(\r\n        `Se restaron ${cantidadRestarProducto} de la tienda ${nombreTiendaUsuarioActual}`\r\n      );\r\n      setIsBotonModalMesajeVisible(true)\r\n      setModalMensajeView(true);\r\n      setIsBotonModalMesajeVisible(true)\r\n      setReflechModalMensajeView(true);\r\n    }\r\n  };\r\n  // Mover productos\r\n  const moverProductoFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Moviendo producto. Espere por favor\")\r\n    setModalMensajeView(true)\r\n\r\n    if (usuario?.token) {\r\n      await moverProducto(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto\r\n      );\r\n      const currentDate = new Date();\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n      await addNewMovimiento(\r\n        usuario.token,\r\n        `${month}-${day}-${year}`,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto,\r\n        idProductoDetails,\r\n        usuario.id_usuario\r\n      );\r\n\r\n      await createProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        tiendaMoverHasta\r\n      );\r\n\r\n      // Agregar Acción de usuario mover producto\r\n\r\n      let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} movió ${cantidadMoverProducto} de ${nombreProductoDetails} desde la tienda ${tiendaNombreEspecificaDesde} hasta la tienda ${tiendaNombreEspecificaHasta}`;\r\n      await addAccionUsuario(\r\n        usuario.token,\r\n        auxAddAccionUsuarioDescripcion,\r\n        `${year}-${month}-${day}`,\r\n        usuario.id_usuario,\r\n        2\r\n      );\r\n\r\n      setModalMensaje(\r\n        `Se movieron ${cantidadMoverProducto} de ${nombreProductoDetails} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}`\r\n      );\r\n      setIsBotonModalMesajeVisible(true)\r\n      setReflechModalMensajeView(true);\r\n      setModalMesajeMoverVisible(false);\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n\r\n  const moverProdcutoFunctionValidarCampos = async () => {\r\n    let flag: boolean = true;\r\n    let validarCampos: string = \"Error. Compruebe los siguientes parámetros:\\n\";\r\n    let cantidadDelProductoEnLaTiendaDesde: number = 0;\r\n    // Obtener cantidad del producto en la tienda especifica desde dodne se quiere mover\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        tiendaMoverDesde\r\n      );\r\n      if (result.encontrado) {\r\n        cantidadDelProductoEnLaTiendaDesde = parseInt(result.cantidad);\r\n      }\r\n    }\r\n    if (tiendaMoverDesde === tiendaMoverHasta) {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La tienda origen no puede ser igual a la tienda destino.\\n\";\r\n    }\r\n    if (cantidadMoverProducto === \"0\") {\r\n      flag = false;\r\n      validarCampos += \"-La cantidad a mover debe ser mayor que 0.\\n\";\r\n    }\r\n    if (cantidadMoverProducto === \"\") {\r\n      flag = false;\r\n      validarCampos += \"-La cantidad a mover no puede ser vacío.\\n\";\r\n    } else if (\r\n      parseInt(cantidadMoverProducto) > cantidadDelProductoEnLaTiendaDesde\r\n    ) {\r\n      // Comprobar que la cantidad que se desea mover no es mayor que la cantidad que existe en la tienda\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La cantidad a mover es mayor que la cantidad que existe en la tienda.\\n\";\r\n    }\r\n    if (isPermisoMoverGeneral && tiendaMoverDesde === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija la tienda desde la que decea hacer el movimiento.\\n\";\r\n    }\r\n    if (tiendaMoverHasta === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija una tienda a la que desea hacer el movimiento.\\n\";\r\n    }\r\n\r\n    if (flag) {\r\n      const tiendaEspecificaHasta = tiendasByProductoHasta.find(\r\n        (tienda) => tienda.value === tiendaMoverHasta\r\n      );\r\n      setTiendaNombreEspecificoHasta(String(tiendaEspecificaHasta?.label));\r\n      const tiendaEspecificaDesde = tiendasByProductoDesde.find(\r\n        (tienda) => tienda.value === tiendaMoverDesde\r\n      );\r\n      setTiendaNombreEspecificoDesde(String(tiendaEspecificaDesde?.label));\r\n      setModalMoverVisible(false);\r\n      setReflechModalMensajeView(true);\r\n      setModalMesajeMoverVisible(true);\r\n    } else {\r\n      setModalMensaje(validarCampos);\r\n      setModalMensajeView(true);\r\n      setIsBotonModalMesajeVisible(true)\r\n      setReflechModalMensajeView(false);\r\n    }\r\n  };\r\n  // Función para buscar cuando se precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarProductos();\r\n    }\r\n  };\r\n\r\n  // Cargar datos de las tiendas para mover un producto\r\n  const cargarDatosTiendaParaMover = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n      const resultTiendas = await getAllTiendasByProduct(\r\n        usuario.token,\r\n        idProductoDetails\r\n      );\r\n\r\n      if (\r\n        result &&\r\n        Array.isArray(result.data) &&\r\n        resultTiendas !== false &&\r\n        Array.isArray(resultTiendas)\r\n      ) {\r\n        const allTiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n        let auxIdTiendas: string[] = [];\r\n        let auxDataTiendasProducto: TiendaPiker[] = [];\r\n        resultTiendas.forEach(async (element) => {\r\n          // Filtrar productos que esten en la tienda pero que no esten en 0\r\n          if (parseInt(element.cantidad) > 0) {\r\n            auxIdTiendas.push(element.id_tienda);\r\n          }\r\n        });\r\n        for (let element of auxIdTiendas) {\r\n          let item: TiendaPiker = { value: \"\", label: \"\" };\r\n          const datosTendaExisteProducto = await getTiendaById(\r\n            usuario.token,\r\n            element\r\n          );\r\n          item.label = datosTendaExisteProducto.nombre;\r\n          item.value = element;\r\n          auxDataTiendasProducto.push(item);\r\n        }\r\n\r\n        // Verificar si el valor existe en auxDataTiendasProducto\r\n        let existeTienda: boolean = false;\r\n\r\n        existeTienda = auxDataTiendasProducto.some((tienda) => {\r\n          tienda.value === usuario.id_tienda;\r\n        });\r\n\r\n        for (let index = 0; index < auxDataTiendasProducto.length; index++) {\r\n          if (auxDataTiendasProducto[index].value === usuario.id_tienda) {\r\n            existeTienda = true;\r\n          }\r\n        }\r\n\r\n        if (existeTienda) {\r\n          // Agregar un valor si es que la tienda del usuario es la desde\r\n          setTiendaMoverDesde(usuario.id_tienda);\r\n        }\r\n        if (!isPermisoMoverGeneral) {\r\n          setTiendaMoverDesde(usuario.id_tienda);\r\n        }\r\n\r\n        setTiendasByProductoDesde(auxDataTiendasProducto);\r\n        setTiendasByProductoHasta(allTiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const cargarVariablesMover = async () => {\r\n    if (usuario?.token) {\r\n      const resultTienda = await getTiendaById(usuario.token, tiendaMoverDesde);\r\n      const resultCantidadEnTienda = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        tiendaMoverDesde\r\n      );\r\n\r\n      setCantidadTiendaUsuarioActual(resultCantidadEnTienda.cantidad);\r\n      setNombreTiendaUsuarioActual(resultTienda.nombre);\r\n    }\r\n  };\r\n  // Controlar las variables que se muestran en el modal de mover\r\n  useEffect(() => {\r\n    if (optimizacionFirstLoadingData) {\r\n      cargarVariablesMover();\r\n    }\r\n  }, [tiendaMoverDesde]);\r\n\r\n  useEffect(() => {\r\n    if (auxRedondeo === \"PrecioCUP\") {\r\n      setPrecioUSDDetails(parseFloat(precioUSDDetails).toFixed(4));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"PrecioUSD\") {\r\n      setPrecioCUPDetails(parseFloat(precioCUPDetails).toFixed(0));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoCUP\") {\r\n      setCostoPromedioProductoUSDDetails(\r\n        parseFloat(costoPromedioProductoUSDDetails).toFixed(4)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoUSD\") {\r\n      setCostoPromedioProductoCUPDetails(\r\n        parseFloat(costoPromedioProductoCUPDetails).toFixed(0)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    }\r\n    setAuxRedondeo(\"\");\r\n  }, [auxRedondeo]);\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfProductoVenta();\r\n  }, [idTipoServicioDetails]);\r\n  useEffect(() => {\r\n    if (idProductoDetails !== \"\" && usuario?.token) {\r\n      const auxiliarAsyncFuncion = async () => {\r\n        // Obtener entradas del produto para calcular datos del producto\r\n        const entradas = await getAllEntradasByProductoId(\r\n          usuario?.token,\r\n          idProductoDetails\r\n        );\r\n        const resultProdcuto = await getProductoById(\r\n          usuario.token,\r\n          idProductoDetails\r\n        );\r\n        const cantidadTotalProducto = await getProductoCantidadTotal(\r\n          usuario.token,\r\n          idProductoDetails\r\n        );\r\n\r\n        // Cargar el costo promedio del producto seleccionado\r\n        setCostoPromedioProductoUSDDetails(\r\n          calcularPromedioAcomulado(entradas, cantidadTotalProducto)\r\n        );\r\n        // Cargar precio del producto seleccioando en USD y CUP\r\n        setPrecioUSDDetails(resultProdcuto.precio ?? 0);\r\n        setPrecioCUPDetails(\r\n          String(parseFloat(resultProdcuto.precio) * cambioMoneda) ?? 0\r\n        );\r\n      };\r\n      auxiliarAsyncFuncion();\r\n    }\r\n  }, [idProductoDetails]);\r\n\r\n  // Método para exportar a exel\r\n  const exportarExel = async () => {\r\n    setModalMensaje(\r\n      \"Recopilando datos de todos los productos filtrados para el Exel. Espere un momento por favor.\"\r\n    );\r\n    setLoadingOfExel(true);\r\n    setModalMensajeViewExel(true);\r\n    if (usuario?.token) {\r\n      const currentDate = new Date();\r\n\r\n      // Extraemos el año, mes y día de la fecha actual\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n      const result = await expedirExelProductosEnMyTienda(\r\n        usuario.token,\r\n        filterItems\r\n      );\r\n\r\n      if (result) {\r\n        const url = window.URL.createObjectURL(result);\r\n\r\n        // Crea un enlace de descarga\r\n        const a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = `${usuario.nombre_tienda}_${day}-${month}-${year}.xlsx`; // Nombre del archivo descargado\r\n        document.body.appendChild(a);\r\n\r\n        // Haz clic en el enlace para iniciar la descarga\r\n        a.click();\r\n\r\n        // Limpia el enlace creado y la URL Blob\r\n        document.body.removeChild(a);\r\n        window.URL.revokeObjectURL(url);\r\n      } else {\r\n        console.error(\"No se pudo descargar el archivo.\");\r\n      }\r\n    }\r\n    setLoadingOfExel(false);\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoButtonAddProducto, setIsPermisoButtonAddProducto] =\r\n    useState(false);\r\n  const [isPermisoHistorialDeProveedores, setIsPermisoHistorialDeProveedores] =\r\n    useState(false);\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [isPermisoMoverLocal, setIsPermisoMoverLocal] = React.useState(false);\r\n  const [isPermisoMoverGeneral, setIsPermisoMoverGeneral] =\r\n    React.useState(false);\r\n  const [isPermisoRestarProducto, setIsPermisoRestarProducto] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultPermisoButonAddProducto = await isPermiso(\r\n        usuario.token,\r\n        \"6\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoHistorialDeProveedores = await isPermiso(\r\n        usuario.token,\r\n        \"38\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionModificar = await isPermiso(\r\n        usuario.token,\r\n        \"7\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionEliminar = await isPermiso(\r\n        usuario.token,\r\n        \"8\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n        usuario.token,\r\n        \"30\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"31\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoVentaGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n      checkPermisoServicios();\r\n\r\n      // Actualiza el estado con los resultado\r\n      setIsPermisoOpcionesDeCelda(\r\n        resultPermisoButonOptionEliminar ||\r\n          resultPermisoButonOptionModificar ||\r\n          resultPermisoButonOptionMoverLocal ||\r\n          resultPermisoButonOptionMoverGeneral\r\n      );\r\n\r\n      setIsPermisoButtonAddProducto(resultPermisoButonAddProducto);\r\n      setIsPermisoHistorialDeProveedores(resultPermisoHistorialDeProveedores);\r\n      setIsPermisoMoverGeneral(resultPermisoButonOptionMoverGeneral);\r\n      setIsPermisoMoverLocal(resultPermisoButonOptionMoverLocal);\r\n\r\n      // Provicionalmente hasta que se implemente el tipo de servicio de venta\r\n      setIsPermisoRestarProducto(resultPermisoVentaGeneral);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Producto[]>([]);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  const getTiendasByProducto = async (id_producto: string) => {\r\n    if (usuario?.token) {\r\n      const result = await getAllTiendasByProduct(usuario.token, id_producto);\r\n\r\n      // Asegurándonos de que `result` es un array y contiene los datos esperados.\r\n      if (Array.isArray(result)) {\r\n        // Mapeamos los datos de tiendas al formato de TiendaShowModal.\r\n        const tiendas: TiendaShowModal[] = result.map((item) => ({\r\n          id_tienda: item.tienda.id_tienda.toString(),\r\n          nombre: item.tienda.nombre,\r\n          cantidad: item.cantidad.toString(), // Aquí usamos `item.cantidad` directamente.\r\n        }));\r\n\r\n        // Actualizamos el estado con las tiendas formateadas.\r\n        setTiendasByProducto(tiendas);\r\n      }\r\n    }\r\n  };\r\n\r\n  const cargarProveedoresPorProducto = async (id_producto: string) => {\r\n    try {\r\n      if (usuario?.token) {\r\n        // Llamamos a la API para obtener todas las entradas según el producto\r\n        const entradas = await getAllEntradasByProductoId(\r\n          usuario?.token,\r\n          id_producto\r\n        );\r\n        const cantidadTotalProducto = await getProductoCantidadTotal(\r\n          usuario.token,\r\n          id_producto\r\n        );\r\n\r\n        if (entradas) {\r\n          setCostoPromedio(\r\n            calcularPromedioAcomulado(entradas, cantidadTotalProducto)\r\n          );\r\n          // Mapeamos los datos de las entradas para obtener solo la información que necesitamos\r\n          const proveedores = entradas.map((entrada: any) => ({\r\n            id_proveedor: entrada.proveedor.id_proveedor,\r\n            nombre: entrada.proveedor.nombre,\r\n            cantidad: entrada.cantidad,\r\n            costoPorUnidad: entrada.costo,\r\n          }));\r\n\r\n          // Actualizamos el estado con los datos obtenidos\r\n          setProveedorByProducto(proveedores);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error al cargar los proveedores por producto:\", error);\r\n    }\r\n  };\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([]);\r\n\r\n  const [dropdownItems, setDropDownItems] = useState<TiendaPiker[]>([]);\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [sKUSearch, setSKUSearch] = useState(\"\");\r\n  const [cantidadSearch, setCantidadSearch] = useState(\"\");\r\n  const [rangoPrecioDesdeSearch, setRangoPrecioDesdeSearch] = useState(\"\");\r\n  const [rangoPrecioHastaSearch, setRangoPrecioHastaSearch] = useState(\"\");\r\n  const [selectedValueNombreTienda, setSelectedValueNombreTienda] = useState<\r\n    string | null\r\n  >(usuario?.id_tienda);\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingOfExel, setLoadingOfExel] = useState(false);\r\n\r\n  const getDatesTiendaPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItems(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar producto\r\n  const callModalAddProducto = () => {\r\n    setModalProductsDates({\r\n      id_producto: \"\",\r\n      isAddProducto: false,\r\n      isModificarProducto: false,\r\n      fileEditable: true,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isAddProductoShowProveedores: false,\r\n    });\r\n  };\r\n  const cargarDetailsOfProducto = async () => {\r\n    if (usuario?.token && modalProductsDates?.id_producto) {\r\n      const result = await getProductoById(\r\n        usuario.token,\r\n        modalProductsDates.id_producto\r\n      );\r\n\r\n      if (result) {\r\n        // Establecer los detalles del producto\r\n        setIdProductoDetails(result.id_producto);\r\n        setNombreProductoDetails(result.nombre);\r\n        setPrecioProductoDetails(result.precio);\r\n        setPrecioEmpresaProductoDetails(result.precio_empresa);\r\n        setSkuDetails(result.Sku);\r\n        setDescripcionProductoDetails(result.descripcion || \"\"); // Maneja el caso de descripción nula\r\n\r\n        // Cargar historial de proveedores y tiendas en el que existe el producto\r\n        getTiendasByProducto(result.id_producto);\r\n        cargarProveedoresPorProducto(result.id_producto);\r\n\r\n        const resultTienda = await getTiendaById(\r\n          usuario.token,\r\n          tiendaMoverDesde\r\n        );\r\n\r\n        const resultCantidadEnTienda = await isProductoInTienda(\r\n          usuario.token,\r\n          result.id_producto,\r\n          selectedValueNombreTienda\r\n        );\r\n\r\n        const auxiliarNombreTiendaPiker = dropdownItems.find((element) => {\r\n          return (\r\n            parseInt(element.value) ===\r\n            parseInt(selectedValueNombreTienda ?? \"0\")\r\n          );\r\n        });\r\n\r\n        setCantidadTiendaUsuarioActual(resultCantidadEnTienda.cantidad);\r\n        setNombreTiendaUsuarioActual(auxiliarNombreTiendaPiker?.label ?? \"\");\r\n\r\n        // Convertir las imágenes de URL a base64\r\n        const imagesPromises = result.imagenes.map(async (img: any) => {\r\n          let httpImage: string = await img.url;\r\n          let parseHttp = httpImage.substring(1, httpImage.length);\r\n          httpImage = cerverHostImages + parseHttp;\r\n          return { uri: httpImage }; // Almacenar en el formato adecuado\r\n        });\r\n\r\n        // Esperar a que todas las promesas se resuelvan\r\n        const images = await Promise.all(imagesPromises);\r\n        setSelectedImages(images);\r\n      }\r\n    }\r\n  };\r\n\r\n  const convertUrlToBase64 = async (url: string): Promise<string> => {\r\n    console.log(url);\r\n\r\n    const response = await fetch(url);\r\n\r\n    // Verificar si la respuesta es exitosa\r\n    if (!response.ok) {\r\n      throw new Error(\"Error al obtener la imagen\");\r\n    }\r\n\r\n    const blob = await response.blob();\r\n    const reader = new FileReader();\r\n\r\n    return new Promise<string>((resolve, reject) => {\r\n      reader.onloadend = () => {\r\n        resolve(reader.result as string); // Este es el contenido en base64\r\n      };\r\n      reader.onerror = reject;\r\n      reader.readAsDataURL(blob); // Convierte el blob a base64\r\n    });\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<Producto[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filterProductsEnTienda(\r\n          usuario.token,\r\n          nombreProductoSearch,\r\n          sKUSearch,\r\n          rangoPrecioDesdeSearch,\r\n          rangoPrecioHastaSearch,\r\n          cantidadSearch,\r\n          selectedValueNombreTienda\r\n        );\r\n\r\n        if (result) {\r\n          const productosMapeados: Producto[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Producto: element.id_producto, // Mapea 'id_producto' a 'id_Producto'\r\n              nombre: element.producto.nombre, // Mapea 'nombre' directamente\r\n              sku: element.producto.Sku, // Mapea 'Sku' a 'sku'\r\n              cantidadTotal: element.cantidad,\r\n              precioUSD: element.producto.precio.toString(), // Mapea 'precio' a 'precioUSD' y lo convierte a string\r\n              precioEmpresaUSD: element.producto.precio_empresa,\r\n            }))\r\n          );\r\n\r\n          return productosMapeados; // Devuelve los productos mapeados\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los productos:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null; // Devuelve null si no hay token o no se pudieron filtrar productos\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optimizacionFirstLoadingData) {\r\n      cargarDetailsOfProducto();\r\n    }\r\n  }, [modalProductsDates]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        setSelectedValueNombreTienda(usuario?.id_tienda);\r\n        setCambioMoneda(await getValorMonedaUSD(usuario?.token));\r\n        await checkPermiso();\r\n\r\n        // *************\r\n        await getTipoServicioPikerDetails();\r\n        await getClientesPikerDetails();\r\n        await getProductosPikerDetails();\r\n        await getTiendasPikerDetails();\r\n        // ******************\r\n\r\n        getDatesTiendaPiker();\r\n      };\r\n      runEffects();\r\n      setOptimizacionFirstLoadingData(true);\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarProductos = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let productosFiltrados: Producto[] = await auxiliarFunctionFilter();\r\n\r\n        console.log(sortProductos?.criterioOrden && selectedOptionTipoOrden);\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortProductos?.criterioOrden && sortProductos.tipoOrden) {\r\n          productosFiltrados = await ordenarProducts(\r\n            usuario.token,\r\n            productosFiltrados,\r\n            sortProductos.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(productosFiltrados);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los productos:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarProductos();\r\n  }, [sortProductos, selectedOptionTipoOrden]);\r\n\r\n  const auxSetModalProductsDates = () => {\r\n    setNombreProductoDetails(\"\");\r\n    setPrecioProductoDetails(\"\");\r\n    setPrecioEmpresaProductoDetails(\"\");\r\n    setSkuDetails(\"\");\r\n    setDescripcionProductoDetails(\"\");\r\n    setSelectedImages([]);\r\n\r\n    setModalProductsDates({\r\n      id_producto: \"\",\r\n      isAddProducto: true,\r\n      fileEditable: true,\r\n      isModificarProducto: false,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isAddProductoShowProveedores: false,\r\n    });\r\n  };\r\n\r\n  // Método para cargar las imágenes\r\n  const handleImageUpload = () => {\r\n    const options = {\r\n      mediaType: \"photo\" as const, // Solo fotos\r\n      quality: 1, // Calidad máxima de la imagen\r\n      includeBase64: false, // No incluir en base64\r\n      selectionLimit: 100,\r\n      includeExtra: true,\r\n    };\r\n\r\n    // Abre la galería de imágenes\r\n    launchImageLibrary(options, (response: ImagePickerResponse) => {\r\n      if (response.didCancel) {\r\n        console.log(\"El usuario canceló la selección de la imagen.\");\r\n      } else if (response.errorMessage) {\r\n        console.error(\r\n          \"Error al seleccionar la imagen: \",\r\n          response.errorMessage\r\n        );\r\n      } else if (response.assets && response.assets.length > 0) {\r\n        // Agregar la nueva imagen al estado\r\n        setSelectedImages((prevImages) => {\r\n          // Calcula cuántas imágenes se pueden agregar sin exceder el límite de 100\r\n          const availableSpace = 100 - prevImages.length; // Espacio disponible en el estado\r\n          const newImages = response.assets.slice(0, availableSpace); // Selecciona solo las imágenes necesarias para no exceder el límite\r\n          return [...prevImages, ...newImages]; // Agrega las nuevas imágenes al estado\r\n        });\r\n      } else {\r\n        console.log(\"No se seleccionó ninguna imagen.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  // Función para eliminar una imagen por su índice\r\n  const handleRemoveImage = (index: number) => {\r\n    const updatedImages = selectedImages.filter((_, i) => i !== index);\r\n    setSelectedImages(updatedImages);\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProductoSearch(\"\");\r\n    setSKUSearch(\"\");\r\n    setCantidadSearch(\"\");\r\n    setRangoPrecioDesdeSearch(\"\");\r\n    setRangoPrecioHastaSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n    setSelectedValueNombreTienda(usuario?.id_tienda);\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"SKU\",\r\n    \"Nombre\",\r\n    \"PrecioUSD\",\r\n    \"PrecioCUP\",\r\n    \"Cantidad en la Tienda\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\"Nombre\", \"Cantidad\", \"Costo\"];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"SKU\",\r\n    \"Nombre\",\r\n    \"Precio\",\r\n    \"Precio\",\r\n    \"Cantidad\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => exportarExel()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              height: 30,\r\n              width: \"40%\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n              shadowOffset: { width: 0, height: 0 },\r\n              shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n              shadowRadius: 14, // Difuminado\r\n              borderColor: Colors.verde_claro,\r\n              borderWidth: 3,\r\n              padding: 10,\r\n              borderRadius: 10,\r\n              marginHorizontal: \"1%\",\r\n              marginTop: \"1%\",\r\n              backgroundColor: Colors.verde_claro, // Color de fondo del botón\r\n            }}\r\n          >\r\n            <Image\r\n              source={require(\"../images/exel.png\")}\r\n              style={{ width: 20, height: 20, marginRight: \"10%\" }}\r\n            />\r\n            <Text\r\n              style={[\r\n                styles.radioButtonTextDesktop,\r\n                sortProductos?.criterioOrden === \"option1\" &&\r\n                  styles.radioButtonSelected &&\r\n                  styles.radioButtonTextSelected,\r\n              ]}\r\n            >\r\n              Exportar a Excel\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableEnMyTienda\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <Text style={styles.textSearchMovil}>SKU:</Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}>Cantidad:</Text>\r\n                  </View>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"SKU\"\r\n                      value={sKUSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={setSKUSearch}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Cantidad\"\r\n                      value={cantidadSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Rango de Precio USD:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={rangoPrecioDesdeSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={rangoPrecioHastaSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioHastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  {(String(usuario?.id_rol) === \"2\" ||\r\n                    String(usuario?.id_rol) === \"1\") && (\r\n                    <View style={styles.separatorBlanco} />\r\n                  )}\r\n\r\n                  {(String(usuario?.id_rol) === \"2\" ||\r\n                    String(usuario?.id_rol) === \"1\") && (\r\n                    <Text style={styles.textSearchMovil}>\r\n                      Cambiar de Tienda:\r\n                    </Text>\r\n                  )}\r\n                  {(String(usuario?.id_rol) === \"2\" ||\r\n                    String(usuario?.id_rol) === \"1\") && (\r\n                    <View\r\n                      style={{ position: \"relative\", zIndex: 500, height: 100 }}\r\n                    >\r\n                      <CustomDropdown\r\n                        value={selectedValueNombreTienda}\r\n                        placeholder=\"Tiendas\"\r\n                        setValue={setSelectedValueNombreTienda}\r\n                        items={dropdownItems}\r\n                      />\r\n                    </View>\r\n                  )}\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      marginTop: 25,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarProductos();\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProductsDates?.isAddProducto ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProducto}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProducto}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {/*(modalProductsDates?.isModificarProducto ?? false)? \"Modificar Producto\" : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                false */}\r\n                {modalProductsDates?.isModificarProducto ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Producto\"\r\n                  : \"Agregar Producto\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Del Producto\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  value={nombreProductoDetails}\r\n                  onChangeText={setNombreProductoDetails}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  placeholder=\"Nombre del producto\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Precio y Precio de Empresa */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio en USD\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioProductoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio en USD\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Precio de Empresa */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio de empresa en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioEmpresaProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioEmpresaProductoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio de empresa en CUP\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {isPermisoHistorialDeProveedores && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      paddingHorizontal: 10,\r\n                    }}\r\n                  >\r\n                    {/* Campo Precio */}\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo Promedio\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={costoPromedio}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          setCostoPromedio(validNumericValue);\r\n                        }}\r\n                        editable={false}\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n\r\n                    {/*  */}\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    ></View>\r\n                  </View>\r\n                )}\r\n\r\n                {/*Contenedor para los precios en CUP */}\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          width: \"100%\",\r\n                          justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                          alignItems: \"center\",\r\n                          flexDirection: \"row\",\r\n                          paddingHorizontal: 10,\r\n                        }}\r\n                      >\r\n                        {/* Campo Precio en CUP*/}\r\n                        <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                          <Text style={styles.labelTextModalDesktop}>\r\n                            Precio en CUP\r\n                          </Text>\r\n                          <CustomTextImputSearch\r\n                            style={styles.textImputModal}\r\n                            value={(\r\n                              parseFloat(precioProductoDetails) * cambioMoneda\r\n                            ).toFixed(0)}\r\n                            cursorColor={Colors.azul_Oscuro}\r\n                            editable={false}\r\n                            placeholder=\"Precio en CUP\"\r\n                          />\r\n                        </View>\r\n\r\n                        {/* Campo SKU*/}\r\n                        <View\r\n                          style={{\r\n                            width: \"45%\",\r\n                            marginLeft: \"2%\",\r\n                            marginRight: \"2%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalDesktop}>Sku</Text>\r\n                          <CustomTextImputSearch\r\n                            style={styles.textImputModal}\r\n                            value={skuDetails}\r\n                            onChangeText={setSkuDetails}\r\n                            cursorColor={Colors.azul_Oscuro}\r\n                            editable={\r\n                              modalProductsDates?.fileEditable ? true : false\r\n                            }\r\n                            placeholder=\"Sku\"\r\n                          />\r\n                        </View>\r\n                      </View>\r\n                    )}\r\n\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          flexDirection: \"row\",\r\n                          height: 350,\r\n                          width: \"90%\",\r\n                        }}\r\n                      >\r\n                        <View\r\n                          style={{\r\n                            flexDirection: \"column\",\r\n                            height: 340,\r\n                            width: \"45%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalMovil}>\r\n                            Tiendas en las que existe el producto\r\n                          </Text>\r\n                          <MyDateTableModalShowDatesTienda\r\n                            columns={columnasMyDateTableTiendaModal}\r\n                            items={tiendasByProducto}\r\n                          />\r\n                        </View>\r\n                        {(modalProductsDates?.isAddProductoShowProveedores ??\r\n                          false) &&\r\n                          isPermisoHistorialDeProveedores && (\r\n                            <View\r\n                              style={{\r\n                                height: 340,\r\n                                width: \"45%\",\r\n                              }}\r\n                            >\r\n                              <Text style={styles.labelTextModalMovil}>\r\n                                Historial de proveedores\r\n                              </Text>\r\n                              <MyDateTableModalShowDateProveedores\r\n                                columns={columnasMyDateTableProveedorModal}\r\n                                items={proveedorByProducto}\r\n                              />\r\n                            </View>\r\n                          )}\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  value={descripcionProductoDetails}\r\n                  onChangeText={setDescripcionProductoDetails}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  numberOfLines={5}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/* Campo para cargar fotos */}\r\n                <PanGestureHandler onGestureEvent={onDrop}>\r\n                  <View\r\n                    style={{\r\n                      marginTop: 20,\r\n                      width: \"90%\",\r\n                      borderWidth: 1,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderRadius: 13,\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Colors.negro,\r\n                        marginBottom: \"5%\",\r\n                      }}\r\n                    >\r\n                      Imágenes del producto\r\n                    </Text>\r\n\r\n                    {/* Botón para cargar imágenes */}\r\n                    {(modalProductsDates?.fileEditable ?? false) && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                        }}\r\n                        onPress={handleImageUpload}\r\n                      >\r\n                        <Text style={{ color: Colors.blanco }}>\r\n                          Seleccionar Imagenes\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Vista para mostrar las imágenes seleccionadas */}\r\n                    {selectedImages.length > 0 && (\r\n                      <ScrollView\r\n                        horizontal={true}\r\n                        style={{\r\n                          marginTop: 10,\r\n                          width: \"100%\",\r\n                          height: 100, // Ajusta la altura de la vista de imágenes\r\n                        }}\r\n                      >\r\n                        {selectedImages.map((image, index) => (\r\n                          <View\r\n                            key={index}\r\n                            style={{\r\n                              position: \"relative\",\r\n                              width: 100,\r\n                              height: 100,\r\n                              marginRight: 10,\r\n                            }}\r\n                          >\r\n                            <Image\r\n                              key={index}\r\n                              source={{ uri: image.uri }} // Usa la URI de la imagen\r\n                              style={{\r\n                                width: 100,\r\n                                height: 100,\r\n                                marginRight: 10,\r\n                                borderRadius: 10,\r\n                              }}\r\n                            />\r\n                            <TouchableOpacity\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                top: 5,\r\n                                right: 5,\r\n                                backgroundColor: \"red\",\r\n                                borderRadius: 15,\r\n                                width: 20,\r\n                                height: 20,\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                zIndex: 1,\r\n                              }}\r\n                              onPress={() => handleRemoveImage(index)}\r\n                            >\r\n                              <Text\r\n                                style={{\r\n                                  color: \"white\",\r\n                                  fontSize: 14,\r\n                                }}\r\n                              >\r\n                                X\r\n                              </Text>\r\n                            </TouchableOpacity>\r\n                          </View>\r\n                        ))}\r\n                      </ScrollView>\r\n                    )}\r\n                  </View>\r\n                </PanGestureHandler>\r\n\r\n                {/**Contenedor para los botones */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  {(isPermisoMoverGeneral || isPermisoMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        marginLeft: \"5%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        setModalProductsDates({\r\n                          id_producto: \"\",\r\n                          isAddProducto: false,\r\n                          isModificarProducto: false,\r\n                          fileEditable: false,\r\n                          isAddProductoShowProveedoresTiendas: false,\r\n                          isAddProductoShowProveedores: false,\r\n                        });\r\n                        cargarDatosTiendaParaMover();\r\n                        setModalMoverVisible(true);\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Mover Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  {isPermisoRestarProducto && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        callModalAddProducto();\r\n                        setModalRestarProductos(true);\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Restar Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  {(false) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.verde_claro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        marginRight: \"5%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        callVenta();\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Vender Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal de servicio */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalVenderProductoVisible}\r\n          animationType=\"fade\"\r\n          onRequestClose={() =>\r\n            setIsModalVenderProductoVisible(!isModalVenderProductoVisible)\r\n          }\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  setIsModalVenderProductoVisible(!isModalVenderProductoVisible)\r\n                }\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                Vender Producto\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 5000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 5000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idClienteDetails}\r\n                    placeholder=\"Seleccione un Cliente\"\r\n                    setValue={setIdClienteDetails}\r\n                    items={dropdownItemsNombreCliente}\r\n                    searchable={true}\r\n                    readOnly={\r\n                      !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                    }\r\n                  />\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: 1500,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDetails}\r\n                      placeholder=\"Seleccione una tienda\"\r\n                      setValue={setIdTiendaDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={!false}\r\n                      searchable={true}\r\n                      onDropdownOpen={() => {}}\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio: Venta\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: 100,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: 500,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdownDetails\r\n                      value={idProductoDetails}\r\n                      placeholder=\"Seleccione un produto\"\r\n                      setValue={setIdProductoDetails}\r\n                      items={dropdownItemsNombreproducto}\r\n                      searchable={true}\r\n                      readOnly={!false}\r\n                      onDropdownOpen={() => {}}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={cantidadProductoServicioDetails}\r\n                        onChangeText={(text) => {\r\n                          // Filtra caracteres no numéricos\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                          setCantidadProductoServicioDetails(numericValue);\r\n                        }}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad del producto\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en USD\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoUSDDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoCUPDetails(\r\n                              String(\r\n                                (parseFloat(validNumericValue) * cambioMoneda).toFixed(0)\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoCUPDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoUSDDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoUSD\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 4\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoCUPDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoUSDDetails(\r\n                              String(\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoUSDDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoCUPDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoCUP\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 4\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={precioUSDDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioCUPDetails(\r\n                            String((parseFloat(validNumericValue) * cambioMoneda).toFixed(0))\r\n                          );\r\n                        } else {\r\n                          setPrecioCUPDetails(\"0\");\r\n                        }\r\n                        setPrecioUSDDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioUSD\");\r\n                      }}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en usd\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModalNOEDITABLE}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioUSDDetails(\r\n                            String(parseFloat(validNumericValue) / cambioMoneda)\r\n                          );\r\n                        } else {\r\n                          setPrecioUSDDetails(\"0\");\r\n                        }\r\n                        setPrecioCUPDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioCUP\");\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en cup\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: 600,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => {}}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: 500,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={notaDetails}\r\n                      onChangeText={setNotaDetails}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Nota\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del servicio\"\r\n                  multiline={true}\r\n                  editable={\r\n                    isPermisoModificarServicio || isPermisoServicioLocal\r\n                  }\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      marginLeft: \"5%\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                      marginTop: \"3%\", // Margen adicional entre botones\r\n                    }}\r\n                    onPress={() => {\r\n                      addNewServicio();\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: 16,\r\n                      }}\r\n                    >\r\n                      Agregar Servicio\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal mensaje para Restar Productos*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMesajeRestarVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Estás seguro de que deseas restar una cantidad de ${cantidadRestarProducto} del producto ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual}?`}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => restarProductosFuction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    setModalMesajeRestarVisible(!isModalMesajeRestarVisible)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setModalMesajeRestarVisible(!isModalMesajeRestarVisible)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal restar Productos*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalRestarProductos}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 300,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Restar ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual} en la cual hay ${cantidadTiendaUsuarioActual}`}\r\n              </Text>\r\n\r\n              <Text\r\n                style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10 }}\r\n              >\r\n                Cantidad a restar\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  marginHorizontal: \"5%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 16, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                value={cantidadRestarProducto}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadRestarProducto(numericValue);\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                editable={modalProductsDates?.fileEditable ? true : false}\r\n                placeholder=\"Cantidad a restar\"\r\n              />\r\n\r\n              <TouchableOpacity\r\n                onPress={() => restarProductosValidarCampos()}\r\n                style={{\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 15,\r\n                  marginTop: 30,\r\n                  width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                    color: Colors.blanco_Suave,\r\n                  }}\r\n                >\r\n                  Restar Productos\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setModalRestarProductos(!isModalRestarProductos)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal restar Productos*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalRestarProductos}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Restar ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual} en la cual hay ${cantidadTiendaUsuarioActual}`}\r\n              </Text>\r\n\r\n              <Text\r\n                style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10 }}\r\n              >\r\n                Cantidad a restar\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={styles.textImputModal}\r\n                value={nombreProductoDetails}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadSearch(numericValue);\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                editable={modalProductsDates?.fileEditable ? true : false}\r\n                placeholder=\"Cantidad a restar\"\r\n              />\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal mensaje para el Mover*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMesajeMoverVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 450,\r\n                height: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Desea mover ${cantidadMoverProducto} producto ${nombreProductoDetails} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}?`}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => moverProductoFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para el Mover*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMoverVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {tiendaMoverDesde === \"\"\r\n                  ? \"Seleccione una tienda origen\"\r\n                  : `Mover Producto \"${nombreProductoDetails}\" en la Tienda\\n ${nombreTiendaUsuarioActual} con una cantidad de ${cantidadTiendaUsuarioActual}`}\r\n              </Text>\r\n\r\n              <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                La cantidad que desea mover\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 18, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                placeholder=\"Cantidad a mover\"\r\n                value={cantidadMoverProducto}\r\n                onChangeText={(text) => {\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadMoverProducto(numericValue);\r\n                }}\r\n              />\r\n\r\n              <Text style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}>\r\n                Tiendas para mover los productos\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                {isPermisoMoverGeneral && (\r\n                  <CustomDropDownPikerFromMover\r\n                    value={tiendaMoverDesde}\r\n                    items={tiendasByProductoDesde}\r\n                    placeholder=\"Tienda desde donde se quiere mover\"\r\n                    setValue={setTiendaMoverDesde}\r\n                  />\r\n                )}\r\n                <CustomDropDownPikerFromMover\r\n                  value={tiendaMoverHasta}\r\n                  items={tiendasByProductoHasta}\r\n                  placeholder=\"Tienda a la que se quiere mover\"\r\n                  setValue={setTiendaMoverHasta}\r\n                />\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                style={{\r\n                  backgroundColor: Colors.azul_Claro,\r\n                  borderRadius: 15,\r\n                  marginTop: 150,\r\n                  width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 50, // Altura fija para pantallas de escritorio\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n              >\r\n                <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (<TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Mi Tienda\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>)}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje para el exel */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeViewExel}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {loadingOfExel ? (\r\n                <ActivityIndicator\r\n                  size={100}\r\n                  color=\"#007BFF\"\r\n                  style={{\r\n                    flex: 1,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"15%\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <View\r\n                  style={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Datos Recopilados. Espere a que termine la descarga.\r\n                  </Text>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: \"#007BFF\", // Cambia esto por Colors.azul_Oscuro si lo tienes definido\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho del botón\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMensajeViewExel(!isModalMensajeViewExel)\r\n                    } // Llama a la función onClose para cerrar el modal\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => exportarExel()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              height: 30,\r\n              width: \"12%\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n              shadowOffset: { width: 0, height: 0 },\r\n              shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n              shadowRadius: 14, // Difuminado\r\n              borderColor: Colors.verde_claro,\r\n              borderWidth: 3,\r\n              padding: 10,\r\n              borderRadius: 10,\r\n              marginHorizontal: \"1%\",\r\n              marginTop: \"1%\",\r\n              backgroundColor: Colors.verde_claro, // Color de fondo del botón\r\n            }}\r\n          >\r\n            <Image\r\n              source={require(\"../images/exel.png\")}\r\n              style={{ width: 20, height: 20, marginRight: \"10%\" }}\r\n            />\r\n            <Text\r\n              style={[\r\n                styles.radioButtonTextDesktop,\r\n                sortProductos?.criterioOrden === \"option1\" &&\r\n                  styles.radioButtonSelected &&\r\n                  styles.radioButtonTextSelected,\r\n              ]}\r\n            >\r\n              Exportar a Excel\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearch}\r\n              onChangeText={setNombreProductoSearch}\r\n              onKeyPress={handleKeyPress}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <Text style={styles.textSearchDesktop}>SKU:</Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}>Cantidad:</Text>\r\n            </View>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"SKU\"\r\n                value={sKUSearch}\r\n                onChangeText={setSKUSearch}\r\n                onKeyPress={handleKeyPress}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Cantidad\"\r\n                value={cantidadSearch}\r\n                onKeyPress={handleKeyPress}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              Rango de Precio en USD:\r\n            </Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={rangoPrecioDesdeSearch}\r\n                onKeyPress={handleKeyPress}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={rangoPrecioHastaSearch}\r\n                onKeyPress={handleKeyPress}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioHastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            {(String(usuario?.id_rol) === \"2\" ||\r\n              String(usuario?.id_rol) === \"1\") && (\r\n              <View style={styles.separatorBlanco} />\r\n            )}\r\n\r\n            {(String(usuario?.id_rol) === \"2\" ||\r\n              String(usuario?.id_rol) === \"1\") && (\r\n              <Text style={styles.textSearchDesktop}>Cambiar de Tienda:</Text>\r\n            )}\r\n            {(String(usuario?.id_rol) === \"2\" ||\r\n              String(usuario?.id_rol) === \"1\") && (\r\n              <View style={{ position: \"relative\", zIndex: 500, height: 100 }}>\r\n                <CustomDropdown\r\n                  value={selectedValueNombreTienda}\r\n                  placeholder=\"Tiendas\"\r\n                  setValue={setSelectedValueNombreTienda}\r\n                  items={dropdownItems}\r\n                />\r\n              </View>\r\n            )}\r\n            <View\r\n              style={{ width: \"100%\", flexDirection: \"row\", marginTop: 25 }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarProductos()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableEnMyTienda\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        {/*Modal de en my tienda producto details */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProductsDates?.isAddProducto ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProducto}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProducto}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProductsDates?.isModificarProducto ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Producto\"\r\n                  : \"Agregar Producto\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Del Producto\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  value={nombreProductoDetails}\r\n                  onChangeText={setNombreProductoDetails}\r\n                  placeholder=\"Nombre del producto\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Precio y Precio de Empresa */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio en USD\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioProductoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio en USD\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Precio de Empresa */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio de empresa en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioEmpresaProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioEmpresaProductoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio de empresa en CUP\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {isPermisoHistorialDeProveedores && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      paddingHorizontal: 10,\r\n                    }}\r\n                  >\r\n                    {/* Campo Precio */}\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo Promedio\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={costoPromedio}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          setCostoPromedio(validNumericValue);\r\n                        }}\r\n                        editable={false}\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n\r\n                    {/*  */}\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    ></View>\r\n                  </View>\r\n                )}\r\n\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          width: \"100%\",\r\n                          justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                          alignItems: \"center\",\r\n                          flexDirection: \"row\",\r\n                          paddingHorizontal: 10,\r\n                        }}\r\n                      >\r\n                        {/* Campo Precio en CUP*/}\r\n                        <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                          <Text style={styles.labelTextModalDesktop}>\r\n                            Precio en CUP\r\n                          </Text>\r\n                          <CustomTextImputSearch\r\n                            style={styles.textImputModal}\r\n                            value={(\r\n                              parseFloat(precioProductoDetails) * cambioMoneda\r\n                            ).toFixed(0)}\r\n                            cursorColor={Colors.azul_Oscuro}\r\n                            editable={false}\r\n                            placeholder=\"Precio en CUP\"\r\n                          />\r\n                        </View>\r\n\r\n                        {/* Campo Precio de Empresa en CUP*/}\r\n                        <View\r\n                          style={{\r\n                            width: \"45%\",\r\n                            marginLeft: \"2%\",\r\n                            marginRight: \"2%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalDesktop}>Sku</Text>\r\n                          <CustomTextImputSearch\r\n                            style={styles.textImputModal}\r\n                            value={skuDetails}\r\n                            onChangeText={setSkuDetails}\r\n                            cursorColor={Colors.azul_Oscuro}\r\n                            editable={\r\n                              modalProductsDates?.fileEditable ? true : false\r\n                            }\r\n                            placeholder=\"Sku\"\r\n                          />\r\n                        </View>\r\n                      </View>\r\n                    )}\r\n\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          flexDirection: \"row\",\r\n                          height: 350,\r\n                          width: \"90%\",\r\n                        }}\r\n                      >\r\n                        <View\r\n                          style={{\r\n                            flexDirection: \"column\",\r\n                            height: 350,\r\n                            width: \"50%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalDesktop}>\r\n                            Tiendas en las que existe el producto\r\n                          </Text>\r\n                          <MyDateTableModalShowDatesTienda\r\n                            columns={columnasMyDateTableTiendaModal}\r\n                            items={tiendasByProducto}\r\n                          />\r\n                        </View>\r\n                        {(modalProductsDates?.isAddProductoShowProveedores ??\r\n                          false) &&\r\n                          isPermisoHistorialDeProveedores && (\r\n                            <View\r\n                              style={{\r\n                                height: 350,\r\n                                width: \"50%\",\r\n                              }}\r\n                            >\r\n                              <Text style={styles.labelTextModalDesktop}>\r\n                                Historial de proveedores\r\n                              </Text>\r\n                              <MyDateTableModalShowDateProveedores\r\n                                columns={columnasMyDateTableProveedorModal}\r\n                                items={proveedorByProducto}\r\n                              />\r\n                            </View>\r\n                          )}\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  numberOfLines={5}\r\n                  value={descripcionProductoDetails}\r\n                  onChangeText={setDescripcionProductoDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/* Campo para cargar fotos */}\r\n                <PanGestureHandler onGestureEvent={onDrop}>\r\n                  <View\r\n                    style={{\r\n                      marginTop: 20,\r\n                      width: \"90%\",\r\n                      borderWidth: 1,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderRadius: 13,\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Colors.negro,\r\n                        marginBottom: \"5%\",\r\n                      }}\r\n                    >\r\n                      Imágenes del producto\r\n                    </Text>\r\n\r\n                    {/* Botón para cargar imágenes */}\r\n                    {(modalProductsDates?.fileEditable ?? false) && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                        }}\r\n                        onPress={handleImageUpload}\r\n                      >\r\n                        <Text style={{ color: Colors.blanco }}>\r\n                          Seleccionar Imagenes\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Vista para mostrar las imágenes seleccionadas */}\r\n                    {selectedImages.length > 0 && (\r\n                      <ScrollView\r\n                        horizontal={true}\r\n                        style={{\r\n                          marginTop: 10,\r\n                          width: \"100%\",\r\n                          height: 100, // Ajusta la altura de la vista de imágenes\r\n                        }}\r\n                      >\r\n                        {selectedImages.map((image, index) => (\r\n                          <View\r\n                            key={index}\r\n                            style={{\r\n                              position: \"relative\",\r\n                              width: 100,\r\n                              height: 100,\r\n                              marginRight: 10,\r\n                            }}\r\n                          >\r\n                            <Image\r\n                              key={index}\r\n                              source={{ uri: image.uri }} // Usa la URI de la imagen\r\n                              style={{\r\n                                width: 100,\r\n                                height: 100,\r\n                                marginRight: 10,\r\n                                borderRadius: 10,\r\n                              }}\r\n                            />\r\n                            <TouchableOpacity\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                top: 5,\r\n                                right: 5,\r\n                                backgroundColor: \"red\",\r\n                                borderRadius: 15,\r\n                                width: 20,\r\n                                height: 20,\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                zIndex: 1,\r\n                              }}\r\n                              onPress={() => handleRemoveImage(index)}\r\n                            >\r\n                              <Text\r\n                                style={{\r\n                                  color: \"white\",\r\n                                  fontSize: 14,\r\n                                }}\r\n                              >\r\n                                X\r\n                              </Text>\r\n                            </TouchableOpacity>\r\n                          </View>\r\n                        ))}\r\n                      </ScrollView>\r\n                    )}\r\n                  </View>\r\n                </PanGestureHandler>\r\n\r\n                {/**Contenedor para los botones */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  {(isPermisoMoverGeneral || isPermisoMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        marginLeft: \"5%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        setModalProductsDates({\r\n                          id_producto: \"\",\r\n                          isAddProducto: false,\r\n                          isModificarProducto: false,\r\n                          fileEditable: false,\r\n                          isAddProductoShowProveedoresTiendas: false,\r\n                          isAddProductoShowProveedores: false,\r\n                        });\r\n                        cargarDatosTiendaParaMover();\r\n                        setModalMoverVisible(true);\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Mover Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  {isPermisoRestarProducto && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        callModalAddProducto();\r\n                        setModalRestarProductos(true);\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Restar Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  {(false) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.verde_claro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        marginRight: \"5%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        callVenta();\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Vender Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal de servicio */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalVenderProductoVisible}\r\n          animationType=\"fade\"\r\n          onRequestClose={() =>\r\n            setIsModalVenderProductoVisible(!isModalVenderProductoVisible)\r\n          }\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  setIsModalVenderProductoVisible(!isModalVenderProductoVisible)\r\n                }\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                Vender Producto\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 5000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 5000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idClienteDetails}\r\n                    placeholder=\"Seleccione un Cliente\"\r\n                    setValue={setIdClienteDetails}\r\n                    items={dropdownItemsNombreCliente}\r\n                    searchable={true}\r\n                    readOnly={\r\n                      !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                    }\r\n                  />\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: 1500,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDetails}\r\n                      placeholder=\"Seleccione una tienda\"\r\n                      setValue={setIdTiendaDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={!false}\r\n                      searchable={true}\r\n                      onDropdownOpen={() => {}}\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio: Venta\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: 100,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: 500,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdownDetails\r\n                      value={idProductoDetails}\r\n                      placeholder=\"Seleccione un produto\"\r\n                      setValue={setIdProductoDetails}\r\n                      items={dropdownItemsNombreproducto}\r\n                      searchable={true}\r\n                      readOnly={!false}\r\n                      onDropdownOpen={() => {}}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={cantidadProductoServicioDetails}\r\n                        onChangeText={(text) => {\r\n                          // Filtra caracteres no numéricos\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                          setCantidadProductoServicioDetails(numericValue);\r\n                        }}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad del producto\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en USD\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoUSDDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoCUPDetails(\r\n                              String(\r\n                                (parseFloat(validNumericValue) * cambioMoneda).toFixed(0)\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoCUPDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoUSDDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoRedondeo\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 4\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoCUPDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoUSDDetails(\r\n                              String(\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoUSDDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoCUPDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoCUP\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 4\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={precioUSDDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioCUPDetails(\r\n                            String((parseFloat(validNumericValue) * cambioMoneda).toFixed(0))\r\n                          );\r\n                        } else {\r\n                          setPrecioCUPDetails(\"0\");\r\n                        }\r\n                        setPrecioUSDDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioUSD\");\r\n                      }}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en usd\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModalNOEDITABLE}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioUSDDetails(\r\n                            String(parseFloat(validNumericValue) / cambioMoneda)\r\n                          );\r\n                        } else {\r\n                          setPrecioUSDDetails(\"0\");\r\n                        }\r\n                        setPrecioCUPDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioCUP\");\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en cup\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: 600,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => {}}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={notaDetails}\r\n                      onChangeText={setNotaDetails}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Nota\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del servicio\"\r\n                  multiline={true}\r\n                  editable={\r\n                    isPermisoModificarServicio || isPermisoServicioLocal\r\n                  }\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      marginLeft: \"5%\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                      marginTop: \"3%\", // Margen adicional entre botones\r\n                    }}\r\n                    onPress={() => {\r\n                      addNewServicio();\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: 16,\r\n                      }}\r\n                    >\r\n                      Vender\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal mensaje para Restar Productos*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMesajeRestarVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Estás seguro de que deseas restar una cantidad de ${cantidadRestarProducto} del producto ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual}?`}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => restarProductosFuction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    setModalMesajeRestarVisible(!isModalMesajeRestarVisible)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setModalMesajeRestarVisible(!isModalMesajeRestarVisible)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal restar Productos*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalRestarProductos}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 300,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Restar ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual} en la cual hay ${cantidadTiendaUsuarioActual}`}\r\n              </Text>\r\n\r\n              <Text\r\n                style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10 }}\r\n              >\r\n                Cantidad a restar\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  marginHorizontal: \"5%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 16, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                value={cantidadRestarProducto}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadRestarProducto(numericValue);\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                editable={modalProductsDates?.fileEditable ? true : false}\r\n                placeholder=\"Cantidad a restar\"\r\n              />\r\n\r\n              <TouchableOpacity\r\n                onPress={() => restarProductosValidarCampos()}\r\n                style={{\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 15,\r\n                  marginTop: 30,\r\n                  width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                    color: Colors.blanco_Suave,\r\n                  }}\r\n                >\r\n                  Restar Productos\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setModalRestarProductos(!isModalRestarProductos)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal mensaje para el Mover*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMesajeMoverVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 450,\r\n                height: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Desea mover ${cantidadMoverProducto} producto ${nombreProductoDetails} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}?`}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => moverProductoFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para el Mover*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMoverVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 500, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {tiendaMoverDesde === \"\"\r\n                  ? \"Seleccione una tienda origen\"\r\n                  : `Mover Producto \"${nombreProductoDetails}\" en la Tienda ${nombreTiendaUsuarioActual} con una cantidad de ${cantidadTiendaUsuarioActual}`}\r\n              </Text>\r\n\r\n              <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                La cantidad que desea mover\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 18, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                placeholder=\"Cantidad a mover\"\r\n                value={cantidadMoverProducto}\r\n                onChangeText={(text) => {\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadMoverProducto(numericValue);\r\n                }}\r\n              />\r\n\r\n              <Text style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}>\r\n                Tiendas para mover los productos\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"row\",\r\n                  position: \"relative\",\r\n                  zIndex: 500,\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                {isPermisoMoverGeneral && (\r\n                  <CustomDropDownPikerFromMover\r\n                    value={tiendaMoverDesde}\r\n                    items={tiendasByProductoDesde}\r\n                    placeholder=\"Tienda desde donde se quiere mover\"\r\n                    setValue={setTiendaMoverDesde}\r\n                  />\r\n                )}\r\n                <CustomDropDownPikerFromMover\r\n                  value={tiendaMoverHasta}\r\n                  items={tiendasByProductoHasta}\r\n                  placeholder=\"Tienda a la que se quiere mover\"\r\n                  setValue={setTiendaMoverHasta}\r\n                />\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                style={{\r\n                  backgroundColor: Colors.azul_Claro,\r\n                  borderRadius: 15,\r\n                  marginTop: 170,\r\n                  width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 50, // Altura fija para pantallas de escritorio\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n              >\r\n                <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (<TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Mi Tienda\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>)}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje para el exel */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeViewExel}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {loadingOfExel ? (\r\n                <ActivityIndicator\r\n                  size={100}\r\n                  color=\"#007BFF\"\r\n                  style={{\r\n                    flex: 1,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"15%\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <View\r\n                  style={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Datos Recopilados. Espere a que termine la descarga.\r\n                  </Text>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: \"#007BFF\", // Cambia esto por Colors.azul_Oscuro si lo tienes definido\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho del botón\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMensajeViewExel(!isModalMensajeViewExel)\r\n                    } // Llama a la función onClose para cerrar el modal\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { TiendaShowModal } from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\n\r\nexport interface Entrada {\r\n  id_Entrada: string;\r\n  id_Proveedor: string;\r\n  id_Producto: string;\r\n  nombre_Proveedor: string;\r\n  nombre_Producto: string;\r\n  cantidad: string;\r\n  costo: string;\r\n  fecha: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Entrada[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableEntradas: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortEntradas, setSortEntradas } = useSortEntradas();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Entrada[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  // Metodo que devuelve el mensaje al final de la pagina\r\n  const mensajeOfEndTable = () =>{\r\n    let mensaje = \"La suma total de los costos de los productos filtrados es de: \";\r\n    let sumaCostos: number = 0\r\n\r\n    items.forEach((item) =>{\r\n      sumaCostos += parseFloat(item.costo)\r\n    })\r\n    mensaje += `${sumaCostos} USD.`\r\n    return mensaje\r\n  }\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre Proveedor\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Producto\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Costo Por Unidad\") {\r\n      aux = \"option5\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option6\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortEntradas({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Proveedor\" ||\r\n                column === \"Nombre Producto\" ||\r\n                column === \"Costo Por Unidad\" ||\r\n                column === \"Fecha\") && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Suave,\r\n                    marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                    width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                    height: 24, // Asegúrate de que tenga tamaño consistente\r\n                    justifyContent: \"center\", // Centrar contenido del botón\r\n                    alignItems: \"center\", // Centrar contenido del botón\r\n                    borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                    marginBottom: 4, // Elevar el botón del borde inferior\r\n                    paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                  }}\r\n                  onPress={() => sortEntradasAux(column)}\r\n                >\r\n                  <Image\r\n                    source={require(\"../images/ordenar.png\")}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </TouchableOpacity>\r\n              )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Proveedor !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Entrada}\r\n                onPress={() => detailsModalView(item.id_Entrada)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Proveedor}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo por unidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.costo}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <Text>{mensajeOfEndTable()}</Text>\r\n            </View>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Entrada}\r\n                onPress={() => detailsModalView(item.id_Entrada)}\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Proveedor}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.costo}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <Text>{mensajeOfEndTable()}</Text>\r\n          </View>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getAllTiendas, isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  Entrada,\r\n  MyDateTableEntradas,\r\n} from \"../components/MyDateTableEntradas\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\n\r\nexport default function EntradasView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadProductosDetails, setCapaPrioridadProductosDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadProveedoresDetails, setCapaPrioridadProveedoresDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadProductosDetails(1500);\r\n      setCapaPrioridadProveedoresDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductosDetails(1500);\r\n      setCapaPrioridadProveedoresDetails(1500);\r\n    } else if (prioridad === \"ProductosDetails\") {\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductosDetails(2000);\r\n      setCapaPrioridadProveedoresDetails(1500);\r\n    } else if (prioridad === \"ProveedoresDetails\") {\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductosDetails(1500);\r\n      setCapaPrioridadProveedoresDetails(2000);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortEntradas, setSortEntradas } = useSortEntradas();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idEntradaDetails, setIdEntradaDetails] = useState(\"\");\r\n  const [idProveedorDetails, setIdProveedorDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [cantidadDetails, setCantidadDetails] = useState(\"\");\r\n  const [costoDetails, setCostoDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  // Controlar el doble clic del boton\r\n      const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarEntrada, setIsPermisoAgregarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarEntrada, setIsPermisoEliminarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoModificarEntrada, setIsPermisoModificarEntrada] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarEntrada = await isPermiso(\r\n        usuario.token,\r\n        \"10\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultEliminarEntrada = await isPermiso(\r\n        usuario.token,\r\n        \"12\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarEntrada = await isPermiso(\r\n        usuario.token,\r\n        \"11\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      setIsPermisoAgregarEntrada(resultAgregarEntrada);\r\n      setIsPermisoEliminarEntrada(resultEliminarEntrada);\r\n      setIsPermisoModificarEntrada(resultModificarEntrada);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Entrada[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreProveedor, setDropDownItemsNombreProveedor] =\r\n    useState<ProveedorPiker[]>([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProveedorSearch, setNombreProveedorSearch] = useState(\"\");\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [costoDesdeSearch, setCostoDesdeSearch] = useState(\"\");\r\n  const [costoHastaSearch, setCostohastaSearch] = useState(\"\");\r\n  const [fechaDesdeSearch, setFechaDesdeSearch] = useState(new Date());\r\n  const [fechaHastaSearch, setFechaHastaSearch] = useState(new Date());\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2024\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n\r\n  const options = [\r\n    { label: \"Día\", value: \"dia\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n    { label: \"Mes\", value: \"mes\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"dia\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 6);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else if (value === \"mes\") {\r\n      // Restar 1 mes a la fecha actual\r\n      const lastMonthDate = new Date(currentDate);\r\n      lastMonthDate.setMonth(currentDate.getMonth() - 1);\r\n      const monthYear = String(lastMonthDate.getFullYear());\r\n      const monthMonth = String(lastMonthDate.getMonth() + 1).padStart(2, \"0\");\r\n      const monthDay = String(lastMonthDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${monthYear}-${monthMonth}-${monthDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarEntradas(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  const getProveedoresPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProveedores(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_proveedor,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProveedor(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([...tiendasMapeados]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdProveedorDetails(\"\");\r\n    setCostoDetails(\"\");\r\n    setCantidadDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfEntradas = async () => {\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getEntradaByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.fecha.split(\"T\")[0].split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdEntradaDetails(result.id_entrada);\r\n        setIdProveedorDetails(result.proveedor.id_proveedor);\r\n        setIdProductoDetails(result.producto.id_producto);\r\n        setCantidadDetails(result.cantidad);\r\n        setIdTiendaDetails(result.tienda.id_tienda);\r\n        setCostoDetails(result.costo);\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares\r\n        setIdProductoAuxModificarDetails(result.producto.id_producto);\r\n        setIdTiendaAuxModificarDetails(result.tienda.id_tienda);\r\n        setCantidadAuxModificarDetails(result.cantidad);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Entrada[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarEntrada(\r\n          usuario.token,\r\n          nombreProveedorSearch,\r\n          nombreProductoSearch,\r\n          costoDesdeSearch,\r\n          costoHastaSearch,\r\n          fechaDesde,\r\n          fechaHasta\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Entrada[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Entrada: element.id_entrada,\r\n              id_Proveedor: element.proveedor.id_proveedor,\r\n              id_Producto: element.producto.id_producto,\r\n              nombre_Proveedor: element.proveedor.nombre,\r\n              nombre_Producto: element.producto.nombre,\r\n              cantidad: element.cantidad,\r\n              costo: element.costo,\r\n              fecha: element.fecha,\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfEntradas();\r\n  }, [modalEntradasDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosProveedores = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllEntradas(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: Entrada[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Entrada: element.id_entrada,\r\n                id_Proveedor: element.proveedor.id_proveedor,\r\n                id_Producto: element.producto.id_producto,\r\n                nombre_Proveedor: element.proveedor.nombre,\r\n                nombre_Producto: element.producto.nombre,\r\n                cantidad: element.cantidad,\r\n                costo: element.costo,\r\n                fecha: element.fecha,\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron entradas.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener las entradas o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de las entradas\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosProveedores();\r\n        getProveedoresPikerDetails();\r\n        getProductosPikerDetails();\r\n        getTiendasPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarEntradas = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let EntradasFiltradas: Entrada[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortEntradas?.criterioOrden && sortEntradas.tipoOrden) {\r\n          EntradasFiltradas = await ordenarEntradas(\r\n            usuario.token,\r\n            EntradasFiltradas,\r\n            sortEntradas?.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }else{\r\n          EntradasFiltradas = await ordenarEntradas(\r\n            usuario.token,\r\n            EntradasFiltradas,\r\n            \"option6\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(EntradasFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarEntradas(\r\n      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n    );\r\n  }, [\r\n    sortEntradas,\r\n    selectedOptionTipoOrden,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    setSelecterActivoDetails(\"\");\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ]);\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setIdProveedorDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n    setIdTiendaDetails(\"\");\r\n    setCantidadDetails(\"\");\r\n    setCostoDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Extraemos el año, mes y día de la fecha actual\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    setFechaDiaDetails(String(parseInt(day)));\r\n    setFechaMesDetails(String(parseInt(month)));\r\n    setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarEntradas(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProveedorSearch(\"\");\r\n    setNombreProductoSearch(\"\");\r\n    setCostoDesdeSearch(\"\");\r\n    setCostohastaSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewEntrada = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando entrada. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR ENTRADA. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (idProveedorDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo del producto por unidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await addEntrada(\r\n          usuario.token,\r\n          costoDetails,\r\n          cantidadDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          parseInt(idProveedorDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails)\r\n        );\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(cantidadDetails)\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó una entrada de ${cantidadDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        await createProductoInTienda(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          idTiendaDetails\r\n        );\r\n        setIdProveedorDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setIdTiendaDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La entrada fue insertado con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarEntradaFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando entrada. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR ENTRADA. Compruebe los siguientes campos:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      const resultViejo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaAuxModificarDetails\r\n      );\r\n\r\n      if (\r\n        idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n        idProductoAuxModificarDetails !== idProductoDetails\r\n      ) {\r\n        if (\r\n          parseInt(resultViejo.cantidad ?? 0) -\r\n            parseInt(cantidadAuxModificarDetails) <\r\n          0\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Operación inválida. No se dispone de sificientes productos para realizar la operoción.\";\r\n        }\r\n      }\r\n      if (\r\n        parseInt(cantidadAuxModificarDetails) - parseInt(cantidadDetails) >\r\n        parseInt(resultNuevo.cantidad ?? 0)\r\n      ) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n      if (idProveedorDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo del producto por unidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await modificarEntrada(\r\n          usuario.token,\r\n          idEntradaDetails,\r\n          costoDetails,\r\n          cantidadDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          parseInt(idProveedorDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails)\r\n        );\r\n\r\n        if (\r\n          idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n          idProductoAuxModificarDetails !== idProductoDetails\r\n        ) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaAuxModificarDetails),\r\n            parseInt(idProductoAuxModificarDetails),\r\n            parseInt(cantidadAuxModificarDetails) * -1\r\n          );\r\n\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(cantidadDetails)\r\n          );\r\n        } else if (cantidadAuxModificarDetails !== cantidadDetails) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(cantidadDetails) - parseInt(cantidadAuxModificarDetails)\r\n          );\r\n        }\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó una entrada de originalmente ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La entrada se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarEntradaFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando entrada. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR ENTRADA. Compruebe los siguientes parámetros:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n\r\n      if (parseInt(cantidadDetails) > parseInt(resultNuevo.cantidad ?? 0)) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n\r\n      if (flag) {\r\n        await deleteEntrada(usuario.token, idEntradaDetails);\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(cantidadDetails) * -1\r\n        );\r\n\r\n        // Actualizar productos en 0 en productoTienda\r\n        await deleteFromProductoTiendaIn_0(usuario.token);\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la entrada con una cantidad de ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La entrada se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdProveedorDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre Proveedor\",\r\n    \"Nombre Producto\",\r\n    \"Cantidad\",\r\n    \"Costo Por Unidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre Proveedor\",\r\n    \"Nombre Producto\",\r\n    \"Cantidad\",\r\n    \"Costo Por Unidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarEntrada && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Entrada</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableEntradas\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del Producto\"\r\n                    value={nombreProductoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Proveedor:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del proveedor\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={nombreProveedorSearch}\r\n                    onChangeText={setNombreProveedorSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Rango de Costo en USD:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={idProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setIdProductoDetails(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={idProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setIdProductoDetails(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.blanco,\r\n                        fontSize: 18,\r\n                        justifyContent: \"center\",\r\n                        marginRight: \"25%\",\r\n                        fontWeight: \"bold\", // Para negritas\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Desde\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.blanco,\r\n                        fontSize: 18,\r\n                        marginLeft: \"12%\",\r\n                        justifyContent: \"center\",\r\n                        fontWeight: \"bold\", // Para negritas\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Hasta\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaDesdeSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n\r\n                    <View\r\n                      style={{\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaHastaSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarProductos();\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProveedorDetails}\r\n                    placeholder=\"Seleccione un Proveedor\"\r\n                    setValue={setIdProveedorDetails}\r\n                    items={dropdownItemsNombreProveedor}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProveedoresDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Seleccione un Producto\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProductosDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre de la Tienda */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idTiendaDetails}\r\n                    placeholder=\"Seleccione una Tienda\"\r\n                    setValue={setIdTiendaDetails}\r\n                    items={dropdownItemsNombreTienda}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalMovil}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalMovil}>Costo en USD</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={costoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Costo en USD\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{ width: \"90%\", marginLeft: \"2%\", marginRight: \"2%\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>Fecha</Text>\r\n                  {isDateLoaded && (\r\n                    <MyDateInput\r\n                      dayValue={fechaDiaDetails}\r\n                      monthValue={fechaMesDetails}\r\n                      yearValue={fechaAnnoDetails}\r\n                      onDayChange={setFechaDiaDetails}\r\n                      onMonthChange={setFechaMesDetails}\r\n                      onYearChange={setFechaAnnoDetails}\r\n                      style={{ margin: 20 }}\r\n                      styleText={styles.labelTextModalMovil}\r\n                    />\r\n                  )}\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar entrada */}\r\n                  {isPermisoModificarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar entrada */}\r\n                  {isPermisoAgregarEntrada &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewEntrada()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarEntradaFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Entradas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarEntrada && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Entrada\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del Producto\"\r\n              value={nombreProductoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Proveedor:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del proveedor\"\r\n              value={nombreProveedorSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProveedorSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Rango de Costo en USD:</Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={costoDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostoDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={costoHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostohastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() =>\r\n                    filtrarYOrdenarEntradas(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    )\r\n                  }\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableEntradas\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProveedorDetails}\r\n                    placeholder=\"Seleccione un Proveedor\"\r\n                    setValue={setIdProveedorDetails}\r\n                    items={dropdownItemsNombreProveedor}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProveedoresDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Seleccione un Producto\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProductosDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre de la Tienda */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTiendasDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTiendasDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idTiendaDetails}\r\n                    placeholder=\"Seleccione una Tienda\"\r\n                    setValue={setIdTiendaDetails}\r\n                    items={dropdownItemsNombreTienda}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"TiendaDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Costo en USD\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={costoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Costo en USD\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarEntrada &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewEntrada()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarEntradaFunction()\r\n                      : modificarEntradaFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Entradas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import { Colors } from \"../styles/Colors\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  TouchableOpacity,\r\n  Image,\r\n  StyleSheet,\r\n  Text,\r\n  Animated,\r\n  View,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\n\r\ninterface CustomButtonProps {\r\n  text: any;\r\n  imageSource: any;\r\n  onPress: () => void;\r\n}\r\n\r\nconst CustomButtonAdministradorView: React.FC<CustomButtonProps> = ({\r\n  onPress,\r\n  text,\r\n  imageSource,\r\n}) => {\r\n  const [scale] = useState(new Animated.Value(1));\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 1150; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Estilos condicionales\r\n  const buttonStyles = isMobile ? styles.movilButton : styles.desktopButton;\r\n\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={buttonStyles}\r\n      onPressIn={onPressIn}\r\n      onPressOut={onPressOut}\r\n      onPress={onPress}\r\n    >\r\n      <Animated.View style={{ transform: [{ scale }] }}>\r\n        <View style={styles.desktopContent}>\r\n          <Image source={imageSource} style={styles.image} />\r\n          <Text style={styles.textDesktop}>{text}</Text>\r\n        </View>\r\n      </Animated.View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  desktopButton: {\r\n    height: 110,\r\n    width: 110,\r\n    justifyContent: \"center\",\r\n    borderRadius: 15,\r\n    alignItems: \"center\",\r\n    shadowColor: Colors.negro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    marginHorizontal: 10\r\n  },\r\n  movilButton: {\r\n    height: 110,\r\n    width: 110,\r\n    justifyContent: \"center\",\r\n    borderRadius: 15,\r\n    alignItems: \"center\",\r\n    shadowColor: Colors.negro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    marginHorizontal: 10\r\n  },\r\n  desktopContent: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  textDesktop: {\r\n    fontSize: 16,\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n    fontWeight: \"bold\"\r\n  },\r\n  textMovil: {\r\n    fontSize: 16,\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n    fontWeight: \"bold\"\r\n  },\r\n  image: {\r\n    height: 70,\r\n    width: 70,\r\n    tintColor: Colors.negro,\r\n  },\r\n});\r\n\r\nexport default CustomButtonAdministradorView;\r\n","import Navbar from \"../components/Navbar\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport React, { useEffect, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport { Image, Text, TouchableOpacity, useWindowDimensions, View } from \"react-native\";\r\nimport CustomButtonOptions from \"../components/CustomButtonOptions\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport CustomButtonAdministradorView from \"../components/CustomButtonAdministradorView\";\r\n\r\n\r\nexport function Administracion() {\r\n    const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n    const isMobile = width < 930;\r\n    const navigation = useNavigation();\r\n\r\n\r\n    if (isMobile) {\r\n        return (\r\n            <View style={{ flex: 1 }}>\r\n                <Navbar />\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        justifyContent: \"space-around\",\r\n                        alignItems: \"center\",\r\n                        flexDirection: \"column\"\r\n                    }}\r\n                >\r\n                </View>\r\n            </View>\r\n        );\r\n    } else {\r\n        return (\r\n            <View style={{ flex: 1 }}>\r\n                <Navbar />\r\n                <View\r\n                    style={{\r\n                        marginTop: 150,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        flexDirection: \"row\"\r\n                    }}\r\n                >\r\n                    <CustomButtonAdministradorView\r\n                        imageSource={require(\"../images/gerente.png\")}\r\n                        onPress={() => navigation.navigate(\"Usuarios\")}\r\n                        text={\"Usuarios\"}\r\n                    />\r\n                    <CustomButtonAdministradorView\r\n                        imageSource={require(\"../images/gerente.png\")}\r\n                        onPress={() => navigation.navigate(\"Tiendas\")}\r\n                        text={\"Tiendas\"}\r\n                    />\r\n                </View>\r\n                <View>\r\n\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import React, { createContext, useState, ReactNode } from \"react\";\r\n\r\n// Define la interfaz del Usuario\r\nexport interface ModalMovimientosDates {\r\n  id_movimiento: string;\r\n  isAddMovimiento: boolean;\r\n  isModificarMovimiento: boolean;\r\n  fileEditable: boolean;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface ModalMovimientosDatesContextType {\r\n  modalMovimientosDates: ModalMovimientosDates | null;\r\n  setModalMovimientosDates: (\r\n    modalMovimientosDates: ModalMovimientosDates | null\r\n  ) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst ModalMovimientosDatesContext = createContext<\r\n  ModalMovimientosDatesContextType | undefined\r\n>(undefined);\r\n\r\n// Define el proveedor\r\nexport const ModalMovimientosDatesProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [modalMovimientosDates, setModalEntradasDates] =\r\n    useState<ModalMovimientosDates | null>(null);\r\n\r\n  return (\r\n    <ModalMovimientosDatesContext.Provider\r\n      value={{\r\n        modalMovimientosDates: modalMovimientosDates,\r\n        setModalMovimientosDates: setModalEntradasDates,\r\n      }}\r\n    >\r\n      {children}\r\n    </ModalMovimientosDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useModalMovimientosDates = () => {\r\n  const context = React.useContext(ModalMovimientosDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      \"useModalMovimientosDates debe usarse dentro de un ModalMovimientosDates\"\r\n    );\r\n  }\r\n  return context;\r\n};\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { useSortMovimientosDates } from \"../contexts/AuxiliarSortMovimientos\";\r\nimport { useModalMovimientosDates } from \"../contexts/AuxiliarContextModalMovimientos\";\r\n\r\nexport interface Movimiento {\r\n  id_Movimiento: string;\r\n  id_TiendaOrigen: string;\r\n  id_TiendaDestino: string;\r\n  id_Producto: string;\r\n  nombreTiendaOrigen: string;\r\n  nombreTiendaDestino: string;\r\n  nombre_Usuario: string;\r\n  nombre_Producto: string;\r\n  cantidad: string;\r\n  fecha: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Movimiento[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableMovimientos: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalMovimientosDates, setModalMovimientosDates } = useModalMovimientosDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { SortMovimientosDates, setSortMovimientosDates} = useSortMovimientosDates();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Movimiento[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_movimiento: string) => {\r\n    setModalMovimientosDates({\r\n      id_movimiento: id_movimiento,\r\n      isAddMovimiento: true,\r\n      fileEditable: false,\r\n      isModificarMovimiento: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Usuario\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Producto\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Cantidad\") {\r\n      aux = \"option5\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option6\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortMovimientosDates({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Usuario\" ||\r\n              column === \"Producto\" ||\r\n              column === \"Cantidad\" ||\r\n              column === \"Fecha\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortEntradasAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalMovimientosDates({\r\n        id_movimiento: idEntradaOption,\r\n        isAddMovimiento: true,\r\n        fileEditable: true,\r\n        isModificarMovimiento: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_TiendaOrigen !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han hecho operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Movimiento}\r\n                onPress={() => detailsModalView(item.id_Movimiento)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Usuario*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Tienda Origen*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreTiendaOrigen}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Tienda Destino */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombreTiendaDestino}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Movimiento}\r\n                onPress={() => detailsModalView(item.id_Movimiento)}\r\n              >\r\n                {/* Primera celda - Nombre Usuario*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Tienda Origen */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombreTiendaOrigen}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Tienda Destino */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombreTiendaDestino}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 50,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getAllTiendas, isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  getAllProductos,\r\n  moverProducto,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport {\r\n  Movimiento,\r\n  MyDateTableMovimientos,\r\n} from \"../components/MyDateTableMovimientos\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport { ProductoProvider } from \"../contexts/ProductoContext\";\r\nimport {\r\n  deleteMovimiento,\r\n  filtrarMovimientos,\r\n  filtrarMovimientosEspecial,\r\n  getAllMovimientos,\r\n  getMovimientoById,\r\n  ordenarMovimientos,\r\n  updateMovimiento,\r\n} from \"../services/MovimientosServices\";\r\nimport { useSortMovimientosDates } from \"../contexts/AuxiliarSortMovimientos\";\r\nimport { useModalMovimientosDates } from \"../contexts/AuxiliarContextModalMovimientos\";\r\nimport { longPressGestureHandlerProps } from \"react-native-gesture-handler/lib/typescript/handlers/LongPressGestureHandler\";\r\nimport { getAllUsuarios } from \"../services/UsuarioServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\n\r\nexport default function MovimientosView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables auxiliares para controlar el despliege de los dropDownsPiers\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesdeSearsh] =\r\n    useState(500);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(500);\r\n  const [capaPrioridadTiendaOrigenSearsh, setCapaPrioridadTiendaOrigenSearsh] =\r\n    useState(500);\r\n  const [\r\n    capaPrioridadTiendaDestinoSearsh,\r\n    setCapaPrioridadTiendaDestinoSearsh,\r\n  ] = useState(500);\r\n  const [capaPrioridadViewTiendasSearsh, setCapaPrioridadViewTiendasSearsh] =\r\n    useState(500);\r\n  const [capaPrioridadViewFechaSearsh, setCapaPrioridadViewFechaSearsh] =\r\n    useState(500);\r\n\r\n  const [capaPrioridadViewFechaDetails, setCapaPrioridadViewFechaDetails] =\r\n    useState(500);\r\n  const [capaPrioridadViewTiendasDetails, setCapaPrioridadViewTiendasDetails] =\r\n    useState(500);\r\n  const [\r\n    capaPrioridadViewProductosDetails,\r\n    setCapaPrioridadViewProductosDetails,\r\n  ] = useState(500);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    if (prioridad === \"TiendaOrigenSearsh\") {\r\n      setCapaPrioridadTiendaOrigenSearsh(2000);\r\n      setCapaPrioridadTiendaDestinoSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadFechaDesdeSearsh(1500);\r\n      setCapaPrioridadViewTiendasSearsh(1000);\r\n      setCapaPrioridadViewFechaSearsh(500);\r\n    } else if (prioridad === \"TiendaDestinoSearsh\") {\r\n      setCapaPrioridadTiendaOrigenSearsh(1500);\r\n      setCapaPrioridadTiendaDestinoSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadFechaDesdeSearsh(1500);\r\n      setCapaPrioridadViewTiendasSearsh(1000);\r\n      setCapaPrioridadViewFechaSearsh(500);\r\n    } else if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadTiendaOrigenSearsh(1500);\r\n      setCapaPrioridadTiendaDestinoSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadFechaDesdeSearsh(2000);\r\n      setCapaPrioridadViewTiendasSearsh(500);\r\n      setCapaPrioridadViewFechaSearsh(1000);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadTiendaOrigenSearsh(1500);\r\n      setCapaPrioridadTiendaDestinoSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n      setCapaPrioridadFechaDesdeSearsh(1500);\r\n      setCapaPrioridadViewTiendasSearsh(500);\r\n      setCapaPrioridadViewFechaSearsh(1000);\r\n    }\r\n\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadViewFechaDetails(2000);\r\n      setCapaPrioridadViewTiendasDetails(1000);\r\n    } else if (prioridad === \"TiendasDetails\") {\r\n      setCapaPrioridadViewFechaDetails(1000);\r\n      setCapaPrioridadViewTiendasDetails(2000);\r\n      setCapaPrioridadViewProductosDetails(1000);\r\n    } else if (prioridad === \"ProductosDetails\") {\r\n      setCapaPrioridadViewFechaDetails(1000);\r\n      setCapaPrioridadViewTiendasDetails(1000);\r\n      setCapaPrioridadViewProductosDetails(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalMovimientosDates, setModalMovimientosDates } =\r\n    useModalMovimientosDates();\r\n  const { SortMovimientosDates, setSortMovimientosDates } =\r\n    useSortMovimientosDates();\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n  const options = [\r\n    { label: \"Ayer\", value: \"ayer\" },\r\n    { label: \"Hoy\", value: \"hoy\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"hoy\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"ayer\") {\r\n      // Restar 1 día a la fecha actual\r\n      const yesterdayDate = new Date(currentDate);\r\n      yesterdayDate.setDate(currentDate.getDate() - 1);\r\n      const yesterdayYear = String(yesterdayDate.getFullYear());\r\n      const yesterdayMonth = String(yesterdayDate.getMonth() + 1).padStart(\r\n        2,\r\n        \"0\"\r\n      );\r\n      const yesterdayDay = String(yesterdayDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${yesterdayYear}-${yesterdayMonth}-${yesterdayDay}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 7);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarMovimientos(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idMovimientoDetails, setIdMovimientoDetails] = useState(\"\");\r\n  const [idUsuarioDetails, setIdUsuarioDetails] = useState(\"\");\r\n  const [nombreUsuarioDetails, setNombreUsuarioDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [idTiendaOrigenDetails, setIdTiendaOrigenDetails] = useState(\"\");\r\n  const [idTiendaDestinoDetails, setIdTiendaDestinoDetails] = useState(\"\");\r\n  const [cantidadDetails, setCantidadDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n\r\n  const [isMovimientoEditable, setIsMovimientoEditable] = useState(false);\r\n  const [isMovimientoEliminable, setIsMovimientoEliminable] = useState(false);\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [\r\n    idTiendaOrigenAuxModificarDetails,\r\n    setIdTiendaOrigenAuxModificarDetails,\r\n  ] = useState(\"\");\r\n  const [\r\n    idTiendaDestinoAuxModificarDetails,\r\n    setIdTiendaDestinoAuxModificarDetails,\r\n  ] = useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [isModalChekEliminarVisible, setIsModalChekEliminarVisible] =\r\n    useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  // Controlar el doble clic del boton\r\n    const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n    \r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoEliminarMovimiento, setIsPermisoEliminarMovimiento] =\r\n    React.useState(false);\r\n  const [isPermisoModificarMovimiento, setIsPermisoModificarMovimiento] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultPermisoOptionMoverLocal = await isPermiso(\r\n        usuario.token,\r\n        \"30\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoOptionMoverGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"31\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      setIsPermisoEliminarMovimiento(true);\r\n      setIsPermisoModificarMovimiento(true);\r\n      setIsPermisoOpcionesDeCeldaMoverLocal(resultPermisoOptionMoverLocal);\r\n      setIsPermisoOpcionesDeCeldaMoverGeneral(resultPermisoOptionMoverGeneral);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Movimiento[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [\r\n    optimizacionAbrirPorMovimientosProPrimeraVes,\r\n    setOptimizacionAbrirPorMovimientosProPrimeraVes,\r\n  ] = useState(false);\r\n  const [dropdownItemsNombreUsuario, setDropDownItemsNombreUsuario] = useState<\r\n    ProveedorPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreUsuarioSearch, setNombreUsuarioSearch] = useState(\"\");\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [cantidadSearch, setCantidadSearch] = useState(\"\");\r\n  const [tiendaOrigenSearch, setTiendaOrigenSearch] = useState(\"\");\r\n  const [tiendaDestinoSearch, setTiendaDestinoSearch] = useState(\"\");\r\n  const [fechaDesdeSearch, setFechaDesdeSearch] = useState(new Date());\r\n  const [fechaHastaSearch, setFechaHastaSearch] = useState(new Date());\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2024\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getUsuariosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllUsuarios(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const usuariosMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_usuario,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreUsuario(usuariosMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Todos los movimientos\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddMovimiento = () => {\r\n    setIdUsuarioDetails(\"\");\r\n    setCantidadDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n\r\n    setModalMovimientosDates({\r\n      id_movimiento: \"\",\r\n      isAddMovimiento: false,\r\n      isModificarMovimiento: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfMovimiento = async () => {\r\n    if (usuario?.token && modalMovimientosDates?.id_movimiento) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getMovimientoById(\r\n        usuario.token,\r\n        modalMovimientosDates.id_movimiento\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.fecha.split(\"T\")[0].split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdMovimientoDetails(result.id_salida);\r\n        setIdUsuarioDetails(result.usuario.id_usuario);\r\n        setIdProductoDetails(result.producto.id_producto);\r\n        setCantidadDetails(result.cantidad);\r\n        setIdTiendaOrigenDetails(result.tienda_origen.id_tienda);\r\n        setIdTiendaDestinoDetails(result.tienda_destino.id_tienda);\r\n        setNombreUsuarioDetails(result.usuario.nombre_usuario);\r\n\r\n        // Variables para si es posible eliminar o modificar el movimiento\r\n        setIsMovimientoEditable(\r\n          result.usuario.id_usuario === usuario.id_usuario\r\n            ? true\r\n            : parseInt(usuario.id_rol) === 1\r\n        );\r\n        setIsMovimientoEliminable(\r\n          result.usuario.id_usuario === usuario.id_usuario\r\n            ? true\r\n            : parseInt(usuario.id_rol) === 1\r\n        );\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares\r\n        setIdProductoAuxModificarDetails(result.producto.id_producto);\r\n        setIdTiendaDestinoAuxModificarDetails(result.tienda_destino.id_tienda);\r\n        setIdTiendaOrigenAuxModificarDetails(result.tienda_origen.id_tienda);\r\n        setCantidadAuxModificarDetails(result.cantidad);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Movimiento[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const resultPermisoOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        let result;\r\n        if (resultPermisoOptionMoverGeneral) {\r\n          result = await filtrarMovimientos(\r\n            usuario.token,\r\n            nombreUsuarioSearch,\r\n            nombreProductoSearch,\r\n            cantidadSearch,\r\n            fechaDesde,\r\n            fechaHasta,\r\n            resultPermisoOptionMoverGeneral\r\n              ? tiendaOrigenSearch\r\n              : usuario.id_tienda,\r\n            tiendaDestinoSearch\r\n          );\r\n        } else {\r\n          result = await filtrarMovimientosEspecial(\r\n            usuario.token,\r\n            nombreUsuarioSearch,\r\n            nombreProductoSearch,\r\n            cantidadSearch,\r\n            fechaDesde,\r\n            fechaHasta,\r\n            usuario.id_tienda,\r\n            tiendaOrigenSearch,\r\n            tiendaDestinoSearch\r\n          );\r\n        }\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Movimiento[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              return {\r\n                id_Movimiento: element.id_salida,\r\n                id_TiendaOrigen: element.tienda_origen.id_tienda,\r\n                id_TiendaDestino: element.tienda_destino.id_tienda,\r\n                id_Producto: element.producto.id_producto,\r\n                nombreTiendaOrigen: element.tienda_origen.nombre,\r\n                nombreTiendaDestino: element.tienda_destino.nombre,\r\n                nombre_Usuario: element.usuario.nombre,\r\n                nombre_Producto: element.producto.nombre,\r\n                cantidad: element.cantidad,\r\n                fecha: element.fecha,\r\n              };\r\n            })\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optimizacionAbrirPorMovimientosProPrimeraVes) {\r\n      cargarDetailsOfMovimiento();\r\n    }\r\n  }, [modalMovimientosDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosMovimientos = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllMovimientos(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: Movimiento[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Movimiento: element.id_salida,\r\n                id_TiendaOrigen: element.tienda_origen.id_tienda,\r\n                id_TiendaDestino: element.tienda_destino.id_tienda,\r\n                id_Producto: element.producto.id_producto,\r\n                nombreTiendaOrigen: element.tienda_origen.nombre,\r\n                nombreTiendaDestino: element.tienda_destino.nombre,\r\n                nombre_Usuario: element.usuario.nombre,\r\n                nombre_Producto: element.producto.nombre,\r\n                cantidad: element.cantidad,\r\n                fecha: element.fecha,\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron entradas.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener las entradas o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de las entradas\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        getUsuariosPikerDetails();\r\n        getProductosPikerDetails();\r\n        getTiendasPikerDetails();\r\n        filtrarYOrdenarMovimientos(\r\n          `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n          `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n        );\r\n        setOptimizacionAbrirPorMovimientosProPrimeraVes(true);\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n  // Filtrar y ordenar movimientos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarMovimientos = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let MovimientosFiltradas: Movimiento[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (\r\n          SortMovimientosDates?.criterioOrden &&\r\n          SortMovimientosDates.tipoOrden\r\n        ) {\r\n          MovimientosFiltradas = await ordenarMovimientos(\r\n            usuario.token,\r\n            MovimientosFiltradas,\r\n            SortMovimientosDates.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        } else {\r\n          MovimientosFiltradas = await ordenarMovimientos(\r\n            usuario.token,\r\n            MovimientosFiltradas,\r\n            \"option6\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(MovimientosFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    if (optimizacionAbrirPorMovimientosProPrimeraVes) {\r\n      filtrarYOrdenarMovimientos(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  }, [SortMovimientosDates, selectedOptionTipoOrden]);\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    if (optimizacionAbrirPorMovimientosProPrimeraVes) {\r\n      setSelecterActivoDetails(\"\");\r\n    }\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ]);\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProductoSearch(\"\");\r\n    setNombreUsuarioSearch(\"\");\r\n    setCantidadSearch(\"\");\r\n    setTiendaOrigenSearch(\"\");\r\n    setTiendaDestinoSearch(\"\");\r\n    setFechaAnnoDesdeSearch(\"2024\");\r\n    setFechaMesdesdeSearch(\"1\");\r\n    setFechaDiaDesdeSearch(\"1\");\r\n    setFechaAnnoHastaSearch(String(parseInt(year)));\r\n    setFechaMesHastaSearch(String(parseInt(month)));\r\n    setFechaDiaHastaSearch(String(parseInt(day)));\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewEntrada = async () => {\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR ENTRADA. Porfavor verifique los siguientes campos:\\n\";\r\n\r\n      if (idUsuarioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaOrigenDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await addEntrada(\r\n          usuario.token,\r\n          costoDetails,\r\n          cantidadDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          parseInt(idUsuarioDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaOrigenDetails)\r\n        );\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaOrigenDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(cantidadDetails)\r\n        );\r\n        setModalMensaje(`La entrada fue insertada con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdUsuarioDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setIdTiendaOrigenDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarMovimientos(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para actualizar los datos de un producto\r\n  const modificarMovimiento = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando movimiento. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR MOVIMIENTO. Compruebe los siguientes campos:\\n\";\r\n      const resultOrigen = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaOrigenAuxModificarDetails\r\n      );\r\n      const resultDestino = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaDestinoAuxModificarDetails\r\n      );\r\n      const resultNuevoOrigen = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaOrigenDetails\r\n      );\r\n      const resultNuevoProductoOrigen = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaOrigenAuxModificarDetails\r\n      );\r\n      const resultNuevoProductoNuevoOrigen = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaOrigenDetails\r\n      );\r\n      let cantidadNueva: number = parseInt(cantidadDetails);\r\n      let cantidadVieja: number = parseInt(cantidadAuxModificarDetails);\r\n      let cantidadEnOrigen: number = resultOrigen\r\n        ? parseInt(resultOrigen.cantidad)\r\n        : 0;\r\n      let cantidadEnDestino: number = resultDestino\r\n        ? parseInt(resultDestino.cantidad)\r\n        : 0;\r\n      let cantidadEnNuevoOrigen: number = resultNuevoOrigen\r\n        ? parseInt(resultNuevoOrigen.cantidad)\r\n        : 0;\r\n      let cantidadNPOrigen: number = resultNuevoProductoOrigen\r\n        ? parseInt(resultNuevoProductoOrigen.cantidad)\r\n        : 0;\r\n      let cantidadNPOEnTiendaNuevoOrigen: number =\r\n        resultNuevoProductoNuevoOrigen\r\n          ? parseInt(resultNuevoProductoNuevoOrigen.cantidad)\r\n          : 0;\r\n\r\n      // Validar campos\r\n      // Caso solo se halla cambiado la cantidad\r\n      if (\r\n        idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n        idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails &&\r\n        idProductoDetails === idProductoAuxModificarDetails &&\r\n        cantidadNueva !== cantidadVieja\r\n      ) {\r\n        // La cantidad aumentó (Hoja: 1)\r\n        if (cantidadNueva >= cantidadVieja) {\r\n          if (cantidadNueva - cantidadVieja > cantidadEnOrigen) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No hay suficientes productos en la tienda origen para agregar a la tienda destino.\\n\";\r\n          }\r\n          // Si la cantidad disminuyó (Hoja: 2)\r\n        } else {\r\n          if (cantidadVieja - cantidadNueva > cantidadEnDestino) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No hay suficientes productos en la tienda destino para agregar a la tienda origen.\\n\";\r\n          }\r\n        }\r\n        // Caso que solo se halla cambiado la tiendaDestino\r\n      } else if (\r\n        idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n        idProductoDetails === idProductoAuxModificarDetails &&\r\n        idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails\r\n      ) {\r\n        // Caso en que se halla cambiado la tienda destino y la cantidad\r\n        if (cantidadNueva !== cantidadVieja) {\r\n          // La cantidad aumentó (Hoja: 3)\r\n          // La cantidad disminuyó (Hoja: 4)\r\n          if (cantidadNueva > cantidadEnDestino) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. La vieja tienda destino no tiene suficientes productos para darle a la nueva tienda destino.\\n\";\r\n          }\r\n          // Caso en que solo se halla cambiado la tienda destino sin modificar la cantidad (Hoja: 5)\r\n        } else {\r\n          if (cantidadEnDestino - cantidadVieja < 0) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No hay suficientes productos en la tienda destino vieja para pasarle a la nueva.\\n\";\r\n          }\r\n        }\r\n        // Caso que solo se halla cambiado la tiendaOrigen\r\n      } else if (\r\n        idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n        idProductoDetails === idProductoAuxModificarDetails &&\r\n        idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails\r\n      ) {\r\n        // Caso en que se halla cambiado la tienda origen y la cantidad\r\n        if (cantidadNueva !== cantidadVieja) {\r\n          // La cantidad aumentó (Hoja: 6)\r\n          // La cantidad disminuyó (Hoja: 7)\r\n          if (cantidadNueva > cantidadEnOrigen) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. La vieja tienda origen no tiene sificientes productos para darle a la nueva tienda destino.\\n\";\r\n          }\r\n          // Caso en que se halla cambiado la tienda origen sin modificar la camtidad (Hoja: 8)\r\n        } else {\r\n          if (cantidadEnOrigen - cantidadVieja < 0) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No hay suficientes productos en la tienda origen vieja para pasarle a la nueva.\\n\";\r\n          }\r\n        }\r\n        // Caso que se halla cambiado la tienda origen y la tienda destino\r\n      } else if (\r\n        idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n        idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails &&\r\n        idProductoDetails === idProductoAuxModificarDetails\r\n      ) {\r\n        // Caso que se halla cambiado la cantantidad, tienda origen y tienda destino\r\n        if (cantidadNueva !== cantidadVieja) {\r\n          // La cantidad aumentó (Hoja: 9)\r\n          // La cantidad disminuyó (Hoja: 10)\r\n          if (\r\n            cantidadVieja > cantidadEnDestino ||\r\n            cantidadNueva > cantidadEnNuevoOrigen\r\n          ) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No se puede restablecer la cantidad dada de los en las tiendas originales o no hay productos suficientes en la nueva tienda de origen para asignar a la nueva tienda destino.\\n\";\r\n          }\r\n          // Caso que se halla cambiado tienda origen y tienda destino sin cambiar la cantidad (Hoja: 11)\r\n        } else {\r\n          if (\r\n            cantidadVieja > cantidadEnDestino ||\r\n            cantidadVieja > cantidadEnNuevoOrigen\r\n          ) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No se puede restablecer los prouductos en las tiendas originales o no hay productos suficientes en la tienda de origen para asignar a la nueva tienda destino.\\n\";\r\n          }\r\n        }\r\n      } else if (idProductoDetails !== idProductoAuxModificarDetails) {\r\n        // Caso en que halla cambiado el producto\r\n\r\n        if (cantidadVieja > cantidadNPOrigen) {\r\n          // Esta condición es generica simepre que se modifique algo con el producto\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Operación inválida. No hay suficientes productos viejos en la tienda vieja para modificar el producto a uno nuevo.\\n\";\r\n        } else {\r\n          if (\r\n            idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n            idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails &&\r\n            cantidadNueva === cantidadVieja\r\n          ) {\r\n            if (cantidadVieja > cantidadNPOrigen) {\r\n              // Solamente ha cambido el producto y nada más (Hoja 12)\r\n              flag = false;\r\n              validarCampos +=\r\n                \"-Operación inválida. No hay suficientes productos nuevos en la tienda vieja para modificar el producto a uno nuevo.\\n\";\r\n            }\r\n          } else if (cantidadVieja !== cantidadNueva) {\r\n            if (\r\n              idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n              idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails &&\r\n              cantidadNueva !== cantidadVieja\r\n            ) {\r\n              if (cantidadNueva > cantidadNPOrigen) {\r\n                // Cambió solo la cantidad y el producto(Hoja 16)\r\n                flag = false;\r\n                validarCampos +=\r\n                  \"-Operación inválida. No hay sificientes productos en la tienda origen con la cantidad dada.\\n\";\r\n              }\r\n            } else if (\r\n              idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n              idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails &&\r\n              cantidadNueva !== cantidadVieja\r\n            ) {\r\n              if (cantidadNueva > cantidadNPOEnTiendaNuevoOrigen) {\r\n                // Cambió la cantidad y el origen (Hoja 17)\r\n                flag = false;\r\n                validarCampos +=\r\n                  \"-Operación inválida. No hay esa cantidad de productos en la tienda origen especificada.\\n\";\r\n              }\r\n            } else if (\r\n              idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n              idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails &&\r\n              cantidadNueva !== cantidadVieja\r\n            ) {\r\n              if (cantidadNueva > cantidadNPOrigen) {\r\n                // Cambió la cantidad y el origen (Hoja 19)\r\n                flag = false;\r\n                validarCampos +=\r\n                  \"-Operación inválida. No hay esa cantidad de productos en la tienda origen seleccionada.\\n\";\r\n              }\r\n            } else if (\r\n              idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n              idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails &&\r\n              cantidadNueva !== cantidadVieja\r\n            ) {\r\n              if (cantidadNueva > cantidadNPOEnTiendaNuevoOrigen) {\r\n                // Cambió la cantidad, tienda origen, tienda destino, todo (Hoja 18)\r\n                flag = false;\r\n                validarCampos +=\r\n                  \"-Operación inválida. No hay esa cantidad de productos en la tienda origen seleccionada.\\n\";\r\n              }\r\n            }\r\n          } else {\r\n            if (\r\n              idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails ||\r\n              idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails\r\n            ) {\r\n              // Se cambió el producto y alguna tienda\r\n              if (\r\n                idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n                idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails\r\n              ) {\r\n                // Se cambió la tienda origen y destino y el producto\r\n                if (cantidadVieja > cantidadNPOEnTiendaNuevoOrigen) {\r\n                  // Se cambiaron el origen y el destino (Hoja 13)\r\n                  flag = false;\r\n                  validarCampos +=\r\n                    \"-Operación inválida. No hay sificintes productos nuevos en la nueva tienda origen.\\n\";\r\n                }\r\n              } else if (\r\n                idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n                idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails\r\n              ) {\r\n                if (cantidadVieja > cantidadNPOEnTiendaNuevoOrigen) {\r\n                  // Se cambió la tienda origen y el producto (Hoja 14)\r\n                  flag = false;\r\n                  validarCampos +=\r\n                    \"-Operación inválida. No hay sificintes productos nuevos en la nueva tienda origen.\\n\";\r\n                }\r\n              } else {\r\n                if (cantidadVieja > cantidadNPOEnTiendaNuevoOrigen) {\r\n                  // Se cambió la tienda destino y el producto (Hoja 15)\r\n                  flag = false;\r\n                  validarCampos +=\r\n                    \"-Operación inválida. No hay sificintes productos nuevos en la nueva tienda origen.\\n\";\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (idTiendaDestinoDetails === idTiendaOrigenDetails) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-La tienda origen no puede ser igual a la tienda destino.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaOrigenDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda Origen.\\n\";\r\n      }\r\n      if (idTiendaDestinoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda Destino.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n\r\n      ///////////////////////////\r\n      if (flag) {\r\n        await updateMovimiento(\r\n          usuario.token,\r\n          idMovimientoDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          idTiendaOrigenDetails,\r\n          idTiendaDestinoDetails,\r\n          cantidadDetails,\r\n          idProductoDetails,\r\n          idUsuarioDetails\r\n        );\r\n\r\n        if (\r\n          idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n          idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails &&\r\n          idProductoDetails === idProductoAuxModificarDetails &&\r\n          cantidadNueva !== cantidadVieja\r\n        ) {\r\n          // La cantidad aumentó (Hoja: 1)\r\n          // Si la cantidad disminuyó (Hoja: 2)\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            String(cantidadNueva - cantidadVieja)\r\n          );\r\n\r\n          // Caso que solo se halla cambiado la tiendaDestino\r\n        } else if (\r\n          idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n          idProductoDetails === idProductoAuxModificarDetails &&\r\n          idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails\r\n        ) {\r\n          // La cantidad aumentó (Hoja: 3)\r\n          // La cantidad disminuyó (Hoja: 4)\r\n          await createProductoInTienda(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDestinoDetails\r\n          );\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            String(cantidadVieja)\r\n          );\r\n\r\n          // Nuevo movimiento\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            idTiendaDestinoDetails,\r\n            String(cantidadNueva)\r\n          );\r\n\r\n          // Caso que solo se halla cambiado la tiendaOrigen\r\n        } else if (\r\n          idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n          idProductoDetails === idProductoAuxModificarDetails &&\r\n          idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails\r\n        ) {\r\n          // La cantidad aumentó (Hoja: 6)\r\n          // La cantidad disminuyó (Hoja: 7)\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            String(cantidadVieja)\r\n          );\r\n\r\n          // Nuevo movimiento\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaOrigenDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            String(cantidadNueva)\r\n          );\r\n\r\n          // Caso que se halla cambiado la tienda origen y la tienda destino\r\n        } else if (\r\n          idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n          idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails &&\r\n          idProductoDetails === idProductoAuxModificarDetails\r\n        ) {\r\n          // La cantidad aumentó (Hoja: 9)\r\n          // La cantidad disminuyó (Hoja: 10)\r\n          await createProductoInTienda(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDestinoDetails\r\n          );\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            String(cantidadVieja)\r\n          );\r\n\r\n          // Nuevo movimiento\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaOrigenDetails,\r\n            idTiendaDestinoDetails,\r\n            String(cantidadNueva)\r\n          );\r\n        } else if (idProductoDetails !== idProductoAuxModificarDetails) {\r\n          // Caso en que halla cambiado el producto\r\n          await createProductoInTienda(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDestinoDetails\r\n          );\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            String(cantidadVieja)\r\n          );\r\n\r\n          // Nuevo movimiento\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaOrigenDetails,\r\n            idTiendaDestinoDetails,\r\n            String(cantidadNueva)\r\n          );\r\n        }\r\n\r\n        const auxNombreProductoAccion = dropdownItemsNombreproducto.find(\r\n          (element) => {\r\n            return (\r\n              parseInt(element.value) ===\r\n              parseInt(idProductoAuxModificarDetails)\r\n            );\r\n          }\r\n        );\r\n        // Agregar Acción de usuario eliminar producto\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó un movimiento de productos que originalmente tenía un nombre ${auxNombreProductoAccion.lavel}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          2\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El movimiento se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setModalMovimientosDates(false)\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para eliminar proveedor\r\n  const eliminarMovimiento = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando movimiento. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL TRATAR DE ELIMINAR EL MOVIMIENTO. Motivos:\\n\";\r\n      const resultDestino = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaDestinoAuxModificarDetails\r\n      );\r\n      let cantidadEnTiendaDestino: number = resultDestino\r\n        ? parseInt(resultDestino.cantidad)\r\n        : 0;\r\n      let cantidadVieja: number = parseInt(cantidadAuxModificarDetails);\r\n\r\n      if (cantidadVieja > cantidadEnTiendaDestino) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No hay suficientes productos en la tienda destino para devolver la operación.\\n\";\r\n      }\r\n      if (flag) {\r\n        await moverProducto(\r\n          usuario.token,\r\n          idProductoAuxModificarDetails,\r\n          idTiendaDestinoAuxModificarDetails,\r\n          idTiendaOrigenAuxModificarDetails,\r\n          String(cantidadVieja)\r\n        );\r\n\r\n        await deleteMovimiento(usuario.token, idMovimientoDetails);\r\n\r\n        const auxNombreProductoAccion = dropdownItemsNombreproducto.find(\r\n          (element) => {\r\n            return (\r\n              parseInt(element.value) ===\r\n              parseInt(idProductoAuxModificarDetails)\r\n            );\r\n          }\r\n        );\r\n        const auxNombreTiendaOrigen = dropdownItemsNombreTienda.find(\r\n          (element) => {\r\n            return parseInt(element.value) === parseInt(idTiendaOrigenDetails);\r\n          }\r\n        );\r\n        const auxNombreTiendaDestino = dropdownItemsNombreTienda.find(\r\n          (element) => {\r\n            return parseInt(element.value) === parseInt(idTiendaDestinoDetails);\r\n          }\r\n        );\r\n        // Agregar Acción de usuario eliminar producto\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó el movimiento del producto ${auxNombreProductoAccion?.label} con cantidad ${cantidadDetails} y tienda origen ${auxNombreTiendaOrigen?.label} y una tienda destino ${auxNombreTiendaDestino?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          2\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El movimiento se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Usuario\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Tienda Origen\",\r\n    \"Tienda Destino\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Usuario\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Tienda Origen\",\r\n    \"Tienda Destino\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableMovimientos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                    <Text style={styles.textSearchMovil}>\r\n                      Nombre del Usuario:\r\n                    </Text>\r\n                  )}\r\n                  {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFullMovil}\r\n                      placeholder=\"Nombre del usuario\"\r\n                      value={nombreUsuarioSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={setNombreUsuarioSearch}\r\n                    />\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                    <View style={styles.separatorBlanco} />\r\n                  )}\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Cantidad:</Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Cantidad\"\r\n                    value={cantidadSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setCantidadSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadViewTiendasSearsh,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        flex: 1,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 22,\r\n                          fontWeight: \"bold\",\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Tienda:\r\n                      </Text>\r\n                    </View>\r\n\r\n                    {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                      <Text style={styles.textSearchMovil}>Origen:</Text>\r\n                    )}\r\n                    {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                      <View\r\n                        style={{\r\n                          width: \"100%\",\r\n                          zIndex: capaPrioridadTiendaOrigenSearsh,\r\n                          position: \"relative\",\r\n                        }}\r\n                      >\r\n                        <CustomDropdown\r\n                          value={tiendaOrigenSearch}\r\n                          placeholder=\"Tienda Origen\"\r\n                          setValue={setTiendaOrigenSearch}\r\n                          items={dropdownItemsNombreTienda}\r\n                          searchable={true}\r\n                          onDropdownOpen={() =>\r\n                            controlarCapas(\"TiendaOrigenSearsh\")\r\n                          }\r\n                        />\r\n                      </View>\r\n                    )}\r\n\r\n                    <Text style={styles.textSearchMovil}>Destino:</Text>\r\n                    <View\r\n                      style={{\r\n                        width: \"100%\",\r\n                        zIndex: capaPrioridadTiendaDestinoSearsh,\r\n                        position: \"relative\",\r\n                      }}\r\n                    >\r\n                      <CustomDropdown\r\n                        value={tiendaDestinoSearch}\r\n                        placeholder=\"Tienda Destino\"\r\n                        setValue={setTiendaDestinoSearch}\r\n                        items={dropdownItemsNombreTienda}\r\n                        searchable={true}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"TiendaDestinoSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\"\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadViewTiendasSearsh,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 20,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                      />\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 20,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarMovimientos(\r\n                            `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                            `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                          );\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalMovimientosDates?.isAddMovimiento ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddMovimiento}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddMovimiento}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalMovimientosDates?.id_movimiento === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos del Movimiento\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View style={{ width: \"100%\" }}>\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Usuario\r\n                  </Text>\r\n                </View>\r\n                <View style={{ width: \"100%\" }}>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 16,\r\n                      marginTop: \"3%\",\r\n                      marginLeft: \"6%\",\r\n                      fontWeight: \"bold\",\r\n                      color: Colors.negro, // Color del texto\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                    }}\r\n                  >\r\n                    {nombreUsuarioDetails}\r\n                  </Text>\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Productos\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    searchable={true}\r\n                    readOnly={!isMovimientoEditable}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor Tieda Origen y Teinda Destino */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1200, position: \"relative\" }}\r\n                ></View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalMovil}>\r\n                      Tienda Origen\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaOrigenDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setIdTiendaOrigenDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      searchable={true}\r\n                      readOnly={\r\n                        !(\r\n                          isMovimientoEditable &&\r\n                          isPermisoOpcionesDeCeldaMoverGeneral\r\n                        )\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalMovil}>\r\n                      Tienda Destino\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDestinoDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setIdTiendaDestinoDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      searchable={true}\r\n                      readOnly={!isMovimientoEditable}\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad*/}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalMovil}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isPermisoModificarMovimiento}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n                <View style={{ height: 100 }}>\r\n                  {isDateLoaded && (\r\n                    <MyDateInput\r\n                      dayValue={fechaDiaDetails}\r\n                      monthValue={fechaMesDetails}\r\n                      yearValue={fechaAnnoDetails}\r\n                      onDayChange={setFechaDiaDetails}\r\n                      onMonthChange={setFechaMesDetails}\r\n                      onYearChange={setFechaAnnoDetails}\r\n                      style={{ margin: 20 }}\r\n                      styleText={styles.labelTextModalMovil}\r\n                      isReadOnly={!isMovimientoEditable}\r\n                    />\r\n                  )}\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar movimiento */}\r\n                  {isPermisoModificarMovimiento &&\r\n                    isMovimientoEditable &&\r\n                    modalMovimientosDates?.id_movimiento !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este movimiento?`\r\n                          );\r\n                          setModalMovimientosDates({\r\n                            id_movimiento: \"\",\r\n                            isAddMovimiento: false,\r\n                            isModificarMovimiento: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Movimiento\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar movimiento */}\r\n                  {isPermisoEliminarMovimiento &&\r\n                    isMovimientoEliminable &&\r\n                    modalMovimientosDates?.id_movimiento !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR este movimiento?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalMovimientosDates({\r\n                            id_movimiento: \"\",\r\n                            isAddMovimiento: false,\r\n                            isModificarMovimiento: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Movimiento\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarMovimiento()\r\n                      : modificarMovimiento()\r\n                  }\r\n                  disabled={isButtonDisabled}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Entradas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n              <Text style={styles.textSearchDesktop}>Nombre del Usuario:</Text>\r\n            )}\r\n            {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFullDesktop}\r\n                placeholder=\"Nombre del usuario\"\r\n                onKeyPress={handleKeyPress}\r\n                value={nombreUsuarioSearch}\r\n                onChangeText={setNombreUsuarioSearch}\r\n              />\r\n            )}\r\n\r\n            {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n              <View style={styles.separatorBlanco} />\r\n            )}\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Cantidad:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Cantidad\"\r\n              value={cantidadSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setCantidadSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                position: \"relative\",\r\n                zIndex: capaPrioridadViewTiendasSearsh,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    fontWeight: \"bold\",\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Tienda:\r\n                </Text>\r\n              </View>\r\n\r\n              <Text style={styles.textSearchDesktop}>Origen:</Text>\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  zIndex: capaPrioridadTiendaOrigenSearsh,\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <CustomDropdown\r\n                  value={tiendaOrigenSearch}\r\n                  placeholder=\"Tienda Origen\"\r\n                  setValue={setTiendaOrigenSearch}\r\n                  items={dropdownItemsNombreTienda}\r\n                  direction=\"BOTTOM\"\r\n                  onDropdownOpen={() => controlarCapas(\"TiendaOrigenSearsh\")}\r\n                />\r\n              </View>\r\n\r\n              <Text style={styles.textSearchDesktop}>Destino:</Text>\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  zIndex: capaPrioridadTiendaDestinoSearsh,\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <CustomDropdown\r\n                  value={tiendaDestinoSearch}\r\n                  placeholder=\"Tienda Destino\"\r\n                  setValue={setTiendaDestinoSearch}\r\n                  items={dropdownItemsNombreTienda}\r\n                  direction=\"BOTTOM\"\r\n                  onDropdownOpen={() => controlarCapas(\"TiendaDestinoSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\"\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                zIndex: capaPrioridadViewFechaSearsh,\r\n                position: \"relative\",\r\n                marginTop: \"2%\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => {\r\n                    filtrarYOrdenarMovimientos(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    );\r\n                  }}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableMovimientos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalMovimientosDates?.isAddMovimiento ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddMovimiento}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddMovimiento}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalMovimientosDates?.id_movimiento === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos del Movimiento\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View style={{ width: \"100%\" }}>\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Usuario\r\n                  </Text>\r\n                </View>\r\n                <View style={{ width: \"100%\" }}>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 16,\r\n                      marginTop: \"3%\",\r\n                      marginLeft: \"6%\",\r\n                      fontWeight: \"bold\",\r\n                      color: Colors.negro, // Color del texto\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                    }}\r\n                  >\r\n                    {nombreUsuarioDetails}\r\n                  </Text>\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadViewProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadViewProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Productos\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    readOnly={!isMovimientoEditable}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProductosDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor Tieda Origen y Teinda Destino */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                ></View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadViewTiendasDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda Origen\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaOrigenDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setIdTiendaOrigenDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={\r\n                        !(\r\n                          isMovimientoEditable &&\r\n                          isPermisoOpcionesDeCeldaMoverGeneral\r\n                        )\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() => controlarCapas(\"TiendasDetails\")}\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda Destino\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDestinoDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setIdTiendaDestinoDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={!isMovimientoEditable}\r\n                      searchable={true}\r\n                      onDropdownOpen={() => controlarCapas(\"TiendasDetails\")}\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad*/}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadViewFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isMovimientoEditable}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Fecha */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadViewFechaDetails,\r\n                    }}\r\n                  >\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        isReadOnly={!isMovimientoEditable}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 10, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar movimiento */}\r\n                  {isPermisoModificarMovimiento &&\r\n                    isMovimientoEditable &&\r\n                    modalMovimientosDates?.id_movimiento !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este movimiento?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Movimiento\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Botón para eliminar movimiento */}\r\n                  {isPermisoEliminarMovimiento &&\r\n                    isMovimientoEliminable &&\r\n                    modalMovimientosDates?.id_movimiento !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR este movimiento?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalMovimientosDates({\r\n                            id_movimiento: \"\",\r\n                            isAddMovimiento: false,\r\n                            isModificarMovimiento: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Movimiento\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarMovimiento()\r\n                      : modificarMovimiento()\r\n                  }\r\n                  disabled={isButtonDisabled}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Movimientos\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { UsuarioTabla } from '../components/MyDateTableUsuarios';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortUsuarios {\r\n  items: UsuarioTabla[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortUsuariosContextType {\r\n  sortUsuarios: SortUsuarios | null;\r\n  setSortUsuarios: (sortUsuarios: SortUsuarios | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortUsuariosContext = createContext<SortUsuariosContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortUsuariosProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortUsuarios, setSortUsuarios] = useState<SortUsuarios | null>(null);\r\n\r\n  return (\r\n    <SortUsuariosContext.Provider value={{ sortUsuarios: sortUsuarios, setSortUsuarios: setSortUsuarios }}>\r\n      {children}\r\n    </SortUsuariosContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortUsuarios = () => {\r\n  const context = React.useContext(SortUsuariosContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortUsuarios debe usarse dentro de un SortUsuarios');\r\n  }\r\n  return context;\r\n};","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\nimport { useSortUsuarios } from \"../contexts/AuxiliarSortUsuarios\";\r\n\r\nexport interface UsuarioTabla {\r\n  id_Usuario: string;\r\n  nombre: string;\r\n  nombre_Usuario: string;\r\n  correo?: string;\r\n  telefono?: string;\r\n  direccion?: string;\r\n  carnet_Identidad?: string;\r\n  detalle_bancario?: string;\r\n  id_rol: string;\r\n  nombre_rol: string;\r\n  id_tienda: string;\r\n  nombre_tienda: string;\r\n}\r\n\r\nexport interface ProveedorPiker {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface Props {\r\n  items: UsuarioTabla[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableProveedorModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableUsuarios: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n  const { sortUsuarios, setSortUsuarios } = useSortUsuarios();\r\n  const { usuario, setUsuario } = useUsuario();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(10);\r\n  const [displayedItems, setDisplayedItems] = React.useState<UsuarioTabla[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_producto: string) => {\r\n    setModalProveedoresDates({\r\n      id_proveedor: id_producto,\r\n      isAddProveedor: true,\r\n      fileEditable: false,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: true,\r\n      isDetallesProveedores: true,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  const resultadoCondicionalOpcionesDeCelda = (item: UsuarioTabla) => {\r\n    if (usuario?.id_rol) {\r\n      return (usuario.id_rol == \"1\" && isPermisoOpcionesDeCelda) ||\r\n        (usuario.id_rol == \"2\" && isPermisoOpcionesDeCelda)\r\n        ? true\r\n        : item.telefono && isPermisoOpcionesDeCelda\r\n        ? true\r\n        : false;\r\n    }\r\n  };\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n    // Auxliliar para ordenar entradas\r\n    const sortEntradasAux = (column: string) => {\r\n      let aux = \"\";\r\n  \r\n      // Lógica para determinar el criterioOrden\r\n      if (column === \"Nombre\") {\r\n        aux = \"option3\";\r\n      } else if (column === \"Correo\") {\r\n        aux = \"option4\";\r\n      } else if (column === \"Teléfono\") {\r\n        aux = \"option5\";\r\n      }\r\n  \r\n      // Llamamos a setSortProductos con el nuevo valor\r\n      setSortUsuarios({\r\n        items: items,\r\n        criterioOrden: aux,\r\n        tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n      });\r\n    };\r\n    \r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre\" ||\r\n              column === \"Correo\" ||\r\n              column === \"Teléfono\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortEntradasAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idProductoOption, setIdProductoOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdProductoOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalProveedoresDates({\r\n        id_proveedor: idProductoOption,\r\n        isAddProveedor: true,\r\n        fileEditable: true,\r\n        isModificarProveedor: true,\r\n        isAddProductoShowProveedoresTiendas: true,\r\n        isDetallesProveedores: true,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Usuario !== idProductoOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idProductoOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Usuario}\r\n                onPress={() => detailsModalView(item.id_Usuario)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.telefono}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Teléfono */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombre_rol}</Text>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombre_tienda}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idProductoOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Usuario}\r\n                onPress={() => detailsModalView(item.id_Usuario)}\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                        textAlign: \"center\",\r\n                        textAlignVertical: \"center\",\r\n                        width: \"100%\",\r\n                        flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                        textAlign: \"center\",\r\n                        textAlignVertical: \"center\",\r\n                        width: \"100%\",\r\n                        flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.telefono}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Teléfono */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    justifyContent: \"center\", // Centrar horizontalmente\r\n                    alignItems: \"center\", // Centrar verticalmente\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text>{item.nombre_rol}</Text>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    justifyContent: \"center\", // Centrar horizontalmente\r\n                    alignItems: \"center\", // Centrar verticalmente\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text>{item.nombre_tienda}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 16,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport {\r\n  PanGestureHandler,\r\n  PanGestureHandlerGestureEvent,\r\n} from \"react-native-gesture-handler\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { getAllRol, isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\nimport {\r\n  EntradaShowModal,\r\n  MyDateTableModalShowDatesEntradas,\r\n} from \"../components/MyDateTableModalShowDatesEntradas\";\r\nimport { getAllEntradasByProveedorId } from \"../services/EntradaServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  MyDateTableUsuarios,\r\n  UsuarioTabla,\r\n} from \"../components/MyDateTableUsuarios\";\r\nimport {\r\n  actualizarUsuarioConContraseña,\r\n  actualizarUsuarioSinContraseña,\r\n  addUsuario,\r\n  deleteUsuario,\r\n  filtrarUsuario,\r\n  getAllUsuarios,\r\n  getUsuarioById,\r\n  ordenarUsuarios,\r\n} from \"../services/UsuarioServices\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport { HomeScreen } from \"./HomeScreen\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useSortUsuarios } from \"../contexts/AuxiliarSortUsuarios\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\nimport React from \"react\";\r\n\r\nexport default function UsuariosView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables auxiliares para controlar el despliege de los dropDownsPiers\r\n  const [capaPrioridadTiendasSearsh, setCapaPrioridadTiendasSearsh] =\r\n    useState(500);\r\n  const [capaPrioridadRolesSearsh, setCapaPrioridadRolesSearsh] = useState(500);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    if (prioridad === \"TiendasSearsh\") {\r\n      setCapaPrioridadRolesSearsh(1500);\r\n      setCapaPrioridadTiendasSearsh(2000);\r\n    } else if (prioridad === \"RolesSearsh\") {\r\n      setCapaPrioridadRolesSearsh(2000);\r\n      setCapaPrioridadTiendasSearsh(1500);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortUsuarios } = useSortUsuarios();\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar proovedores y ver datos\r\n  const [dropdownItemsTiendasDetails, setDropDownItemsTiendasDetails] =\r\n    useState<TiendaPiker[]>([]);\r\n  const [dropdownItemsRolesDetails, setDropDownItemsRolesDetails] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [idUsuarioDetails, setIdusuarioDetails] = useState(\"\");\r\n  const [nombreDelUsuarioDetails, setNombreDelUsuarioDetails] = useState(\"\");\r\n  const [nombreUsuarioDetails, setNombreUsuarioDetails] = useState(\"\");\r\n  const [nombreUsuarioDetailsOriginal, setNombreUsuarioDetailsOriginal] =\r\n    useState(\"\");\r\n  const [correoEmailUsuarioDetails, setCorreoEmailUsuarioDetails] =\r\n    useState(\"\");\r\n  const [contrasennaUsuarioDetails, setContrasennaUsuarioDetails] =\r\n    useState(\"\");\r\n  const [CarnetIdentidadUsuarioDetails, setCarnetIdentidadUsuarioDetails] =\r\n    useState(\"\");\r\n  const [direccionUsuarioDetails, setDireccionUsuarioDetails] = useState(\"\");\r\n  const [telefonoUsuarioDetails, setTelefonoUsuarioDetails] = useState(\"\");\r\n  const [detallesBancariosUsuarioDetils, setDetallesBancariosUsuarioDetils] =\r\n    useState(\"\");\r\n  const [tiendaUsuarioDetails, setTiendaUsuarioDetails] = useState(\"\");\r\n  const [rolUsuarioDetails, setRolUsuarioDetails] = useState(\"\");\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n\r\n  const options = [\r\n    { label: \"Permitido\", value: \"permitido\" },\r\n    { label: \"Denegado\", value: \"denegado\" },\r\n  ];\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [isModalChekEliminarVisible, setIsModalChekEliminarVisible] =\r\n    useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarProveedor, setIsPermisoAgregarProveedor] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarProveedor, setIsPermisoEliminarProveedor] =\r\n    React.useState(false);\r\n  const [isPermisoModificarProveedor, setIsPermisoModificarProveedor] =\r\n    React.useState(false);\r\n  const [isPermisoModificarGerarquico, setIsPermisoModificarGerarquico] =\r\n    useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarUsuario = await isPermiso(\r\n        usuario.token,\r\n        \"1\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultEliminarUsuario = await isPermiso(\r\n        usuario.token,\r\n        \"3\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarUsuario = await isPermiso(\r\n        usuario.token,\r\n        \"2\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      setIsPermisoAgregarProveedor(resultAgregarUsuario);\r\n      setIsPermisoEliminarProveedor(resultEliminarUsuario);\r\n      setIsPermisoModificarProveedor(resultModificarUsuario);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [entradasByProveedor, setEntradasByProveedor] = useState<\r\n    EntradaShowModal[]\r\n  >([]);\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<UsuarioTabla[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsTiendasSearsh, setDropDownItemsTiendasSearsh] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [dropdownItemsRolesSearsh, setDropDownItemsRolesSearsh] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [tiendaNombreSeleccionadaSearch, setTiendaNombreSeleccionadaSearch] =\r\n    useState(\"\");\r\n  const [rolNombreSeleccionadoSearsh, setRolNombreSeleccionadoSearsh] =\r\n    useState(\"\");\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreUsuarioSearch, setNombreUsuarioSearch] = useState(\"\");\r\n  const [correoEmyleSearch, setCorreoEmyleSearch] = useState(\"\");\r\n  const [telefonoSearch, setTelefonoSearch] = useState(\"\");\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getDatesTiendaPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsTiendasSearsh([\r\n          { label: \"Seleccione una tienda\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getDatesRolesPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllRol(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const rolesMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_rol,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsRolesSearsh([\r\n          { label: \"Seleccione un rol\", value: \"\" },\r\n          ...rolesMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getDatesTiendasAndRolesParaAgregarUsuario = async () => {\r\n    // Cargar datos de los dropDown\r\n    if (usuario?.token != undefined) {\r\n      const resultTiendas = await getAllTiendas(usuario.token);\r\n      const resultRoles = await getAllRol(usuario.token);\r\n\r\n      if (\r\n        resultTiendas &&\r\n        Array.isArray(resultTiendas.data) &&\r\n        resultRoles &&\r\n        Array.isArray(resultRoles)\r\n      ) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          resultTiendas.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n        const rolesMapeados: TiendaPiker[] = await Promise.all(\r\n          resultRoles\r\n            .filter((element: any) => {\r\n              if (parseInt(usuario.id_rol) === 1) {\r\n                return parseInt(element.id_rol) !== 1;\r\n              } else if (parseInt(usuario.id_rol) === 2) {\r\n                return (\r\n                  parseInt(element.id_rol) !== 1 &&\r\n                  parseInt(element.id_rol) !== 2\r\n                );\r\n              } else if (parseInt(usuario.id_rol) === 3) {\r\n                return (\r\n                  parseInt(element.id_rol) !== 1 &&\r\n                  parseInt(element.id_rol) !== 2 &&\r\n                  parseInt(element.id_rol) !== 3\r\n                );\r\n              }\r\n              return true; // Si el rol es diferente de 1, 2 o 3, no se aplica ningún filtro\r\n            })\r\n            .map(async (element: any) => ({\r\n              label: element.nombre,\r\n              value: element.id_rol,\r\n            }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsTiendasDetails(tiendasMapeados);\r\n        setDropDownItemsRolesDetails(rolesMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = async () => {\r\n    setNombreDelUsuarioDetails(\"\");\r\n    setNombreUsuarioDetails(\"\");\r\n    setNombreUsuarioDetailsOriginal(\"\");\r\n    setDireccionUsuarioDetails(\"\");\r\n    setTelefonoUsuarioDetails(\"\");\r\n    setCarnetIdentidadUsuarioDetails(\"\");\r\n    setCorreoEmailUsuarioDetails(\"\");\r\n    setDetallesBancariosUsuarioDetils(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: false,\r\n      isModificarProveedor: false,\r\n      fileEditable: true,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n  };\r\n  const cargarDetailsOfUsuario = async () => {\r\n    if (usuario?.token && modalProveedoresDates?.id_proveedor) {\r\n      const result = await getUsuarioById(\r\n        usuario.token,\r\n        modalProveedoresDates.id_proveedor\r\n      );\r\n\r\n      if (result) {\r\n        setIdusuarioDetails(result.data.id_usuario);\r\n        setNombreUsuarioDetails(result.data.nombre_usuario);\r\n        setNombreUsuarioDetailsOriginal(result.data.nombre_usuario);\r\n        setNombreDelUsuarioDetails(result.data.nombre);\r\n        setDireccionUsuarioDetails(result.data.direccion || \"\");\r\n        setTelefonoUsuarioDetails(result.data.telefono || \"\");\r\n        setCarnetIdentidadUsuarioDetails(result.data.carnet_identidad || \"\");\r\n        setCorreoEmailUsuarioDetails(result.data.email || \"\");\r\n        setDetallesBancariosUsuarioDetils(result.data.detalle_bancario || \"\");\r\n        setSelecterActivoDetails(result.data.activo ? \"permitido\" : \"denegado\");\r\n\r\n        // Cargar datos de los dropDown\r\n        if (usuario?.token != undefined) {\r\n          const resultTiendas = await getAllTiendas(usuario.token);\r\n          const resultRoles = await getAllRol(usuario.token);\r\n\r\n          if (\r\n            resultTiendas &&\r\n            Array.isArray(resultTiendas.data) &&\r\n            resultRoles &&\r\n            Array.isArray(resultRoles)\r\n          ) {\r\n            const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n              resultTiendas.data.map(async (element: any) => ({\r\n                label: element.nombre,\r\n                value: element.id_tienda,\r\n              }))\r\n            );\r\n\r\n            if (\r\n              !(parseInt(usuario.id_rol) >= parseInt(result.data.rol.id_rol))\r\n            ) {\r\n              const rolesMapeados: TiendaPiker[] = await Promise.all(\r\n                resultRoles\r\n                  .filter((element: any) => {\r\n                    if (parseInt(usuario.id_rol) === 1) {\r\n                      return parseInt(element.id_rol) !== 1;\r\n                    } else if (parseInt(usuario.id_rol) === 2) {\r\n                      return (\r\n                        parseInt(element.id_rol) !== 1 &&\r\n                        parseInt(element.id_rol) !== 2\r\n                      );\r\n                    } else if (parseInt(usuario.id_rol) === 3) {\r\n                      return (\r\n                        parseInt(element.id_rol) !== 1 &&\r\n                        parseInt(element.id_rol) !== 2 &&\r\n                        parseInt(element.id_rol) !== 3\r\n                      );\r\n                    }\r\n                    return true; // Si el rol es diferente de 1, 2 o 3, no se aplica ningún filtro\r\n                  })\r\n                  .map(async (element: any) => ({\r\n                    label: element.nombre,\r\n                    value: element.id_rol,\r\n                  }))\r\n              );\r\n\r\n              setDropDownItemsRolesDetails(rolesMapeados);\r\n            } else {\r\n              const rolesMapeados: TiendaPiker[] = await Promise.all(\r\n                resultRoles.map(async (element: any) => ({\r\n                  label: element.nombre,\r\n                  value: element.id_rol,\r\n                }))\r\n              );\r\n\r\n              setDropDownItemsRolesDetails(rolesMapeados);\r\n            }\r\n\r\n            // Agregar un valor adicional para el valor inicial\r\n            setDropDownItemsTiendasDetails(tiendasMapeados);\r\n          }\r\n\r\n          setTiendaUsuarioDetails(result.data.tienda.id_tienda);\r\n          setRolUsuarioDetails(result.data.rol.id_rol);\r\n\r\n          if (parseInt(usuario.id_rol) >= parseInt(result.data.rol.id_rol)) {\r\n            setIsPermisoModificarGerarquico(false);\r\n          } else {\r\n            setIsPermisoModificarGerarquico(true);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<UsuarioTabla[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarUsuario(\r\n          usuario.token,\r\n          nombreUsuarioSearch,\r\n          correoEmyleSearch,\r\n          telefonoSearch,\r\n          rolNombreSeleccionadoSearsh,\r\n          tiendaNombreSeleccionadaSearch\r\n        );\r\n\r\n        if (result) {\r\n          const usuariosMapeados: UsuarioTabla[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Usuario: element.id_usuario,\r\n              nombre: element.nombre,\r\n              nombre_Usuario: element.nombre_usuario,\r\n              correo: element.email ?? \"\",\r\n              telefono: element.telefono ?? \"\",\r\n              direccion: element.direccion ?? \"\",\r\n              carnet_Identidad: element.carnet_identidad ?? \"\",\r\n              detalle_bancario: element.detalle_bancario ?? \"\",\r\n              id_rol: element.rol.id_rol,\r\n              nombre_rol: element.rol.nombre,\r\n              id_tienda: element.tienda.id_tienda,\r\n              nombre_tienda: element.tienda.nombre,\r\n            }))\r\n          );\r\n          return usuariosMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    filtrarYOrdenarUsuarios();\r\n  }, [sortUsuarios, selectedOptionTipoOrden]);\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfUsuario();\r\n  }, [modalProveedoresDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosUsuarios = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllUsuarios(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: UsuarioTabla[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Usuario: element.id_usuario,\r\n                nombre: element.nombre,\r\n                nombre_Usuario: element.nombre_usuario,\r\n                correo: element.email || \"\",\r\n                telefono: element.telefono || \"\",\r\n                direccion: element.direccion || \"\",\r\n                carnet_Identidad: element.carnet_identidad || \"\",\r\n                detalle_bancario: element.detalles_bancarios || \"\",\r\n                id_rol: element.rol.id_rol,\r\n                nombre_rol: element.rol.nombre,\r\n                id_tienda: element.tienda.id_tienda,\r\n                nombre_tienda: element.tienda.nombre,\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron proveedoress.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener los proveedores o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de los proveedores\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de los proovedores\"\r\n      );\r\n    }\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarUsuarios();\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosUsuarios();\r\n        getDatesTiendaPiker();\r\n        getDatesRolesPiker();\r\n        getDatesTiendasAndRolesParaAgregarUsuario();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarUsuarios = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let productosFiltrados: UsuarioTabla[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortUsuarios?.criterioOrden && sortUsuarios.tipoOrden) {\r\n          productosFiltrados = await ordenarUsuarios(\r\n            usuario.token,\r\n            productosFiltrados,\r\n            sortUsuarios.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(productosFiltrados);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const auxSetModalProovedoresDates = async () => {\r\n    setNombreUsuarioDetails(\"\");\r\n    setNombreUsuarioDetailsOriginal(\"\");\r\n    setCorreoEmailUsuarioDetails(\"\");\r\n    setDireccionUsuarioDetails(\"\");\r\n    setTelefonoUsuarioDetails(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: true,\r\n      fileEditable: true,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n\r\n    if (usuario?.token) {\r\n      const resultRoles = await getAllRol(usuario.token);\r\n      const rolesMapeados: TiendaPiker[] = await Promise.all(\r\n        resultRoles\r\n          .filter((element: any) => {\r\n            if (parseInt(usuario.id_rol) === 1) {\r\n              return parseInt(element.id_rol) !== 1;\r\n            } else if (parseInt(usuario.id_rol) === 2) {\r\n              return (\r\n                parseInt(element.id_rol) !== 1 && parseInt(element.id_rol) !== 2\r\n              );\r\n            } else if (parseInt(usuario.id_rol) === 3) {\r\n              return (\r\n                parseInt(element.id_rol) !== 1 &&\r\n                parseInt(element.id_rol) !== 2 &&\r\n                parseInt(element.id_rol) !== 3\r\n              );\r\n            }\r\n            return true; // Si el rol es diferente de 1, 2 o 3, no se aplica ningún filtro\r\n          })\r\n          .map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_rol,\r\n          }))\r\n      );\r\n\r\n      setDropDownItemsRolesDetails(rolesMapeados);\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreUsuarioSearch(\"\");\r\n    setCorreoEmyleSearch(\"\");\r\n    setTelefonoSearch(\"\");\r\n    setRolNombreSeleccionadoSearsh(\"\");\r\n    setTiendaNombreSeleccionadaSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewUsuario = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando usuario. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL AGREGAR USUARIO. Por favor verifique los siguientes campos:\\n\";\r\n      const resultUsuarios = await getAllUsuarios(usuario.token);\r\n      for (let item of resultUsuarios) {\r\n        if (item.nombre_usuario === nombreUsuarioDetails) {\r\n          validarCampos += `-Ya existe un usuario con el nombreUsuario ${nombreUsuarioDetails}.\\n`;\r\n          flag = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (nombreDelUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombre del usuario no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (correoEmailUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El correo electrónico no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (contrasennaUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-La contraseña no puede ser vacía.\\n\";\r\n        flag = false;\r\n      } else if (contrasennaUsuarioDetails.trim().length < 6) {\r\n        validarCampos += \"-La contraseña tiene que tener 6 o más caracteres.\\n\";\r\n        flag = false;\r\n      }\r\n      if (nombreUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombreUsuario no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (tiendaUsuarioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No ha seleccionado la tienda donde trabajará el usuario.\\n\";\r\n      }\r\n      if (rolUsuarioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-No ha seleccionado un rol para el usuario.\\n\";\r\n      }\r\n      if (CarnetIdentidadUsuarioDetails.trim() !== \"\") {\r\n        if (CarnetIdentidadUsuarioDetails.trim().length !== 11) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-El carnet de identidad del usuario deve tener 11 dígitos. \\n\";\r\n        }\r\n      }\r\n\r\n      if (flag) {\r\n        await addUsuario(\r\n          usuario.token,\r\n          nombreDelUsuarioDetails,\r\n          nombreUsuarioDetails,\r\n          contrasennaUsuarioDetails,\r\n          correoEmailUsuarioDetails,\r\n          telefonoUsuarioDetails,\r\n          direccionUsuarioDetails,\r\n          CarnetIdentidadUsuarioDetails,\r\n          detallesBancariosUsuarioDetils,\r\n          rolUsuarioDetails,\r\n          tiendaUsuarioDetails\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó al sistema al usuario ${nombreUsuarioDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          5\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(\r\n          `El Usuario \"${nombreUsuarioDetails}\" fue insertado con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreDelUsuarioDetails(\"\");\r\n        setNombreUsuarioDetails(\"\");\r\n        setNombreUsuarioDetailsOriginal(\"\");\r\n        setContrasennaUsuarioDetails(\"\");\r\n        setDireccionUsuarioDetails(\"\");\r\n        setTelefonoUsuarioDetails(\"\");\r\n        setCarnetIdentidadUsuarioDetails(\"\");\r\n        setCorreoEmailUsuarioDetails(\"\");\r\n        setDetallesBancariosUsuarioDetils(\"\");\r\n        setDropDownItemsRolesDetails([]);\r\n        setDropDownItemsTiendasDetails([]);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setReflechModalMensajeView(false);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarUsuario = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando usuario. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR USUARIO. Compruebe los siguientes campos:\\n\";\r\n\r\n      const resultUsuarios = await getAllUsuarios(usuario.token);\r\n      for (let item of resultUsuarios) {\r\n        if (\r\n          item.nombre_usuario === nombreUsuarioDetails &&\r\n          nombreUsuarioDetailsOriginal !== nombreUsuarioDetails\r\n        ) {\r\n          validarCampos += `-Ya existe un usuario con el nombreUsuario ${nombreUsuarioDetails}.\\n`;\r\n          flag = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (nombreDelUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombre del usuario no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (correoEmailUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El correo electrónico no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (contrasennaUsuarioDetails.trim() !== \"\") {\r\n        if (contrasennaUsuarioDetails.trim().length < 6) {\r\n          validarCampos +=\r\n            \"-La contraseña tiene que tener 6 o más caracteres.\\n\";\r\n          flag = false;\r\n        }\r\n      }\r\n      if (nombreUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombreUsuario no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (tiendaUsuarioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No ha seleccionado la tienda donde trabajará el usuario.\\n\";\r\n      }\r\n      if (rolUsuarioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-No ha seleccionado un rol para el usuario.\\n\";\r\n      }\r\n      if (CarnetIdentidadUsuarioDetails.trim() !== \"\") {\r\n        if (CarnetIdentidadUsuarioDetails.trim().length !== 11) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-El carnet de identidad del usuario deve tener 11 dígitos. \\n\";\r\n        }\r\n      }\r\n\r\n      if (flag) {\r\n        if (contrasennaUsuarioDetails.trim() === \"\") {\r\n          await actualizarUsuarioSinContraseña(\r\n            usuario.token,\r\n            idUsuarioDetails,\r\n            nombreDelUsuarioDetails,\r\n            nombreUsuarioDetails,\r\n            correoEmailUsuarioDetails,\r\n            telefonoUsuarioDetails,\r\n            direccionUsuarioDetails,\r\n            CarnetIdentidadUsuarioDetails,\r\n            detallesBancariosUsuarioDetils,\r\n            rolUsuarioDetails,\r\n            tiendaUsuarioDetails,\r\n            selecterActivoDetails === \"permitido\" ? true : false\r\n          );\r\n        } else {\r\n          await actualizarUsuarioConContraseña(\r\n            usuario.token,\r\n            idUsuarioDetails,\r\n            nombreDelUsuarioDetails,\r\n            nombreUsuarioDetails,\r\n            contrasennaUsuarioDetails,\r\n            correoEmailUsuarioDetails,\r\n            telefonoUsuarioDetails,\r\n            direccionUsuarioDetails,\r\n            CarnetIdentidadUsuarioDetails,\r\n            detallesBancariosUsuarioDetils,\r\n            rolUsuarioDetails,\r\n            tiendaUsuarioDetails,\r\n            selecterActivoDetails === \"permitido\" ? true : false\r\n          );\r\n        }\r\n\r\n        // Agregar Acción de usuario modificar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó al usuario ${nombreUsuarioDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          5\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(\r\n          `El Usuario \"${nombreUsuarioDetails}\" se modificó con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar proveedor\r\n  const eliminarUsuario = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando usuario. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL TRATAR DE ELIMINAR EL USUARIO. Motivos:\\n\";\r\n\r\n      if (flag) {\r\n        const resultDeleteUsuario = await deleteUsuario(\r\n          usuario.token,\r\n          idUsuarioDetails\r\n        );\r\n\r\n        if (resultDeleteUsuario) {\r\n          // Agregar Acción de usuario agregar proveedor\r\n\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó al usuario ${nombreUsuarioDetails}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            5\r\n          );\r\n\r\n          setIsBotonModalMesajeVisible(true);\r\n          setModalMensaje(\r\n            `El Usuario \"${nombreUsuarioDetails}\" se eliminó con éxito`\r\n          );\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(true);\r\n        } else {\r\n          validarCampos +=\r\n            \"-El usuario ya ha echo operaciones en el sistema.\\n\";\r\n          setModalMensaje(validarCampos);\r\n          setReflechModalMensajeView;\r\n          setModalMensajeView(true);\r\n        }\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Teléfono\",\r\n    \"Rol\",\r\n    \"Tienda\",\r\n  ];\r\n  const columnasMyDateTableEntradaModal = [\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Costo\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Teléfono\",\r\n    \"Rol\",\r\n    \"Tienda\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"telefono\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarProveedor && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Usuario</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableUsuarios\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>Nombre de Usuario:</Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del proveedor\"\r\n                    value={nombreUsuarioSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreUsuarioSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Correo del Usuario:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Correo del Proveedor\"\r\n                    value={correoEmyleSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setCorreoEmyleSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Número de Teléfono:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Número de Teléfono\"\r\n                    value={telefonoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setTelefonoSearch}\r\n                  />\r\n\r\n                  <Text style={styles.textSearchMovil}>Rol:</Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadRolesSearsh,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={rolNombreSeleccionadoSearsh}\r\n                      placeholder=\"Roles\"\r\n                      setValue={setRolNombreSeleccionadoSearsh}\r\n                      items={dropdownItemsRolesSearsh}\r\n                      direction=\"BOTTOM\"\r\n                      onDropdownOpen={() => controlarCapas(\"RolesSearsh\")}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Tienda:</Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadTiendasSearsh,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={tiendaNombreSeleccionadaSearch}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setTiendaNombreSeleccionadaSearch}\r\n                      items={dropdownItemsTiendasSearsh}\r\n                      direction=\"BOTTOM\"\r\n                      onDropdownOpen={() => controlarCapas(\"TiendasSearsh\")}\r\n                    />\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => filtrarYOrdenarUsuarios()}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Usuario\"\r\n                  : \"Agregar Usuario\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={nombreDelUsuarioDetails}\r\n                  onChangeText={setNombreDelUsuarioDetails}\r\n                  placeholder=\"Nombre del usuario\"\r\n                />\r\n\r\n                {/* Nombre Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={nombreUsuarioDetails}\r\n                  onChangeText={setNombreUsuarioDetails}\r\n                  placeholder=\"Nombre usuario\"\r\n                />\r\n\r\n                {/*Contraseña */}\r\n                {(modalProveedoresDates?.id_proveedor === \"\"\r\n                  ? true\r\n                  : parseInt(usuario?.id_rol) === 1) && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {modalProveedoresDates?.id_proveedor === \"\"\r\n                        ? \"Contraseña\"\r\n                        : \"Cambiar Contraseña\"}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                {(modalProveedoresDates?.id_proveedor === \"\"\r\n                  ? true\r\n                  : parseInt(usuario?.id_rol) === 1) && (\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    editable={\r\n                      modalProveedoresDates?.id_proveedor === \"\"\r\n                        ? true\r\n                        : isPermisoModificarProveedor &&\r\n                          isPermisoModificarGerarquico\r\n                    }\r\n                    value={contrasennaUsuarioDetails}\r\n                    onChangeText={setContrasennaUsuarioDetails}\r\n                    placeholder=\"Nueva contraseña del usuario\"\r\n                  />\r\n                )}\r\n\r\n                {/* Dirección del Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección del Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={direccionUsuarioDetails}\r\n                  onChangeText={setDireccionUsuarioDetails}\r\n                  placeholder=\"Dirección del Usuario    \"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y Carnet de Identidad */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoUsuarioDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtrar solo números del 0 al 9\r\n                        const filteredText = text.replace(/[^0-9]/g, \"\");\r\n                        setTelefonoUsuarioDetails(filteredText);\r\n                      }}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Carnet de Identidad */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Carnet de Identidad\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={CarnetIdentidadUsuarioDetails}\r\n                      onChangeText={(text) => {\r\n                        // Validar que el texto solo contenga números del 1 al 9\r\n                        const regex = /^[0-9]*$/; // Expresión regular para solo permitir números del 1 al 9\r\n\r\n                        // Verificar longitud y si el texto cumple con la expresión regular\r\n                        if (text.length <= 11 && regex.test(text)) {\r\n                          setCarnetIdentidadUsuarioDetails(text); // Actualiza el estado solo si es válido\r\n                        }\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"CarnetIdentidad\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailUsuarioDetails}\r\n                      onChangeText={setCorreoEmailUsuarioDetails}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosUsuarioDetils}\r\n                      onChangeText={setDetallesBancariosUsuarioDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: 1000,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Tienda */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Roles</Text>\r\n                    <CustomDropdownDetails\r\n                      value={rolUsuarioDetails}\r\n                      placeholder=\"Roles\"\r\n                      setValue={setRolUsuarioDetails}\r\n                      items={dropdownItemsRolesDetails}\r\n                      readOnly={\r\n                        !(modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico)\r\n                      }\r\n                      searchable={true}\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Rol */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Tiendas</Text>\r\n                    <CustomDropdownDetails\r\n                      value={tiendaUsuarioDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setTiendaUsuarioDetails}\r\n                      items={dropdownItemsTiendasDetails}\r\n                      readOnly={\r\n                        !(modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico)\r\n                      }\r\n                      searchable={true}\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campo de los check bootom */}\r\n                {modalProveedoresDates?.id_proveedor !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        marginTop: \"3%\",\r\n                        color: Colors.negro, // Color del texto\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Acceso al Sistema\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                {modalProveedoresDates?.id_proveedor !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => {\r\n                          if (\r\n                            modalProveedoresDates?.id_proveedor === \"\"\r\n                              ? true\r\n                              : isPermisoModificarProveedor &&\r\n                                isPermisoModificarGerarquico\r\n                          ) {\r\n                            setSelecterActivoDetails(option.value);\r\n                          }\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n                )}\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarProveedor &&\r\n                    isPermisoModificarGerarquico &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos proveedor ${nombreUsuarioDetails}?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al proveedor ${nombreUsuarioDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarProveedor &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewUsuario()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarUsuario()\r\n                      : modificarUsuario()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Usuarios\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {(isPermisoAgregarProveedor ||\r\n            isPermisoModificarProveedor ||\r\n            isPermisoEliminarProveedor) && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Usuario\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre de Usuario:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del proveedor\"\r\n              value={nombreUsuarioSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreUsuarioSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Correo del Usuario:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Correo del Proveedor\"\r\n              value={correoEmyleSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setCorreoEmyleSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Número de Teléfono:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Número de Teléfono\"\r\n              value={telefonoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setTelefonoSearch}\r\n            />\r\n\r\n            <Text style={styles.textSearchDesktop}>Rol:</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                zIndex: capaPrioridadRolesSearsh,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={rolNombreSeleccionadoSearsh}\r\n                placeholder=\"Roles\"\r\n                setValue={setRolNombreSeleccionadoSearsh}\r\n                items={dropdownItemsRolesSearsh}\r\n                direction=\"BOTTOM\"\r\n                onDropdownOpen={() => controlarCapas(\"RolesSearsh\")}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                zIndex: capaPrioridadTiendasSearsh,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={tiendaNombreSeleccionadaSearch}\r\n                placeholder=\"Tiendas\"\r\n                setValue={setTiendaNombreSeleccionadaSearch}\r\n                items={dropdownItemsTiendasSearsh}\r\n                direction=\"BOTTOM\"\r\n                onDropdownOpen={() => controlarCapas(\"TiendasSearsh\")}\r\n              />\r\n            </View>\r\n            <View\r\n              style={{ width: \"100%\", flexDirection: \"row\", marginTop: \"5%\" }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarUsuarios()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableUsuarios\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Usuario\"\r\n                  : \"Agregar Usuario\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={nombreDelUsuarioDetails}\r\n                  onChangeText={setNombreDelUsuarioDetails}\r\n                  placeholder=\"Nombre del usuario\"\r\n                />\r\n\r\n                {/* Nombre Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={nombreUsuarioDetails}\r\n                  onChangeText={setNombreUsuarioDetails}\r\n                  placeholder=\"Nombre usuario\"\r\n                />\r\n\r\n                {/*Contraseña */}\r\n                {(modalProveedoresDates?.id_proveedor === \"\"\r\n                  ? true\r\n                  : parseInt(usuario?.id_rol) === 1) && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {modalProveedoresDates?.id_proveedor === \"\"\r\n                        ? \"Contraseña\"\r\n                        : \"Cambiar Contraseña\"}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                {(modalProveedoresDates?.id_proveedor === \"\"\r\n                  ? true\r\n                  : parseInt(usuario?.id_rol) === 1) && (\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    editable={\r\n                      modalProveedoresDates?.id_proveedor === \"\"\r\n                        ? true\r\n                        : isPermisoModificarProveedor &&\r\n                          isPermisoModificarGerarquico\r\n                    }\r\n                    value={contrasennaUsuarioDetails}\r\n                    onChangeText={setContrasennaUsuarioDetails}\r\n                    placeholder=\"Nueva contraseña del usuario\"\r\n                  />\r\n                )}\r\n\r\n                {/* Dirección del Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección del Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={direccionUsuarioDetails}\r\n                  onChangeText={setDireccionUsuarioDetails}\r\n                  placeholder=\"Dirección del Usuario    \"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y Carnet de Identidad */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoUsuarioDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtrar solo números del 0 al 9\r\n                        const filteredText = text.replace(/[^0-9]/g, \"\");\r\n                        setTelefonoUsuarioDetails(filteredText);\r\n                      }}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Carnet de Identidad */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Carnet de Identidad\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={CarnetIdentidadUsuarioDetails}\r\n                      onChangeText={(text) => {\r\n                        // Validar que el texto solo contenga números del 1 al 9\r\n                        const regex = /^[0-9]*$/; // Expresión regular para solo permitir números del 1 al 9\r\n\r\n                        // Verificar longitud y si el texto cumple con la expresión regular\r\n                        if (text.length <= 11 && regex.test(text)) {\r\n                          setCarnetIdentidadUsuarioDetails(text); // Actualiza el estado solo si es válido\r\n                        }\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"CarnetIdentidad\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailUsuarioDetails}\r\n                      onChangeText={setCorreoEmailUsuarioDetails}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosUsuarioDetils}\r\n                      onChangeText={setDetallesBancariosUsuarioDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: 1000,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Tienda */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTiendasSearsh,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Roles</Text>\r\n                    <CustomDropdownDetails\r\n                      value={rolUsuarioDetails}\r\n                      placeholder=\"Roles\"\r\n                      setValue={setRolUsuarioDetails}\r\n                      items={dropdownItemsRolesDetails}\r\n                      readOnly={\r\n                        !(modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico)\r\n                      }\r\n                      searchable={true}\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Rol */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadRolesSearsh,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Tiendas</Text>\r\n                    <CustomDropdownDetails\r\n                      value={tiendaUsuarioDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setTiendaUsuarioDetails}\r\n                      items={dropdownItemsTiendasDetails}\r\n                      readOnly={\r\n                        !(modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico)\r\n                      }\r\n                      searchable={true}\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campo de los check bootom */}\r\n                {modalProveedoresDates?.id_proveedor !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        marginTop: \"3%\",\r\n                        color: Colors.negro, // Color del texto\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Acceso al Sistema\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                {modalProveedoresDates?.id_proveedor !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => {\r\n                          if (\r\n                            modalProveedoresDates?.id_proveedor === \"\"\r\n                              ? true\r\n                              : isPermisoModificarProveedor &&\r\n                                isPermisoModificarGerarquico\r\n                          ) {\r\n                            setSelecterActivoDetails(option.value);\r\n                          }\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n                )}\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarProveedor &&\r\n                    isPermisoModificarGerarquico &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos proveedor ${nombreUsuarioDetails}?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al proveedor ${nombreUsuarioDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarProveedor &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewUsuario()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarUsuario()\r\n                      : modificarUsuario()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Usuarios\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\n\r\nexport interface Tienda {\r\n  id_Tienda: string;\r\n  nombre: string;\r\n  direccion: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Tienda[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableTiendasView: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortEntradas, setSortEntradas} = useSortEntradas();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(10);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Tienda[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre Proveedor\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Producto\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Costo Por Unidad\") {\r\n      aux = \"option5\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option6\";\r\n    }\r\n\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Proveedor\" ||\r\n              column === \"Nombre Producto\" ||\r\n              column === \"Costo Por Unidad\" ||\r\n              column === \"Fecha\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortEntradasAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n          <DataTable style={{ width: \"100%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Tienda}\r\n                onPress={() => detailsModalView(item.id_Tienda)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.direccion}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Tienda}\r\n                onPress={() => detailsModalView(item.id_Tienda)}\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.direccion}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Tiendas\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  addTienda,\r\n  deleteTienda,\r\n  getAllTiendas,\r\n  getTiendaById,\r\n  isProductoInTienda,\r\n  updateTienda,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  MyDateTableTiendasView,\r\n  Tienda,\r\n} from \"../components/MyDateTableTiendasView\";\r\n\r\nexport default function TiendasView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortEntradas, setSortEntradas } = useSortEntradas();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [nombreTiendaDetails, setNombreTiendaDetails] = useState(\"\");\r\n  const [direccionTiendaDetails, setDireccionTiendaDetails] = useState(\"\");\r\n  const nombreProductoRef = useRef(null);\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarEntrada, setIsPermisoAgregarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarEntrada, setIsPermisoEliminarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoModificarEntrada, setIsPermisoModificarEntrada] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      \r\n      setIsPermisoAgregarEntrada(parseInt(usuario.id_rol) === 1);\r\n      setIsPermisoEliminarEntrada(parseInt(usuario.id_rol) === 1);\r\n      setIsPermisoModificarEntrada(parseInt(usuario.id_rol) === 1);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Tienda[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreProveedor, setDropDownItemsNombreProveedor] =\r\n    useState<ProveedorPiker[]>([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProveedorSearch, setNombreProveedorSearch] = useState(\"\");\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [costoDesdeSearch, setCostoDesdeSearch] = useState(\"\");\r\n  const [costoHastaSearch, setCostohastaSearch] = useState(\"\");\r\n  const [fechaDesdeSearch, setFechaDesdeSearch] = useState(new Date());\r\n  const [fechaHastaSearch, setFechaHastaSearch] = useState(new Date());\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2000\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getProveedoresPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProveedores(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_proveedor,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProveedor(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setNombreTiendaDetails(\"\");\r\n    setDireccionTiendaDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfTienda = async () => {\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getTiendaById(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Actualizamos los detalles\r\n        setIdTiendaDetails(result.id_tienda);\r\n        setNombreTiendaDetails(result.nombre);\r\n        setDireccionTiendaDetails(result.direccion);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<Tienda[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarEntrada(\r\n          usuario.token,\r\n          nombreProveedorSearch,\r\n          nombreProductoSearch,\r\n          costoDesdeSearch,\r\n          costoHastaSearch,\r\n          `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n          `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Tienda[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Entrada: element.id_entrada,\r\n              id_Proveedor: element.proveedor.id_proveedor,\r\n              id_Producto: element.producto.id_producto,\r\n              nombre_Proveedor: element.proveedor.nombre,\r\n              nombre_Producto: element.producto.nombre,\r\n              cantidad: element.cantidad,\r\n              costo: element.costo,\r\n              fecha: element.fecha,\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfTienda();\r\n  }, [modalEntradasDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodasLasTiendas = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllTiendas(usuario.token);\r\n\r\n        if (result && Array.isArray(result.data)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const TiendasMapeados: Tienda[] = await Promise.all(\r\n            result.data.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Tienda: element.id_tienda,\r\n                nombre: element.nombre,\r\n                direccion: element.direccion,\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(TiendasMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron entradas.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener las entradas o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de las entradas\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodasLasTiendas();\r\n        getProveedoresPikerDetails();\r\n        getProductosPikerDetails();\r\n        getTiendasPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarEntradas = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let EntradasFiltradas: Tienda[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        /*\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortEntradas?.criterioOrden && sortEntradas.tipoOrden) {\r\n          EntradasFiltradas = await ordenarEntradas(\r\n            usuario.token,\r\n            EntradasFiltradas,\r\n            sortEntradas.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n        */\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(EntradasFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setNombreTiendaDetails(\"\");\r\n    setDireccionTiendaDetails(\"\");\r\n    setIdTiendaDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarEntradas();\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProveedorSearch(\"\");\r\n    setNombreProductoSearch(\"\");\r\n    setCostoDesdeSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewTienda = async () => {\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR TIENDA. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (nombreTiendaDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombre de la tienda no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (flag) {\r\n        await addTienda(\r\n          usuario.token,\r\n          nombreTiendaDetails,\r\n          direccionTiendaDetails\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó la tienda ${nombreTiendaDetails}.`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          6\r\n        );\r\n\r\n        setModalMensaje(`La tienda fue insertada con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreTiendaDetails(\"\");\r\n        setDireccionTiendaDetails(\"\");\r\n        setIdTiendaDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR TIENDA. Compruebe los siguientes campos:\\n\";\r\n\r\n        if (nombreTiendaDetails.trim() === \"\") {\r\n            validarCampos += \"-El nombre de la tienda no puede ser vacío.\\n\";\r\n            flag = false;\r\n          }\r\n\r\n      if (flag) {\r\n        await updateTienda(usuario.token, idTiendaDetails, nombreTiendaDetails, direccionTiendaDetails);\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó la tienda ${nombreTiendaDetails}.`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          6\r\n        );\r\n\r\n        setModalMensaje(`La tienda se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreTiendaDetails(\"\");\r\n        setDireccionTiendaDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(false);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR ENTRADA. Compruebe los siguientes parámetros:\\n\";\r\n\r\n      if (flag) {\r\n        const result = await deleteTienda(usuario.token, idTiendaDetails);\r\n\r\n        if (result) {\r\n          // Agregar Acción de usuario agregar proveedor\r\n\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la tienda ${nombreTiendaDetails}.`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            6\r\n          );\r\n\r\n          setModalMensaje(`La tienda se eliminó con éxito`);\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(true);\r\n          setNombreTiendaDetails(\"\");\r\n          setDireccionTiendaDetails(\"\");\r\n        } else {\r\n          validarCampos += \"-Ya se han echo operaciones en la tienda.\\n\";\r\n          setModalMensaje(validarCampos);\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(false);\r\n        }\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\"Nombre\", \"Dirección\"];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\"Nombre\", \"Dirección\"];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarEntrada && (\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                setModalEntradasDates({\r\n                  id_entrada: \"\",\r\n                  isAddEntrada: true,\r\n                  fileEditable: true,\r\n                  isModificarEntrada: false,\r\n                })\r\n              }\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Tienda</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableTiendasView\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre de la tienda */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={true}\r\n                  value={nombreTiendaDetails}\r\n                  onChangeText={setNombreTiendaDetails}\r\n                  placeholder=\"Nombre de la tienda\"\r\n                />\r\n\r\n                {/* Dirección */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={true}\r\n                  value={direccionTiendaDetails}\r\n                  onChangeText={setDireccionTiendaDetails}\r\n                  placeholder=\"Dirección de la tienda\"\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta tienda?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Tienda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewTienda()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Tienda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta tienda?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Tienda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarEntradaFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Tiendas\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarEntrada && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Tienda\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          ></LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableTiendasView\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Tienda\"\r\n                  : \"Datos de la Tienda\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre de la tienda */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={true}\r\n                  value={nombreTiendaDetails}\r\n                  onChangeText={setNombreTiendaDetails}\r\n                  placeholder=\"Nombre de la tienda\"\r\n                />\r\n\r\n                {/* Dirección */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={true}\r\n                  value={direccionTiendaDetails}\r\n                  onChangeText={setDireccionTiendaDetails}\r\n                  placeholder=\"Dirección de la tienda\"\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta tienda?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Tienda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewTienda()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Tienda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta tienda?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Tienda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarEntradaFunction()\r\n                      : modificarEntradaFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Tiendas\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Accion } from '../components/MyDateTableAcciones';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortAcciones {\r\n  items: Accion[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortAccionesContextType {\r\n  sortAcciones: SortAcciones | null;\r\n  setSortAcciones: (sortEntradas: SortAcciones | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortAccionesContext = createContext<SortAccionesContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortAccionesProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortAcciones, setSortAcciones] = useState<SortAcciones | null>(null);\r\n\r\n  return (\r\n    <SortAccionesContext.Provider value={{ sortAcciones: sortAcciones, setSortAcciones: setSortAcciones }}>\r\n      {children}\r\n    </SortAccionesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortAcciones = () => {\r\n  const context = React.useContext(SortAccionesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortAcciones debe usarse dentro de un SortAcciones');\r\n  }\r\n  return context;\r\n};","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { useSortAcciones } from \"../contexts/AuxiliarSortAcciones\";\r\n\r\nexport interface Accion {\r\n  id_Accion: string;\r\n  id_Usuario: string;\r\n  nombre_Usuario: string;\r\n  descripcion: string;\r\n  fecha: string;\r\n  id_TipoAccion: string;\r\n  nombre_TipoAccion: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Accion[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableAcciones: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortAcciones, setSortAcciones} = useSortAcciones();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(10);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Accion[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre Usuario\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option4\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortAcciones({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Usuario\" ||\r\n              column === \"Fecha\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortEntradasAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Usuario !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Accion}\r\n                onPress={() => detailsModalView(item.id_Accion)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.descripcion}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombre_TipoAccion}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Accion}\r\n                onPress={() => detailsModalView(item.id_Accion)}\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.descripcion}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombre_TipoAccion}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getAllTiendas, isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport {\r\n  addAccionUsuario,\r\n  filtrarAcciones,\r\n  getAccionByID,\r\n  getAllAcciones,\r\n  getAllTiposAccion,\r\n  ordenarAcciones,\r\n} from \"../services/AccionesUsuarioServices\";\r\nimport { Accion, MyDateTableAcciones } from \"../components/MyDateTableAcciones\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport { useSortAcciones } from \"../contexts/AuxiliarSortAcciones\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\n\r\nexport default function AccionesView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTipoAccionSearsh, setCapaPrioridadTipoAccionSearsh] =\r\n    useState(500);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTipoAccionSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n      setCapaPrioridadTipoAccionSearsh(1500);\r\n    } else if (prioridad === \"TipoAccionSearch\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTipoAccionSearsh(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortAcciones, setSortAcciones } = useSortAcciones();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idAccionDetails, setIdAccionDetails] = useState(\"\");\r\n  const [idUsuarioAccionDetails, setIdUsuarioAccionDetails] = useState(\"\");\r\n  const [idTipoAccionDetails, setTipoAccionDetails] = useState(\"\");\r\n  const [nombreUsuarioAccionDetails, setNombreUsuarioAccionDetails] =\r\n    useState(\"\");\r\n  const [nombreTipoAccionDetails, setNombreTipoAccionDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarEntrada, setIsPermisoAgregarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarEntrada, setIsPermisoEliminarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoModificarEntrada, setIsPermisoModificarEntrada] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarEntrada = await isPermiso(\r\n        usuario.token,\r\n        \"10\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultEliminarEntrada = await isPermiso(\r\n        usuario.token,\r\n        \"12\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarEntrada = await isPermiso(\r\n        usuario.token,\r\n        \"11\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      setIsPermisoAgregarEntrada(resultAgregarEntrada);\r\n      setIsPermisoEliminarEntrada(resultEliminarEntrada);\r\n      setIsPermisoModificarEntrada(resultModificarEntrada);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Accion[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreProveedor, setDropDownItemsNombreProveedor] =\r\n    useState<ProveedorPiker[]>([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreUsuarioSearch, setNombreUsuarioSearch] = useState(\"\");\r\n  const [descripcionSearch, setDescripcionSearch] = useState(\"\");\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2024\");\r\n  const [selectedValueNombreTipoAccion, setSelectedValueNombreTipoAccion] =\r\n    useState<string | null>(null);\r\n  const [dropdownItemsTipoAccion, setDropDownItemsTipoAccion] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n\r\n  const options = [\r\n    { label: \"Día\", value: \"dia\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n    { label: \"Mes\", value: \"mes\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"dia\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 6);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else if (value === \"mes\") {\r\n      // Restar 1 mes a la fecha actual\r\n      const lastMonthDate = new Date(currentDate);\r\n      lastMonthDate.setMonth(currentDate.getMonth() - 1);\r\n      const monthYear = String(lastMonthDate.getFullYear());\r\n      const monthMonth = String(lastMonthDate.getMonth() + 1).padStart(2, \"0\");\r\n      const monthDay = String(lastMonthDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${monthYear}-${monthMonth}-${monthDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarAcciones(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdUsuarioAccionDetails(\"\");\r\n    setNombreUsuarioAccionDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfAccion = async () => {\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getAccionByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        /*\r\n        const [idAccionDetails, setIdAccionDetails] = useState(\"\");\r\n  const [idUsuarioAccionDetails, setIdUsuarioAccionDetails] = useState(\"\");\r\n  const [idTipoAccionDetails, setTipoAccionDetails] = useState(\"\");\r\n  const [nombreUsuarioAccionDetails, setNombreUsuarioAccionDetails] = useState(\"\");\r\n  const [nombreTipoAccionDetails, setNombreTipoAccionDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [costoDetails, setCostoDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n        */\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.fecha.split(\"T\")[0].split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdAccionDetails(result.id_accion);\r\n        setIdUsuarioAccionDetails(result.usuario.id_usuario);\r\n        setTipoAccionDetails(result.tipo_accion.id_tipo_accion);\r\n        setNombreUsuarioAccionDetails(result.usuario.nombre);\r\n        setDescripcionDetails(result.descripcion);\r\n        setNombreTipoAccionDetails(result.tipo_accion.nombre);\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares\r\n        setIdProductoAuxModificarDetails(result.producto.id_producto);\r\n        setIdTiendaAuxModificarDetails(result.tienda.id_tienda);\r\n        setCantidadAuxModificarDetails(result.cantidad);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Accion[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarAcciones(\r\n          usuario.token,\r\n          selectedValueNombreTipoAccion ?? \"\",\r\n          nombreUsuarioSearch,\r\n          descripcionSearch,\r\n          fechaDesde,\r\n          fechaHasta\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Accion[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Accion: element.id_accion,\r\n              id_Usuario: element.usuario.id_usuario,\r\n              nombre_Usuario: element.usuario.nombre_usuario,\r\n              descripcion: element.descripcion,\r\n              fecha: element.fecha,\r\n              id_TipoAccion: element.tipo_accion.id_tipo_accion,\r\n              nombre_TipoAccion: element.tipo_accion.nombre,\r\n            }))\r\n          );\r\n\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los acciones:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfAccion();\r\n  }, [modalEntradasDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodasLasAcciones = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllAcciones(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: Accion[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Accion: element.id_accion,\r\n                id_Usuario: element.usuario.id_usuario,\r\n                nombre_Usuario: element.usuario.nombre_usuario,\r\n                descripcion: element.descripcion,\r\n                fecha: element.fecha,\r\n                id_TipoAccion: element.tipo_accion.id_tipo_accion,\r\n                nombre_TipoAccion: element.tipo_accion.nombre,\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron entradas.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener las entradas o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de las entradas\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const getDatesTipoAccionPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiposAccion(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const TipoAccionMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tipo_accion,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsTipoAccion([\r\n          { label: \"Todos los tipos de acción\", value: \"\" },\r\n          ...TipoAccionMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await getDatesTipoAccionPiker();\r\n        getProductosPikerDetails();\r\n        getTiendasPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarAcciones = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let AccionesFiltradas: Accion[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortAcciones?.criterioOrden && sortAcciones.tipoOrden) {\r\n          AccionesFiltradas = await ordenarAcciones(\r\n            usuario.token,\r\n            AccionesFiltradas,\r\n            sortAcciones.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }else{\r\n          AccionesFiltradas = await ordenarAcciones(\r\n            usuario.token,\r\n            AccionesFiltradas,\r\n            \"option4\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(AccionesFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarAcciones(\r\n      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n    );\r\n  }, [\r\n    sortAcciones,\r\n  ]);\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    setSelecterActivoDetails(\"\");\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ]);\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarAcciones(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreUsuarioSearch(\"\");\r\n    setDescripcionSearch(\"\");\r\n    setSelectedValueNombreTipoAccion(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n  /*\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewEntrada = async () => {\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR ENTRADA. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (idUsuarioAccionDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (nombreUsuarioAccionDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo del producto por unidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await addEntrada(\r\n          usuario.token,\r\n          costoDetails,\r\n          nombreUsuarioAccionDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          parseInt(idUsuarioAccionDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails)\r\n        );\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(nombreUsuarioAccionDetails)\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó una entrada de ${nombreUsuarioAccionDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        await createProductoInTienda(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          idTiendaDetails\r\n        );\r\n        setModalMensaje(`La entrada fue insertado con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdUsuarioAccionDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setIdTiendaDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setNombreUsuarioAccionDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR ENTRADA. Compruebe los siguientes campos:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      const resultViejo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaAuxModificarDetails\r\n      );\r\n\r\n      if (\r\n        idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n        idProductoAuxModificarDetails !== idProductoDetails\r\n      ) {\r\n        if (\r\n          parseInt(resultViejo.cantidad ?? 0) -\r\n            parseInt(cantidadAuxModificarDetails) <\r\n          0\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Operación inválida. No se dispone de sificientes productos para realizar la operoción.\";\r\n        }\r\n      }\r\n      if (\r\n        parseInt(cantidadAuxModificarDetails) - parseInt(nombreUsuarioAccionDetails) >\r\n        parseInt(resultNuevo.cantidad ?? 0)\r\n      ) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n      if (idUsuarioAccionDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (nombreUsuarioAccionDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo del producto por unidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await modificarEntrada(\r\n          usuario.token,\r\n          idAccionDetails,\r\n          costoDetails,\r\n          nombreUsuarioAccionDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          parseInt(idUsuarioAccionDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails)\r\n        );\r\n\r\n        if (\r\n          idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n          idProductoAuxModificarDetails !== idProductoDetails\r\n        ) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaAuxModificarDetails),\r\n            parseInt(idProductoAuxModificarDetails),\r\n            parseInt(cantidadAuxModificarDetails) * -1\r\n          );\r\n\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(nombreUsuarioAccionDetails)\r\n          );\r\n        } else if (cantidadAuxModificarDetails !== nombreUsuarioAccionDetails) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(nombreUsuarioAccionDetails) - parseInt(cantidadAuxModificarDetails)\r\n          );\r\n        }\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó una entrada de originalmente ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setModalMensaje(`La entrada se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdUsuarioAccionDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setNombreUsuarioAccionDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR ENTRADA. Compruebe los siguientes parámetros:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n\r\n      if (parseInt(nombreUsuarioAccionDetails) > parseInt(resultNuevo.cantidad ?? 0)) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n\r\n      if (flag) {\r\n        await deleteEntrada(usuario.token, idAccionDetails);\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(nombreUsuarioAccionDetails) * -1\r\n        );\r\n\r\n        // Actualizar productos en 0 en productoTienda\r\n        await deleteFromProductoTiendaIn_0(usuario.token);\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la entrada con una cantidad de ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setModalMensaje(`La entrada se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdUsuarioAccionDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setNombreUsuarioAccionDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  */\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre Usuario\",\r\n    \"Descripción\",\r\n    \"Tipo de Acción\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre Usuario\",\r\n    \"Descripción\",\r\n    \"Tipo de Acción\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableAcciones\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>Nombre Usuario:</Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre usuario\"\r\n                    value={nombreUsuarioSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreUsuarioSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Descripción:</Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Descripción\"\r\n                    value={descripcionSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setDescripcionSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Tipo de Acción:</Text>\r\n                  <View\r\n                    style={{\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoAccionSearsh,\r\n                      height: 100,\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={selectedValueNombreTipoAccion}\r\n                      placeholder=\"Tipo de acción\"\r\n                      setValue={setSelectedValueNombreTipoAccion}\r\n                      items={dropdownItemsTipoAccion}\r\n                      onDropdownOpen={() => controlarCapas(\"TipoAccionSearch\")}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 1800,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaDesdeSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaHastaSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() =>\r\n                          filtrarYOrdenarAcciones(\r\n                            `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                            `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                          )\r\n                        }\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\"\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Usuario */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Usuario\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={nombreUsuarioAccionDetails}\r\n                    onChangeText={(text) => setNombreUsuarioAccionDetails(text)}\r\n                    editable={false}\r\n                    placeholder=\"Nombre Usuario\"\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la Tipo Accion y Fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Tipo Accion */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo Acción\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={nombreTipoAccionDetails}\r\n                      onChangeText={(text) => setNombreTipoAccionDetails(text)}\r\n                      editable={false}\r\n                      placeholder=\"Tipo accion\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Fecha */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={`${fechaAnnoDetails}-${fechaMesDetails}-${fechaDiaDetails}`}\r\n                      onChangeText={(text) => {}}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={false}\r\n                      placeholder=\"fecha\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={false}\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                {false && (\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"flex-end\",\r\n                      width: \"100%\",\r\n                      justifyContent: \"space-between\",\r\n                      marginTop: 20, // Espacio superior adicional\r\n                    }}\r\n                  >\r\n                    {/* Botón para modificar proveedor */}\r\n                    {isPermisoModificarEntrada &&\r\n                      modalEntradasDates?.id_entrada !== \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.azul_Oscuro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            marginLeft: \"5%\",\r\n                            shadowColor: \"#000\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => {\r\n                            setIsModalChekVisible(true);\r\n                            setIsModalChekEliminarEntrada(false);\r\n                            setMesajeModalChek(\r\n                              `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                            );\r\n                            setModalEntradasDates({\r\n                              id_entrada: \"\",\r\n                              isAddEntrada: false,\r\n                              isModificarEntrada: false,\r\n                              fileEditable: true,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Modificar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n\r\n                    {/* Botón para agregar proveedor */}\r\n                    {isPermisoAgregarEntrada &&\r\n                      modalEntradasDates?.id_entrada === \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.azul_Claro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            shadowColor: \"#000\",\r\n                            marginLeft: \"5%\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => addNewEntrada()}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Agregar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                    {/* Botón para eliminar proveedor */}\r\n                    {isPermisoEliminarEntrada &&\r\n                      modalEntradasDates?.id_entrada !== \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.rojo_oscuro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            shadowColor: \"#000\",\r\n                            marginRight: \"5%\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => {\r\n                            setIsModalChekVisible(true);\r\n                            setIsModalChekEliminarEntrada(true);\r\n                            setMesajeModalChek(\r\n                              `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                            );\r\n                            setModalEntradasDates({\r\n                              id_entrada: \"\",\r\n                              isAddEntrada: false,\r\n                              isModificarEntrada: false,\r\n                              fileEditable: true,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Eliminar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                  </View>\r\n                )}\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarEntradaFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Entradas\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre Usuario:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre usuario\"\r\n              value={nombreUsuarioSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreUsuarioSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Descripción:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Descripción\"\r\n              value={descripcionSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setDescripcionSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Tipo de Acción:</Text>\r\n            <View\r\n              style={{\r\n                position: \"relative\",\r\n                zIndex: capaPrioridadTipoAccionSearsh,\r\n                height: 100,\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={selectedValueNombreTipoAccion}\r\n                placeholder=\"Tipo de acción\"\r\n                setValue={setSelectedValueNombreTipoAccion}\r\n                items={dropdownItemsTipoAccion}\r\n                onDropdownOpen={() => controlarCapas(\"TipoAccionSearch\")}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1800,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() =>\r\n                    filtrarYOrdenarAcciones(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    )\r\n                  }\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableAcciones\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\"\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                Datos de la Acción\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Usuario */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Usuario\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={nombreUsuarioAccionDetails}\r\n                    onChangeText={(text) => setNombreUsuarioAccionDetails(text)}\r\n                    editable={false}\r\n                    placeholder=\"Nombre Usuario\"\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la Tipo Accion y Fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Tipo Accion */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo Acción\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={nombreTipoAccionDetails}\r\n                      onChangeText={(text) => setNombreTipoAccionDetails(text)}\r\n                      editable={false}\r\n                      placeholder=\"Tipo accion\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Fecha */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={`${fechaAnnoDetails}-${fechaMesDetails}-${fechaDiaDetails}`}\r\n                      onChangeText={(text) => {}}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={false}\r\n                      placeholder=\"fecha\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={false}\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                {false && (\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"flex-end\",\r\n                      width: \"100%\",\r\n                      justifyContent: \"space-between\",\r\n                      marginTop: 20, // Espacio superior adicional\r\n                    }}\r\n                  >\r\n                    {/* Botón para modificar proveedor */}\r\n                    {isPermisoModificarEntrada &&\r\n                      modalEntradasDates?.id_entrada !== \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.azul_Oscuro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            marginLeft: \"5%\",\r\n                            shadowColor: \"#000\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => {\r\n                            setIsModalChekVisible(true);\r\n                            setIsModalChekEliminarEntrada(false);\r\n                            setMesajeModalChek(\r\n                              `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                            );\r\n                            setModalEntradasDates({\r\n                              id_entrada: \"\",\r\n                              isAddEntrada: false,\r\n                              isModificarEntrada: false,\r\n                              fileEditable: true,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Modificar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n\r\n                    {/* Botón para agregar proveedor */}\r\n                    {isPermisoAgregarEntrada &&\r\n                      modalEntradasDates?.id_entrada === \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.azul_Claro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            shadowColor: \"#000\",\r\n                            marginLeft: \"5%\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => addNewEntrada()}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Agregar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                    {/* Botón para eliminar proveedor */}\r\n                    {isPermisoEliminarEntrada &&\r\n                      modalEntradasDates?.id_entrada !== \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.rojo_oscuro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            shadowColor: \"#000\",\r\n                            marginRight: \"5%\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => {\r\n                            setIsModalChekVisible(true);\r\n                            setIsModalChekEliminarEntrada(true);\r\n                            setMesajeModalChek(\r\n                              `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                            );\r\n                            setModalEntradasDates({\r\n                              id_entrada: \"\",\r\n                              isAddEntrada: false,\r\n                              isModificarEntrada: false,\r\n                              fileEditable: true,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Eliminar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                  </View>\r\n                )}\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarEntradaFunction()\r\n                      : modificarEntradaFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Entradas\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\n\r\nexport interface Permiso {\r\n  id_Entrada: string;\r\n  id_Proveedor: string;\r\n  id_Producto: string;\r\n  nombre_Proveedor: string;\r\n  nombre_Producto: string;\r\n  cantidad: string;\r\n  costo: string;\r\n  fecha: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Permiso[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTablePermisos: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortEntradas, setSortEntradas} = useSortEntradas();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(10);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Permiso[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"7\"\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"8\"\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"30\"\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"31\"\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre Proveedor\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Producto\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Costo Por Unidad\") {\r\n      aux = \"option5\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option6\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortEntradas({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Proveedor\" ||\r\n              column === \"Nombre Producto\" ||\r\n              column === \"Costo Por Unidad\" ||\r\n              column === \"Fecha\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortEntradasAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Proveedor !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Entrada}\r\n                onPress={() => detailsModalView(item.id_Entrada)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Proveedor}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo por unidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.costo}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Entrada}\r\n                onPress={() => detailsModalView(item.id_Entrada)}\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Proveedor}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.costo}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getAllTiendas, isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport { MyDateTablePermisos, Permiso } from \"../components/MyDateTablePermisos\";\r\n\r\nexport default function PermisosView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortEntradas, setSortEntradas } = useSortEntradas();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idEntradaDetails, setIdEntradaDetails] = useState(\"\");\r\n  const [idProveedorDetails, setIdProveedorDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [cantidadDetails, setCantidadDetails] = useState(\"\");\r\n  const [costoDetails, setCostoDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarEntrada, setIsPermisoAgregarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarEntrada, setIsPermisoEliminarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoModificarEntrada, setIsPermisoModificarEntrada] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarEntrada = await isPermiso(\r\n        usuario.token,\r\n        usuario.id_rol,\r\n        \"10\"\r\n      );\r\n      const resultEliminarEntrada = await isPermiso(\r\n        usuario.token,\r\n        usuario.id_rol,\r\n        \"12\"\r\n      );\r\n      const resultModificarEntrada = await isPermiso(\r\n        usuario.token,\r\n        usuario.id_rol,\r\n        \"11\"\r\n      );\r\n\r\n      setIsPermisoAgregarEntrada(resultAgregarEntrada);\r\n      setIsPermisoEliminarEntrada(resultEliminarEntrada);\r\n      setIsPermisoModificarEntrada(resultModificarEntrada);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Permiso[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreProveedor, setDropDownItemsNombreProveedor] =\r\n    useState<ProveedorPiker[]>([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProveedorSearch, setNombreProveedorSearch] = useState(\"\");\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [costoDesdeSearch, setCostoDesdeSearch] = useState(\"\");\r\n  const [costoHastaSearch, setCostohastaSearch] = useState(\"\");\r\n  const [fechaDesdeSearch, setFechaDesdeSearch] = useState(new Date());\r\n  const [fechaHastaSearch, setFechaHastaSearch] = useState(new Date());\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2000\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getProveedoresPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProveedores(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_proveedor,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProveedor(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdProveedorDetails(\"\");\r\n    setCostoDetails(\"\");\r\n    setCantidadDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfEntradas = async () => {\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getEntradaByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.fecha.split(\"T\")[0].split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdEntradaDetails(result.id_entrada);\r\n        setIdProveedorDetails(result.proveedor.id_proveedor);\r\n        setIdProductoDetails(result.producto.id_producto);\r\n        setCantidadDetails(result.cantidad);\r\n        setIdTiendaDetails(result.tienda.id_tienda);\r\n        setCostoDetails(result.costo);\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares\r\n        setIdProductoAuxModificarDetails(result.producto.id_producto);\r\n        setIdTiendaAuxModificarDetails(result.tienda.id_tienda);\r\n        setCantidadAuxModificarDetails(result.cantidad);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<Permiso[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarEntrada(\r\n          usuario.token,\r\n          nombreProveedorSearch,\r\n          nombreProductoSearch,\r\n          costoDesdeSearch,\r\n          costoHastaSearch,\r\n          `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n          `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Permiso[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Entrada: element.id_entrada,\r\n              id_Proveedor: element.proveedor.id_proveedor,\r\n              id_Producto: element.producto.id_producto,\r\n              nombre_Proveedor: element.proveedor.nombre,\r\n              nombre_Producto: element.producto.nombre,\r\n              cantidad: element.cantidad,\r\n              costo: element.costo,\r\n              fecha: element.fecha,\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfEntradas();\r\n  }, [modalEntradasDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosProveedores = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllEntradas(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: Permiso[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Entrada: element.id_entrada,\r\n                id_Proveedor: element.proveedor.id_proveedor,\r\n                id_Producto: element.producto.id_producto,\r\n                nombre_Proveedor: element.proveedor.nombre,\r\n                nombre_Producto: element.producto.nombre,\r\n                cantidad: element.cantidad,\r\n                costo: element.costo,\r\n                fecha: element.fecha,\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron entradas.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener las entradas o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de las entradas\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosProveedores();\r\n        getProveedoresPikerDetails();\r\n        getProductosPikerDetails();\r\n        getTiendasPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarEntradas = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let EntradasFiltradas: Permiso[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortEntradas?.criterioOrden && sortEntradas.tipoOrden) {\r\n          EntradasFiltradas = await ordenarEntradas(\r\n            usuario.token,\r\n            EntradasFiltradas,\r\n            sortEntradas.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(EntradasFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarEntradas();\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n    sortEntradas,\r\n  ]);\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setIdProveedorDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n    setIdTiendaDetails(\"\");\r\n    setCantidadDetails(\"\");\r\n    setCostoDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Extraemos el año, mes y día de la fecha actual\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    setFechaDiaDetails(String(parseInt(day)));\r\n    setFechaMesDetails(String(parseInt(month)));\r\n    setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarEntradas();\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProveedorSearch(\"\");\r\n    setNombreProductoSearch(\"\");\r\n    setCostoDesdeSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewEntrada = async () => {\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR ENTRADA. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (idProveedorDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo del producto por unidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await addEntrada(\r\n          usuario.token,\r\n          costoDetails,\r\n          cantidadDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          parseInt(idProveedorDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails)\r\n        );\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(cantidadDetails)\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó una entrada de ${cantidadDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        await createProductoInTienda(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          idTiendaDetails\r\n        );\r\n        setModalMensaje(`La entrada fue insertado con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdProveedorDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setIdTiendaDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR ENTRADA. Compruebe los siguientes campos:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      const resultViejo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaAuxModificarDetails\r\n      );\r\n\r\n      if (\r\n        idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n        idProductoAuxModificarDetails !== idProductoDetails\r\n      ) {\r\n        if (\r\n          parseInt(resultViejo.cantidad ?? 0) -\r\n            parseInt(cantidadAuxModificarDetails) <\r\n          0\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Operación inválida. No se dispone de sificientes productos para realizar la operoción.\";\r\n        }\r\n      }\r\n      if (\r\n        parseInt(cantidadAuxModificarDetails) - parseInt(cantidadDetails) >\r\n        parseInt(resultNuevo.cantidad ?? 0)\r\n      ) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n      if (idProveedorDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo del producto por unidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await modificarEntrada(\r\n          usuario.token,\r\n          idEntradaDetails,\r\n          costoDetails,\r\n          cantidadDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          parseInt(idProveedorDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails)\r\n        );\r\n\r\n        if (\r\n          idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n          idProductoAuxModificarDetails !== idProductoDetails\r\n        ) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaAuxModificarDetails),\r\n            parseInt(idProductoAuxModificarDetails),\r\n            parseInt(cantidadAuxModificarDetails) * -1\r\n          );\r\n\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(cantidadDetails)\r\n          );\r\n        } else if (cantidadAuxModificarDetails !== cantidadDetails) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(cantidadDetails) - parseInt(cantidadAuxModificarDetails)\r\n          );\r\n        }\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó una entrada de originalmente ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setModalMensaje(`La entrada se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdProveedorDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR ENTRADA. Compruebe los siguientes parámetros:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n\r\n      if (parseInt(cantidadDetails) > parseInt(resultNuevo.cantidad ?? 0)) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n\r\n      if (flag) {\r\n        await deleteEntrada(usuario.token, idEntradaDetails);\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(cantidadDetails) * -1\r\n        );\r\n\r\n        // Actualizar productos en 0 en productoTienda\r\n        await deleteFromProductoTiendaIn_0(usuario.token);\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la entrada con una cantidad de ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setModalMensaje(`La entrada se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdProveedorDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre Proveedor\",\r\n    \"Nombre Producto\",\r\n    \"Cantidad\",\r\n    \"Costo Por Unidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre Proveedor\",\r\n    \"Nombre Producto\",\r\n    \"Cantidad\",\r\n    \"Costo Por Unidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTablePermisos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Proveedor:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del proveedor\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={nombreProveedorSearch}\r\n                    onChangeText={setNombreProveedorSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del Producto\"\r\n                    value={nombreProductoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Rango de Costo en USD:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={idProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setIdProductoDetails(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={idProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setIdProductoDetails(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.blanco,\r\n                        fontSize: 18,\r\n                        justifyContent: \"center\",\r\n                        marginRight: \"25%\",\r\n                        fontWeight: \"bold\", // Para negritas\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Desde\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.blanco,\r\n                        fontSize: 18,\r\n                        marginLeft: \"12%\",\r\n                        justifyContent: \"center\",\r\n                        fontWeight: \"bold\", // Para negritas\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Hasta\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 500\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={()=> controlarCapas(\"FechaDesdeSearsh\")}\r\n                      />\r\n                    </View>\r\n\r\n                    <View\r\n                      style={{\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={()=> controlarCapas(\"FechaHastaSearsh\")}\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProveedorDetails}\r\n                    placeholder=\"Proveedores\"\r\n                    setValue={setIdProveedorDetails}\r\n                    items={dropdownItemsNombreProveedor}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Productos\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre de la Tienda */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idTiendaDetails}\r\n                    placeholder=\"Tiendas\"\r\n                    setValue={setIdTiendaDetails}\r\n                    items={dropdownItemsNombreTienda}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalMovil}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalMovil}>Costo en USD</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={costoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Costo en USD\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{ width: \"90%\", marginLeft: \"2%\", marginRight: \"2%\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>Fecha</Text>\r\n                  {isDateLoaded && (\r\n                    <MyDateInput\r\n                      dayValue={fechaDiaDetails}\r\n                      monthValue={fechaMesDetails}\r\n                      yearValue={fechaAnnoDetails}\r\n                      onDayChange={setFechaDiaDetails}\r\n                      onMonthChange={setFechaMesDetails}\r\n                      onYearChange={setFechaAnnoDetails}\r\n                      style={{ margin: 20 }}\r\n                      styleText={styles.labelTextModalMovil}\r\n                    />\r\n                  )}\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar entrada */}\r\n                  {isPermisoModificarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar entrada */}\r\n                  {isPermisoAgregarEntrada &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewEntrada()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarEntradaFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Permisos\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Proveedor:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del proveedor\"\r\n              value={nombreProveedorSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProveedorSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del Producto\"\r\n              value={nombreProductoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Rango de Costo en USD:</Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={costoDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostoDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={costoHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostohastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarEntradas()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTablePermisos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProveedorDetails}\r\n                    placeholder=\"Proveedores\"\r\n                    setValue={setIdProveedorDetails}\r\n                    items={dropdownItemsNombreProveedor}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Productos\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre de la Tienda */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTiendasDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTiendasDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idTiendaDetails}\r\n                    placeholder=\"Tiendas\"\r\n                    setValue={setIdTiendaDetails}\r\n                    items={dropdownItemsNombreTienda}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"TiendaDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Costo en USD\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={costoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Costo en USD\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarEntrada &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewEntrada()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarEntradaFunction()\r\n                      : modificarEntradaFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Permisos\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\n\r\nexport interface TipoServicio {\r\n  id_TipoServicio: string;\r\n  nombre_TipoServicio: string;\r\n  costo: string;\r\n}\r\n\r\ninterface Props {\r\n  items: TipoServicio[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableTipoServicio: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortEntradas, setSortEntradas} = useSortEntradas();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<TipoServicio[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre Proveedor\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Producto\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Costo Por Unidad\") {\r\n      aux = \"option5\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option6\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    /*\r\n    setSortEntradas({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n    */\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Proveedor\" ||\r\n              column === \"Nombre Producto\" ||\r\n              column === \"Costo Por Unidad\" ||\r\n              column === \"Fecha\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortEntradasAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n          <DataTable style={{ width: \"100%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_TipoServicio}\r\n                onPress={() => detailsModalView(item.id_TipoServicio)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_TipoServicio}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.costo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Tipo de Servicio\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_TipoServicio}\r\n                onPress={() => detailsModalView(item.id_TipoServicio)}\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_TipoServicio}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.costo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Tipo de Servicio\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getAllTiendas, isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport {\r\n  getAllProductos,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  MyDateTableTipoServicio,\r\n  TipoServicio,\r\n} from \"../components/MyDateTableTipoServicio\";\r\nimport {\r\n  addTipoServicio,\r\n  deleteTipoServicio,\r\n  filtrarTipoSrvicio,\r\n  getAllTipoServicios,\r\n  getTipoServicioByID,\r\n  modificarTipoServicio,\r\n} from \"../services/TipoServiciosServices\";\r\n\r\nexport default function TipoServicioView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortEntradas, setSortEntradas } = useSortEntradas();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idTipoServicioDetails, setIdTipoServicioDetails] = useState(\"\");\r\n  const [nombreTipoServicioDetails, setNombreTipoServicioDetails] =\r\n    useState(\"\");\r\n  const [costoDetails, setCostoDetails] = useState(\"\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] = useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarTipoServicio, setIsPermisoAgregarTipoServicio] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarTipoServicio, setIsPermisoEliminarTipoServicio] =\r\n    React.useState(false);\r\n  const [isPermisoModificarTipoServicio, setIsPermisoModificarTipoServicio] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarTipoServicioView = await isPermiso(\r\n        usuario.token,\r\n        \"20\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarTipoServicioView = await isPermiso(\r\n        usuario.token,\r\n        \"21\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultEliminarTipoServicioView = await isPermiso(\r\n        usuario.token,\r\n        \"22\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      setIsPermisoAgregarTipoServicio(resultAgregarTipoServicioView);\r\n      setIsPermisoEliminarTipoServicio(resultEliminarTipoServicioView);\r\n      setIsPermisoModificarTipoServicio(resultModificarTipoServicioView);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<string | null>(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<TipoServicio[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreProveedor, setDropDownItemsNombreProveedor] =\r\n    useState<ProveedorPiker[]>([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreTipoServicioSearch, setNombreTipoServicioSearch] = useState(\"\");\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [costoDesdeSearch, setCostoDesdeSearch] = useState(\"\");\r\n  const [costoHastaSearch, setCostohastaSearch] = useState(\"\");\r\n  const [fechaDesdeSearch, setFechaDesdeSearch] = useState(new Date());\r\n  const [fechaHastaSearch, setFechaHastaSearch] = useState(new Date());\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2000\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getProveedoresPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProveedores(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_proveedor,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProveedor(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([...tiendasMapeados]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setNombreTipoServicioDetails(\"\");\r\n    setCostoDetails(\"\");\r\n    setCostoDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfEntradas = async () => {\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getTipoServicioByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Actualizamos los detalles\r\n        setIdTipoServicioDetails(result.id_tipo_servicio);\r\n        setNombreTipoServicioDetails(result.nombre);\r\n        setCostoDetails(result.costo);\r\n\r\n        // Actualizamos los valores auxiliares\r\n        setIdProductoAuxModificarDetails(result.producto.id_producto);\r\n        setIdTiendaAuxModificarDetails(result.tienda.id_tienda);\r\n        setCantidadAuxModificarDetails(result.cantidad);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<TipoServicio[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarTipoSrvicio(\r\n          usuario.token,\r\n          nombreTipoServicioSearch,\r\n          costoDesdeSearch,\r\n          costoHastaSearch\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: TipoServicio[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_TipoServicio: element.id_tipo_servicio,\r\n              nombre_TipoServicio: element.nombre,\r\n              costo: element.costo,\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfEntradas();\r\n  }, [modalEntradasDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosTipoServicios = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener tipos de servicios\r\n        const result = await getAllTipoServicios(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: TipoServicio[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_TipoServicio: element.id_tipo_servicio,\r\n                nombre_TipoServicio: element.nombre,\r\n                costo: element.costo,\r\n              };\r\n            })\r\n          );\r\n\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron Tipos de Servicios.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener los Tipos de Servicios o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\r\n          \"Ocurrió un problema al cargar los datos de lo Tipos de Servicios\"\r\n        );\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosTipoServicios();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarTipoServicio = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let EntradasFiltradas: TipoServicio[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        /*\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortEntradas?.criterioOrden && sortEntradas.tipoOrden) {\r\n          EntradasFiltradas = await ordenarEntradas(\r\n            usuario.token,\r\n            EntradasFiltradas,\r\n            sortEntradas.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n          */\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(EntradasFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarTipoServicio();\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n    sortEntradas,\r\n    selectedOptionTipoOrden,\r\n  ]);\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setNombreTipoServicioDetails(\"\");\r\n    setCostoDetails(\"0\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarTipoServicio();\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreTipoServicioSearch(\"\");\r\n    setNombreProductoSearch(\"\");\r\n    setCostoDesdeSearch(\"\");\r\n    setCostohastaSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewTipoServicio = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Agregando tipo de servicio. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR TIPO DE SERVICIO. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (nombreTipoServicioDetails.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-El nombre del tipo de servicio no puede ser vacio.\\n\";\r\n      }\r\n      if (costoDetails.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-El costo del tipo de servicio no puede ser vacio.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await addTipoServicio(\r\n          usuario.token,\r\n          nombreTipoServicioDetails,\r\n          costoDetails\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un nuevo tipo de servicio: ${nombreTipoServicioDetails} con un costo de ${costoDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          7\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(\r\n          `Se ha creado el tipo de servicio ${nombreTipoServicioDetails}`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreTipoServicioDetails(\"\");\r\n        setCostoDetails(\"\");\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un tipo de servicio\r\n  const modificarTipoServicioFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Modificando tipo de servicio. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR TIPO DE SERVICIO. Compruebe los siguientes campos:\\n\";\r\n\r\n      if (nombreTipoServicioDetails.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-El nombre del tipo de servicio no puede ser vacio.\\n\";\r\n      }\r\n      if (costoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-El costo del tipo de servicio no puede ser vacio.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await modificarTipoServicio(\r\n          usuario.token,\r\n          idTipoServicioDetails,\r\n          nombreTipoServicioDetails,\r\n          costoDetails\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó el tipo de servicio: ${nombreTipoServicioDetails} con un costo de ${costoDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          7\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(`El tipo de servicio se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para elimºinar los datos de un producto\r\n  const eliminarEntradaFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Eliminando tipo de servicio. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR TIPO DE SERVICIO. Compruebe los siguientes parámetros:\\n\";\r\n\r\n      // Combrovar tipos de servicios longevos\r\n      \r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 4 ||\r\n        parseInt(idTipoServicioDetails) === 25 ||\r\n        parseInt(idTipoServicioDetails) === 26\r\n      ) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No es posible eliminar este tipo de servicio ya que se usa en la lógica del software.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        const resultDelete = await deleteTipoServicio(\r\n          usuario.token,\r\n          idTipoServicioDetails\r\n        );\r\n        if (resultDelete) {\r\n          // Agregar Acción de usuario agregar proveedor\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó el tipo de servicio ${nombreTipoServicioDetails}.`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n\r\n          setIsBotonModalMesajeVisible(true)\r\n          setModalMensaje(`El tipo de servicio se eliminó con éxito`);\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(true);\r\n          setNombreTipoServicioDetails(\"\");\r\n          setCostoDetails(\"\");\r\n        } else {\r\n          setModalMensaje(validarCampos);\r\n          setModalMensajeView(true);\r\n        }\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\"Tipo de Servicio\", \"Costo\"];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\"Tipo de Servicio\", \"Costo\"];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarTipoServicio && (\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                setModalEntradasDates({\r\n                  id_entrada: \"\",\r\n                  isAddEntrada: true,\r\n                  fileEditable: true,\r\n                  isModificarEntrada: false,\r\n                })\r\n              }\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>\r\n                Agregar Tipo de Servicio\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableTipoServicio\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Nombre del tipo de Servicio:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del tipo de Servicio\"\r\n                    value={nombreTipoServicioSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreTipoServicioSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Rango de Costo:</Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={costoDesdeSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCostoDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={costoHastaSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCostohastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      marginTop: \"10%\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => filtrarYOrdenarTipoServicio()}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\"\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Tipo de Servicio\"\r\n                  : \"Datos del Tipo de Servicio\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    marginLeft: \"2%\",\r\n                    marginRight: \"2%\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Tipo de Servicio\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    value={nombreTipoServicioDetails}\r\n                    onChangeText={(text) => {\r\n                      setNombreTipoServicioDetails(text);\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    editable={isPermisoModificarTipoServicio ? true : false}\r\n                    placeholder=\"Nombre Tipo de Servicio\"\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Costo</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={costoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoDetails(validNumericValue);\r\n                      }}\r\n                      editable={isPermisoModificarTipoServicio ? true : false}\r\n                      placeholder=\"Costo\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"43%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este Tipo de Servicio?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"43%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewTipoServicio()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"43%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR este Tipo de Servicio?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarTipoServicioFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (<TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Tipo de Servicio\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>)}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarTipoServicio && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Tipo de Servicio\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>\r\n              Nombre del tipo de Servicio:\r\n            </Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del tipo de Servicio\"\r\n              value={nombreTipoServicioSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreTipoServicioSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Rango de Costo:</Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={costoDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostoDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={costoHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostohastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                marginTop: \"10%\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarTipoServicio()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableTipoServicio\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\"\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Tipo de Servicio\"\r\n                  : \"Datos del Tipo de Servicio\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    marginLeft: \"2%\",\r\n                    marginRight: \"2%\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Tipo de Servicio\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    value={nombreTipoServicioDetails}\r\n                    onChangeText={(text) => {\r\n                      setNombreTipoServicioDetails(text);\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    editable={isPermisoModificarTipoServicio ? true : false}\r\n                    placeholder=\"Nombre Tipo de Servicio\"\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Costo</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={costoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoDetails(validNumericValue);\r\n                      }}\r\n                      editable={isPermisoModificarTipoServicio ? true : false}\r\n                      placeholder=\"Costo\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este Tipo de Servicio?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewTipoServicio()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR este Tipo de Servicio?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarEntradaFunction()\r\n                      : modificarTipoServicioFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (<TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Tipo de Servicio\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>)}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\nimport { cambiarValorMonedaUSD, getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\n\r\nexport default function CambiarMonedaView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n  const { usuario, setUsuario } = useUsuario();\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [cambioMoneda, setCambioMoneda] = useState(\"\");\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        if (usuario?.token) {\r\n            const result = await getValorMonedaUSD(usuario.token);\r\n            setCambioMoneda(result);\r\n        }\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  // Cambiar moneda function\r\n  const cambiarMoneda = async () =>{\r\n    if (usuario?.token) {\r\n        await cambiarValorMonedaUSD(usuario.token, cambioMoneda);\r\n        setModalMensajeView(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      {/*Barra superior*/}\r\n      <Navbar />\r\n      {/* Vista animada que se despliega hacia la izquierda */}\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"flex-start\",\r\n          marginTop: \"10%\",\r\n        }}\r\n      >\r\n        <View style={{ width: \"20%\", marginLeft: \"40%\", }}>\r\n          <Text style={styles.labelTextModalDesktop}>\r\n            {\"Cambio de moneda de USD -> CUP\"}\r\n          </Text>\r\n          <CustomTextImputSearch\r\n            style={styles.textImputModal}\r\n            cursorColor={Colors.azul_Oscuro}\r\n            value={cambioMoneda}\r\n            onChangeText={(text) => {\r\n              // Permite solo números y un punto decimal\r\n              const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n              // Asegura que solo haya un punto decimal\r\n              const validNumericValue =\r\n                numericValue.split(\".\").length > 2\r\n                  ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                  : numericValue;\r\n\r\n              setCambioMoneda(validNumericValue);\r\n            }}\r\n            placeholder=\"Digite un número\"\r\n          />\r\n        </View>\r\n        <View style={{ width: \"20%\", marginLeft: \"41%\" }}>\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Oscuro,\r\n              borderRadius: 15,\r\n              width: \"80%\", // Ancho fijo para pantallas de escritorio\r\n              height: 30, // Altura fija para pantallas de escritorio\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginLeft: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n              marginTop: \"3%\", // Margen adicional entre botones\r\n            }}\r\n            onPress={() => {cambiarMoneda()}}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: \"white\",\r\n                fontSize: 16,\r\n              }}\r\n            >\r\n              Cambiar Moneda\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      {/*Modal mensaje */}\r\n      <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Se ha cambiado el valor de la moneda a ${cambioMoneda}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() => setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n    </View>\r\n  );\r\n}\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Cliente } from '../components/MyDateTableClientes';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortClientes {\r\n  items: Cliente[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortClientesContextType {\r\n  sortClientes: SortClientes | null;\r\n  setSortClientes: (sortClientes: SortClientes | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortClientesContext = createContext<SortClientesContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortClientesProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortClientes, setSortClientes] = useState<SortClientes | null>(null);\r\n\r\n  return (\r\n    <SortClientesContext.Provider value={{ sortClientes: sortClientes, setSortClientes: setSortClientes }}>\r\n      {children}\r\n    </SortClientesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortClientes = () => {\r\n  const context = React.useContext(SortClientesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortEntradas debe usarse dentro de un SortClientes');\r\n  }\r\n  return context;\r\n};","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\nimport { useSortClientes } from \"../contexts/AuxiliarSortClientes\";\r\n\r\nexport interface Cliente {\r\n  id_Cliente: string;\r\n  nombre: string;\r\n  correo?: string;\r\n  telefono?: string;\r\n  nota?: string;\r\n  cif?: string;\r\n  detalle_bancario?: string;\r\n  descripcion?: string;\r\n}\r\n\r\nexport interface ClientesPiker {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Cliente[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableProveedorModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableClientes: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n  const { sortProductos, setSortProductos } = useSortProductos();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortClientes, setSortClientes } = useSortClientes();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Cliente[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_producto: string) => {\r\n    setModalProveedoresDates({\r\n      id_proveedor: id_producto,\r\n      isAddProveedor: true,\r\n      fileEditable: false,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: true,\r\n      isDetallesProveedores: true,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  const resultadoCondicionalOpcionesDeCelda = (item: Cliente) => {\r\n    if (usuario?.id_rol) {\r\n      return (usuario.id_rol == \"1\" && isPermisoOpcionesDeCelda) ||\r\n        (usuario.id_rol == \"2\" && isPermisoOpcionesDeCelda)\r\n        ? true\r\n        : item.telefono && isPermisoOpcionesDeCelda\r\n        ? true\r\n        : false;\r\n    }\r\n  };\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n    // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre\") {\r\n      aux = \"option3\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortClientes({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n  \r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre\") && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Suave,\r\n                    marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                    width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                    height: 24, // Asegúrate de que tenga tamaño consistente\r\n                    justifyContent: \"center\", // Centrar contenido del botón\r\n                    alignItems: \"center\", // Centrar contenido del botón\r\n                    borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                    marginBottom: 4, // Elevar el botón del borde inferior\r\n                    paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                  }}\r\n                  onPress={() => sortEntradasAux(column)}\r\n                >\r\n                  <Image\r\n                    source={require(\"../images/ordenar.png\")}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </TouchableOpacity>\r\n              )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idProductoOption, setIdProductoOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdProductoOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalProveedoresDates({\r\n        id_proveedor: idProductoOption,\r\n        isAddProveedor: true,\r\n        fileEditable: true,\r\n        isModificarProveedor: true,\r\n        isAddProductoShowProveedoresTiendas: true,\r\n        isDetallesProveedores: true,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Cliente !== idProductoOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idProductoOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Cliente}\r\n                onPress={() => detailsModalView(item.id_Cliente)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Primera celda - CIF */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.cif}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.detalle_bancario}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Teléfono */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.telefono}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idProductoOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Cliente}\r\n                onPress={() => detailsModalView(item.id_Cliente)}\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Primera celda - CIF */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.cif}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.detalle_bancario}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Teléfono */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    flex: 1.5,\r\n                    justifyContent: \"center\", // Centrar horizontalmente\r\n                    alignItems: \"center\", // Centrar verticalmente\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text>{item.telefono}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 16,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport {\r\n  actualizarProveedor,\r\n  addProveedor,\r\n  deleteProveedor,\r\n  filtrarProveedor,\r\n  getAllProveedores,\r\n  getProveedorById,\r\n} from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport {\r\n  PanGestureHandler,\r\n  PanGestureHandlerGestureEvent,\r\n} from \"react-native-gesture-handler\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport {\r\n  MyDateTableModalShowDateProveedores,\r\n  ProveedoresShowModal,\r\n} from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\nimport {\r\n  EntradaShowModal,\r\n  MyDateTableModalShowDatesEntradas,\r\n} from \"../components/MyDateTableModalShowDatesEntradas\";\r\nimport { getAllEntradasByProveedorId } from \"../services/EntradaServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  Cliente,\r\n  MyDateTableClientes,\r\n} from \"../components/MyDateTableClientes\";\r\nimport {\r\n  actualizarCliente,\r\n  addCliente,\r\n  deleteCliente,\r\n  filtrarCliente,\r\n  getAllClientes,\r\n  getClienteById,\r\n  ordenarClientes,\r\n} from \"../services/clienteServices\";\r\nimport { useSortClientes } from \"../contexts/AuxiliarSortClientes\";\r\n\r\nexport default function ClientesView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortClientes, setSortClientes } = useSortClientes();\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar proovedores y ver datos\r\n  const [idClienteDetails, setIdClienteDetails] = useState(\"\");\r\n  const [nombreClienteDetails, setNombreClienteDetails] = useState(\"\");\r\n  const [correoEmailClienteDetails, setCorreoEmailClienteDetails] =\r\n    useState(\"\");\r\n  const [telefonoClienteDetails, setTelefonoClienteDetails] = useState(\"\");\r\n  const [notaClienteDetails, setNotaClienteDetails] = useState(\"\");\r\n  const [descripcionClienteDetails, setDescripcionClienteDetails] =\r\n    useState(\"\");\r\n  const [cfiClienteDetails, setCfiClienteDetails] = useState(\"\");\r\n  const [detallesBancariosClienteDetils, setDetallesBancariosProveedorDetils] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [isModalChekEliminarVisible, setIsModalChekEliminarVisible] =\r\n    useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  // Controlar el doble clic del boton\r\n    const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarCliente, setIsPermisoAgregarCliente] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarCliente, setIsPermisoEliminarCliente] =\r\n    React.useState(false);\r\n  const [isPermisoModificarCliente, setIsPermisoModificarCliente] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultEliminarClienteView = await isPermiso(\r\n        usuario.token,\r\n        \"18\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarClienteView = await isPermiso(\r\n        usuario.token,\r\n        \"17\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultAgregarClienteView = await isPermiso(\r\n        usuario.token,\r\n        \"16\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      setIsPermisoAgregarCliente(resultAgregarClienteView);\r\n      setIsPermisoEliminarCliente(resultEliminarClienteView);\r\n      setIsPermisoModificarCliente(resultModificarClienteView);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [entradasByProveedor, setEntradasByProveedor] = useState<\r\n    EntradaShowModal[]\r\n  >([]);\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Cliente[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItems, setDropDownItems] = useState<TiendaPiker[]>([]);\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreClienteSearch, setNombreClienteSearch] = useState(\"\");\r\n  const [cifSearch, setCifSearch] = useState(\"\");\r\n  const [telefonoSearch, setTelefonoSearch] = useState(\"\");\r\n  const [detallesBancariosSearch, setDetallesBancariosSearch] = useState(\"\");\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getDatesTiendaPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItems([{ label: \"Tiendas\", value: \"\" }, ...tiendasMapeados]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setNombreClienteDetails(\"\");\r\n    setCfiClienteDetails(\"\");\r\n    setNotaClienteDetails(\"\");\r\n    setTelefonoClienteDetails(\"\");\r\n    setDescripcionClienteDetails(\"\");\r\n    setCorreoEmailClienteDetails(\"\");\r\n    setDetallesBancariosProveedorDetils(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: false,\r\n      isModificarProveedor: false,\r\n      fileEditable: true,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n  };\r\n  const cargarDetailsOfCliente = async () => {\r\n    if (usuario?.token && modalProveedoresDates?.id_proveedor) {\r\n      const result = await getClienteById(\r\n        usuario.token,\r\n        modalProveedoresDates.id_proveedor\r\n      );\r\n      if (result) {\r\n        setIdClienteDetails(modalProveedoresDates.id_proveedor);\r\n        setNombreClienteDetails(result.nombre);\r\n        setCorreoEmailClienteDetails(result.email || \"\");\r\n        setDescripcionClienteDetails(result.descripcion || \"\");\r\n        setTelefonoClienteDetails(result.telefono || \"\");\r\n        setNotaClienteDetails(result.nota || \"\");\r\n        setCfiClienteDetails(result.Cif || \"\");\r\n        setDetallesBancariosProveedorDetils(result.detalles_bancarios || \"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<Cliente[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarCliente(\r\n          usuario.token,\r\n          nombreClienteSearch,\r\n          telefonoSearch,\r\n          cifSearch,\r\n          detallesBancariosSearch\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Cliente[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Proveedor: element.id_proveedor,\r\n              nombre: element.nombre,\r\n              correo: element.email || \"\",\r\n              direccion: element.direccion || \"\",\r\n              telefono: element.telefono || \"\",\r\n              nota: element.nota || \"\",\r\n              cif: element.Cif || \"\",\r\n              detalle_bancario: element.detalles_bancarios || \"\",\r\n              descripcion: element.descripcion || \"\",\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    filtrarYOrdenarClientes();\r\n  }, [selectedOptionTipoOrden, sortClientes]);\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfCliente();\r\n  }, [modalProveedoresDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosClientes = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllClientes(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const clientesMapeados: Cliente[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Cliente: element.id_cliente, // Mapea 'id_proovedor' a 'id_Proveedor'\r\n                nombre: element.nombre, // Mapea 'nombre' directamente\r\n                correo: element.email || \"\", // Asume que hay un campo 'correo' o usa un valor por defecto\r\n                detalle_bancario: element.detalles_bancarios || \"\", // Asume que hay un campo 'detalle_bancario' o usa un valor por defecto\r\n                telefono: element.telefono || \"\", // Mapea un teléfono o usa un valor por defecto\r\n                nota: element.nota || \"\",\r\n                cif: element.Cif || \"\",\r\n                descripcion: element.descripcion || \"\",\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(clientesMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron proveedoress.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener los proveedores o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de los proveedores\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de los proovedores\"\r\n      );\r\n    }\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarClientes();\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosClientes();\r\n        getDatesTiendaPiker();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarClientes = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let productosFiltrados: Cliente[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortClientes?.criterioOrden && sortClientes.tipoOrden) {\r\n          productosFiltrados = await ordenarClientes(\r\n            usuario.token,\r\n            productosFiltrados,\r\n            sortClientes.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(productosFiltrados);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setNombreClienteDetails(\"\");\r\n    setCorreoEmailClienteDetails(\"\");\r\n    setDescripcionClienteDetails(\"\");\r\n    setTelefonoClienteDetails(\"\");\r\n    setNotaClienteDetails(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: true,\r\n      fileEditable: true,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreClienteSearch(\"\");\r\n    setCifSearch(\"\");\r\n    setDetallesBancariosSearch(\"\");\r\n    setTelefonoSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewCliente = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando cliente. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL AGREGAR CLIENTE. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (nombreClienteDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombre del cliente no puede ser vacío\";\r\n        flag = false;\r\n      }\r\n\r\n      if (flag) {\r\n        await addCliente(\r\n          usuario.token,\r\n          nombreClienteDetails,\r\n          correoEmailClienteDetails,\r\n          telefonoClienteDetails,\r\n          descripcionClienteDetails,\r\n          notaClienteDetails,\r\n          cfiClienteDetails,\r\n          detallesBancariosClienteDetils\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó al sistema al cliente ${nombreClienteDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          8\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(\r\n          `El Cliente \"${nombreClienteDetails}\" fue insertado con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreClienteDetails(\"\");\r\n        setTelefonoClienteDetails(\"\");\r\n        setCorreoEmailClienteDetails(\"\");\r\n        setDescripcionClienteDetails(\"\");\r\n        setNotaClienteDetails(\"\");\r\n        setCfiClienteDetails(\"\");\r\n        setDetallesBancariosProveedorDetils(\"\");\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarProveedor = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando cliente. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR CLIENTE. Compruebe los siguientes campos:\\n\";\r\n\r\n      if (nombreClienteDetails.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-El nombre del cliente no puede ser vacío\";\r\n      }\r\n      if (parseInt(idClienteDetails) === 1) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No se puede modificar al cliente Anónimo ya que se usa en la lógica del software\";\r\n      }\r\n\r\n      if (flag) {\r\n        await actualizarCliente(\r\n          usuario.token,\r\n          idClienteDetails,\r\n          nombreClienteDetails,\r\n          correoEmailClienteDetails,\r\n          telefonoClienteDetails,\r\n          descripcionClienteDetails,\r\n          notaClienteDetails,\r\n          cfiClienteDetails,\r\n          detallesBancariosClienteDetils\r\n        );\r\n        // Agregar Acción de usuario modificar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó al cliente ${nombreClienteDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          8\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(\r\n          `El Cliente \"${nombreClienteDetails}\" se modificó con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para eliminar proveedor\r\n  const eliminarProveedor = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando cliente. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL TRATAR DE ELIMINAR EL CLIENTE. Motivos:\\n\";\r\n\r\n      if (parseInt(idClienteDetails) === 1) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No se puede eliminar al cliente Anónimo ya que se usa en la lógica del software\";\r\n      }\r\n\r\n      if (flag) {\r\n        const resulDeletProveedor = await deleteCliente(\r\n          usuario.token,\r\n          idClienteDetails\r\n        );\r\n        if (resulDeletProveedor) {\r\n          // Agregar Acción de usuario agregar proveedor\r\n\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó al cliente ${nombreClienteDetails}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            8\r\n          );\r\n\r\n          setIsBotonModalMesajeVisible(true);\r\n          setModalMensaje(\r\n            `El Cliente \"${nombreClienteDetails}\" se eliminó con éxito`\r\n          );\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(true);\r\n        } else {\r\n          setIsBotonModalMesajeVisible(true);\r\n          validarCampos +=\r\n            \"-Ya se han echo operaciones en el sistema con este cliente.\\n\";\r\n          setModalMensaje(validarCampos);\r\n          setModalMensajeView(true);\r\n        }\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre\",\r\n    \"CIF / CI\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n  const columnasMyDateTableEntradaModal = [\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Costo\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"CIF / CI\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"telefono\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarCliente && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Cliente</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableClientes\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Nombre del Cliente:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del cliente\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={nombreClienteSearch}\r\n                    onChangeText={setNombreClienteSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    CIF / Carnet Identidad:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"CIF / Carnet Identidad\"\r\n                    value={cifSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setCifSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Detalles Bancarios:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Detalles Bancarios\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={detallesBancariosSearch}\r\n                    onChangeText={setDetallesBancariosSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Número de Teléfono:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Número de Teléfono\"\r\n                    value={telefonoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setTelefonoSearch}\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarClientes();\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Proveedor\"\r\n                  : \"Agregar Proveedor\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  value={nombreClienteDetails}\r\n                  onChangeText={setNombreClienteDetails}\r\n                  placeholder=\"Nombre del cliente\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y CIF */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoClienteDetails}\r\n                      onChangeText={setTelefonoClienteDetails}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CIF */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Código de Identificación Fiscal (CIF)\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={cfiClienteDetails}\r\n                      onChangeText={setCfiClienteDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Código de Identificación Fiscal\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailClienteDetails}\r\n                      onChangeText={setCorreoEmailClienteDetails}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosClienteDetils}\r\n                      onChangeText={setDetallesBancariosProveedorDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  value={notaClienteDetails}\r\n                  onChangeText={setNotaClienteDetails}\r\n                  placeholder=\"Nota\"\r\n                />\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del cliente\"\r\n                  multiline={true}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  numberOfLines={5}\r\n                  value={descripcionClienteDetails}\r\n                  onChangeText={setDescripcionClienteDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarCliente &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos cliente ${nombreClienteDetails}?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarCliente &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al cliente ${nombreClienteDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarCliente &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewCliente()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarProveedor()\r\n                      : modificarProveedor()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Clientes\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {(isPermisoAgregarCliente ||\r\n            isPermisoModificarCliente ||\r\n            isPermisoEliminarCliente) && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Cliente\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Cliente:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del Cliente\"\r\n              value={nombreClienteSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreClienteSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              CIF / Carnet Identidad:\r\n            </Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"CIF / Carnet Identidad\"\r\n              value={cifSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setCifSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Detalles Bancarios:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Detalles Bancarios\"\r\n              value={detallesBancariosSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setDetallesBancariosSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Número de Teléfono:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Número de Teléfono\"\r\n              value={telefonoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setTelefonoSearch}\r\n            />\r\n\r\n            <View\r\n              style={{ width: \"100%\", flexDirection: \"row\", marginTop: \"5%\" }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarClientes()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableClientes\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Cliente\"\r\n                  : \"Agregar Cliente\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  value={nombreClienteDetails}\r\n                  onChangeText={setNombreClienteDetails}\r\n                  placeholder=\"Nombre del cliente\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y CIF */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoClienteDetails}\r\n                      onChangeText={setTelefonoClienteDetails}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CIF */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Código de Identificación Fiscal (CIF)\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={cfiClienteDetails}\r\n                      onChangeText={setCfiClienteDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Código de Identificación Fiscal\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailClienteDetails}\r\n                      onChangeText={setCorreoEmailClienteDetails}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosClienteDetils}\r\n                      onChangeText={setDetallesBancariosProveedorDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  value={notaClienteDetails}\r\n                  onChangeText={setNotaClienteDetails}\r\n                  placeholder=\"Nota\"\r\n                />\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del cliente\"\r\n                  multiline={true}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  numberOfLines={5}\r\n                  value={descripcionClienteDetails}\r\n                  onChangeText={setDescripcionClienteDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarCliente &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos cliente ${nombreClienteDetails}?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarCliente &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al cliente ${nombreClienteDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarCliente &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewCliente()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarProveedor()\r\n                      : modificarProveedor()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Clientes\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { TiendaShowModal } from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport interface Garantia {\r\n  id_Servicio: string;\r\n  id_Cliente: string;\r\n  id_Tienda: string;\r\n  id_Tipo_servicio: string;\r\n  id_Deuda: string;\r\n  id_Garantia: string;\r\n  fecha: string;\r\n  precio: string;\r\n  nota: string;\r\n  descripcion: string;\r\n  nombreCliente: string;\r\n  nombreTienda: string;\r\n  nombreTipoServicio: string;\r\n  nombreProducto?: string;\r\n  cantidad?: string;\r\n  devuelto: boolean;\r\n  duracion: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Garantia[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableGarantias: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Garantia[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    const obtenerCambioPrecio = async () => {\r\n      if (usuario?.token) {\r\n        // Obtener alro de oneda de cambio\r\n        setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n      }\r\n    };\r\n\r\n    obtenerCambioPrecio();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Este métodod devuelve el mensaje el fodo de la tabla con los parámetros requeridos\r\n  const mensajeOfEndTable = () => {\r\n    let mensaje = \"Suma de precios de servicios minoristas filtrados:   \";\r\n    let sumaMinoristaUSD = 0;\r\n    let sumaMayoristaUSD = 0;\r\n\r\n    items.forEach((item) => {\r\n      if (!item.devuelto) {\r\n        if (parseInt(item.id_Tipo_servicio) === 25) {\r\n          sumaMayoristaUSD +=\r\n            parseFloat(item.precio) *\r\n            (item.cantidad ? parseInt(item.cantidad ?? \"0\") : 0);\r\n        } else {\r\n          sumaMinoristaUSD +=\r\n            parseFloat(item.precio) *\r\n            (item.cantidad ? parseInt(item.cantidad ?? \"0\") : 0);\r\n        }\r\n      }\r\n    });\r\n\r\n    mensaje += `USD: ${sumaMinoristaUSD.toFixed(4)}   CUP: ${(\r\n      sumaMinoristaUSD * cambioMoneda\r\n    ).toFixed(\r\n      0\r\n    )}      Suma de precios de servicios mayoristas filtrados:  CUP: ${(\r\n      sumaMayoristaUSD * cambioMoneda\r\n    ).toFixed(0)} `;\r\n    return String(mensaje);\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Fecha\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Cliente\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Precio\") {\r\n      aux = \"option5\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortServicios({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Cliente\" ||\r\n                column === \"Precio\" ||\r\n                column === \"Fecha\") && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Suave,\r\n                    marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                    width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                    height: 24, // Asegúrate de que tenga tamaño consistente\r\n                    justifyContent: \"center\", // Centrar contenido del botón\r\n                    alignItems: \"center\", // Centrar contenido del botón\r\n                    borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                    marginBottom: 4, // Elevar el botón del borde inferior\r\n                    paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                  }}\r\n                  onPress={() => sortEntradasAux(column)}\r\n                >\r\n                  <Image\r\n                    source={require(\"../images/ordenar.png\")}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </TouchableOpacity>\r\n              )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Cliente !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Garantia}\r\n                onPress={() => detailsModalView(item.id_Garantia)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Precio USD */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.duracion}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >{parseFloat(item.precio).toFixed(4)}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(parseFloat(item.precio) * cambioMoneda).toFixed(0)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Cantidad Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.cantidad ? item.cantidad : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Servicios\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Garantia}\r\n                onPress={() => detailsModalView(item.id_Garantia)}\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Duaración Garantia */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.duracion}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio USD */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {parseFloat(item.precio).toFixed(4)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(parseFloat(item.precio) * cambioMoneda).toFixed(0)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Cantidad Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.cantidad ? item.cantidad : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getCantidadProductoInTiendaEspecifica,\r\n  isProductoInTienda,\r\n  tienda_Realizarventa,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getAllEntradasByProductoId,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n  getProductoById,\r\n  getProductoCantidadTotal,\r\n  updateProductoTienda,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  addServicio,\r\n  deleteServicio,\r\n  filtrarSrvicio,\r\n  getAllServicios,\r\n  getServicioByID,\r\n  modificarServicio,\r\n  ordenarServicios,\r\n} from \"../services/ServiciosServices\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport { getAllTipoServicios } from \"../services/TipoServiciosServices\";\r\nimport { getAllClientes } from \"../services/clienteServices\";\r\nimport { calcularPromedioAcomulado } from \"../functions/CalcularCostoPromedioProducto\";\r\nimport {\r\n  addVenta,\r\n  deleteVenta,\r\n  getAllVentas,\r\n  getVentaByIDOfServicio,\r\n} from \"../services/ventasServices\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\nimport {\r\n  Garantia,\r\n  MyDateTableGarantias,\r\n} from \"../components/MyDateTableGarantias\";\r\nimport {\r\n  deleteGarantia,\r\n  filtrarGarantia,\r\n  getAllGarantias,\r\n  getGarantiaByID,\r\n  modificarGarantia,\r\n} from \"../services/GarantiaServices\";\r\n\r\nexport default function GarantiasView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n  const [\r\n    capaPrioridadTipoServicioDetails,\r\n    setCapaPrioridadTipoServicioDetails,\r\n  ] = useState(1000);\r\n  const [capaPrioridadProductoDetails, setCapaPrioridadProductoDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadClienteDetails, setCapaPrioridadClienteDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTipoServicioSearsh, setCapaPrioridadTipoServicioSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendaSearsh, setCapaPrioridadTiendaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"TipoServicioDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ProductoDetails\") {\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(2000);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ClienteDetails\") {\r\n      setCapaPrioridadClienteDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"TipoServicioSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(2000);\r\n    } else if (prioridad === \"TiendaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(2000);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n\r\n  const [idFirstTimeProducto, setIdFirsTimeProducto] = useState(\"\");\r\n  const [auxOptimizacion, setAuxOptimizacion] = useState(false);\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idServicioDetails, setIdServicioDetails] = useState(\"\");\r\n  const [idGarantiaDetails, setIdGarantiaDetaisl] = useState(\"\");\r\n  const [idClienteDetails, setIdClienteDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [idTipoServicioDetails, setIdTipoServicioDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [cantidadProductoDetails, setCantidadProductoDetails] = useState(\"1\");\r\n  const [costoPromedioProductoCUPDetails, setCostoPromedioProductoCUPDetails] =\r\n    useState(\"0\");\r\n  const [costoPromedioProductoUSDDetails, setCostoPromedioProductoUSDDetails] =\r\n    useState(\"0\");\r\n  const [precioUSDDetails, setPrecioUSDDetails] = useState(\"\");\r\n  const [devueltoDetails, setDevueltoDetails] = useState(\"sin Devolver\");\r\n  const [precioCUPDetails, setPrecioCUPDetails] = useState(\"\");\r\n  const [notaDetails, setNotaDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n  const [duracionGarantiaDetails, setDuracionGarantiaDetails] = useState(\"\");\r\n\r\n  // Variable auxiliar para el redondeo de memerio\r\n  const [auxRedondeo, setAuxRedondeo] = useState(\"\");\r\n\r\n  // Variables axiliares para lavalidación de campos\r\n  const [idTiendaDetailsViejo, setIdTiendaDetailsViejo] = useState(\"\");\r\n  const [idProductoDetailsViejo, setIdProductoDetailsViejo] = useState(\"\");\r\n  const [cantidadProductoDetailsViejo, setCantidadProductoDetailsViejo] =\r\n    useState(\"\");\r\n  const [idTipoServicioDetailsViejo, setIdTipoServicioDetailsViejo] =\r\n    useState(\"\");\r\n  const [devueltoDetailsViejo, setDevueltoDetailsViejo] =\r\n    useState(\"sin Devolver\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  // Variable que controla si se está haciendo una venta o se hizo una venta\r\n  const [isVentaProducto, setIsVentaProducto] = useState(false);\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoModificarGarantia, setIsPermisoModificarGarantia] =\r\n    React.useState(false);\r\n\r\n  const [isPermisoVerCostoVenta, setIsPermisoVerCostoVenta] = useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultModificarGarantia = await isPermiso(\r\n        usuario.token,\r\n        \"33\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      // cargar cambio de moneda\r\n      setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n\r\n      setIsPermisoModificarGarantia(resultModificarGarantia);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Garantia[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreCliente, setDropDownItemsNombreCliente] = useState<\r\n    ProveedorPiker[]\r\n  >([]);\r\n  const [nombreProductoVentaDetails, setNombreProductoVentaDetails] =\r\n    useState(String);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreTipoServicio, setDropDownItemsNombreTipoServicio] =\r\n    useState<ProductoPiker[]>([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreClienteSearch, setNombreClienteSearch] = useState(\"\");\r\n  const [nombreProductoSearsh, setNombreProductoSearch] = useState(\"\");\r\n  const [idTipoServicioSearch, setIdTipoServicioSearch] = useState(\"\");\r\n  const [idTiendaSearch, setIdTiendaSearch] = useState(\"\");\r\n  const [rangoPrecioDesdeSearch, setRangoPrecioDesdeSearch] = useState(\"\");\r\n  const [rangoPrecioHastaSearch, setRangoPrecioHastaSearch] = useState(\"\");\r\n  const [rangoDuracionDesdeSearch, setRangoDuracionDesdeSearch] = useState(\"\");\r\n  const [rangoDuracionHastaSearch, setRangoDuracionHastaSearch] = useState(\"\");\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2024\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n\r\n  const options = [\r\n    { label: \"Día\", value: \"dia\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n    { label: \"Mes\", value: \"mes\" },\r\n  ];\r\n\r\n  const optionsDevueltoDetails = [\r\n    { label: \"Devolver\", value: \"devolver\" },\r\n    { label: \"Sin Devolver\", value: \"sin devolver\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"dia\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 6);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else if (value === \"mes\") {\r\n      // Restar 1 mes a la fecha actual\r\n      const lastMonthDate = new Date(currentDate);\r\n      lastMonthDate.setMonth(currentDate.getMonth() - 1);\r\n      const monthYear = String(lastMonthDate.getFullYear());\r\n      const monthMonth = String(lastMonthDate.getMonth() + 1).padStart(2, \"0\");\r\n      const monthDay = String(lastMonthDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${monthYear}-${monthMonth}-${monthDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarGarantias(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getTipoServicioPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTipoServicios(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const tipoServiciosMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tipo_servicio,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTipoServicio([\r\n          { label: \"Todos los tipos de servicios\", value: \"\" },\r\n          ...tipoServiciosMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getClientesPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllClientes(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const ClientesMapeados: ProductoPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_cliente,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreCliente(ClientesMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Todas las tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setIdTipoServicioDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  // Cargar todos los datos de el servicio pro primera ves que se abre el servicio\r\n  const cargarDetailsOfGarantia = async () => {\r\n    setAuxOptimizacion(false);\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getGarantiaByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.servicio.fecha\r\n          .split(\"T\")[0]\r\n          .split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdServicioDetails(result.servicio.id_servicio);\r\n        setIdGarantiaDetaisl(result.id_garantia);\r\n        setIdClienteDetails(result.servicio.cliente.id_cliente);\r\n        setIdTipoServicioDetails(\r\n          result.servicio.tipo_servicio.id_tipo_servicio\r\n        );\r\n        setNotaDetails(result.servicio.nota);\r\n        setDescripcionDetails(result.servicio.descripcion);\r\n        setDevueltoDetails(\r\n          result.servicio.devuelto ? \"devolver\" : \"sin devolver\"\r\n        );\r\n        setDuracionGarantiaDetails(result.duracion);\r\n\r\n        // Actualizar variables para la validación de campos\r\n        setDevueltoDetailsViejo(\r\n          result.servicio.devuelto ? \"devolver\" : \"sin devolver\"\r\n        );\r\n        // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n        if (\r\n          parseInt(result.servicio.tipo_servicio.id_tipo_servicio) === 2 ||\r\n          parseInt(result.servicio.tipo_servicio.id_tipo_servicio) === 4 ||\r\n          parseInt(result.servicio.tipo_servicio.id_tipo_servicio) === 25\r\n        ) {\r\n          const resultventa = await getVentaByIDOfServicio(\r\n            usuario.token,\r\n            result.servicio.id_servicio\r\n          );\r\n          // Obtener entradas del produto para calcular datos del producto\r\n\r\n          // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n          if (resultventa) {\r\n            // Obtener entradas del produto para calcular datos del producto\r\n            const entradas = await getAllEntradasByProductoId(\r\n              usuario?.token,\r\n              resultventa.producto.id_producto\r\n            );\r\n            const cantidadTotalProducto = await getProductoCantidadTotal(\r\n              usuario.token,\r\n              resultventa.producto.id_producto\r\n            );\r\n\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setNombreProductoVentaDetails(resultventa.producto.nombre);\r\n            setIdProductoDetails(resultventa.producto.id_producto);\r\n            setCantidadProductoDetails(resultventa.cantidad);\r\n            setIdTiendaDetails(result.servicio.tienda.id_tienda);\r\n            setPrecioUSDDetails(result.servicio.precio);\r\n            setPrecioCUPDetails(\r\n              String(parseFloat(result.servicio.precio) * cambioMoneda)\r\n            );\r\n            setCostoPromedioProductoUSDDetails(\r\n              calcularPromedioAcomulado(entradas, cantidadTotalProducto)\r\n            );\r\n          } else {\r\n            // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setIdProductoDetails(\"\");\r\n            setCantidadProductoDetails(\"\");\r\n            setIdTiendaDetails(\"\");\r\n            setPrecioUSDDetails(\"\");\r\n            setPrecioCUPDetails(\"\");\r\n            setCostoPromedioProductoUSDDetails(\"\");\r\n          }\r\n        } else {\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(false);\r\n          setPrecioUSDDetails(result.servicio.precio);\r\n          setPrecioCUPDetails(\r\n            String(parseInt(result.servicio.precio) * cambioMoneda)\r\n          );\r\n          setCostoPromedioProductoUSDDetails(result.servicio.costo);\r\n        }\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares;\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n    setAuxOptimizacion(true);\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Garantia[] | null> => {\r\n    if (usuario?.token) {\r\n      // FALAT LA TIENDA EN EL FILTRADO\r\n      try {\r\n        const result = await filtrarGarantia(\r\n          usuario.token,\r\n          nombreClienteSearch,\r\n          rangoDuracionHastaSearch,\r\n          rangoDuracionDesdeSearch,\r\n          nombreProductoSearsh,\r\n          fechaDesde,\r\n          fechaHasta,\r\n          idTiendaSearch\r\n        );\r\n\r\n        if (result) {\r\n          const serviciosMapeados: Garantia[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Servicio: element.servicio.id_servicio,\r\n              id_Cliente: element.servicio.cliente.id_cliente,\r\n              id_Tienda: element.servicio.tienda.id_tienda,\r\n              id_Tipo_servicio: \"\",\r\n              id_Deuda: \"\",\r\n              id_Garantia: element.id_garantia,\r\n              fecha: element.servicio.fecha,\r\n              precio: element.servicio.precio,\r\n              nota: element.servicio.nota,\r\n              descripcion: element.servicio.descripcion,\r\n              nombreCliente: element.servicio.cliente.nombre,\r\n              nombreTienda: element.servicio.tienda.nombre,\r\n              nombreTipoServicio: \"\",\r\n              nombreProducto: element.servicio.venta\r\n                ? element.servicio.venta.producto.nombre\r\n                : \"\", // Verifica si 'venta' no es null\r\n              cantidad: element.servicio.venta\r\n                ? element.servicio.venta.cantidad\r\n                : \"\", // Verifica si 'venta' no es null\r\n              devuelto: element.servicio.devuelto,\r\n              duracion: element.duracion,\r\n            }))\r\n          );\r\n          return serviciosMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Cargar datos del servicio cuando se seleccionado en la tabla\r\n  useEffect(() => {\r\n    cargarDetailsOfGarantia();\r\n  }, [modalEntradasDates]);\r\n\r\n  useEffect(() => {\r\n    if (auxRedondeo === \"PrecioCUP\") {\r\n      setPrecioUSDDetails(parseFloat(precioUSDDetails).toFixed(4));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"PrecioUSD\") {\r\n      setPrecioCUPDetails(parseFloat(precioCUPDetails).toFixed(0));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoCUP\") {\r\n      setCostoPromedioProductoUSDDetails(\r\n        parseFloat(costoPromedioProductoUSDDetails).toFixed(4)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoUSD\") {\r\n      setCostoPromedioProductoCUPDetails(\r\n        parseFloat(costoPromedioProductoCUPDetails).toFixed(0)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    }\r\n    setAuxRedondeo(\"\");\r\n  }, [auxRedondeo]);\r\n\r\n  useEffect(() => {\r\n    if (auxOptimizacion) {\r\n      if (\r\n        idProductoDetails !== \"\" &&\r\n        idProductoDetails !== idFirstTimeProducto &&\r\n        usuario?.token\r\n      ) {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n        const auxiliarAsyncFuncion = async () => {\r\n          // Obtener entradas del produto para calcular datos del producto\r\n          const entradas = await getAllEntradasByProductoId(\r\n            usuario?.token,\r\n            idProductoDetails\r\n          );\r\n          const resultProdcuto = await getProductoById(\r\n            usuario.token,\r\n            idProductoDetails\r\n          );\r\n          const cantidadTotalProducto = await getProductoCantidadTotal(\r\n            usuario.token,\r\n            idProductoDetails\r\n          );\r\n\r\n          // Cargar el costo promedio del producto seleccionado\r\n          setCostoPromedioProductoUSDDetails(\r\n            calcularPromedioAcomulado(entradas, cantidadTotalProducto)\r\n          );\r\n          // Cargar precio del producto seleccioando en USD y CUP\r\n          setPrecioUSDDetails(resultProdcuto.precio ?? 0);\r\n          setPrecioCUPDetails(\r\n            String(parseFloat(resultProdcuto.precio) * cambioMoneda) ?? 0\r\n          );\r\n        };\r\n        auxiliarAsyncFuncion();\r\n      } else {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n      }\r\n    }\r\n  }, [idProductoDetails]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        setAuxOptimizacion(false);\r\n        await checkPermiso();\r\n        await getTipoServicioPikerDetails();\r\n        await getClientesPikerDetails();\r\n        await getTiendasPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarGarantias = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let serviciosFiltradas: Garantia[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortServicios?.criterioOrden && sortServicios.tipoOrden) {\r\n          serviciosFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            serviciosFiltradas,\r\n            sortServicios.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        } else {\r\n          serviciosFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            serviciosFiltradas,\r\n            \"option3\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(serviciosFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarGarantias(\r\n      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n    );\r\n  }, [sortServicios, selectedOptionTipoOrden]);\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    setSelecterActivoDetails(\"\");\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ]);\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setIdTiendaDetails(usuario?.id_tienda);\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setPrecioCUPDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setCostoPromedioProductoUSDDetails(\"\");\r\n    setIdTipoServicioDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setNotaDetails(\"\");\r\n    setDescripcionDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Extraemos el año, mes y día de la fecha actual\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    setFechaDiaDetails(String(parseInt(day)));\r\n    setFechaMesDetails(String(parseInt(month)));\r\n    setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarGarantias(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreClienteSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n    setIdTiendaSearch(\"\");\r\n    setIdTipoServicioSearch(\"\");\r\n    setRangoPrecioDesdeSearch(\"\");\r\n    setRangoPrecioHastaSearch(\"\");\r\n    setSelecterActivoDetails(\"\");\r\n  };\r\n\r\n  // Método para actualizar los datos de un producto\r\n  const modificarGarantiaFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando garantía. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR EL GARANTÍA. Compruebe los siguientes campos:\\n\";\r\n      if (duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (flag) {\r\n        await modificarGarantia(\r\n          usuario.token,\r\n          duracionGarantiaDetails,\r\n          idServicioDetails,\r\n          idGarantiaDetails\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La garantía se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarGarantiaFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando servicio. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR SERVICIO. Compruebe los siguientes parámetros:\\n\";\r\n\r\n      if (flag) {\r\n        await deleteGarantia(usuario.token, idGarantiaDetails);\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La garantía se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setDuracionGarantiaDetails(\"\");\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setPrecioCUPDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setCostoPromedioProductoUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setNotaDetails(\"\");\r\n        setDescripcionDetails(\"\");\r\n\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Cliente\",\r\n    \"Tienda\",\r\n    \"Duración\",\r\n    \"USD\",\r\n    \"CUP\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Cliente\",\r\n    \"Tienda\",\r\n    \"Duración\",\r\n    \"USD\",\r\n    \"CUP\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableGarantias\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearsh}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Cliente:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del cliente\"\r\n                    value={nombreClienteSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreClienteSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadTiendaSearsh,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={idTiendaSearch}\r\n                      placeholder=\"Seleccione un tienda\"\r\n                      setValue={setIdTiendaSearch}\r\n                      items={dropdownItemsNombreTienda}\r\n                      direction=\"BOTTOM\"\r\n                      onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Rango de Duración en Dias\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={rangoDuracionDesdeSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoDuracionDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={rangoDuracionHastaSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoDuracionHastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaDesdeSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaHastaSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() =>\r\n                          filtrarYOrdenarGarantias(\r\n                            `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                            `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                          )\r\n                        }\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Servicio\"\r\n                  : \"Datos del Servicio\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.textLabelAsInput}>\r\n                    {dropdownItemsNombreCliente.find(\r\n                      (element) => element.value === idClienteDetails\r\n                    )?.label || \"Cliente no encontrado\"}\r\n                  </Text>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTienda.find(\r\n                        (element) => element.value === idTiendaDetails\r\n                      )?.label || \"Tienda no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTipoServicio.find(\r\n                        (element) => element.value === idTipoServicioDetails\r\n                      )?.label || \"Tipo de Servicio no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Garantías */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 100,\r\n                    }}\r\n                  >\r\n                    <View style={{ marginTop: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Duración en días:\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={duracionGarantiaDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          setDuracionGarantiaDetails(numericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={isPermisoModificarGarantia}\r\n                        placeholder=\"Duracion En días\"\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  {/*  */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {nombreProductoVentaDetails}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {cantidadProductoDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en USD\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {precioUSDDetails}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {parseFloat(precioUSDDetails) * cambioMoneda}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Campo fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    marginLeft: \"2%\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                  {isDateLoaded && (\r\n                    <MyDateInput\r\n                      dayValue={fechaDiaDetails}\r\n                      monthValue={fechaMesDetails}\r\n                      yearValue={fechaAnnoDetails}\r\n                      onDayChange={setFechaDiaDetails}\r\n                      onMonthChange={setFechaMesDetails}\r\n                      onYearChange={setFechaAnnoDetails}\r\n                      style={{ margin: 20 }}\r\n                      styleText={styles.labelTextModalDesktop}\r\n                      onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                      isReadOnly={!false}\r\n                    />\r\n                  )}\r\n                </View>\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginLeft: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <Text style={styles.textLabelAsInput}>{notaDetails}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <Text style={styles.textDescroptionLabelAsInput}>\r\n                  {descripcionDetails}\r\n                </Text>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarGarantia &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"35%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta garantía?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Garantía\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Botón para eliminar proveedor */}\r\n                  {isPermisoModificarGarantia &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"35%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR esta garantía?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Garantía\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => isModalChekEliminarEntrada\r\n                    ? eliminarGarantiaFunction()\r\n                    : modificarGarantiaFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Garantías\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearsh}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Cliente:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del cliente\"\r\n              value={nombreClienteSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreClienteSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n            <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                zIndex: capaPrioridadTiendaSearsh,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={idTiendaSearch}\r\n                placeholder=\"Seleccione un tienda\"\r\n                setValue={setIdTiendaSearch}\r\n                items={dropdownItemsNombreTienda}\r\n                direction=\"BOTTOM\"\r\n                onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              Rango de Duración en Dias\r\n            </Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={rangoDuracionDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoDuracionDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={rangoDuracionHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoDuracionHastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() =>\r\n                    filtrarYOrdenarGarantias(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    )\r\n                  }\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableGarantias\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Garantía\"\r\n                  : \"Datos del Garantía\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.textLabelAsInput}>\r\n                    {dropdownItemsNombreCliente.find(\r\n                      (element) => element.value === idClienteDetails\r\n                    )?.label || \"Cliente no encontrado\"}\r\n                  </Text>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTienda.find(\r\n                        (element) => element.value === idTiendaDetails\r\n                      )?.label || \"Tienda no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTipoServicio.find(\r\n                        (element) => element.value === idTipoServicioDetails\r\n                      )?.label || \"Tipo de Servicio no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Garantías */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 100,\r\n                    }}\r\n                  >\r\n                    <View style={{ marginTop: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Duración en días:\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={duracionGarantiaDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          setDuracionGarantiaDetails(numericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={isPermisoModificarGarantia}\r\n                        placeholder=\"Duracion En días\"\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  {/*  */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {nombreProductoVentaDetails}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {cantidadProductoDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en USD\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {precioUSDDetails}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {parseFloat(precioUSDDetails) * cambioMoneda}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={!false}\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"3%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <Text style={styles.textLabelAsInput}>{notaDetails}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <Text style={styles.textDescroptionLabelAsInput}>\r\n                  {descripcionDetails}\r\n                </Text>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarGarantia &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta garantía?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Garantía\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoModificarGarantia &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR esta garantía?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Garantía\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarGarantiaFunction()\r\n                      : modificarGarantiaFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Garantías\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { TiendaShowModal } from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport interface Deuda {\r\n  id_Servicio: string;\r\n  id_Cliente: string;\r\n  id_Tienda: string;\r\n  id_Tipo_servicio: string;\r\n  id_Deuda: string;\r\n  id_Garantia: string;\r\n  fecha: string;\r\n  precio: string;\r\n  nota: string;\r\n  descripcion: string;\r\n  nombreCliente: string;\r\n  nombreTienda: string;\r\n  nombreTipoServicio: string;\r\n  nombreProducto?: string;\r\n  cantidad?: string;\r\n  devuelto: boolean;\r\n  deuda: string;\r\n  pagos_deuda: any[];\r\n  total_pagado: number;\r\n  cantidad_restante: number;\r\n\r\n}\r\n\r\ninterface Props {\r\n  items: Deuda[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableDeudas: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Deuda[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    const obtenerCambioPrecio = async () => {\r\n      if (usuario?.token) {\r\n        // Obtener alro de oneda de cambio\r\n        setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n      }\r\n    };\r\n\r\n    obtenerCambioPrecio();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Metodo para calcular si la deuda está saldada o no\r\n  const isDeudaSaldadaFromTable = (pago_deudas: any[], deuda: string) =>{\r\n    let suma: number = 0.0;\r\n    if (pago_deudas) {\r\n      pago_deudas.forEach((pago) => {\r\n        suma += parseFloat(pago.pagada);\r\n      })\r\n      if (parseFloat(deuda) === suma) {\r\n        return <Image source={require(\"../images/aprobado.png\")} style={{width: 20, height: 20}} />\r\n      }else{\r\n        return <Image source={require(\"../images/candelado.png\")} style={{width: 20, height: 20}} />\r\n      }\r\n    }else{\r\n      return <Image source={require(\"../images/candelado.png\")} style={{width: 20, height: 20}} />\r\n    }\r\n  }\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Fecha\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Cliente\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Precio\") {\r\n      aux = \"option5\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortServicios({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {column === \"Fecha\" && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Suave,\r\n                    marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                    width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                    height: 24, // Asegúrate de que tenga tamaño consistente\r\n                    justifyContent: \"center\", // Centrar contenido del botón\r\n                    alignItems: \"center\", // Centrar contenido del botón\r\n                    borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                    marginBottom: 4, // Elevar el botón del borde inferior\r\n                    paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                  }}\r\n                  onPress={() => sortEntradasAux(column)}\r\n                >\r\n                  <Image\r\n                    source={require(\"../images/ordenar.png\")}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </TouchableOpacity>\r\n              )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Cliente !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Deuda}\r\n                onPress={() => detailsModalView(item.id_Deuda)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {parseFloat(item.precio).toFixed(4)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(parseFloat(item.precio) * cambioMoneda).toFixed(0)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Cantidad Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.cantidad ? item.cantidad : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Deuda*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.total_pagado}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Saldada*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{isDeudaSaldadaFromTable(item.pagos_deuda, item.deuda)}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Servicios\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Deuda}\r\n                onPress={() => detailsModalView(item.id_Deuda)}\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio USD */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {parseFloat(item.precio).toFixed(4)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(parseFloat(item.precio) * cambioMoneda).toFixed(0)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Cantidad Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.cantidad ? item.cantidad : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Deuda*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.total_pagado}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Saldada*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{isDeudaSaldadaFromTable(item.pagos_deuda, item.deuda)}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  Animated,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\n\r\nexport interface PagoDeudaShowModal {\r\n  id_pago_deuda: string;\r\n  pagada: string;\r\n  fecha: string;\r\n}\r\n\r\ninterface Props {\r\n  items: PagoDeudaShowModal[];\r\n  columns: string[];\r\n  onButtonPress: (item: PagoDeudaShowModal) => void;\r\n}\r\n\r\nexport const MyDateTablePagoDeudaWithButton: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  onButtonPress,\r\n}) => {\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(5);\r\n  const [displayedItems, setDisplayedItems] = React.useState<PagoDeudaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n    setDisplayedItems(items.slice(from, to));\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage);\r\n    }\r\n  };\r\n\r\n  const showTableColumns = () => (\r\n    <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n      {columns.map((column, index) => (\r\n        <DataTable.Title\r\n          key={index}\r\n          style={[styles.headerColumn, { flex: 1 }]}\r\n          numeric={index > 1}\r\n        >\r\n          <Text style={styles.headerTextDesktop}>{column}</Text>\r\n        </DataTable.Title>\r\n      ))}\r\n      <DataTable.Title style={styles.headerColumn}>\r\n        <Text style={styles.headerTextDesktop}>Acción</Text>\r\n      </DataTable.Title>\r\n    </DataTable.Header>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.containerDesktop}>\r\n      <DataTable style={{ width: \"100%\" }}>\r\n        {showTableColumns()}\r\n\r\n        {displayedItems.map((item) => (\r\n          <DataTable.Row key={item.id_pago_deuda}>\r\n            <DataTable.Cell numeric style={styles.handerRow}>\r\n              {item.pagada}\r\n            </DataTable.Cell>\r\n            <DataTable.Cell numeric style={styles.handerRow}>\r\n              <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n            </DataTable.Cell>\r\n            <DataTable.Cell style={styles.actionColumn}>\r\n              <TouchableOpacity\r\n                style={styles.actionButton}\r\n                onPress={() => onButtonPress(item)}\r\n              >\r\n                <Text style={styles.actionButtonText}>Eliminar</Text>\r\n              </TouchableOpacity>\r\n            </DataTable.Cell>\r\n          </DataTable.Row>\r\n        ))}\r\n\r\n        <View style={styles.paginationContainer}>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.paginationButtonMovil,\r\n              page === 0 && styles.disabledButton,\r\n            ]}\r\n            onPress={() => handleChangePage(page - 1)}\r\n            disabled={page === 0}\r\n          >\r\n            <Text style={styles.paginationLabel}>Anterior</Text>\r\n          </TouchableOpacity>\r\n\r\n          <Text style={styles.paginationLabel}>\r\n            {`${page * itemsPerPage + 1}-${Math.min(\r\n              (page + 1) * itemsPerPage,\r\n              items.length\r\n            )} of ${items.length}`}\r\n          </Text>\r\n\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.paginationButtonMovil,\r\n              (page + 1) * itemsPerPage >= items.length &&\r\n                styles.disabledButton,\r\n            ]}\r\n            onPress={() => handleChangePage(page + 1)}\r\n            disabled={(page + 1) * itemsPerPage >= items.length}\r\n          >\r\n            <Text style={styles.paginationLabel}>Próxima</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </DataTable>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    marginTop: \"2%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  actionColumn: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  actionButton: {\r\n    backgroundColor: Colors.rojo_oscuro,\r\n    borderRadius: 10,\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 10,\r\n  },\r\n  actionButtonText: {\r\n    color: Colors.blanco,\r\n    fontWeight: \"bold\",\r\n    fontSize: 14,\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getCantidadProductoInTiendaEspecifica,\r\n  isProductoInTienda,\r\n  tienda_Realizarventa,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getAllEntradasByProductoId,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n  getProductoById,\r\n  getProductoCantidadTotal,\r\n  getRelacionProductoByTienda,\r\n  updateProductoTienda,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  addServicio,\r\n  deleteServicio,\r\n  filtrarSrvicio,\r\n  getAllServicios,\r\n  getServicioByID,\r\n  modificarServicio,\r\n  ordenarServicios,\r\n} from \"../services/ServiciosServices\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport { getAllTipoServicios } from \"../services/TipoServiciosServices\";\r\nimport { getAllClientes } from \"../services/clienteServices\";\r\nimport { calcularPromedioAcomulado } from \"../functions/CalcularCostoPromedioProducto\";\r\nimport {\r\n  addVenta,\r\n  deleteVenta,\r\n  getAllVentas,\r\n  getVentaByIDOfServicio,\r\n} from \"../services/ventasServices\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\nimport CustomRadioButtonSingle from \"../components/CustomRadioButtonSearch\";\r\nimport {\r\n  addGarantia,\r\n  deleteGarantia,\r\n  modificarGarantia,\r\n} from \"../services/GarantiaServices\";\r\nimport {\r\n  addEncargo,\r\n  deleteEncargo,\r\n  modificarEncargo,\r\n} from \"../services/EncargoServices\";\r\nimport { Deuda, MyDateTableDeudas } from \"../components/MydateTableDeudas\";\r\nimport {\r\n  deleteDeuda,\r\n  filtrarDeudas,\r\n  getDeudaByID,\r\n} from \"../services/DeudasServices\";\r\nimport {\r\n  MyDateTablePagoDeudaWithButton,\r\n  PagoDeudaShowModal,\r\n} from \"../components/MyDateTableShowPagoDeudas\";\r\nimport { addPagoDeuda, deletePagoDeuda } from \"../services/PagoDeudaServices\";\r\n\r\nexport default function DeudasView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n  const [\r\n    capaPrioridadTipoServicioDetails,\r\n    setCapaPrioridadTipoServicioDetails,\r\n  ] = useState(1000);\r\n  const [capaPrioridadProductoDetails, setCapaPrioridadProductoDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadClienteDetails, setCapaPrioridadClienteDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTipoServicioSearsh, setCapaPrioridadTipoServicioSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendaSearsh, setCapaPrioridadTiendaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"TipoServicioDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ProductoDetails\") {\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(2000);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ClienteDetails\") {\r\n      setCapaPrioridadClienteDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"TipoServicioSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(2000);\r\n    } else if (prioridad === \"TiendaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(2000);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n\r\n  const [idFirstTimeProducto, setIdFirsTimeProducto] = useState(\"\");\r\n  const [auxOptimizacion, setAuxOptimizacion] = useState(false);\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idDeudaDetails, setIdDeudaDetails] = useState(\"\");\r\n  const [idServicioDetails, setIdServicioDetails] = useState(\"\");\r\n  const [idClienteDetails, setIdClienteDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [idTipoServicioDetails, setIdTipoServicioDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [cantidadProductoDetails, setCantidadProductoDetails] = useState(\"1\");\r\n  const [costoPromedioProductoCUPDetails, setCostoPromedioProductoCUPDetails] =\r\n    useState(\"0\");\r\n  const [costoPromedioProductoUSDDetails, setCostoPromedioProductoUSDDetails] =\r\n    useState(\"0\");\r\n  const [precioUSDDetails, setPrecioUSDDetails] = useState(\"\");\r\n  const [devueltoDetails, setDevueltoDetails] = useState(\"sin Devolver\");\r\n  const [precioCUPDetails, setPrecioCUPDetails] = useState(\"\");\r\n  const [notaDetails, setNotaDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n  const [fechaDiaDetailsEncargo, setFechaDiaDetailsEncargo] = useState(\"\");\r\n  const [fechaMesDetailsEncargo, setFechaMesDetailsEncargo] = useState(\"\");\r\n  const [fechaAnnoDetailsEncargo, setFechaAnnoDetailsEncargo] = useState(\"\");\r\n  const [adelantoEncargo, setAdelantoEncargo] = useState(\"\");\r\n  const [isGarantiaDetails, setIsGarantiaDetails] = useState(false);\r\n  const [isGarantiaDetailsViejo, setIsGarantiaDetailsViejo] = useState(false);\r\n  const [idGarantiaDetails, setIdGarantiaDetails] = useState(\"\");\r\n  const [duracionGarantiaDetails, setDuracionGarantiaDetails] = useState(\"\");\r\n  const [duracionGarantiaDetailsVieja, setDuracionGarantiaDetailsVieja] =\r\n    useState(\"\");\r\n  const [pagoDeudaByDeudaDetails, setPagoDeudaByDeudaDetails] = useState<\r\n    PagoDeudaShowModal[]\r\n  >([]);\r\n  const [idEncargoDetails, setIdEncargoDetails] = useState(\"\");\r\n\r\n  // Variable auxiliar para el redondeo de memerio\r\n  const [auxRedondeo, setAuxRedondeo] = useState(\"\");\r\n\r\n  // Variables axiliares para lavalidación de campos\r\n  const [idTiendaDetailsViejo, setIdTiendaDetailsViejo] = useState(\"\");\r\n  const [idProductoDetailsViejo, setIdProductoDetailsViejo] = useState(\"\");\r\n  const [cantidadProductoDetailsViejo, setCantidadProductoDetailsViejo] =\r\n    useState(\"\");\r\n  const [idTipoServicioDetailsViejo, setIdTipoServicioDetailsViejo] =\r\n    useState(\"\");\r\n  const [devueltoDetailsViejo, setDevueltoDetailsViejo] =\r\n    useState(\"sin Devolver\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  // Variable que controla si se está haciendo una venta o se hizo una venta\r\n  const [isVentaProducto, setIsVentaProducto] = useState(false);\r\n  const [isEncargoProducto, setIsEncargoProducto] = useState<boolean>(false);\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [isModalAddPagoDeudaView, setIsModalAddPagoDeudaView] =\r\n    React.useState(false);\r\n  const [cantidadAddPagoDeuda, setCantidadAddPagoDeuda] = React.useState(\"\");\r\n  const [total_pagado, setTotal_pagado] = React.useState(\"\");\r\n  const [cantidad_restante, setCantidad_restante] = React.useState(\"\");\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarServicio, setIsPermisoAgregarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarServicio, setIsPermisoEliminarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoModificarServicio, setIsPermisoModificarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoServicioLocal, setIsPermisoServicioLocal] =\r\n    React.useState(false);\r\n  const [isPermisoServicioGeneral, setIsPermisoServicioGeneral] =\r\n    React.useState(false);\r\n\r\n  const [isPermisoVerCostoVenta, setIsPermisoVerCostoVenta] = useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultEliminarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"25\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"24\",\r\n        usuario.id_usuario\r\n      );\r\n      const resulServicioLocal = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      // cargar cambio de moneda\r\n      setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n\r\n      setIsPermisoServicioLocal(resulServicioLocal);\r\n      setIsPermisoServicioGeneral(resultServicioGeneral);\r\n      setIsPermisoAgregarServicio(resultAgregarServicio);\r\n      setIsPermisoEliminarServicio(resultEliminarServicio);\r\n      setIsPermisoModificarServicio(resultModificarServicio);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Deuda[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreCliente, setDropDownItemsNombreCliente] = useState<\r\n    ProveedorPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreTipoServicio, setDropDownItemsNombreTipoServicio] =\r\n    useState<ProductoPiker[]>([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreClienteSearch, setNombreClienteSearch] = useState(\"\");\r\n  const [nombreProductoSearsh, setNombreProductoSearch] = useState(\"\");\r\n  const [idTipoServicioSearch, setIdTipoServicioSearch] = useState(\"\");\r\n  const [idTiendaSearch, setIdTiendaSearch] = useState(\"\");\r\n  const [isDeudaSaldadaSearsh, setIsDeudaSaldadaSearsh] = useState(true);\r\n  const [rangoDeudaDesdeSearch, setRangoPrecioDesdeSearch] = useState(\"\");\r\n  const [rangoDeudaHastaSearch, setRangoPrecioHastaSearch] = useState(\"\");\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2024\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n  const [selecterEstadoDeudaSearch, setSelecterEstadoDeudaSearsh] =\r\n    useState(\"ninguna\");\r\n\r\n  const options = [\r\n    { label: \"Día\", value: \"dia\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n    { label: \"Mes\", value: \"mes\" },\r\n  ];\r\n\r\n  const optionsEstadoDeuda = [\r\n    { label: \"Ninguna\", value: \"ninguna\" },\r\n    { label: \"Saldada\", value: \"saldada\" },\r\n    { label: \"Sin Saldar\", value: \"sin_saldar\" },\r\n  ];\r\n\r\n  const optionsDevueltoDetails = [\r\n    { label: \"Devolver\", value: \"devolver\" },\r\n    { label: \"Sin Devolver\", value: \"sin devolver\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"dia\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 6);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else if (value === \"mes\") {\r\n      // Restar 1 mes a la fecha actual\r\n      const lastMonthDate = new Date(currentDate);\r\n      lastMonthDate.setMonth(currentDate.getMonth() - 1);\r\n      const monthYear = String(lastMonthDate.getFullYear());\r\n      const monthMonth = String(lastMonthDate.getMonth() + 1).padStart(2, \"0\");\r\n      const monthDay = String(lastMonthDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${monthYear}-${monthMonth}-${monthDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarDeudas(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      let result: any;\r\n\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n      const resulServicioLocal = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      if (resultServicioGeneral) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          usuario.id_tienda\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      } else if (resulServicioLocal) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          usuario.id_tienda\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTipoServicioPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTipoServicios(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const tipoServiciosMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tipo_servicio,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTipoServicio([\r\n          { label: \"Todos los tipos de servicios\", value: \"\" },\r\n          ...tipoServiciosMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getClientesPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllClientes(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const ClientesMapeados: ProductoPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_cliente,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreCliente(ClientesMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Todas las tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setIdTipoServicioDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  // Cargar datos de lprodcut o del servicio de venta\r\n  const cargarDetailsOfProductoVenta = async () => {\r\n    if (usuario?.token) {\r\n      const resultDeuda = await getDeudaByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 4 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        const resultventa = await getVentaByIDOfServicio(\r\n          usuario.token,\r\n          idServicioDetails\r\n        );\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(true);\r\n\r\n        // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n        if (resultventa) {\r\n          // Obtener entradas del produto para calcular datos del producto\r\n          const entradas = await getAllEntradasByProductoId(\r\n            usuario?.token,\r\n            resultventa.producto.id_producto\r\n          );\r\n          const cantidadTotalProducto = await getProductoCantidadTotal(\r\n            usuario.token,\r\n            resultventa.producto.id_producto\r\n          );\r\n\r\n          // Actualizar variables para la validación de campos\r\n          setIdProductoDetailsViejo(resultventa.producto.id_producto);\r\n          setCantidadProductoDetailsViejo(resultventa.cantidad);\r\n          setIdTiendaDetailsViejo(resultDeuda.deuda.servicio.tienda.id_tienda);\r\n\r\n          setIdProductoDetails(resultventa.producto.id_producto);\r\n          setIdFirsTimeProducto(resultventa.producto.id_producto);\r\n          setCantidadProductoDetails(resultventa.cantidad);\r\n          setIdTiendaDetails(resultDeuda.deuda.servicio.tienda.id_tienda);\r\n          setPrecioUSDDetails(resultDeuda.deuda.servicio.precio);\r\n          setPrecioCUPDetails(\r\n            String(parseFloat(resultDeuda.deuda.servicio.precio) * cambioMoneda)\r\n          );\r\n          setCostoPromedioProductoUSDDetails(\r\n            calcularPromedioAcomulado(entradas, cantidadTotalProducto)\r\n          );\r\n        } else {\r\n          // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(true);\r\n\r\n          setIdProductoDetails(\"\");\r\n          setCantidadProductoDetails(\"\");\r\n          setPrecioUSDDetails(\"\");\r\n          setPrecioCUPDetails(\"\");\r\n          setCostoPromedioProductoUSDDetails(\"\");\r\n        }\r\n      } else {\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(false);\r\n        setPrecioUSDDetails(resultDeuda.deuda.servicio.precio);\r\n        setPrecioCUPDetails(\r\n          String(parseInt(resultDeuda.deuda.servicio.precio) * cambioMoneda)\r\n        );\r\n        setCostoPromedioProductoUSDDetails(resultDeuda.deuda.servicio.costo);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Cargar todos los datos de el servicio pro primera ves que se abre el servicio\r\n  const cargarDetailsOfDeuda = async () => {\r\n    setAuxOptimizacion(false);\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getDeudaByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.deuda.servicio.fecha\r\n          .split(\"T\")[0]\r\n          .split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdDeudaDetails(result.deuda.id_deuda);\r\n        setCantidad_restante(result.cantidad_restante);\r\n        setTotal_pagado(result.total_pagado);\r\n        setIdServicioDetails(result.deuda.servicio.id_servicio);\r\n        setIdClienteDetails(result.deuda.servicio.cliente.id_cliente);\r\n        setIdTipoServicioDetails(\r\n          result.deuda.servicio.tipo_servicio.id_tipo_servicio\r\n        );\r\n        setNotaDetails(result.deuda.servicio.nota);\r\n        setDescripcionDetails(result.deuda.servicio.descripcion);\r\n        setDevueltoDetails(\r\n          result.deuda.servicio.devuelto ? \"devolver\" : \"sin devolver\"\r\n        );\r\n        setIsGarantiaDetails(result.deuda.servicio.garantia !== null);\r\n\r\n        // Actualizar variables para la validación de campos\r\n        setIdTipoServicioDetailsViejo(\r\n          result.deuda.servicio.tipo_servicio.id_tipo_servicio\r\n        );\r\n        // Cargar pagos deuda\r\n        setPagoDeudaByDeudaDetails(result.deuda.pagos_deuda);\r\n        // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n        if (\r\n          parseInt(result.deuda.servicio.tipo_servicio.id_tipo_servicio) ===\r\n            2 ||\r\n          parseInt(result.deuda.servicio.tipo_servicio.id_tipo_servicio) === 4\r\n        ) {\r\n          const resultventa = await getVentaByIDOfServicio(\r\n            usuario.token,\r\n            idServicioDetails\r\n          );\r\n          // Obtener entradas del produto para calcular datos del producto\r\n\r\n          // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n          if (resultventa) {\r\n            // Obtener entradas del produto para calcular datos del producto\r\n            const entradas = await getAllEntradasByProductoId(\r\n              usuario?.token,\r\n              resultventa.producto.id_producto\r\n            );\r\n            const cantidadTotalProducto = await getProductoCantidadTotal(\r\n              usuario.token,\r\n              resultventa.producto.id_producto\r\n            );\r\n\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setIdProductoDetails(resultventa.producto.id_producto);\r\n            setCantidadProductoDetails(resultventa.cantidad);\r\n            setIdTiendaDetails(result.deuda.servicio.tienda.id_tienda);\r\n            setPrecioUSDDetails(result.deuda.servicio.precio);\r\n            setPrecioCUPDetails(\r\n              String(parseFloat(result.deuda.servicio.precio) * cambioMoneda)\r\n            );\r\n            setCostoPromedioProductoUSDDetails(\r\n              calcularPromedioAcomulado(entradas, cantidadTotalProducto)\r\n            );\r\n          } else {\r\n            // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setIdProductoDetails(\"\");\r\n            setCantidadProductoDetails(\"\");\r\n            setIdTiendaDetails(\"\");\r\n            setPrecioUSDDetails(\"\");\r\n            setPrecioCUPDetails(\"\");\r\n            setCostoPromedioProductoUSDDetails(\"\");\r\n          }\r\n        } else {\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(false);\r\n          setPrecioUSDDetails(result.deuda.servicio.precio);\r\n          setPrecioCUPDetails(\r\n            String(parseInt(result.deuda.servicio.precio) * cambioMoneda)\r\n          );\r\n          setCostoPromedioProductoUSDDetails(result.deuda.servicio.costo);\r\n        }\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n        // Actualizar fechas para el encargo\r\n        setFechaDiaDetailsEncargo(String(parseInt(day)));\r\n        setFechaMesDetailsEncargo(String(parseInt(month)));\r\n        setFechaAnnoDetailsEncargo(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares;\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n    setAuxOptimizacion(true);\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Deuda[] | null> => {\r\n    if (usuario?.token) {\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      try {\r\n        const result = await filtrarDeudas(\r\n          usuario.token,\r\n          nombreProductoSearsh,\r\n          nombreClienteSearch,\r\n          rangoDeudaDesdeSearch,\r\n          rangoDeudaHastaSearch,\r\n          fechaDesde,\r\n          fechaHasta,\r\n          idTiendaSearch,\r\n          idTipoServicioSearch,\r\n          selecterEstadoDeudaSearch === \"ninguna\"\r\n            ? undefined\r\n            : selecterEstadoDeudaSearch === \"saldada\"\r\n            ? true\r\n            : false\r\n        );\r\n\r\n        if (result) {\r\n          const serviciosMapeados: Deuda[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Servicio: element.deuda.servicio.id_servicio,\r\n              id_Cliente: element.deuda.servicio.cliente.id_cliente,\r\n              id_Tienda: element.deuda.servicio.tienda.id_tienda,\r\n              id_Tipo_servicio:\r\n                element.deuda.servicio.tipo_servicio.id_tipo_servicio,\r\n              id_Deuda: element.deuda.id_deuda,\r\n              id_Garantia: \"\",\r\n              fecha: element.deuda.servicio.fecha,\r\n              precio: element.deuda.servicio.precio,\r\n              nota: element.deuda.servicio.nota,\r\n              descripcion: element.deuda.servicio.descripcion,\r\n              nombreCliente: element.deuda.servicio.cliente.nombre,\r\n              nombreTienda: element.deuda.servicio.tienda.nombre,\r\n              nombreTipoServicio: element.deuda.servicio.tipo_servicio.nombre,\r\n              nombreProducto: element.deuda.servicio.venta\r\n                ? element.deuda.servicio.venta.producto.nombre\r\n                : \"\", // Verifica si 'venta' no es null\r\n              cantidad: element.deuda.servicio.venta\r\n                ? element.deuda.servicio.venta.cantidad\r\n                : \"\", // Verifica si 'venta' no es null\r\n              devuelto: element.deuda.servicio.devuelto,\r\n              deuda: element.deuda.deuda,\r\n              pagos_deuda: element.deuda.pagos_deuda,\r\n              total_pagado: element.total_pagado,\r\n              cantidad_restante: element.cantidad_restante,\r\n            }))\r\n          );\r\n          return serviciosMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Cargar datos del servicio cuando se seleccionado en la tabla\r\n  useEffect(() => {\r\n    cargarDetailsOfDeuda();\r\n  }, [modalEntradasDates]);\r\n\r\n  // Cargar datos de el producto si es que es seleccioando una venta de algun tipoServicio\r\n  useEffect(() => {\r\n    // Actualizar si es Encargo\r\n    if (parseInt(idTipoServicioDetails) === 26) {\r\n      setIsEncargoProducto(true);\r\n    } else {\r\n      setIsEncargoProducto(false);\r\n    }\r\n    cargarDetailsOfProductoVenta();\r\n  }, [idTipoServicioDetails]);\r\n  useEffect(() => {\r\n    if (auxRedondeo === \"PrecioCUP\") {\r\n      setPrecioUSDDetails(parseFloat(precioUSDDetails).toFixed(4));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"PrecioUSD\") {\r\n      setPrecioCUPDetails(parseFloat(precioCUPDetails).toFixed(0));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoCUP\") {\r\n      setCostoPromedioProductoUSDDetails(\r\n        parseFloat(costoPromedioProductoUSDDetails).toFixed(4)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoUSD\") {\r\n      setCostoPromedioProductoCUPDetails(\r\n        parseFloat(costoPromedioProductoCUPDetails).toFixed(0)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    }\r\n    setAuxRedondeo(\"\");\r\n  }, [auxRedondeo]);\r\n\r\n  useEffect(() => {\r\n    const auxiliar = async () => {\r\n      if (usuario?.token) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          idTiendaDetails\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      }\r\n    };\r\n    auxiliar();\r\n  }, [idTiendaDetails]);\r\n  useEffect(() => {\r\n    if (auxOptimizacion) {\r\n      if (\r\n        idProductoDetails !== \"\" &&\r\n        idProductoDetails !== idFirstTimeProducto &&\r\n        usuario?.token\r\n      ) {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n        const auxiliarAsyncFuncion = async () => {\r\n          // Obtener entradas del produto para calcular datos del producto\r\n          const entradas = await getAllEntradasByProductoId(\r\n            usuario?.token,\r\n            idProductoDetails\r\n          );\r\n          const resultProdcuto = await getProductoById(\r\n            usuario.token,\r\n            idProductoDetails\r\n          );\r\n          const cantidadTotalProducto = await getProductoCantidadTotal(\r\n            usuario.token,\r\n            idProductoDetails\r\n          );\r\n\r\n          // Cargar el costo promedio del producto seleccionado\r\n          setCostoPromedioProductoUSDDetails(\r\n            calcularPromedioAcomulado(entradas, cantidadTotalProducto)\r\n          );\r\n          // Cargar precio del producto seleccioando en USD y CUP\r\n          setPrecioUSDDetails(resultProdcuto.precio ?? 0);\r\n          setPrecioCUPDetails(\r\n            String(parseFloat(resultProdcuto.precio) * cambioMoneda) ?? 0\r\n          );\r\n        };\r\n        auxiliarAsyncFuncion();\r\n      } else {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n      }\r\n    }\r\n  }, [idProductoDetails]);\r\n\r\n  // Funcion para controlar la vicion del campo de costo del servicio y del producto\r\n  const isCampoCostoVisible = async () => {\r\n    if (usuario?.token && usuario?.id_usuario) {\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultado =\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(resultServicioGeneral) === 4 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n          ? isPermisoServicioGeneral\r\n          : true;\r\n      return resultado;\r\n    }\r\n    return false;\r\n  };\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        setAuxOptimizacion(false);\r\n        await checkPermiso();\r\n        await getTipoServicioPikerDetails();\r\n        await getClientesPikerDetails();\r\n        await getTiendasPikerDetails();\r\n        await getProductosPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarDeudas = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let deudasFiltradas: Deuda[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortServicios?.criterioOrden && sortServicios.tipoOrden) {\r\n          deudasFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            deudasFiltradas,\r\n            sortServicios.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }else{\r\n          deudasFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            deudasFiltradas,\r\n            \"option3\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(deudasFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarDeudas(\r\n      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n    );\r\n  }, [\r\n    sortServicios,\r\n    selectedOptionTipoOrden,\r\n  ]);\r\n  useEffect(() =>{\r\n    setSelecterActivoDetails(\"\")\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ])\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setIdTiendaDetails(usuario?.id_tienda);\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setPrecioCUPDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setCostoPromedioProductoUSDDetails(\"\");\r\n    setIdTipoServicioDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setNotaDetails(\"\");\r\n    setDescripcionDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Extraemos el año, mes y día de la fecha actual\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    setFechaDiaDetails(String(parseInt(day)));\r\n    setFechaMesDetails(String(parseInt(month)));\r\n    setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n    setFechaDiaDetailsEncargo(String(parseInt(day)));\r\n    setFechaMesDetailsEncargo(String(parseInt(month)));\r\n    setFechaAnnoDetailsEncargo(String(parseInt(year)));\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarDeudas(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreClienteSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n    setIdTiendaSearch(\"\");\r\n    setIdTipoServicioSearch(\"\");\r\n    setRangoPrecioDesdeSearch(\"\");\r\n    setRangoPrecioHastaSearch(\"\");\r\n    setSelecterActivoDetails(\"\");\r\n  };\r\n\r\n  // Metodo para eliminar un pago deuda de una deuda\r\n  const deletePagoDeudaFronTabla = async (item: any) => {\r\n    if (usuario?.token) {\r\n      await deletePagoDeuda(usuario.token, item.id_pago_deuda);\r\n      setPagoDeudaByDeudaDetails((prevPagoDeuda) =>\r\n        prevPagoDeuda.filter(\r\n          (pago) => pago.id_pago_deuda !== item.id_pago_deuda\r\n        )\r\n      );\r\n      setModalMensajeView(true);\r\n      setModalMensaje(\"Pago de deuda eliminado\");\r\n      setReflechModalMensajeView(true);\r\n      setIsBotonModalMesajeVisible(true);\r\n    }\r\n  };\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewDeuda = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando Pago de Deuda. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR PAGO DE DEUDA. Por favor verifique los siguientes campos:\\n\";\r\n      \r\n      if (flag) {\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n          const resultPagoDeuda = await addPagoDeuda(usuario.token, cantidadAddPagoDeuda, `${year}-${month}-${day}`, idDeudaDetails);\r\n          pagoDeudaByDeudaDetails.push(resultPagoDeuda);\r\n\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un pago de deuda de una cantidad de ${cantidadAddPagoDeuda}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            8\r\n          );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El Pago de Deuda se agregó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método para actualizar los datos de un producto\r\n  const modificarServicioFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando servicio. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let cantidadEnTiendaNueva: number = 0;\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      if (result) {\r\n        cantidadEnTiendaNueva = result.cantidad;\r\n      }\r\n\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR EL SERVICIO. Compruebe los siguientes campos:\\n\";\r\n\r\n      if (idClienteDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione un cliente. Si no hay datos del cliente seleccione anonimo\\n\";\r\n      }\r\n      if (idTipoServicioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione el tipo de servicio que está ofreciendo.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (isGarantiaDetails && duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (costoPromedioProductoUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Digite el costo del servicio.\\n\";\r\n      }\r\n      if (precioUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina el precio cobrado al cliente.\\n\";\r\n      }\r\n      if (isGarantiaDetails && duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (isGarantiaDetails && parseInt(idClienteDetails) === 1) {\r\n        flag = false;\r\n        validarCampos += \"-El ciente Anónimo no puede tener garantías\";\r\n      }\r\n      // Validacion si es un encargo\r\n      if (parseInt(idTipoServicioDetails) === 26) {\r\n        const fechaBase = new Date(\r\n          `${fechaAnnoDetails}-${fechaMesDetails}-${fechaDiaDetails}`\r\n        );\r\n        const fechaEncargo = new Date(\r\n          `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`\r\n        );\r\n\r\n        if (parseInt(idClienteDetails) === 1) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-No se puede hacer un encargo al cliente Anónimo.\\n\";\r\n        }\r\n        if (fechaEncargo < fechaBase) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La fecha del encargo no puede ser menor que la fecha del servicio.\\n\";\r\n        }\r\n      }\r\n      // Validaciones si es una venta\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 4 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        if (idProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos += \"-Seleccione un producto para vender.\\n\";\r\n        }\r\n        if (cantidadProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Defina la cantidad que desea vender del producto.\\n\";\r\n        }\r\n      }\r\n      // validación de campos avanzada\r\n      if (\r\n        cantidadEnTiendaNueva + parseInt(cantidadProductoDetailsViejo) <\r\n        parseInt(cantidadProductoDetails)\r\n      ) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-La cantidad que desea modificar es mayor que la cantidad que hay en la tienda.\\n\";\r\n      }\r\n      // se modificó solo la cantidad del producto\r\n      if (\r\n        (cantidadProductoDetails !== cantidadProductoDetailsViejo &&\r\n          idProductoDetails === idProductoDetailsViejo &&\r\n          idTiendaDetails === idTiendaDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 2) ||\r\n        parseInt(idTipoServicioDetails) === 4 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        if (\r\n          cantidadEnTiendaNueva + parseInt(cantidadProductoDetailsViejo) <\r\n          parseInt(cantidadProductoDetailsViejo) -\r\n            parseInt(cantidadProductoDetails)\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que hay en la tienda no es suficiente para modificar la venta del producto.\\n\";\r\n        }\r\n      } else if (\r\n        idProductoDetails !== idProductoDetailsViejo ||\r\n        idTiendaDetails !== idTiendaDetailsViejo\r\n      ) {\r\n        if (cantidadEnTiendaNueva < parseInt(cantidadProductoDetails)) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que hay en la tienda no es suficiente para modificar la venta del producto.\\n\";\r\n        }\r\n      }\r\n      if (flag) {\r\n        await modificarServicio(\r\n          usuario.token,\r\n          idServicioDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          precioUSDDetails,\r\n          notaDetails,\r\n          idTiendaDetails,\r\n          idTipoServicioDetails,\r\n          devueltoDetails === \"devolver\",\r\n          idClienteDetails,\r\n          \"Not suport yet\",\r\n          \"not suport yet\"\r\n        );\r\n\r\n        // Actualizar Garantía\r\n        if (\r\n          isGarantiaDetails !== isGarantiaDetailsViejo ||\r\n          duracionGarantiaDetails !== duracionGarantiaDetailsVieja\r\n        ) {\r\n          if (isGarantiaDetails) {\r\n            if (idGarantiaDetails !== \"\") {\r\n              await modificarGarantia(\r\n                usuario.token,\r\n                duracionGarantiaDetails,\r\n                idServicioDetails,\r\n                idGarantiaDetails\r\n              );\r\n            } else {\r\n              await addGarantia(\r\n                usuario.token,\r\n                duracionGarantiaDetails,\r\n                idServicioDetails\r\n              );\r\n            }\r\n          } else {\r\n            await deleteGarantia(usuario.token, idGarantiaDetails);\r\n          }\r\n        }\r\n        // Actualizar encargo\r\n        if (\r\n          idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetailsViejo) === 26\r\n        ) {\r\n          await deleteEncargo(usuario.token, idEncargoDetails);\r\n        } else if (\r\n          idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 26\r\n        ) {\r\n          await addEncargo(\r\n            usuario.token,\r\n            adelantoEncargo,\r\n            `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`,\r\n            idServicioDetails\r\n          );\r\n        } else if (\r\n          idTipoServicioDetails === idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 26\r\n        ) {\r\n          await modificarEncargo(\r\n            usuario.token,\r\n            adelantoEncargo,\r\n            `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`,\r\n            idServicioDetails,\r\n            idEncargoDetails\r\n          );\r\n        }\r\n        // Si se cambio de tipo de servicio venta a otro\r\n        if (\r\n          (parseInt(idTipoServicioDetailsViejo) === 2 ||\r\n            parseInt(idTipoServicioDetailsViejo) === 4) &&\r\n          parseInt(idTipoServicioDetails) !== 2 &&\r\n          parseInt(idTipoServicioDetails) !== 4\r\n        ) {\r\n          // Se suma la cantidad de la venta pasada en la tienda\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // Se elimina la venta\r\n          await deleteVenta(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idServicioDetails\r\n          );\r\n        }\r\n\r\n        // Comprobar si solamente se cambio la cantidad si es que el tip ode sericio viejo era ya una venta\r\n        if (\r\n          cantidadProductoDetails !== cantidadProductoDetailsViejo &&\r\n          idProductoDetails === idProductoDetailsViejo &&\r\n          idTiendaDetails === idTiendaDetailsViejo\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${\r\n              parseInt(cantidadProductoDetails) -\r\n              parseInt(cantidadProductoDetailsViejo)\r\n            }`\r\n          );\r\n          // Agregar o sobreescrivir la venta\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // Si no es el caso se modificó el id del producto o l tienda volviendo para atras la venta a la tienda y haciendola denuevo con lso nuevos datos de la venta\r\n        } else if (\r\n          (idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n            parseInt(idTipoServicioDetails) === 2) ||\r\n          parseInt(idTipoServicioDetails) === 4 ||\r\n          parseInt(idTipoServicioDetails) === 25\r\n        ) {\r\n          // Agregar o sobreescrivir la venta\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // sumar en la tienda la cantidad vieja del producto para volver atras la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // restar en la tienda nueva o vieja donde se este haciendo la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        } else if (\r\n          idTiendaDetails !== idTiendaDetailsViejo ||\r\n          idProductoDetails !== idProductoDetailsViejo\r\n        ) {\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // sumar en la tienda la cantidad vieja del producto para volver atras la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // restar en la tienda nueva o vieja donde se este haciendo la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        }\r\n\r\n        // Si es una devolucion y ademas el tipo de servicio actual es una venta se devuelve la cantidad a la tienda\r\n        if (\r\n          devueltoDetails !== devueltoDetailsViejo &&\r\n          devueltoDetails === \"devolver\" &&\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 4 ||\r\n            parseInt(idTipoServicioDetails) === 25)\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails) * -1}`\r\n          );\r\n        } else if (\r\n          devueltoDetails !== devueltoDetailsViejo &&\r\n          devueltoDetails === \"sin devolver\" &&\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 4 ||\r\n            parseInt(idTipoServicioDetails) === 25)\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        }\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó una entrada de originalmente ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          7\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El servicio se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setDuracionGarantiaDetails(\"\");\r\n\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarDeudaFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando deuda. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR DEUDA. Compruebe los siguientes parámetros:\\n\";\r\n\r\n      if (flag) {\r\n        const resultDeuda = await getDeudaByID(usuario.token, idDeudaDetails);\r\n        if (\r\n          Array.isArray(resultDeuda.deuda.pagos_deuda) &&\r\n          resultDeuda.deuda.pagos_deuda.length > 0\r\n        ) {\r\n          // Eliminar los pagoDeuda\r\n          resultDeuda.deuda.pagos_deuda.map(async (pagoDeuda: any) => {\r\n            await deletePagoDeuda(usuario.token, pagoDeuda.id_pago_deuda);\r\n          });\r\n        }\r\n        await deleteDeuda(usuario.token, idDeudaDetails);\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la deuda del tipo de servicio ${resultDeuda.deuda.servicio.tipo_servicio.nombre} el cual devía ${resultDeuda.cantidad_restante} y se había pagado ${resultDeuda.total_pagado}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          8\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La deuda se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setPrecioCUPDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setCostoPromedioProductoUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setNotaDetails(\"\");\r\n        setDescripcionDetails(\"\");\r\n        setDuracionGarantiaDetails(\"\");\r\n\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTablePagoDeudaModal = [\"Cantidad Pagada\", \"Fecha\"];\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre Cliente\",\r\n    \"Tienda\",\r\n    \"Precio USD\",\r\n    \"Precio CUP\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Cant_Saldada\",\r\n    \"Saldada\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre Cliente\",\r\n    \"Tienda\",\r\n    \"Precio USD\",\r\n    \"Precio CUP\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Cant_Saldada\",\r\n    \"Saldada\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableDeudas\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearsh}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Cliente:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del cliente\"\r\n                    value={nombreClienteSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreClienteSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Tipo de Servicio:\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadTipoServicioSearsh,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={idTipoServicioSearch}\r\n                      placeholder=\"Seleccione un tipo de servicio\"\r\n                      setValue={setIdTipoServicioSearch}\r\n                      items={dropdownItemsNombreTipoServicio}\r\n                      direction=\"BOTTOM\"\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioSearsh\")\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {isPermisoServicioGeneral && (\r\n                    <View style={styles.separatorBlanco} />\r\n                  )}\r\n\r\n                  {isPermisoServicioGeneral && (\r\n                    <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n                  )}\r\n                  {isPermisoServicioGeneral && (\r\n                    <View\r\n                      style={{\r\n                        width: \"100%\",\r\n                        zIndex: capaPrioridadTiendaSearsh,\r\n                        position: \"relative\",\r\n                      }}\r\n                    >\r\n                      <CustomDropdown\r\n                        value={idTiendaSearch}\r\n                        placeholder=\"Seleccione un tienda\"\r\n                        setValue={setIdTiendaSearch}\r\n                        items={dropdownItemsNombreTienda}\r\n                        direction=\"BOTTOM\"\r\n                        onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Rango del monto de la deuda:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyDesktop}\r\n                      placeholder=\"Desde\"\r\n                      value={rangoDeudaDesdeSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyDesktop}\r\n                      placeholder=\"Hasta\"\r\n                      value={rangoDeudaHastaSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioHastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaDesdeSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaHastaSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() =>\r\n                          filtrarYOrdenarDeudas(\r\n                            `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                            `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                          )\r\n                        }\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Servicio\"\r\n                  : \"Datos del Servicio\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idClienteDetails}\r\n                    placeholder=\"Seleccione un Cliente\"\r\n                    setValue={setIdClienteDetails}\r\n                    items={dropdownItemsNombreCliente}\r\n                    searchable={true}\r\n                    readOnly={\r\n                      !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                    }\r\n                    onDropdownOpen={() => controlarCapas(\"ClienteDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDetails}\r\n                      placeholder=\"Seleccione una tienda\"\r\n                      setValue={setIdTiendaDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={\r\n                        !(isPermisoServicioGeneral &&\r\n                        modalEntradasDates?.id_entrada === \"\"\r\n                          ? true\r\n                          : isPermisoServicioGeneral &&\r\n                            isPermisoModificarServicio)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTipoServicioDetails}\r\n                      placeholder=\"Seleccione un tipo de servicio\"\r\n                      setValue={setIdTipoServicioDetails}\r\n                      items={dropdownItemsNombreTipoServicio}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Garantías */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 100,\r\n                    }}\r\n                  >\r\n                    {true && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Tiene Garantía\r\n                      </Text>\r\n                    )}\r\n                    {true && (\r\n                      <CustomRadioButtonSingle\r\n                        onPress={() => setIsGarantiaDetails(!isGarantiaDetails)}\r\n                        selected={isGarantiaDetails}\r\n                        label=\"Garantía\"\r\n                      />\r\n                    )}\r\n\r\n                    {/*isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Adelanto del encargo\r\n                      </Text>\r\n                    )*/}\r\n                    {/*isEncargoProducto && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={adelantoEncargo}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n                          setAdelantoEncargo(validNumericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={true}\r\n                        placeholder=\"Adelanto del encargo\"\r\n                      />\r\n                    )*/}\r\n\r\n                    {isGarantiaDetails && (\r\n                      <View style={{ marginTop: \"2%\" }}>\r\n                        <Text style={styles.labelTextModalDesktop}>\r\n                          Duración en días:\r\n                        </Text>\r\n                        <CustomTextImputSearch\r\n                          style={styles.textImputModal}\r\n                          value={duracionGarantiaDetails}\r\n                          onChangeText={(text) => {\r\n                            // Permite solo números y un punto decimal\r\n                            const numericValue = text.replace(/[^0-9]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                            // Asegura que solo haya un punto decimal\r\n                            setDuracionGarantiaDetails(numericValue);\r\n                          }}\r\n                          cursorColor={Colors.azul_Oscuro}\r\n                          editable={\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          }\r\n                          placeholder=\"Duracion En días\"\r\n                        />\r\n                      </View>\r\n                    )}\r\n                  </View>\r\n\r\n                  {/*  */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    {/*isDateLoaded && isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Fecha llegada\r\n                      </Text>\r\n                    )*/}\r\n                    {/*isDateLoaded && isEncargoProducto && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetailsEncargo}\r\n                        monthValue={fechaMesDetailsEncargo}\r\n                        yearValue={fechaAnnoDetailsEncargo}\r\n                        onDayChange={setFechaDiaDetailsEncargo}\r\n                        onMonthChange={setFechaMesDetailsEncargo}\r\n                        onYearChange={setFechaAnnoDetailsEncargo}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )*/}\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdownDetails\r\n                      value={idProductoDetails}\r\n                      placeholder=\"Seleccione un produto\"\r\n                      setValue={setIdProductoDetails}\r\n                      items={dropdownItemsNombreproducto}\r\n                      searchable={true}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      onDropdownOpen={() => controlarCapas(\"ProductoDetails\")}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={cantidadProductoDetails}\r\n                        onChangeText={(text) => {\r\n                          // Filtra caracteres no numéricos\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                          setCantidadProductoDetails(numericValue);\r\n                        }}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad del producto\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en USD\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoUSDDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoCUPDetails(\r\n                              String(\r\n                                (\r\n                                  parseFloat(validNumericValue) * cambioMoneda\r\n                                ).toFixed(0)\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoCUPDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoUSDDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoUSD\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 4 ||\r\n                          parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoCUPDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoUSDDetails(\r\n                              String(\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoUSDDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoCUPDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoCUP\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 4 ||\r\n                          parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={precioUSDDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioCUPDetails(\r\n                            String(\r\n                              (\r\n                                parseFloat(validNumericValue) * cambioMoneda\r\n                              ).toFixed(0)\r\n                            )\r\n                          );\r\n                        } else {\r\n                          setPrecioCUPDetails(\"0\");\r\n                        }\r\n                        setPrecioUSDDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioUSD\");\r\n                      }}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en usd\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModalNOEDITABLE}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioUSDDetails(\r\n                            String(parseFloat(validNumericValue) / cambioMoneda)\r\n                          );\r\n                        } else {\r\n                          setPrecioUSDDetails(\"0\");\r\n                        }\r\n                        setPrecioCUPDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioCUP\");\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en cup\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={notaDetails}\r\n                      onChangeText={setNotaDetails}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Nota\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del servicio\"\r\n                  multiline={true}\r\n                  editable={\r\n                    isPermisoModificarServicio || isPermisoServicioLocal\r\n                  }\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                <View\r\n                  style={{\r\n                    flex: 1,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 2,\r\n                    marginTop: \"3%\",\r\n                    borderRadius: 15,\r\n                    height: 500,\r\n                    width: \"90%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <MyDateTablePagoDeudaWithButton\r\n                    columns={columnasMyDateTablePagoDeudaModal}\r\n                    items={pagoDeudaByDeudaDetails}\r\n                    onButtonPress={(item: any) =>\r\n                      deletePagoDeudaFronTabla(item)\r\n                    }\r\n                  />\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewDeuda()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar pago a la deuda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta deuda?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Deuda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarServicioFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Deudas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearsh}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Cliente:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del cliente\"\r\n              value={nombreClienteSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreClienteSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Tipo de Servicio:</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                zIndex: capaPrioridadTipoServicioSearsh,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={idTipoServicioSearch}\r\n                placeholder=\"Seleccione un tipo de servicio\"\r\n                setValue={setIdTipoServicioSearch}\r\n                items={dropdownItemsNombreTipoServicio}\r\n                direction=\"BOTTOM\"\r\n                onDropdownOpen={() => controlarCapas(\"TipoServicioSearsh\")}\r\n              />\r\n            </View>\r\n\r\n            {isPermisoServicioGeneral && (\r\n              <View style={styles.separatorBlanco} />\r\n            )}\r\n\r\n            {isPermisoServicioGeneral && (\r\n              <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n            )}\r\n            {isPermisoServicioGeneral && (\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  zIndex: capaPrioridadTiendaSearsh,\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <CustomDropdown\r\n                  value={idTiendaSearch}\r\n                  placeholder=\"Seleccione un tienda\"\r\n                  setValue={setIdTiendaSearch}\r\n                  items={dropdownItemsNombreTienda}\r\n                  direction=\"BOTTOM\"\r\n                  onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n                />\r\n              </View>\r\n            )}\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              Rango del monto de la deuda:\r\n            </Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={rangoDeudaDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={rangoDeudaHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioHastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Estado de deuda:</Text>\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {optionsEstadoDeuda.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterEstadoDeudaSearch === option.value}\r\n                  onPress={() => setSelecterEstadoDeudaSearsh(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() =>\r\n                    filtrarYOrdenarDeudas(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    )\r\n                  }\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableDeudas\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Servicio\"\r\n                  : \"Datos de la Deuda\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.textLabelAsInput}>\r\n                    {dropdownItemsNombreCliente.find(\r\n                      (element) => element.value === idClienteDetails\r\n                    )?.label || \"Cliente no encontrado\"}\r\n                  </Text>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTienda.find(\r\n                        (element) => element.value === idTiendaDetails\r\n                      )?.label || \"Tienda no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTipoServicio.find(\r\n                        (element) => element.value === idTipoServicioDetails\r\n                      )?.label || \"Tipo de Servicio no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreproducto.find(\r\n                        (element) => element.value === idProductoDetails\r\n                      )?.label || \"Producto no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {cantidadProductoDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en USD\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {precioUSDDetails}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {precioCUPDetails}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={!false}\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <Text style={styles.textLabelAsInput}>{notaDetails}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <Text style={styles.textDescroptionLabelAsInput}>\r\n                  {descripcionDetails}\r\n                </Text>\r\n\r\n                <View\r\n                  style={{\r\n                    flex: 1,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 2,\r\n                    marginTop: \"3%\",\r\n                    borderRadius: 15,\r\n                    height: 500,\r\n                    width: \"90%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <MyDateTablePagoDeudaWithButton\r\n                    columns={columnasMyDateTablePagoDeudaModal}\r\n                    items={pagoDeudaByDeudaDetails}\r\n                    onButtonPress={(item: any) =>\r\n                      deletePagoDeudaFronTabla(item)\r\n                    }\r\n                  />\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          if (parseFloat(cantidad_restante) > 0) {\r\n                            setIsModalAddPagoDeudaView(true);\r\n                          } else {\r\n                            setModalMensajeView(true);\r\n                            setModalMensaje(\"La deuda ya está saldada\");\r\n                            setReflechModalMensajeView(false);\r\n                            setIsBotonModalMesajeVisible(true);\r\n                          }\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar pago a la deuda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta deuda?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Deuda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarDeudaFunction()\r\n                      : modificarServicioFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal agregar pago deuda*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalAddPagoDeudaView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 300,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Agregar un pago a la deuda.`}\r\n              </Text>\r\n\r\n              <Text\r\n                style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10 }}\r\n              >\r\n                Cantidad a pagar\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  marginHorizontal: \"5%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 16, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                value={cantidadAddPagoDeuda}\r\n                onChangeText={(text) => {\r\n                  // Permite solo números y un punto decimal\r\n                  const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                  // Asegura que solo haya un punto decimal\r\n                  const validNumericValue =\r\n                    numericValue.split(\".\").length > 2\r\n                      ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                      : numericValue;\r\n\r\n                  setCantidadAddPagoDeuda(validNumericValue);\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                editable={true}\r\n                placeholder=\"Cantidad del pago en USD\"\r\n              />\r\n\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  if (\r\n                    parseFloat(cantidadAddPagoDeuda) <=\r\n                    parseFloat(cantidad_restante)\r\n                  ) {\r\n                    addNewDeuda()\r\n                  } else {\r\n                    setModalMensaje(\r\n                      `La cantidad de el pago de la deuda ${cantidadAddPagoDeuda} es mayor a la cantidad faltante de la deuda ${cantidad_restante}`\r\n                    );\r\n                    setModalMensajeView(true);\r\n                    setReflechModalMensajeView(false);\r\n                    setIsBotonModalMesajeVisible(true);\r\n                  }\r\n                }}\r\n                style={{\r\n                  backgroundColor: Colors.azul_Claro,\r\n                  borderRadius: 15,\r\n                  marginTop: 30,\r\n                  width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                    color: Colors.blanco_Suave,\r\n                  }}\r\n                >\r\n                  Agregar\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setIsModalAddPagoDeudaView(!isModalAddPagoDeudaView)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Deudas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","// App.tsx\nimport React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport ProductosViwe from \"./Views/ProductosView\";\nimport { HomeScreen } from \"./Views/HomeScreen\";\nimport ServiciosView from \"./Views/ServiciosView\";\nimport LoginView from \"./Views/LoginView\";\nimport { UsuarioProvider } from \"./contexts/UsuarioContext\";\nimport { ModalProductsDatesProvider } from \"./contexts/AuxiliarContextFromModalProductsDates\";\nimport { SortProductosProvider } from \"./contexts/AuxiliarSortProductos\";\nimport { SortMovimientosDatesProvider } from \"./contexts/AuxiliarSortMovimientos\";\nimport { ModalProveedoresDatesProvider } from \"./contexts/AuxiliarContextFromModalProveedores\";\nimport { ModalEntradasDatesProvider } from \"./contexts/AuxiliarContextModalEntradas\";\nimport { SortEntradasProvider } from \"./contexts/AuxiliarSortEntradas\";\nimport { ImagenesDeleteProvider } from \"./contexts/DeleteImagenContext\";\nimport { SelectedButonProvider } from \"./contexts/globalButonNavbarSelected\";\nimport ProveedoresView from \"./Views/ProveedoresView\";\nimport EnMyTiendaView from \"./Views/EnMyTiendaView\";\nimport EntradasView from \"./Views/EntradasView\";\nimport { Administracion } from \"./Views/AdministracionView\";\nimport MovimientosView from \"./Views/MovimientosView\";\nimport { ModalMovimientosDatesProvider } from \"./contexts/AuxiliarContextModalMovimientos\";\nimport { NavigationLostDatesProvider } from \"./contexts/NavigationLostContext\";\nimport UsuariosView from \"./Views/UsuariosView\";\nimport TiendasView from \"./Views/TiendasView\";\nimport { SortUsuariosProvider } from \"./contexts/AuxiliarSortUsuarios\";\nimport AccionesView from \"./Views/AccionesView\";\nimport { SortAccionesProvider } from \"./contexts/AuxiliarSortAcciones\";\nimport PermisosView from \"./Views/PermisosView\";\nimport { PermisosUsuarioProvider } from \"./contexts/PermisosNavbarContext\";\nimport { PaginadoProductosProvider } from \"./contexts/AuxiliarContextPaginadoproductos\";\nimport TipoServicioView from \"./Views/TipoServicioView\";\nimport { SortServiciosProvider } from \"./contexts/AuxiliarSortServicios\";\nimport CambiarMonedaView from \"./Views/CambiarMonedaView\";\nimport ClientesView from \"./Views/ClientesView\";\nimport { SortClientesProvider } from \"./contexts/AuxiliarSortClientes\";\nimport GarantiasView from \"./Views/GarantiasView\";\nimport DeudasView from \"./Views/DeudasView\";\n\n// Importar la referencia de navegación global\nimport { navigationRef } from \"./contexts/navigationRef\";\n\nexport type RootStackParamList = {\n  Login: undefined;\n  Acciones: undefined;\n  HomeScreen: undefined;\n  Productos: undefined;\n  Servicios: undefined;\n  Proveedores: undefined;\n  \"Mi Tienda\": undefined;\n  Entradas: undefined;\n  Movimientos: undefined;\n  Administración: undefined;\n  Usuarios: undefined;\n  Tiendas: undefined;\n  Permisos: undefined;\n  \"Tipo de Servicio\": undefined;\n  \"Cambiar Moneda\": undefined;\n  ClientesView: undefined;\n  Garantias: undefined;\n  DeudasView: undefined;\n};\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction App() {\n  return (\n    <PermisosUsuarioProvider>\n      <SortClientesProvider>\n        <SortServiciosProvider>\n          <PaginadoProductosProvider>\n            <SortAccionesProvider>\n              <SortUsuariosProvider>\n                <NavigationLostDatesProvider>\n                  <SelectedButonProvider>\n                    <ModalMovimientosDatesProvider>\n                      <SortMovimientosDatesProvider>\n                        <ImagenesDeleteProvider>\n                          <SortEntradasProvider>\n                            <ModalEntradasDatesProvider>\n                              <ModalProveedoresDatesProvider>\n                                <SortProductosProvider>\n                                  <ModalProductsDatesProvider>\n                                    <UsuarioProvider>\n                                      <NavigationContainer ref={navigationRef}>\n                                        <Stack.Navigator initialRouteName=\"Login\">\n                                          <Stack.Screen\n                                            name=\"Login\"\n                                            component={LoginView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"HomeScreen\"\n                                            component={HomeScreen}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Productos\"\n                                            component={ProductosViwe}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Servicios\"\n                                            component={ServiciosView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Proveedores\"\n                                            component={ProveedoresView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Mi Tienda\"\n                                            component={EnMyTiendaView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Entradas\"\n                                            component={EntradasView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Movimientos\"\n                                            component={MovimientosView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Administración\"\n                                            component={Administracion}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Usuarios\"\n                                            component={UsuariosView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Tiendas\"\n                                            component={TiendasView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Acciones\"\n                                            component={AccionesView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Permisos\"\n                                            component={PermisosView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Clientes\"\n                                            component={ClientesView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Tipo de Servicio\"\n                                            component={TipoServicioView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Cambiar Moneda\"\n                                            component={CambiarMonedaView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Garantías\"\n                                            component={GarantiasView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Deudas\"\n                                            component={DeudasView}\n                                          />\n                                        </Stack.Navigator>\n                                      </NavigationContainer>\n                                    </UsuarioProvider>\n                                  </ModalProductsDatesProvider>\n                                </SortProductosProvider>\n                              </ModalProveedoresDatesProvider>\n                            </ModalEntradasDatesProvider>\n                          </SortEntradasProvider>\n                        </ImagenesDeleteProvider>\n                      </SortMovimientosDatesProvider>\n                    </ModalMovimientosDatesProvider>\n                  </SelectedButonProvider>\n                </NavigationLostDatesProvider>\n              </SortUsuariosProvider>\n            </SortAccionesProvider>\n          </PaginadoProductosProvider>\n        </SortServiciosProvider>\n      </SortClientesProvider>\n    </PermisosUsuarioProvider>\n  );\n}\n\nexport default App;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [930], () => (__webpack_require__(5819)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Colors","negro","blanco","azul_Claro","azul_Oscuro","azul_Suave","blanco_Suave","gris_claro","rojo_oscuro","verde_claro","styles","StyleSheet","create","radioButtonDesktop","flexDirection","height","width","alignItems","justifyContent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderColor","borderWidth","padding","borderRadius","marginHorizontal","backgroundColor","radioButtonMovil","marginRight","marginVertical","radioButtonSelected","radioButtonTextDesktop","fontSize","color","textShadowColor","textShadowOffset","textShadowRadius","radioButtonTextMovil","labelTextDesktop","labelTextModalDesktop","marginTop","marginLeft","labelTextModalMovil","labelTextMovil","radioButtonTextSelected","fontWeight","selectedText","navbarDekstop","position","top","zIndex","navbarMobile","menuIcon","left","scrollContainer","flexGrow","paddingVertical","buttonsContainerDesktop","flex","buttonContainterMovile","searchContainerDesktop","loginContainerStilesDesktop","loginContainerStilesMovil","searchContainerMovil","modalViewMesajeContainerDesktop","elevation","modalViewMesajeContainerMovil","textSearchDesktop","textSearchMovil","textNavbarMovil","textImputLogin","paddingHorizontal","textImputModal","textLabelAsInput","lineHeight","textDescroptionLabelAsInput","textImputModalNOEDITABLE","customTextImputSearchFullDesktop","customTextImputSearchFullMovil","customTextImputSearchFiftyDesktop","customTextImputSearchFiftyMovil","movilButtonBusqueda","separatorBlanco","separatorNegro","mobileButton","desktopButton","minWidth","marginBottom","desktopContent","mobileContent","image","text","CustomButtonNavbar","imageSource","onPress","isSelected","scale","useState","Animated","Value","useWindowDimensions","isMobile","buttonStyles","viewStyles","_jsx","TouchableOpacity","style","onPressIn","spring","toValue","useNativeDriver","start","onPressOut","children","View","transform","_jsxs","Image","source","Text","UsuarioContext","createContext","undefined","UsuarioProvider","usuario","setUsuario","Provider","value","useUsuario","context","React","Error","SortEntradasContext","SelectedButonProvider","selectedButon","setSelectedButon","useSelectedButon","modalOverlay","modalContentDesktop","maxHeight","modalContentMovil","option","borderBottomWidth","borderBottomColor","optionImage","tintColor","optionText","CustomDropdown","options","onSelect","modalVisible","setModalVisible","Modal","transparent","animationType","visible","onRequestClose","FlatList","data","keyExtractor","item","renderItem","handleSelect","label","forwardRef","placeholder","autoCapitalize","autoCompleteType","secureTextEntry","keyboardType","cursorColor","onChangeText","onBlur","multiline","numberOfLines","scrollEnabled","editable","onKeyPress","ref","TextInput","placeholderTextColor","autoComplete","cerverHost","cerverHostImages","navigationRef","createRef","navigate","name","params","current","iniciarSecionUser","async","userName","password","response","axios","post","nombre_usuario","contrasenna","msg","error","console","log","addUsuario","token","nombre","email","telefono","direccion","carnet_identidad","detalles_bancarios","rol","tienda","headers","Authorization","isAxiosError","status","deleteUsuario","id_usuario","delete","actualizarUsuarioConContraseña","activo","put","actualizarUsuarioSinContraseña","getUsuarioById","id_user","get","alert","getAllUsuarios","filtrarUsuario","id_rol","id_tienda","ordenarUsuarios","items","criterio","ascendente","getAccionByID","id_accion","addAccionUsuario","descripcion","fecha","id_tipo_accion","tipo_accion","getAllTiposAccion","filtrarAcciones","fecha_limsup","fecha_liminf","ordenarAcciones","PermisosUsuarioContext","PermisosUsuarioProvider","permisosUsuario","setPermisosUsuario","permisosUsuarioNavbar","setPermisosUsuarioNavbar","usePermisosUsuario","Navbar","navigation","useNavigation","isExpanded","setIsExpanded","animationValue","useRef","modalUsuarioDetails","setModalUsuarioDetails","contrasennaVieja","setContrasennaVieja","contrasennaNueva1","setContrasennaNueva1","contrasennaNueva2","setContrasennaNueva2","hasPermisoViewProducto","setHasPermisoViewProducto","hasPermisoViewTipoServicio","setHasPermisoViewTipoServicio","hasPermisoViewUsuario","setHasPermisoViewUsuario","hasPermisoViewTienda","setHasPermisoViewTienda","hasPermisoViewAccion","setHasPermisoViewAccion","hasPermisoViewEntrada","setHasPermisoViewEntrada","hasPermisoViewProveedor","setHasPermisoViewProveedor","hasPermisoViewMovimiento","setHasPermisoViewMovimiento","hasPermisoViewCliente","setHasPermisoViewCliente","hasPermisoViewGarantia","setHasPermisoViewGarantia","nombreProductoRef","usePermisosUsuarioNavbar","isModalMensajeView","setModalMensajeView","modalMensaje","setModalMensaje","isReflechModalMensajeView","setReflechModalMensajeView","isModalChekEliminarEntrada","setIsModalChekEliminarEntrada","isModalChekVisible","setIsModalChekVisible","mesajeModalChek","setMesajeModalChek","selectedOption","setSelectedOption","butonSelected","setOptions","useEffect","resultEntradaView","resultProductoView","resultProveedorView","resultAccionesView","resultMovimientoLocalView","resultMovimientoGeneralView","resultAgregarUsuario","resultModificarUsuario","resultEliminarUsuario","parseInt","resultClienteView","resultGarantiaView","newOptions","push","require","resultTipoServicio","checkPermiso","buttonsContainerStyles","changePassword","flag","validarCampos","length","trim","contrasenna_vieja","contrasenna_nueva1","contrasenna_nueva2","cambiarContrasennaUsuarios","currentDate","Date","year","String","getFullYear","month","getMonth","padStart","day","getDate","auxAddAccionUsuarioDescripcion","toggleExpansion","timing","duration","animatedStyle","botones","ScrollView","horizontal","contentContainerStyle","showsHorizontalScrollIndicator","CustomDropdownProvicional","LinearGradient","colors","end","overflow","paddingBottom","right","nombre_rol","nombre_tienda","CustomTextImputSearch","_Fragment","container","dropdown","dropdownTextDesktop","dropdownTextMovil","dropdownContainer","setValue","title","searchable","onDropdownOpen","open","setOpen","textStyles","DropDownPicker","val","setItems","textStyle","dropDownContainerStyle","ModalProductsDatesContext","ModalProductsDatesProvider","modalProductsDates","setModalProductsDates","useModalProductsDates","SortProductosContext","SortProductosProvider","sortProductos","setSortProductos","useSortProductos","getAllRol","getPermisosOfRol","isPermiso","id_permiso","tiene","getAllTiendas","addTienda","tienda_Realizarventa","id_producto","cantidadARestar","cantidad","updateTienda","deleteTienda","getTiendaById","getAllTiendasByProduct","isProductoInTienda","getValorMonedaUSD","cambiarValorMonedaUSD","valor","getAllProductos","getAllProductosFromTable","page","getRelacionProductoByTienda","getProductoCantidadTotal","id_Producto","cantidad_total","getProductoById","addProducto","Sku","precio","precio_empresa","addProductoEntrada","addProductoAndImagenes","imagenes","updateProducto","updateProductoTienda","createProductoInTienda","deleteProducto","deleteFromProductoTiendaIn_0","filterProducts","sku","precio_liminf","precio_limsup","filterProductsEnTienda","ordenarProducts","moverProducto","id_tienda_origen","id_tienda_destino","expedirExelProductosEnMyTienda","productos","valormoneda","formatExel","map","producto","precioUSD","precioCUP","parseFloat","toFixed","precioEmpresaCUP","precioEmpresaUSD","cantidadTotal","responseType","expedirExelProductosConColumnas","columnas","columns","CustomDropDownPikerFromMover","crearimagenUnProducto","selectedImages","nameImagen","url","uri","deleteImagenByProducto","id_imagen","addNewMovimiento","tienda_origen","tienda_destino","getMovimientoById","id_movimiento","updateMovimiento","deleteMovimiento","filtrarMovimientos","nombreUsuario","nombreProducto","fechaDesde","fechaHasta","tiendaOrigen","tiendaDestino","nombre_producto","filtrarMovimientosEspecial","tiendaUsuario","ordenarMovimientos","PaginadoProductosContext","PaginadoProductosProvider","paginadoProductos","setPaginadoProductos","usePaginadoProductos","MyDateTableProductos","imtemsLength","itemsLength","cambioMoneda","setCambioMoneda","containterStyles","containerMovil","containerDesktop","setPage","itemsPerPage","setItemsPerPage","displayedItems","setDisplayedItems","isModalVisible","isModalModificarVisible","setModalModificarVisible","isModalEliminarVisible","setModalEliminarVisible","isModalMesajeMoverVisible","setModalMesajeMoverVisible","isModalMoverVisible","setModalMoverVisible","isRefleshView","setRefleshView","tiendaMoverDesde","setTiendaMoverDesde","tiendaMoverHasta","setTiendaMoverHasta","nombreTiendaUsuarioActual","setNombreTiendaUsuarioActual","cantidadTiendaUsuarioActual","setCantidadTiendaUsuarioActual","tiendasByProductoDesde","setTiendasByProductoDesde","tiendasByProductoHasta","setTiendasByProductoHasta","tiendaNombreEspecificaHasta","setTiendaNombreEspecificoHasta","tiendaNombreEspecificaDesde","setTiendaNombreEspecificoDesde","moverProductoFunction","isButtonDisabled","setIsButtonDisabled","idProductoOption","cantidadMoverProducto","nombreProductoOption","moverProdcutoFunctionValidarCampos","cantidadDelProductoEnLaTiendaDesde","result","encontrado","isPermisoOpcionesDeCeldaMoverGeneral","tiendaEspecificaHasta","find","tiendaEspecificaDesde","resultTienda","resultCantidadEnTienda","cargarVariablesMover","detailsModalView","isAddProducto","fileEditable","isModificarProducto","isAddProductoShowProveedoresTiendas","isAddProductoShowProveedores","isPermisoOpcionesDeCelda","setIsPermisoOpcionesDeCelda","isPermisoOpcionesDeCeldaModificar","setIsPermisoOpcionesDeCeldaModificar","isPermisoOpcionesDeCeldaEliminar","setIsPermisoOpcionesDeCeldaEliminar","isPermisoOpcionesDeCeldaMoverLocal","setIsPermisoOpcionesDeCeldaMoverLocal","setIsPermisoOpcionesDeCeldaMoverGeneral","resultadoCondicionalOpcionesDeCelda","tieneOpciones","setCantidadMoverProducto","resultPermisoButonOptionModificar","resultPermisoButonOptionEliminar","resultPermisoButonOptionMoverLocal","resultPermisoButonOptionMoverGeneral","from","to","Math","min","setTimeout","slice","handleChangePage","newPage","showTableColumns","DataTable","Header","column","index","Title","headerColumn","numeric","headerTextMovil","headerTextDesktop","paddingTop","aux","criterioOrden","tipoOrden","sortProductosAux","setIdProductoOption","setNombreProductoOption","setOption","toggleModal","auxNombreProducto","toggleModalOption","resultTiendas","Array","isArray","allTiendasMapeados","Promise","all","element","auxIdTiendas","auxDataTiendasProducto","forEach","datosTendaExisteProducto","existeTienda","some","cargarDatosTiendaParaMover","auxDeleteProductoById","imagen","substring","deleteProductoById","nuevosProductos","filter","Row","Cell","handerRowMovil","textAlign","textAlignVertical","flexWrap","disabled","numericValue","replace","paginationContainer","paginationButtonMovil","disabledButton","paginationLabel","handerRowDesktop","paginationButtonDesktop","MyDateTableModalShowDatesTienda","handerRow","MyDateTableModalShowDateProveedores","costoPorUnidad","id_proveedor","getAllEntradas","getEntradaByID","id_entrada","addEntrada","costo","proveedor","getAllEntradasByProductoId","getAllEntradasByProveedorId","modificarEntrada","deleteEntrada","filtrarEntrada","nombre_proveedor","costo_liminf","costo_limsup","ordenarEntradas","NavigationLostDatesContext","NavigationLostDatesProvider","navigationLostDates","setNavigationLostDates","isOnToken","useNavigationLostDates","calcularPromedioAcomulado","entradas","cantidadEnLaEmpresa","cantidad_existencia","costo_promedio","cantidadVendida","entrada","entradaActual","costo_i","cantidad_i","ProductosViwe","idProductoDetails","setIdProductoDetails","nombreProductoDetails","setNombreProductoDetails","precioProductoDetails","setPrecioProductoDetails","costoPromedio","setCostopromedio","precioEmpresaProductoDetails","setPrecioEmpresaProductoDetails","skuDetails","setSkuDetails","descripcionProductoDetails","setDescripcionProductoDetails","setSelectedImages","deleteImages","setDeleteImages","modificarAddImages","setModificarAddImages","isModalMensajeViewExel","setModalMensajeViewExel","isBotonModalMesajeVisible","setIsBotonModalMesajeVisible","optimizacionAbrirPorPrimeraVesProductosView","setOptimizacionAbrirPorPrimeraVesProductosView","controlFiltrarOPaginar","setControlFiltrarOPaginar","isPermisoButtonAddProducto","setIsPermisoButtonAddProducto","isPermisoHistorialDeProveedores","setIsPermisoHistorialDeProveedores","opcionesDeCelda","onDrop","filterItems","setFilterItems","filterItemsLength","setFilterItemsLength","tiendasByProducto","setTiendasByProducto","proveedorByProducto","setProveedorByProducto","handleKeyPress","event","nativeEvent","key","filtrarYOrdenarProductos","focus","cantidad_total_productos","productosMapeados","tiendas","toString","prevFilterItems","auxiliarPagination","dropdownItems","setDropDownItems","nombreProductoSearch","setNombreProductoSearch","sKUSearch","setSKUSearch","cantidadSearch","setCantidadSearch","rangoPrecioDesdeSearch","setRangoPrecioDesdeSearch","rangoPrecioHastaSearch","setRangoPrecioHastaSearch","selectedValueNombreTienda","setSelectedValueNombreTienda","selectedOptionTipoOrden","setSelectedOptionTipoOrden","loading","setLoading","loadingOfExel","setLoadingOfExel","callModalAddProducto","cargarDetailsOfProducto","getTiendasByProducto","cantidadTotalProducto","proveedores","cargarProveedoresPorProducto","imagesPromises","httpImage","img","id_image","parseHttp","id","images","obtenerProductosConPermisosYDatos","runEffects","resultPermisoButonAddProducto","resultPermisoHistorialDeProveedores","tiendasMapeados","getDatesTiendaPiker","useFocusEffect","useCallback","auxOrdenar","setAxuOrdenar","productosFiltrados","auxiliarFunctionFilter","handleImageUpload","launchImageLibrary","mediaType","quality","includeBase64","selectionLimit","didCancel","errorMessage","assets","processedImages","asset","size","getImageFileSize","fileResponse","fetch","blob","file","File","fileName","type","compressedFile","imageCompression","maxSizeMB","maxWidthOrHeight","useWebWorker","base64","convertFileToBase64","Object","assign","isCompressed","convertUriToBase64","startsWith","resolve","reject","reader","FileReader","onload","onerror","readAsDataURL","handleRemoveImage","updatedImages","_","i","deleteImage","prevImages","clearFields","addNewProducto","validarMesaje","resultAllProductos","nuevoProducto","prevItems","auxDataImagesResponses","cont","entries","resul","modificarProducto","split","columnasMyDateTableTiendaModal","columnasMyDateTableProveedorModal","columnasMyDateTable","ActivityIndicator","validNumericValue","PanGestureHandler","onGestureEvent","resultAllTiendas","itemsFromExel","Nombre","Existencia","Precio_USD","Precio_CUP","Precio_Mayorista","resultProductoTienda","elemen","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","exportarExel","HomeScreen","resultAgregarTipoServicioView","resultModificarTipoServicioView","resultEliminarTipoServicioView","resultEliminarClienteView","resultModificarClienteView","resultAgregarClienteView","resultVerClienteView","resultExpedirGarantiaView","resultModificarGarantiaView","resultVerGarantiaView","cargarPermisosDeUsuario","searchInput","CustomDropdownDetails","readOnly","handleOpen","prevOpen","searchPlaceholder","searchTextInputStyle","ModalEntradasDatesContext","ModalEntradasDatesProvider","modalEntradasDates","setModalEntradasDates","useModalEntradasDates","MyDateInput","dayValue","monthValue","yearValue","onDayChange","onMonthChange","onYearChange","styleText","isReadOnly","setDay","setMonth","setYear","days","setDays","activePicker","setActivePicker","numberOfDays","getDaysInMonth","Number","daysArray","updateDate","newDay","newMonth","newYear","togglePicker","picker","inputWrapper","containerStyle","pickerContainer","dropDownContainer","MyDateTableModalDataMoverTiendas","SortServiciosContext","SortServiciosProvider","sortServicios","setSortServicios","useSortServicios","MyDateTableServicios","columnasParaLaTablaMoverProducto","isAddEntrada","isModificarEntrada","isPermisoServicioGeneral","setIsPermisoServicioGeneral","resultServicioGeneral","obtenerCambioPrecio","mensajeOfEndTable","mensaje","sumaMinoristaUSD","sumaMayoristaUSD","devuelto","id_Tipo_servicio","sortEntradasAux","idEntradaOption","setIdEntradaOption","id_Servicio","nombreCliente","nombreTienda","nombreTipoServicio","id_Cliente","getServicioByID","id_servicio","addServicio","nota","id_tipo_servicio","id_cliente","id_garantia","id_encargo","tipo_servicio","cliente","garantia","deuda","encargo","modificarServicio","deleteServicio","filtrarSrvicio","nombre_cliente","ordenarServicios","getAllTipoServicios","getTipoServicioByID","id_TipoServicio","addTipoServicio","modificarTipoServicio","deleteTipoServicio","filtrarTipoSrvicio","getAllClientes","getClienteById","addCliente","Cif","actualizarCliente","deleteCliente","filtrarCliente","cif","detalle_bacario","ordenarClientes","addVenta","servicio","deleteVenta","getVentaByIDOfServicio","radioButton","radioButtonText","CustomRadioButton","selected","CustomRadioButtonSingle","getGarantiaByID","addGarantia","duracion","modificarGarantia","deleteGarantia","filtrarGarantia","duracion_limsup","duracion_liminf","addEncargo","adelanto","fecha_final","modificarEncargo","deleteEncargo","getDeudaByID","id_deuda","addDeuda","id_pagos_deuda","pago_deuda","id_pago_deuda","deleteDeuda","filtrarDeudas","deuda_liminf","deuda_limsup","saldada","addPagoDeuda","pagada","deletePagoDeuda","ServiciosView","capaPrioridadFechaDetails","setCapaPrioridadFechaDetails","capaPrioridadTiendasDetails","setCapaPrioridadTiendasDetails","capaPrioridadTipoServicioDetails","setCapaPrioridadTipoServicioDetails","capaPrioridadProductoDetails","setCapaPrioridadProductoDetails","capaPrioridadClienteDetails","setCapaPrioridadClienteDetails","capaPrioridadFechaDesdeSearsh","setCapaPrioridadFechaDesteSearsh","capaPrioridadFechaHastaSearsh","setCapaPrioridadFechaHastaSearsh","capaPrioridadTipoServicioSearsh","setCapaPrioridadTipoServicioSearsh","capaPrioridadTiendaSearsh","setCapaPrioridadTiendaSearsh","controlarCapas","prioridad","idFirstTimeProducto","setIdFirsTimeProducto","auxOptimizacion","setAuxOptimizacion","idServicioDetails","setIdServicioDetails","idClienteDetails","setIdClienteDetails","idTiendaDetails","setIdTiendaDetails","idTipoServicioDetails","setIdTipoServicioDetails","cantidadProductoDetails","setCantidadProductoDetails","costoPromedioProductoCUPDetails","setCostoPromedioProductoCUPDetails","costoPromedioProductoUSDDetails","setCostoPromedioProductoUSDDetails","precioUSDDetails","setPrecioUSDDetails","devueltoDetails","setDevueltoDetails","precioCUPDetails","setPrecioCUPDetails","notaDetails","setNotaDetails","descripcionDetails","setDescripcionDetails","fechaDiaDetails","setFechaDiaDetails","fechaMesDetails","setFechaMesDetails","fechaAnnoDetails","setFechaAnnoDetails","fechaDiaDetailsEncargo","setFechaDiaDetailsEncargo","fechaMesDetailsEncargo","setFechaMesDetailsEncargo","fechaAnnoDetailsEncargo","setFechaAnnoDetailsEncargo","adelantoEncargo","setAdelantoEncargo","isGarantiaDetails","setIsGarantiaDetails","isDeudaDetails","setIsDeudaDetails","isGarantiaDetailsViejo","setIsGarantiaDetailsViejo","idGarantiaDetails","setIdGarantiaDetails","duracionGarantiaDetails","setDuracionGarantiaDetails","adelantoDeudaDetails","setAdelantoDeudaDetails","adelantoCUPDeudaDetails","setAdelantoCUPDeudaDetails","duracionGarantiaDetailsVieja","setDuracionGarantiaDetailsVieja","idEncargoDetails","setIdEncargoDetails","idDeudaDetails","setIdDeudaDetails","auxRedondeo","setAuxRedondeo","idTiendaDetailsViejo","setIdTiendaDetailsViejo","idProductoDetailsViejo","setIdProductoDetailsViejo","cantidadProductoDetailsViejo","setCantidadProductoDetailsViejo","idTipoServicioDetailsViejo","setIdTipoServicioDetailsViejo","devueltoDetailsViejo","setDevueltoDetailsViejo","isDateLoaded","setIsDateLoaded","idProductoAuxModificarDetails","setIdProductoAuxModificarDetails","idTiendaAuxModificarDetails","setIdTiendaAuxModificarDetails","cantidadAuxModificarDetails","setCantidadAuxModificarDetails","isVentaProducto","setIsVentaProducto","isEncargoProducto","setIsEncargoProducto","isPermisoAgregarServicio","setIsPermisoAgregarServicio","isPermisoEliminarServicio","setIsPermisoEliminarServicio","isPermisoModificarServicio","setIsPermisoModificarServicio","isPermisoServicioLocal","setIsPermisoServicioLocal","isPermisoVerCostoVenta","setIsPermisoVerCostoVenta","dropdownItemsNombreCliente","setDropDownItemsNombreCliente","dropdownItemsNombreproducto","setDropDownItemsNombreProducto","dropdownItemsNombreTienda","setDropDownItemsNombreTienda","dropdownItemsNombreTipoServicio","setDropDownItemsNombreTipoServicio","nombreClienteSearch","setNombreClienteSearch","nombreProductoSearsh","idTipoServicioSearch","setIdTipoServicioSearch","idTiendaSearch","setIdTiendaSearch","fechaDiaDesdeSearch","setFechaDiaDesdeSearch","fechaMesDesdeSearch","setFechaMesdesdeSearch","fechaAnnoDesdeSearch","setFechaAnnoDesdeSearch","fechaDiaHastaSearch","setFechaDiaHastaSearch","fechaMesHastaSearch","setFechaMesHastaSearch","fechaAnnoHastaSearch","setFechaAnnoHastaSearch","selecterActivoDetails","setSelecterActivoDetails","optionsDevueltoDetails","handleRadioButtonPress","lastWeekDate","setDate","lastMonthDate","filtrarYOrdenarServicios","callModalAddProveedor","partes","anio","mes","dia","resultventa","cargarDetailsOfServicio","resultServicio","cargarDetailsOfProductoVenta","auxiliar","resultProdcuto","auxiliarAsyncFuncion","resultAgregarServicio","resultEliminarServicio","resultModificarServicio","resulServicioLocal","tipoServiciosMapeados","getTipoServicioPikerDetails","ClientesMapeados","getClientesPikerDetails","getTiendasPikerDetails","getProductosPikerDetails","serviciosFiltradas","id_Tienda","id_Deuda","id_Garantia","venta","auxSetModalProovedoresDates","addNewServicio","auxIsProductoInTienda","fechaBase","fechaEncargo","resultAddServicio","resultDeuda","modificarServicioFunction","cantidadEnTiendaNueva","eliminarServicioFunction","pagos_deuda","pagoDeuda","columnasMyDateTableEntradaModal","direction","margin","LoginView","ContainerStyle","username","setUsername","pasword","setPasword","iniciarSecion","resultUserAuth","resultUserDates","permisos","bottom","resizeMode","SortMovimientosDatesContext","SortMovimientosDatesProvider","SortMovimientosDates","setSortMovimientosDates","useSortMovimientosDates","ModalProveedoresDatesContext","ModalProveedoresDatesProvider","modalProveedoresDates","setModalProveedoresDates","useModalProveedoresDates","SortEntradasProvider","sortEntradas","setSortEntradas","useSortEntradas","ImagenesDeleteContext","ImagenesDeleteProvider","imagenesDelete","setImagenesDelete","getAllProveedores","getProveedorById","addProveedor","actualizarProveedor","detalle_bancario","deleteProveedor","filtrarProveedor","MyDateTableProveedores","isAddProveedor","isModificarProveedor","isDetallesProveedores","id_Proveedor","correo","MyDateTableModalShowDatesEntradas","ProveedoresView","idProveedorDetails","setIdProveedorDetails","nombreProveedorDetails","setNombreProveedorDetails","correoEmailProveedorDetails","setCorreoEmailProveedorDetails","direccionProveedorDetails","setDireccionProveedorDetails","telefonoProveedorDetails","setTelefonoProveedorDetails","notaProveedorDetails","setNotaProveedorDetails","cfiProveedorDetails","setCfiProveedorDetails","detallesBancariosProveedorDetils","setDetallesBancariosProveedorDetils","isModalChekEliminarVisible","setIsModalChekEliminarVisible","isPermisoAgregarProveedor","setIsPermisoAgregarProveedor","isPermisoEliminarProveedor","setIsPermisoEliminarProveedor","isPermisoModificarProveedor","setIsPermisoModificarProveedor","entradasByProveedor","setEntradasByProveedor","nombreProveedorSearch","setNombreProveedorSearch","correoEmyleSearch","setCorreoEmyleSearch","telefonoSearch","setTelefonoSearch","detallesBancariosSearch","setDetallesBancariosSearch","filtrarYOrdenarProovedores","Cfi","resultEntradasByProveedor","entradasMapeados","cargarDetailsOfProveedores","resultAgregarProveedor","resultEliminarProveedor","resultModificarProveedor","proveedoresMapeados","obtenerTodosLosProveedores","addNewProveedor","modificarProveedor","eliminarProveedor","MyDateTableEnMyTienda","tiendaByProductoSelected","setTiendaByProductoSelected","EnMyTiendaView","optimizacionFirstLoadingData","setOptimizacionFirstLoadingData","setCostoPromedio","isModalMesajeRestarVisible","setModalMesajeRestarVisible","isModalRestarProductos","setModalRestarProductos","isModalVenderProductoVisible","setIsModalVenderProductoVisible","cantidadProductoServicioDetails","setCantidadProductoServicioDetails","cantidadRestarProducto","setCantidadRestarProducto","restarProductosValidarCampos","restarProductosFuction","cantidadNueva","isPermisoMoverGeneral","isPermisoMoverLocal","setIsPermisoMoverLocal","setIsPermisoMoverGeneral","isPermisoRestarProducto","setIsPermisoRestarProducto","resultPermisoVentaGeneral","checkPermisoServicios","auxiliarNombreTiendaPiker","includeExtra","availableSpace","newImages","MyDateTableEntradas","sumaCostos","id_Entrada","nombre_Proveedor","nombre_Producto","EntradasView","capaPrioridadProductosDetails","setCapaPrioridadProductosDetails","capaPrioridadProveedoresDetails","setCapaPrioridadProveedoresDetails","idEntradaDetails","setIdEntradaDetails","cantidadDetails","setCantidadDetails","costoDetails","setCostoDetails","isPermisoAgregarEntrada","setIsPermisoAgregarEntrada","isPermisoEliminarEntrada","setIsPermisoEliminarEntrada","isPermisoModificarEntrada","setIsPermisoModificarEntrada","dropdownItemsNombreProveedor","setDropDownItemsNombreProveedor","costoDesdeSearch","setCostoDesdeSearch","costoHastaSearch","setCostohastaSearch","fechaDesdeSearch","setFechaDesdeSearch","fechaHastaSearch","setFechaHastaSearch","filtrarYOrdenarEntradas","cargarDetailsOfEntradas","resultAgregarEntrada","resultEliminarEntrada","resultModificarEntrada","getProveedoresPikerDetails","EntradasFiltradas","addNewEntrada","modificarEntradaFunction","resultNuevo","resultViejo","eliminarEntradaFunction","movilButton","textDesktop","textMovil","CustomButtonAdministradorView","Administracion","ModalMovimientosDatesContext","ModalMovimientosDatesProvider","modalMovimientosDates","setModalMovimientosDates","useModalMovimientosDates","MyDateTableMovimientos","isAddMovimiento","isModificarMovimiento","id_Movimiento","nombre_Usuario","nombreTiendaOrigen","nombreTiendaDestino","id_TiendaOrigen","MovimientosView","setCapaPrioridadFechaDesdeSearsh","capaPrioridadTiendaOrigenSearsh","setCapaPrioridadTiendaOrigenSearsh","capaPrioridadTiendaDestinoSearsh","setCapaPrioridadTiendaDestinoSearsh","capaPrioridadViewTiendasSearsh","setCapaPrioridadViewTiendasSearsh","capaPrioridadViewFechaSearsh","setCapaPrioridadViewFechaSearsh","capaPrioridadViewFechaDetails","setCapaPrioridadViewFechaDetails","capaPrioridadViewTiendasDetails","setCapaPrioridadViewTiendasDetails","capaPrioridadViewProductosDetails","setCapaPrioridadViewProductosDetails","yesterdayDate","filtrarYOrdenarMovimientos","idMovimientoDetails","setIdMovimientoDetails","idUsuarioDetails","setIdUsuarioDetails","nombreUsuarioDetails","setNombreUsuarioDetails","idTiendaOrigenDetails","setIdTiendaOrigenDetails","idTiendaDestinoDetails","setIdTiendaDestinoDetails","isMovimientoEditable","setIsMovimientoEditable","isMovimientoEliminable","setIsMovimientoEliminable","idTiendaOrigenAuxModificarDetails","setIdTiendaOrigenAuxModificarDetails","idTiendaDestinoAuxModificarDetails","setIdTiendaDestinoAuxModificarDetails","isPermisoEliminarMovimiento","setIsPermisoEliminarMovimiento","isPermisoModificarMovimiento","setIsPermisoModificarMovimiento","optimizacionAbrirPorMovimientosProPrimeraVes","setOptimizacionAbrirPorMovimientosProPrimeraVes","dropdownItemsNombreUsuario","setDropDownItemsNombreUsuario","nombreUsuarioSearch","setNombreUsuarioSearch","tiendaOrigenSearch","setTiendaOrigenSearch","tiendaDestinoSearch","setTiendaDestinoSearch","callModalAddMovimiento","id_salida","cargarDetailsOfMovimiento","resultPermisoOptionMoverLocal","resultPermisoOptionMoverGeneral","usuariosMapeados","getUsuariosPikerDetails","MovimientosFiltradas","id_TiendaDestino","modificarMovimiento","resultOrigen","resultDestino","resultNuevoOrigen","resultNuevoProductoOrigen","resultNuevoProductoNuevoOrigen","cantidadVieja","cantidadEnOrigen","cantidadEnDestino","cantidadEnNuevoOrigen","cantidadNPOrigen","cantidadNPOEnTiendaNuevoOrigen","auxNombreProductoAccion","lavel","eliminarMovimiento","cantidadEnTiendaDestino","auxNombreTiendaOrigen","auxNombreTiendaDestino","SortUsuariosContext","SortUsuariosProvider","sortUsuarios","setSortUsuarios","useSortUsuarios","MyDateTableUsuarios","id_Usuario","UsuariosView","capaPrioridadTiendasSearsh","setCapaPrioridadTiendasSearsh","capaPrioridadRolesSearsh","setCapaPrioridadRolesSearsh","dropdownItemsTiendasDetails","setDropDownItemsTiendasDetails","dropdownItemsRolesDetails","setDropDownItemsRolesDetails","setIdusuarioDetails","nombreDelUsuarioDetails","setNombreDelUsuarioDetails","nombreUsuarioDetailsOriginal","setNombreUsuarioDetailsOriginal","correoEmailUsuarioDetails","setCorreoEmailUsuarioDetails","contrasennaUsuarioDetails","setContrasennaUsuarioDetails","CarnetIdentidadUsuarioDetails","setCarnetIdentidadUsuarioDetails","direccionUsuarioDetails","setDireccionUsuarioDetails","telefonoUsuarioDetails","setTelefonoUsuarioDetails","detallesBancariosUsuarioDetils","setDetallesBancariosUsuarioDetils","tiendaUsuarioDetails","setTiendaUsuarioDetails","rolUsuarioDetails","setRolUsuarioDetails","isPermisoModificarGerarquico","setIsPermisoModificarGerarquico","dropdownItemsTiendasSearsh","setDropDownItemsTiendasSearsh","dropdownItemsRolesSearsh","setDropDownItemsRolesSearsh","tiendaNombreSeleccionadaSearch","setTiendaNombreSeleccionadaSearch","rolNombreSeleccionadoSearsh","setRolNombreSeleccionadoSearsh","filtrarYOrdenarUsuarios","resultRoles","rolesMapeados","cargarDetailsOfUsuario","carnet_Identidad","obtenerTodosLosUsuarios","getDatesRolesPiker","getDatesTiendasAndRolesParaAgregarUsuario","addNewUsuario","resultUsuarios","modificarUsuario","eliminarUsuario","filteredText","test","MyDateTableTiendasView","TiendasView","nombreTiendaDetails","setNombreTiendaDetails","direccionTiendaDetails","setDireccionTiendaDetails","cargarDetailsOfTienda","TiendasMapeados","obtenerTodasLasTiendas","addNewTienda","SortAccionesContext","SortAccionesProvider","sortAcciones","setSortAcciones","useSortAcciones","MyDateTableAcciones","id_Accion","nombre_TipoAccion","AccionesView","capaPrioridadTipoAccionSearsh","setCapaPrioridadTipoAccionSearsh","idAccionDetails","setIdAccionDetails","idUsuarioAccionDetails","setIdUsuarioAccionDetails","idTipoAccionDetails","setTipoAccionDetails","nombreUsuarioAccionDetails","setNombreUsuarioAccionDetails","nombreTipoAccionDetails","setNombreTipoAccionDetails","descripcionSearch","setDescripcionSearch","selectedValueNombreTipoAccion","setSelectedValueNombreTipoAccion","dropdownItemsTipoAccion","setDropDownItemsTipoAccion","filtrarYOrdenarAcciones","cargarDetailsOfAccion","TipoAccionMapeados","getDatesTipoAccionPiker","AccionesFiltradas","id_TipoAccion","MyDateTablePermisos","PermisosView","MyDateTableTipoServicio","nombre_TipoServicio","TipoServicioView","nombreTipoServicioDetails","setNombreTipoServicioDetails","isPermisoAgregarTipoServicio","setIsPermisoAgregarTipoServicio","isPermisoEliminarTipoServicio","setIsPermisoEliminarTipoServicio","isPermisoModificarTipoServicio","setIsPermisoModificarTipoServicio","nombreTipoServicioSearch","setNombreTipoServicioSearch","obtenerTodosLosTipoServicios","filtrarYOrdenarTipoServicio","addNewTipoServicio","modificarTipoServicioFunction","CambiarMonedaView","cambiarMoneda","SortClientesContext","SortClientesProvider","sortClientes","setSortClientes","useSortClientes","MyDateTableClientes","ClientesView","nombreClienteDetails","setNombreClienteDetails","correoEmailClienteDetails","setCorreoEmailClienteDetails","telefonoClienteDetails","setTelefonoClienteDetails","notaClienteDetails","setNotaClienteDetails","descripcionClienteDetails","setDescripcionClienteDetails","cfiClienteDetails","setCfiClienteDetails","detallesBancariosClienteDetils","isPermisoAgregarCliente","setIsPermisoAgregarCliente","isPermisoEliminarCliente","setIsPermisoEliminarCliente","isPermisoModificarCliente","setIsPermisoModificarCliente","cifSearch","setCifSearch","filtrarYOrdenarClientes","cargarDetailsOfCliente","clientesMapeados","obtenerTodosLosClientes","addNewCliente","MyDateTableGarantias","GarantiasView","setIdGarantiaDetaisl","isPermisoModificarGarantia","setIsPermisoModificarGarantia","nombreProductoVentaDetails","setNombreProductoVentaDetails","rangoDuracionDesdeSearch","setRangoDuracionDesdeSearch","rangoDuracionHastaSearch","setRangoDuracionHastaSearch","filtrarYOrdenarGarantias","cargarDetailsOfGarantia","resultModificarGarantia","modificarGarantiaFunction","eliminarGarantiaFunction","MyDateTableDeudas","isDeudaSaldadaFromTable","pago_deudas","suma","pago","total_pagado","MyDateTablePagoDeudaWithButton","onButtonPress","actionColumn","actionButton","actionButtonText","DeudasView","pagoDeudaByDeudaDetails","setPagoDeudaByDeudaDetails","isModalAddPagoDeudaView","setIsModalAddPagoDeudaView","cantidadAddPagoDeuda","setCantidadAddPagoDeuda","setTotal_pagado","cantidad_restante","setCantidad_restante","isDeudaSaldadaSearsh","setIsDeudaSaldadaSearsh","rangoDeudaDesdeSearch","rangoDeudaHastaSearch","selecterEstadoDeudaSearch","setSelecterEstadoDeudaSearsh","optionsEstadoDeuda","filtrarYOrdenarDeudas","cargarDetailsOfDeuda","deudasFiltradas","deletePagoDeudaFronTabla","prevPagoDeuda","addNewDeuda","resultPagoDeuda","columnasMyDateTablePagoDeudaModal","eliminarDeudaFunction","Stack","createStackNavigator","NavigationContainer","Navigator","initialRouteName","Screen","component","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}