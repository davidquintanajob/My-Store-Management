{"version":3,"file":"static/js/main.63968e1f.js","mappings":"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","sources":["styles/Colors.tsx","styles/Styles.tsx","components/CustomButtonLogin.tsx","contexts/UsuarioContext.tsx","contexts/globalButonNavbarSelected.tsx","components/CustomButonLoginOptions.tsx","components/CustomTextImputSearch.tsx","services/cerverHost.tsx","contexts/navigationRef.tsx","services/UsuarioServices.tsx","services/AccionesUsuarioServices.tsx","contexts/PermisosNavbarContext.tsx","components/Navbar.tsx","components/CustomDropDownPicker.tsx","contexts/AuxiliarContextFromModalProductsDates.tsx","contexts/AuxiliarSortProductos.tsx","services/RolPermisosAndRol.tsx","services/TiendaServices.tsx","services/MonedaService.tsx","services/ProductoServices.tsx","components/CustomDropDownPikerFromMover.tsx","services/ImageServices.tsx","services/MovimientosServices.tsx","contexts/AuxiliarContextPaginadoproductos.tsx","components/MyDateTableProductos.tsx","components/MyDateTableModalShowDatesTienda.tsx","components/MyDateTableModalShowDateProveedores.tsx","services/EntradaServices.tsx","contexts/NavigationLostContext.tsx","components/CustomRadioButtonsSearch.tsx","Views/ProductosView.tsx","Views/HomeScreen.tsx","components/CustomDropDownDetails.tsx","contexts/AuxiliarContextModalEntradas.tsx","components/MyDateInput.tsx","components/MyDateTableModalDataMoverTiendas.tsx","contexts/AuxiliarSortServicios.tsx","components/MyDateTableServicios.tsx","services/ServiciosServices.tsx","services/TipoServiciosServices.tsx","services/clienteServices.tsx","services/ventasServices.tsx","components/CustomRadioButtonSearch.tsx","services/GarantiaServices.tsx","services/EncargoServices.tsx","services/DeudasServices.tsx","services/PagoDeudaServices.tsx","Views/ServiciosView.tsx","Views/LoginView.tsx","contexts/AuxiliarSortMovimientos.tsx","contexts/AuxiliarContextFromModalProveedores.tsx","contexts/AuxiliarSortEntradas.tsx","contexts/DeleteImagenContext.tsx","services/ProveedorServices.tsx","components/MyDateTableProveedores.tsx","components/MyDateTableModalShowDatesEntradas.tsx","Views/ProveedoresView.tsx","components/MyDataTableEnMyTienda.tsx","Views/EnMyTiendaView.tsx","components/MyDateTableEntradas.tsx","components/MyDateInputVencimiento.tsx","Views/EntradasView.tsx","components/CustomButtonAdministradorView.tsx","Views/AdministracionView.tsx","contexts/AuxiliarContextModalMovimientos.tsx","components/MyDateTableMovimientos.tsx","Views/MovimientosView.tsx","contexts/AuxiliarSortUsuarios.tsx","components/MyDateTableUsuarios.tsx","Views/UsuariosView.tsx","components/MyDateTableTiendasView.tsx","components/CustomDateTimePiker.tsx","Views/TiendasView.tsx","contexts/AuxiliarSortAcciones.tsx","components/MyDateTableAcciones.tsx","Views/AccionesView.tsx","components/MyDateTablePermisos.tsx","Views/PermisosView.tsx","components/MyDateTableTipoServicio.tsx","Views/TipoServicioView.tsx","Views/CambiarMonedaView.tsx","contexts/AuxiliarSortClientes.tsx","components/MyDateTableClientes.tsx","Views/ClientesView.tsx","components/MyDateTableGarantias.tsx","Views/GarantiasView.tsx","components/MydateTableDeudas.tsx","components/MyDateTableShowPagoDeudas.tsx","Views/DeudasView.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["export const Colors = {\r\n     negro: \"#000000\",\r\n     blanco: \"#ffffff\",\r\n     azul_Claro: \"#349270\",\r\n     azul_Oscuro: \"#17593d\",\r\n     azul_Suave: \"#5cbe9a\",\r\n     blanco_Suave: \"#F2F2F2\",\r\n     gris_claro: \"#D3D3D3\",\r\n     rojo_oscuro: \"#cd1111\",\r\n     verde_claro: \"#13cf3c\"\r\n}\r\n/*\r\n// Paleta de colores negra\r\n export const Colors = {\r\n     negro: \"#000000\",\r\n     blanco: \"#ffffff\",\r\n     azul_Suave: \"#c1b5b9\",\r\n     azul_Claro: \"#5d5d5d\",\r\n     azul_Oscuro: \"#090f18\",\r\n     blanco_Suave: \"#F2F2F2\",\r\n     gris_claro: \"#D3D3D3\",\r\n     rojo_oscuro: \"#cd1111\",\r\n     verde_claro: \"#13cf3c\"\r\n}\r\n/*\r\n//Paleta de colores azul\r\nexport const Colors = {\r\n     negro: \"#000000\",\r\n     blanco: \"#ffffff\",\r\n     azul_Suave: \"#5687d1\",\r\n     azul_Claro: \"#315a98\",\r\n     azul_Oscuro: \"#1a365d\",\r\n     blanco_Suave: \"#F2F2F2\",\r\n     gris_claro: \"#D3D3D3\",\r\n     rojo_oscuro: \"#cd1111\",\r\n     verde_claro: \"#13cf3c\"\r\n}\r\n*/\r\n/*\r\n//Palata de colores naranja\r\nexport const Colors = {\r\n     negro: \"#000000\",\r\n     blanco: \"#ffffff\",\r\n     azul_Claro: \"#913d19\",\r\n     azul_Oscuro: \"#853819\",\r\n     azul_Suave: \"#c16a44\",\r\n     blanco_Suave: \"#F2F2F2\",\r\n     gris_claro: \"#D3D3D3\",\r\n     rojo_oscuro: \"#cd1111\",\r\n     verde_claro: \"#13cf3c\"\r\n}\r\n*/\r\n/*\r\n//Paleta de colores verde\r\nexport const Colors = {\r\n     negro: \"#000000\",\r\n     blanco: \"#ffffff\",\r\n     verde_Claro: \"#349270\",\r\n     azul_Oscuro: \"#17593d\",\r\n     azul_Suave: \"#5cbe9a\",\r\n     blanco_Suave: \"#F2F2F2\",\r\n     gris_claro: \"#D3D3D3\",\r\n     rojo_oscuro: \"#cd1111\",\r\n     verde_claro: \"#13cf3c\"\r\n}\r\n*/","import { Platform, StyleSheet } from \"react-native\";\r\nimport { Colors } from \"./Colors\";\r\n\r\nexport const styles = StyleSheet.create({\r\n  radioButtonDesktop: {\r\n    flexDirection: \"row\",\r\n    height: 40,\r\n    width: \"12%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    borderColor: Colors.azul_Claro,\r\n    borderWidth: 3,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginHorizontal: \"1%\",\r\n    backgroundColor: Colors.azul_Suave, // Color de fondo del botón\r\n  },\r\n  radioButtonMovil: {\r\n    flexDirection: \"row\",\r\n    height: 40,\r\n    width: \"50%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    borderColor: Colors.azul_Claro,\r\n    borderWidth: 3,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginRight: \"5%\",\r\n    marginVertical: \"5%\",\r\n    backgroundColor: Colors.azul_Suave, // Color de fondo del botón\r\n  },\r\n  radioButtonSelected: {\r\n    backgroundColor: Colors.azul_Oscuro, // Color de fondo del botón seleccionado\r\n  },\r\n  radioButtonTextDesktop: {\r\n    fontSize: 14,\r\n    color: Colors.blanco, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  radioButtonTextMovil: {\r\n    fontSize: 12,\r\n    color: Colors.blanco, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  labelTextDesktop: {\r\n    fontSize: 16,\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  labelTextModalDesktop: {\r\n    fontSize: 16,\r\n    marginTop: \"3%\",\r\n    marginLeft: \"6%\",\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  labelTextModalMovil: {\r\n    fontSize: 16,\r\n    marginTop: \"3%\",\r\n    marginLeft: \"6%\",\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  labelTextMovil: {\r\n    fontSize: 20,\r\n    marginRight: \"15%\",\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  radioButtonTextSelected: {\r\n    fontWeight: \"bold\", // Texto en negritas para el botón seleccionado\r\n    color: Colors.blanco_Suave, // Color del texto para el botón seleccionado\r\n  },\r\n  selectedText: {\r\n    marginTop: 20,\r\n    fontSize: 18,\r\n    color: \"#333\",\r\n  },\r\n  navbarDekstop: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: 15,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    width: \"100%\",\r\n    zIndex: 1000,\r\n  },\r\n  navbarMobile: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: 15,\r\n    width: \"100%\",\r\n    zIndex: 1000,\r\n  },\r\n  menuIcon: {\r\n    position: \"absolute\",\r\n    left: 15,\r\n    top: 15,\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1, // Permite que el contenido se expanda verticalmente\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10, // Añade algo de padding para mejorar el espaciado\r\n  },\r\n  buttonsContainerDesktop: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\", // Alinea los botones al inicio después de la imagen\r\n    flex: 1, // Ocupa el espacio restante\r\n  },\r\n  buttonContainterMovile: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  searchContainerDesktop: {\r\n    height: \"100%\",\r\n    width: \"20%\",\r\n    marginTop: \"2%\",\r\n    borderRadius: 20,\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  loginContainerStilesDesktop: {\r\n    height: \"70%\",\r\n    width: \"25%\",\r\n    flexDirection: \"column\", // Cambiar a columna aquí\r\n    borderRadius: 20,\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  loginContainerStilesMovil: {\r\n    height: \"70%\",\r\n    width: \"95%\",\r\n    flexDirection: \"column\", // Cambiar a columna aquí\r\n    borderRadius: 20,\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  searchContainerMovil: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    borderRadius: 20,\r\n    marginTop: \"3%\",\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  modalViewMesajeContainerDesktop: {\r\n    width: \"40%\",\r\n    padding: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 5,\r\n  },\r\n  modalViewMesajeContainerMovil: {\r\n    width: \"80%\",\r\n    padding: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 5,\r\n  },\r\n  textSearchDesktop: {\r\n    color: Colors.blanco,\r\n    fontSize: 18,\r\n    marginTop: \"5%\",\r\n    justifyContent: \"center\",\r\n    marginLeft: \"6%\",\r\n    fontWeight: \"bold\", // Para negritas\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  textSearchMovil: {\r\n    color: Colors.blanco,\r\n    fontSize: 16,\r\n    marginTop: \"5%\",\r\n    justifyContent: \"center\",\r\n    marginLeft: \"6%\",\r\n    fontWeight: \"bold\", // Para negritas\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  textNavbarMovil: {\r\n    color: Colors.blanco,\r\n    fontSize: 17,\r\n    justifyContent: \"center\",\r\n    marginLeft: \"6%\",\r\n    fontWeight: \"bold\", // Para negritas\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  textImputLogin: {\r\n    height: 35,\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"90%\",\r\n    marginTop: \"2%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    fontSize: 16, // Tamaño de letra más grande\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  textImputModal: {\r\n    height: 40,\r\n    borderColor: Colors.azul_Oscuro,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"90%\",\r\n    marginTop: \"2%\",\r\n    marginHorizontal: \"5%\",\r\n    backgroundColor: Colors.blanco_Suave,\r\n    borderRadius: 13,\r\n    fontSize: 16, // Tamaño de letra más grande\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  textLabelAsInput: {\r\n    height: 40, // Altura similar al TextInput\r\n    borderColor: Colors.negro,\r\n    borderWidth: 1, // Borde delgado\r\n    shadowColor: Colors.negro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Opacidad de la sombra\r\n    shadowRadius: 14, // Difuminado de la sombra\r\n    width: \"90%\", // Ancho similar al TextInput\r\n    marginTop: \"2%\",\r\n    marginHorizontal: \"5%\",\r\n    backgroundColor: Colors.blanco_Suave,\r\n    borderRadius: 13,\r\n    fontSize: 16, // Tamaño de letra\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno horizontal\r\n    paddingVertical: 10, // Espacio interno vertical (ajusta según sea necesario)\r\n    color: Colors.negro, // Color del texto\r\n    lineHeight: 20, // Altura de línea igual a la altura del contenedor\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  textDescroptionLabelAsInput: {\r\n    height: 150, // Altura similar al TextInput\r\n    borderColor: Colors.negro,\r\n    borderWidth: 1, // Borde delgado\r\n    shadowColor: Colors.negro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Opacidad de la sombra\r\n    shadowRadius: 14, // Difuminado de la sombra\r\n    width: \"90%\", // Ancho similar al TextInput\r\n    marginTop: \"2%\",\r\n    marginHorizontal: \"5%\",\r\n    backgroundColor: Colors.blanco_Suave,\r\n    borderRadius: 13,\r\n    fontSize: 16, // Tamaño de letra\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno horizontal\r\n    paddingVertical: 10, // Espacio interno vertical (ajusta según sea necesario)\r\n    color: Colors.negro, // Color del texto\r\n    lineHeight: 20, // Altura de línea igual a la altura del contenedor\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  textImputModalNOEDITABLE: {\r\n    height: 40,\r\n    borderColor: Colors.negro,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    width: \"90%\",\r\n    marginTop: \"2%\",\r\n    marginHorizontal: \"5%\",\r\n    backgroundColor: Colors.blanco_Suave,\r\n    borderRadius: 13,\r\n    fontSize: 16, // Tamaño de letra más grande\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  customTextImputSearchFullDesktop: {\r\n    height: 30,\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"90%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    marginLeft: \"5%\",\r\n    marginTop: \"4%\",\r\n    fontSize: 16, // Tamaño de letra más grande\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  customTextImputSearchFullMovil: {\r\n    height: 30,\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"90%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    marginLeft: \"5%\",\r\n    marginTop: \"4%\",\r\n    fontSize: 12, // Tamaño de letra más grande\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  customTextImputSearchFiftyDesktop: {\r\n    height: 30,\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"42.5%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    marginLeft: \"5%\",\r\n    marginTop: \"4%\",\r\n    fontSize: 16, // Tamaño de letra más grande\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  customTextImputSearchFiftyMovil: {\r\n    height: 30,\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    width: \"42.5%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    marginLeft: \"5%\",\r\n    marginTop: \"4%\",\r\n    fontSize: 12, // Tamaño de letra más grande\r\n    fontWeight: \"bold\", // Letra en negritas\r\n    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n  },\r\n  movilButtonBusqueda: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 15,\r\n    flexDirection: \"row\",\r\n    width: \"70%\", // Ancho fijo para pantallas de escritorio\r\n    height: 50, // Altura fija para pantallas de escritorio\r\n    marginRight: \"2%\",\r\n    marginTop: \"2%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    elevation: 3,\r\n  },\r\n  separatorBlanco: {\r\n    width: \"90%\", // Ancho del separador\r\n    marginLeft: \"5%\",\r\n    marginTop: \"5%\",\r\n    height: 1, // Altura de la línea (grosor)\r\n    backgroundColor: Colors.blanco, // Color blanco\r\n  },\r\n  separatorNegro: {\r\n    width: \"95%\", // Ancho del separador\r\n    marginTop: \"8%\",\r\n    height: 1, // Altura de la línea (grosor)\r\n    backgroundColor: Colors.negro, // Color blanco\r\n  },\r\n});\r\n","import { Colors } from '../styles/Colors';\r\nimport React, { useState } from 'react';\r\nimport { TouchableOpacity, Image, StyleSheet, Text, Animated, View, useWindowDimensions } from 'react-native';\r\n\r\ninterface CustomButtonProps {\r\n  imageSource: any;\r\n  text: any;\r\n  onPress: () => void;\r\n  isSelected: boolean; // Nuevo parámetro para cambiar el color del botón\r\n}\r\n\r\nconst CustomButtonNavbar: React.FC<CustomButtonProps> = ({ imageSource, onPress, text, isSelected }) => {\r\n  const [scale] = useState(new Animated.Value(1));\r\n  const { width } = useWindowDimensions();\r\n\r\n  const isMobile = width < 930;\r\n\r\n  // Estilos condicionales según el parámetro `isSelected`\r\n  const buttonStyles = [\r\n    isMobile ? styles.mobileButton : styles.desktopButton,\r\n    isSelected && { backgroundColor: Colors.azul_Oscuro } // Cambia solo el color si `isSelected` es true\r\n  ];\r\n  const viewStyles = isMobile ? styles.mobileContent : styles.desktopContent;\r\n\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={buttonStyles}\r\n      onPressIn={onPressIn}\r\n      onPressOut={onPressOut}\r\n      onPress={onPress}\r\n    >\r\n      <Animated.View style={{ transform: [{ scale }] }}>\r\n        <View style={viewStyles}>\r\n          <Image source={imageSource} style={styles.image} />\r\n          <Text style={styles.text}>{text}</Text>\r\n        </View>\r\n      </Animated.View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  mobileButton: {\r\n    backgroundColor: Colors.azul_Claro,\r\n    borderRadius: 15,\r\n    height: 80,\r\n    width: \"180%\",\r\n    marginLeft: \"80%\",\r\n    marginVertical: 5,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 3,\r\n  },\r\n  desktopButton: {\r\n    backgroundColor: Colors.azul_Claro,\r\n    borderRadius: 15,\r\n    width: \"4%\",\r\n    minWidth: 120,\r\n    height: 100,\r\n    marginHorizontal: 10,\r\n    marginBottom: 2,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 3,\r\n  },\r\n  desktopContent: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  mobileContent: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  image: {\r\n    width: 50,\r\n    height: 50,\r\n    marginRight: 10,\r\n  },\r\n  text: {\r\n    fontSize: 18,\r\n    color: Colors.blanco,\r\n  },\r\n});\r\n\r\nexport default CustomButtonNavbar;\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { RolPermiso } from \"../services/RolPermisosAndRol\";\r\n\r\n// Define la interfaz del Usuario\r\nexport interface Usuario {\r\n  id_usuario: string;\r\n  nombre: string;\r\n  telefono?: string;\r\n  direccion?: string;\r\n  carnet_identidad?: string;\r\n  detalles_bancarios?: string;\r\n  nombre_usuario: string;\r\n  email: string;\r\n  token: string;\r\n  id_rol: string;\r\n  nombre_rol: string;\r\n  id_tienda: string;\r\n  nombre_tienda: string;\r\n  permisos: RolPermiso[];\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface UsuarioContextType {\r\n  usuario: Usuario | null;\r\n  setUsuario: (usuario: Usuario | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst UsuarioContext = createContext<UsuarioContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const UsuarioProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [usuario, setUsuario] = useState<Usuario | null>(null);\r\n\r\n  return (\r\n    <UsuarioContext.Provider value={{ usuario: usuario, setUsuario: setUsuario }}>\r\n      {children}\r\n    </UsuarioContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useUsuario = () => {\r\n  const context = React.useContext(UsuarioContext);\r\n  if (context === undefined) {\r\n    throw new Error('useUsuario debe usarse dentro de un ProductoUsuario');\r\n  }\r\n  return context;\r\n};","import React, { createContext, useState, ReactNode } from 'react';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SelectedButon {\r\n  butonSelected: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortEntradasContextType {\r\n  selectedButon: SelectedButon | null;\r\n  setSelectedButon: (sortEntradas: SelectedButon | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortEntradasContext = createContext<SortEntradasContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SelectedButonProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [selectedButon, setSelectedButon] = useState<SelectedButon | null>(null);\r\n\r\n  return (\r\n    <SortEntradasContext.Provider value={{ selectedButon: selectedButon, setSelectedButon: setSelectedButon }}>\r\n      {children}\r\n    </SortEntradasContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSelectedButon = () => {\r\n  const context = React.useContext(SortEntradasContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortEntradas debe usarse dentro de un SortEntradas');\r\n  }\r\n  return context;\r\n};","import React, { useState } from 'react';\r\nimport {\r\n  TouchableOpacity,\r\n  Image,\r\n  StyleSheet,\r\n  Text,\r\n  Animated,\r\n  View,\r\n  Modal,\r\n  FlatList,\r\n  useWindowDimensions,\r\n} from 'react-native';\r\nimport { Colors } from '../styles/Colors';\r\n\r\ninterface CustomDropdownProps {\r\n  imageSource: any;\r\n  text: string;\r\n  options: { label: string; value: string; image: any }[]; // Agregar imagen a cada opción\r\n  onSelect: (value: string) => void;\r\n  isSelected: boolean;\r\n}\r\n\r\nconst CustomDropdown: React.FC<CustomDropdownProps> = ({\r\n  imageSource,\r\n  text,\r\n  options,\r\n  onSelect,\r\n  isSelected,\r\n}) => {\r\n  const [scale] = useState(new Animated.Value(1));\r\n  const { width } = useWindowDimensions();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const isMobile = width < 930;\r\n\r\n  const buttonStyles = [\r\n    isMobile ? styles.mobileButton : styles.desktopButton,\r\n    isSelected && { backgroundColor: Colors.azul_Oscuro },\r\n  ];\r\n  const viewStyles = isMobile ? styles.mobileContent : styles.desktopContent;\r\n\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const handleSelect = (value: string) => {\r\n    onSelect(value);\r\n    setModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      {/* Botón para abrir el dropdown */}\r\n      <TouchableOpacity\r\n        style={buttonStyles}\r\n        onPressIn={onPressIn}\r\n        onPressOut={onPressOut}\r\n        onPress={() => setModalVisible(true)}\r\n      >\r\n        <Animated.View style={{ transform: [{ scale }] }}>\r\n          <View style={viewStyles}>\r\n            <Image source={imageSource} style={styles.image} />\r\n            <Text style={styles.text}>{text}</Text>\r\n          </View>\r\n        </Animated.View>\r\n      </TouchableOpacity>\r\n\r\n      {/* Modal para mostrar las opciones */}\r\n      <Modal\r\n        transparent={true}\r\n        animationType=\"fade\"\r\n        visible={modalVisible}\r\n        onRequestClose={() => setModalVisible(false)}\r\n      >\r\n        <TouchableOpacity\r\n          style={styles.modalOverlay}\r\n          onPress={() => setModalVisible(false)}\r\n        >\r\n          <View style={isMobile? styles.modalContentMovil : styles.modalContentDesktop}>\r\n            <FlatList\r\n              data={options}\r\n              keyExtractor={(item) => item.value}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  style={styles.option}\r\n                  onPress={() => handleSelect(item.value)}\r\n                >\r\n                  <Image source={item.image} style={styles.optionImage} /> {/* Imagen antes del label */}\r\n                  <Text style={styles.optionText}>{item.label}</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            />\r\n          </View>\r\n        </TouchableOpacity>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  mobileButton: {\r\n    backgroundColor: Colors.azul_Claro,\r\n    borderRadius: 15,\r\n    height: 80,\r\n    width: \"180%\",\r\n    marginVertical: 5,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 3,\r\n  },\r\n  desktopButton: {\r\n    backgroundColor: Colors.azul_Claro,\r\n    borderRadius: 15,\r\n    width: \"4%\",\r\n    minWidth: 120,\r\n    height: 100,\r\n    marginHorizontal: 10,\r\n    marginBottom: 2,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 3, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 3,\r\n  },\r\n  desktopContent: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  mobileContent: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  image: {\r\n    width: 50,\r\n    height: 50,\r\n    marginRight: 10,\r\n  },\r\n  text: {\r\n    fontSize: 18,\r\n    color: Colors.blanco,\r\n  },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  modalContentDesktop: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    width: '30%',\r\n    maxHeight: '50%',\r\n  },\r\n  modalContentMovil: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    width: '80%',\r\n    maxHeight: '50%',\r\n  },\r\n  option: {\r\n    flexDirection: 'row', // Para alinear imagen y texto en línea\r\n    alignItems: 'center',\r\n    paddingVertical: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  optionImage: { // Estilo para la imagen de cada opción\r\n    width: 30,\r\n    height: 30,\r\n    marginRight: 10,\r\n    tintColor: Colors.negro\r\n  },\r\n  optionText: {\r\n    fontSize: 18,\r\n    color: Colors.azul_Oscuro,\r\n  },\r\n});\r\n\r\nexport default CustomDropdown;\r\n","import React, { forwardRef } from \"react\";\r\nimport { TextInput, StyleSheet, TextInputProps } from \"react-native\";\r\n\r\ninterface CustomTextInputProps {\r\n  cursorColor?: string;\r\n  style: any;\r\n  placeholder?: string;\r\n  editable?: boolean;\r\n  value?: string;\r\n  scrollEnabled?: boolean;\r\n  numberOfLines?: number;\r\n  multiline?: boolean;\r\n  onBlur?: () => void;\r\n  onChangeText?: (text: string) => void;\r\n  onKeyPress?: (event: any) => void; // Agregamos onKeyPress como opcional\r\n  autoCapitalize?: \"none\" | \"sentences\" | \"words\" | \"characters\";\r\n  autoCompleteType?:\r\n    | \"off\"\r\n    | \"username\"\r\n    | \"password\"\r\n    | \"email\"\r\n    | \"name\"\r\n    | \"tel\"\r\n    | \"street-address\"\r\n    | \"postal-code\"\r\n    | \"cc-number\"\r\n    | \"cc-csc\"\r\n    | \"cc-exp\"\r\n    | \"cc-exp-month\"\r\n    | \"cc-exp-year\";\r\n  secureTextEntry?: boolean;\r\n  keyboardType?:\r\n    | \"default\"\r\n    | \"email-address\"\r\n    | \"numeric\"\r\n    | \"phone-pad\"\r\n    | \"ascii-capable\"\r\n    | \"numbers-and-punctuation\"\r\n    | \"url\"\r\n    | \"number-pad\"\r\n    | \"name-phone-pad\"\r\n    | \"decimal-pad\"\r\n    | \"twitter\"\r\n    | \"web-search\"\r\n    | \"visible-password\";\r\n}\r\n\r\n// Usa forwardRef para pasar correctamente el ref\r\nconst CustomTextInputSearch = forwardRef<TextInput, CustomTextInputProps>(\r\n  (\r\n    {\r\n      placeholder,\r\n      autoCapitalize,\r\n      autoCompleteType,\r\n      secureTextEntry,\r\n      keyboardType,\r\n      cursorColor,\r\n      onChangeText,\r\n      value,\r\n      onBlur,\r\n      style,\r\n      multiline,\r\n      numberOfLines,\r\n      scrollEnabled,\r\n      editable,\r\n      onKeyPress, // Recibimos onKeyPress\r\n    },\r\n    ref // Aquí forwardRef expone la referencia\r\n  ) => {\r\n    return (\r\n      <TextInput\r\n        style={style}\r\n        editable={editable}\r\n        numberOfLines={numberOfLines}\r\n        placeholder={placeholder}\r\n        placeholderTextColor=\"rgba(255, 255, 255, 0.8)\"\r\n        autoCapitalize={autoCapitalize}\r\n        autoComplete={autoCompleteType}\r\n        secureTextEntry={secureTextEntry}\r\n        keyboardType={keyboardType}\r\n        cursorColor={cursorColor}\r\n        value={value}\r\n        scrollEnabled={scrollEnabled}\r\n        multiline={multiline}\r\n        onBlur={onBlur}\r\n        ref={ref} // Asigna el ref al TextInput\r\n        onChangeText={onChangeText}\r\n        onKeyPress={onKeyPress} // Pasamos onKeyPress al TextInput\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default CustomTextInputSearch;\r\n","\r\nexport const cerverHost = \"http://192.168.43.126:3000\";\r\nexport const cerverHostImages = \"http://192.168.43.126:8080/\";\r\n// 147.93.128.46","// navigationRef.ts\r\nimport { createRef } from \"react\";\r\nimport { NavigationContainerRef } from \"@react-navigation/native\";\r\nimport { RootStackParamList } from \"../App\";\r\n\r\n// Define la referencia de navegación global con el tipo correcto\r\nexport const navigationRef = createRef<NavigationContainerRef<RootStackParamList>>();\r\n\r\n// Función de navegación global\r\nexport function navigate<RouteName extends keyof RootStackParamList>(\r\n  name: RouteName,\r\n  params?: RootStackParamList[RouteName]\r\n) {\r\n  // Asegúrate de que los parámetros sean correctamente tipados y pasados\r\n  navigationRef.current?.navigate(name, params as any);\r\n}\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\nimport { UsuarioTabla } from \"../components/MyDateTableUsuarios\";\r\n\r\n// Función para que iniciar seción a los usuarios\r\nexport const iniciarSecionUser = async (userName: String, password: String) => {\r\n    try {\r\n        const response = await axios.post(\r\n          `${cerverHost}/Usuario/auth`,\r\n          {\r\n            nombre_usuario: userName,\r\n            contrasenna: password\r\n          }\r\n        );\r\n\r\n        if(response.data.msg === \"Usuario encontrado\"){\r\n          return response;\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Error al iniciar seción: \", error);\r\n        return false;\r\n      }\r\n}\r\n\r\n// Agregar usuario al sistema\r\nexport const addUsuario = async (\r\n  token: string,\r\n  nombre: string,\r\n  nombre_usuario: string,\r\n  contrasenna: string,\r\n  email: string,\r\n  telefono: string,\r\n  direccion: string,\r\n  carnet_identidad: string,\r\n  detalles_bancarios: string,\r\n  rol: string,\r\n  tienda: string,\r\n  salario_CUP: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Usuario/createUsuario`,\r\n      {\r\n        nombre: nombre,\r\n        nombre_usuario: nombre_usuario,\r\n        contrasenna: contrasenna,\r\n        email: email,\r\n        telefono: telefono,\r\n        direccion: direccion,\r\n        carnet_identidad: (carnet_identidad === \"\")? null : carnet_identidad,\r\n        detalles_bancarios: detalles_bancarios,\r\n        salario_CUP: salario_CUP,\r\n        rol: {\"id_rol\": rol},\r\n        tienda: {\"id_tienda\": tienda}\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error incertar el usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Usuario del sistema\r\nexport const deleteUsuario = async (token: String, id_usuario:string) => {\r\n  try {\r\n    const response = await axios.delete(`${cerverHost}/Usuario/deleteUsuario/${id_usuario}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al eliminar el usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar datos de un usuario conociendo la contraeña nueva\r\nexport const actualizarUsuarioConContraseña = async (\r\n  token: string,\r\n  id_usuario: string,\r\n  nombre: string,\r\n  nombre_usuario: string,\r\n  contrasenna: string,\r\n  email: string,\r\n  telefono: string,\r\n  direccion: string,\r\n  carnet_identidad: string,\r\n  detalles_bancarios: string,\r\n  rol: string,\r\n  tienda: string,\r\n  activo: boolean,\r\n  salario_CUP: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Usuario/updateUsuario/${id_usuario}`,\r\n      {\r\n        nombre: nombre,\r\n        nombre_usuario: nombre_usuario,\r\n        contrasenna: contrasenna,\r\n        email: email,\r\n        telefono: telefono,\r\n        direccion: direccion,\r\n        carnet_identidad: carnet_identidad,\r\n        detalles_bancarios: detalles_bancarios,\r\n        activo: activo,\r\n        salario_CUP: salario_CUP,\r\n        rol: {\"id_rol\": rol},\r\n        tienda: {\"id_tienda\": tienda}\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error modificar el usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar datos de un usuario sin conociendo la contraeña nueva\r\nexport const actualizarUsuarioSinContraseña = async (\r\n  token: string,\r\n  id_usuario: string,\r\n  nombre: string,\r\n  nombre_usuario: string,\r\n  email: string,\r\n  telefono: string,\r\n  direccion: string,\r\n  carnet_identidad: string,\r\n  detalles_bancarios: string,\r\n  rol: string,\r\n  tienda: string,\r\n  activo: boolean,\r\n  salario_CUP: string\r\n  \r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Usuario/updateUsuario/${id_usuario}`,\r\n      {\r\n        nombre: nombre,\r\n        nombre_usuario: nombre_usuario,\r\n        email: email,\r\n        telefono: telefono,\r\n        direccion: direccion,\r\n        carnet_identidad: carnet_identidad,\r\n        detalles_bancarios: detalles_bancarios,\r\n        activo: activo,\r\n        salario_CUP: salario_CUP,\r\n        rol: {\"id_rol\": rol},\r\n        tienda: {\"id_tienda\": tienda}\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error modificar el usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Función para obtener algunos datos de un usuario específico\r\nexport const getUsuarioById = async (token: String, id_user: String) => {\r\n  try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Usuario/${id_user}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          }\r\n        }\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error en la solicitud de datos de el usuario:', error);\r\n      alert(error);\r\n      return false;\r\n    }\r\n}\r\n\r\n// Optener todos los datos de todos los usuarios\r\nexport const getAllUsuarios = async (token: String) => {\r\n  try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Usuario`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          }\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.error('Error en la solicitud de datos de los usuarios:', error);\r\n      alert(error);\r\n      return false;\r\n    }\r\n}\r\n\r\n// Función para obtener los permisos de un usuario específico\r\nexport const allPermises = async (token: String, id_user: String) => {\r\n  try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Usuario/${id_user}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          }\r\n        }\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.error('Error en la solicitud de datos de el usuario:', error);\r\n      alert(error);\r\n      return false;\r\n    }\r\n}\r\n\r\n// Filtrar usuarios\r\nexport const filtrarUsuario = async (\r\n  token: string,\r\n  nombre_usuario: string,\r\n  email: string,\r\n  telefono: string,\r\n  id_rol: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Usuario/api/filtrar`,\r\n      {\r\n        nombre_usuario: nombre_usuario,\r\n        email: email,\r\n        telefono: telefono,\r\n        id_rol: id_rol,\r\n        id_tienda: id_tienda\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrar usuarios: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar usuarios\r\nexport const ordenarUsuarios = async (\r\n  token: string,\r\n  items: UsuarioTabla[],\r\n  criterio: string,\r\n  ascendente: boolean\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Usuario/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar los usuarios: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Cambiar contraseña\r\nexport const cambiarContrasennaUsuarios = async (\r\n  token: string,\r\n  contrasenna_vieja: string,\r\n  contrasenna_nueva1: string,\r\n  contrasenna_nueva2: string,\r\n  nombre_usuario: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Usuario/change/pass`,\r\n      {\r\n        contrasenna_vieja: contrasenna_vieja,\r\n        contrasenna_nueva1: contrasenna_nueva1,\r\n        contrasenna_nueva2: contrasenna_nueva2,\r\n        nombre_usuario: nombre_usuario\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al cambiar la contraseña del usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\nimport { Accion } from \"../components/MyDateTableAcciones\";\r\n\r\n// Obtener todas las acciones\r\nexport const getAllAcciones = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Accion`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de todas las acciones: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener una accion especifica segun el id\r\nexport const getAccionByID = async (token: String, id_accion: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Accion/${id_accion}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de una acción en específico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Traza de usuario\r\nexport const addAccionUsuario = async (\r\n  token: string,\r\n  descripcion: string,\r\n  fecha: string,\r\n  id_usuario: string,\r\n  id_tipo_accion: number\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Accion/createAccion`,\r\n      {\r\n        descripcion: descripcion,\r\n        fecha: fecha,\r\n        usuario: {\"id_usuario\": id_usuario},\r\n        tipo_accion: {\"id_tipo_accion\": id_tipo_accion},\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al agregar acción de usuario: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todos los tipos de accion\r\nexport const getAllTiposAccion = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Tipo_accion`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de todas los tipos de acción: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar acciones\r\nexport const filtrarAcciones = async (\r\n  token: string,\r\n  id_tipo_accion: string,\r\n  nombre_usuario: string,\r\n  descripcion: string,\r\n  fecha_limsup: string,\r\n  fecha_liminf: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Accion/api/filtrar`,\r\n      {\r\n        id_tipo_accion: id_tipo_accion,\r\n        nombre_usuario: nombre_usuario,\r\n        descripcion: descripcion,\r\n        fecha_limsup: fecha_liminf,\r\n        fecha_liminf: fecha_limsup,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al filtrar acciones: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar acciones\r\nexport const ordenarAcciones = async (\r\n  token: string,\r\n  items: Accion[],\r\n  criterio: string,\r\n  ascendente: boolean\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Accion/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar las acciones: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface PermisosUsuario {\r\n    resultProductoView: boolean; //9\r\n    resultProveedorView: boolean; //38\r\n    resultEntradaView: boolean; //13\r\n    resultMovimientoLocalView: boolean; //30\r\n    resultMovimientoGeneralView: boolean; //31\r\n    resultAgregarUsuario: boolean; //1\r\n    resultModificarUsuario: boolean; //2\r\n    resultEliminarUsuario: boolean; //3\r\n    resultAccionesView: boolean; //15\r\n    resultTipoServicio: boolean; // 20, 21, 22\r\n    resultClienteView: boolean; // 16, 17, 18, 19\r\n    resultGarantiaView: boolean; // 32, 33, 34\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface PermisosUsuarioContextType {\r\n  permisosUsuarioNavbar: PermisosUsuario | null;\r\n  setPermisosUsuarioNavbar: (permisosUsuario: PermisosUsuario | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst PermisosUsuarioContext = createContext<PermisosUsuarioContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const PermisosUsuarioProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [permisosUsuario, setPermisosUsuario] = useState<PermisosUsuario | null>(null);\r\n\r\n  return (\r\n    <PermisosUsuarioContext.Provider value={{ permisosUsuarioNavbar: permisosUsuario, setPermisosUsuarioNavbar: setPermisosUsuario }}>\r\n      {children}\r\n    </PermisosUsuarioContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const usePermisosUsuario = () => {\r\n  const context = React.useContext(PermisosUsuarioContext);\r\n  if (context === undefined) {\r\n    throw new Error('usePermisosUsuario debe usarse dentro de un PermisosUsuario');\r\n  }\r\n  return context;\r\n};","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Button,\r\n  StyleSheet,\r\n  Image,\r\n  useWindowDimensions,\r\n  Animated,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Modal,\r\n  TouchableWithoutFeedback,\r\n} from \"react-native\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport CustomButtonNavbar from \"./CustomButtonLogin\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport \"../styles/ScrollView.css\";\r\nimport { useSelectedButon } from \"../contexts/globalButonNavbarSelected\";\r\nimport CustomDropdownProvicional from \"./CustomButonLoginOptions\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\nimport { cambiarContrasennaUsuarios } from \"../services/UsuarioServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport { usePermisosUsuario as usePermisosUsuarioNavbar } from \"../contexts/PermisosNavbarContext\";\r\n\r\nconst Navbar = () => {\r\n  // Para poder navegar entre vistas\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Estado para controlar si el menú está expandido\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const [modalUsuarioDetails, setModalUsuarioDetails] = useState(false);\r\n\r\n  const [contrasennaVieja, setContrasennaVieja] = useState(\"\");\r\n  const [contrasennaNueva1, setContrasennaNueva1] = useState(\"\");\r\n  const [contrasennaNueva2, setContrasennaNueva2] = useState(\"\");\r\n\r\n  const [hasPermisoViewProducto, setHasPermisoViewProducto] = useState(false);\r\n  const [hasPermisoViewTipoServicio, setHasPermisoViewTipoServicio] =\r\n    useState(false);\r\n  const [hasPermisoViewUsuario, setHasPermisoViewUsuario] = useState(false);\r\n  const [hasPermisoViewTienda, setHasPermisoViewTienda] = useState(false);\r\n  const [hasPermisoViewAccion, setHasPermisoViewAccion] = useState(false);\r\n  const [hasPermisoViewEntrada, setHasPermisoViewEntrada] = useState(false);\r\n  const [hasPermisoViewProveedor, setHasPermisoViewProveedor] = useState(false);\r\n  const [hasPermisoViewMovimiento, setHasPermisoViewMovimiento] =\r\n    useState(false);\r\n  const [hasPermisoViewCliente, setHasPermisoViewCliente] = useState(false);\r\n  const [hasPermisoViewGarantia, setHasPermisoViewGarantia] = useState(false);\r\n  const nombreProductoRef = useRef(null);\r\n  const { setUsuario, usuario } = useUsuario();\r\n  const { permisosUsuarioNavbar, setPermisosUsuarioNavbar } =\r\n    usePermisosUsuarioNavbar();\r\n  const { setSelectedButon, selectedButon } = useSelectedButon();\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  const [selectedOption, setSelectedOption] = useState<string | null>(null);\r\n\r\n  const handleSelect = (value: any) => {\r\n    setSelectedButon({\r\n      butonSelected: \"Administración\",\r\n    });\r\n    if (value === \"1\") {\r\n      navigation.navigate(\"Usuarios\");\r\n    } else if (value === \"3\") {\r\n      navigation.navigate(\"Tiendas\");\r\n    } else if (value === \"2\") {\r\n      navigation.navigate(\"Acciones\");\r\n    } else if (value === \"4\") {\r\n      navigation.navigate(\"Permisos\");\r\n    } else if (value === \"5\") {\r\n      navigation.navigate(\"Tipo de Servicio\");\r\n    } else if (value === \"6\") {\r\n      navigation.navigate(\"Cambiar Moneda\");\r\n    }\r\n    setSelectedOption(value);\r\n  };\r\n\r\n  const [options, setOptions] = useState<\r\n    { label: string; value: string; image: any }[]\r\n  >([]);\r\n  useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        setHasPermisoViewEntrada(\r\n          permisosUsuarioNavbar?.resultEntradaView ?? false\r\n        );\r\n        setHasPermisoViewProducto(\r\n          permisosUsuarioNavbar?.resultProductoView ?? false\r\n        );\r\n        setHasPermisoViewProveedor(\r\n          permisosUsuarioNavbar?.resultProveedorView ?? false\r\n        );\r\n        setHasPermisoViewAccion(\r\n          permisosUsuarioNavbar?.resultAccionesView ?? false\r\n        );\r\n        setHasPermisoViewMovimiento(\r\n          (permisosUsuarioNavbar?.resultMovimientoLocalView ?? false) ||\r\n            (permisosUsuarioNavbar?.resultMovimientoGeneralView ?? false)\r\n        );\r\n        setHasPermisoViewUsuario(\r\n          (permisosUsuarioNavbar?.resultAgregarUsuario ?? false) ||\r\n            (permisosUsuarioNavbar?.resultModificarUsuario ?? false) ||\r\n            (permisosUsuarioNavbar?.resultEliminarUsuario ?? false)\r\n        );\r\n        setHasPermisoViewTienda(parseInt(usuario.id_usuario) === 1);\r\n        setHasPermisoViewCliente(permisosUsuarioNavbar?.resultClienteView ?? false);\r\n        setHasPermisoViewGarantia(permisosUsuarioNavbar?.resultGarantiaView ?? false);\r\n\r\n        const newOptions = [];\r\n        if (\r\n          (permisosUsuarioNavbar?.resultAgregarUsuario ?? false) ||\r\n          (permisosUsuarioNavbar?.resultModificarUsuario ?? false) ||\r\n          (permisosUsuarioNavbar?.resultEliminarUsuario ?? false)\r\n        ) {\r\n          newOptions.push({\r\n            label: \"Usuarios\",\r\n            value: \"1\",\r\n            image: require(\"../images/usuarios.png\"),\r\n          });\r\n        }\r\n        if (permisosUsuarioNavbar?.resultAccionesView ?? false) {\r\n          newOptions.push({\r\n            label: \"Acciones\",\r\n            value: \"2\",\r\n            image: require(\"../images/acción.png\"),\r\n          });\r\n        }\r\n        if (parseInt(usuario.id_rol) === 1) {\r\n          newOptions.push({\r\n            label: \"Tiendas\",\r\n            value: \"3\",\r\n            image: require(\"../images/tienda.png\"),\r\n          });\r\n        }\r\n        /*\r\n        newOptions.push({\r\n          label: \"Permisos\",\r\n          value: \"4\",\r\n          image: require(\"../images/tienda.png\")\r\n        })\r\n          */\r\n        if (permisosUsuarioNavbar?.resultTipoServicio) {\r\n          newOptions.push({\r\n            label: \"Tipos de Servicios\",\r\n            value: \"5\",\r\n            image: require(\"../images/Tipo_Servicio.png\"),\r\n          });\r\n        }\r\n        if (parseInt(usuario.id_rol) === 1) {\r\n          newOptions.push({\r\n            label: \"Cambiar  moneda\",\r\n            value: \"6\",\r\n            image: require(\"../images/Cambio_moneda.png\"),\r\n          });\r\n        }\r\n\r\n        // Actualiza el estado de options\r\n        setOptions(newOptions);\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, [permisosUsuarioNavbar]);\r\n\r\n  // Estilos condicionales\r\n  const buttonStyles = isMobile ? true : false;\r\n  const buttonsContainerStyles = isMobile\r\n    ? styles.buttonContainterMovile\r\n    : styles.buttonsContainerDesktop;\r\n\r\n  // Función para cambiar la contraseña\r\n  const changePassword = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL CAMBIAR LA CONTRASEÑA. Comprueve los siguientes parámetros:\\n\";\r\n\r\n      if (contrasennaNueva1 !== contrasennaNueva2) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No ha ingresado bien su contraseña en los campos requeridos.\\n\";\r\n      }\r\n      if (contrasennaNueva1.length < 6) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-La contraseña nueva debe tener más de 6 caracteres.\\n\";\r\n      }\r\n      if (contrasennaNueva1.trim() === \"\" || contrasennaNueva2.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Deve digitar la nueva contraseña en los campos correspondientes.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        const result = cambiarContrasennaUsuarios(\r\n          usuario.token,\r\n          contrasennaVieja,\r\n          contrasennaNueva1,\r\n          contrasennaNueva2,\r\n          usuario.nombre_usuario\r\n        );\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} cambió su contraseña.`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          5\r\n        );\r\n\r\n        setIsModalChekVisible(false);\r\n        setModalMensaje(`La contraseña se cambió con éxito.`);\r\n        setReflechModalMensajeView(false);\r\n        setModalMensajeView(true);\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setReflechModalMensajeView(false);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 300, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  function botones() {\r\n    return (\r\n      <ScrollView\r\n        horizontal={true}\r\n        contentContainerStyle={{\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-start\",\r\n        }}\r\n        showsHorizontalScrollIndicator={true}\r\n      >\r\n        <View style={buttonsContainerStyles}>\r\n          {hasPermisoViewProducto && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/features.png\")}\r\n              text={\"En tu Tienda\"}\r\n              isSelected={selectedButon?.butonSelected === \"Mi Tienda\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Mi Tienda\",\r\n                });\r\n                navigation.navigate(\"Mi Tienda\");\r\n              }}\r\n            />\r\n          )}\r\n          {hasPermisoViewProducto && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/product.png\")}\r\n              text={\"Productos\"}\r\n              isSelected={selectedButon?.butonSelected === \"Productos\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Productos\",\r\n                });\r\n                navigation.navigate(\"Productos\");\r\n              }}\r\n            />\r\n          )}\r\n          {hasPermisoViewProducto && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/public-service.png\")}\r\n              text={\"Ventas\"}\r\n              isSelected={selectedButon?.butonSelected === \"Servicios\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Servicios\",\r\n                });\r\n                navigation.navigate(\"Ventas\");\r\n              }}\r\n            />\r\n          )}\r\n          {hasPermisoViewMovimiento && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/moving.png\")}\r\n              text={\"Movimientos\"}\r\n              isSelected={selectedButon?.butonSelected === \"Movimientos\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Movimientos\",\r\n                });\r\n                navigation.navigate(\"Movimientos\");\r\n              }}\r\n            />\r\n          )}\r\n          {/*hasPermisoViewGarantia && (<CustomButtonNavbar\r\n              imageSource={require(\"../images/reembolso.png\")}\r\n              text={\"Garantias\"}\r\n              isSelected={selectedButon?.butonSelected === \"Garantias\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Garantias\",\r\n                });\r\n                navigation.navigate(\"Garantías\");\r\n              }}\r\n            />)*/}\r\n          {hasPermisoViewCliente && (<CustomButtonNavbar\r\n              imageSource={require(\"../images/nueva-cuenta.png\")}\r\n              text={\"Clientes\"}\r\n              isSelected={selectedButon?.butonSelected === \"Clientes\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Clientes\",\r\n                });\r\n                navigation.navigate(\"Clientes\");\r\n              }}\r\n            />)}\r\n            {(parseInt(usuario?.id_rol) === 1 || parseInt(usuario?.id_rol) === 2) && (<CustomButtonNavbar\r\n              imageSource={require(\"../images/Deudas.png\")}\r\n              text={\"Deudas\"}\r\n              isSelected={selectedButon?.butonSelected === \"Deudas\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Deudas\",\r\n                });\r\n                navigation.navigate(\"Deudas\");\r\n              }}\r\n            />)}\r\n          {hasPermisoViewProveedor && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/gente.png\")}\r\n              text={\"Proveedores\"}\r\n              isSelected={selectedButon?.butonSelected === \"Proveedores\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Proveedores\",\r\n                });\r\n                navigation.navigate(\"Proveedores\");\r\n              }}\r\n            />\r\n          )}\r\n          {hasPermisoViewEntrada && (\r\n            <CustomButtonNavbar\r\n              imageSource={require(\"../images/entrada.png\")}\r\n              text={\"Entradas\"}\r\n              isSelected={selectedButon?.butonSelected === \"Entradas\"}\r\n              onPress={() => {\r\n                setSelectedButon({\r\n                  butonSelected: \"Entradas\",\r\n                });\r\n                navigation.navigate(\"Entradas\");\r\n              }}\r\n            />\r\n          )}\r\n          {/*<CustomButtonNavbar\r\n            imageSource={require(\"../images/informe.png\")}\r\n            text={\"Reportes\"}\r\n            onPress={() => {}}\r\n          />*/}\r\n          {(hasPermisoViewUsuario ||\r\n            hasPermisoViewTienda ||\r\n            hasPermisoViewAccion) && (\r\n            <CustomDropdownProvicional\r\n              imageSource={require(\"../images/gerente.png\")} // Ajusta la ruta de la imagen\r\n              text=\"Administración\"\r\n              options={options}\r\n              onSelect={handleSelect}\r\n              isSelected={selectedButon?.butonSelected === \"Administración\"}\r\n            />\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n    );\r\n  }\r\n\r\n  // Comprobar si se está en desktop o en movil\r\n  if (buttonStyles) {\r\n    return (\r\n      <View style={{ padding: 15 }}>\r\n        <LinearGradient\r\n          colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n          start={[0, 0]}\r\n          end={[1, 0]}\r\n          style={styles.navbarMobile}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => setModalUsuarioDetails(!modalUsuarioDetails)}\r\n          >\r\n            <View\r\n              style={{\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                borderWidth: 1,\r\n                borderColor: Colors.blanco,\r\n                borderRadius: 15,\r\n                width: 300,\r\n                height: 60,\r\n                marginVertical: 10,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 20, color: Colors.blanco }}>\r\n                Usuario\r\n              </Text>\r\n              <View style={styles.separatorBlanco} />\r\n              <Text style={{ fontSize: 16, color: Colors.blanco }}>\r\n                Nombre: {usuario?.nombre}\r\n              </Text>\r\n              <Text style={{ fontSize: 16, color: Colors.blanco }}>\r\n                Usuario: {usuario?.nombre_usuario}\r\n              </Text>\r\n              <TouchableOpacity\r\n                style={{\r\n                  width: \"90%\",\r\n                  height: \"45%\",\r\n                  marginTop: \"5%\",\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n                onPress={() => navigation.navigate(\"Login\")}\r\n              >\r\n                <Text style={{ fontSize: 16, color: Colors.blanco }}>\r\n                  Cerrar Sesión\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 40, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: 35, // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              paddingHorizontal: 15, // Espaciado interno horizontal para separar el contenido del borde\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/menu.png\")}\r\n              style={{ width: 40, height: 40 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Navegación</Text>\r\n          </TouchableOpacity>\r\n        </LinearGradient>\r\n        {/* Vista animada */}\r\n        {isExpanded && (\r\n          <Animated.View style={[{ overflow: \"hidden\" }, animatedStyle]}>\r\n            <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n              {/* Llamada a la función para renderizar los botones */}\r\n              {botones()}\r\n            </ScrollView>\r\n          </Animated.View>\r\n        )}\r\n\r\n        {modalUsuarioDetails && (\r\n          <Modal\r\n            transparent={true}\r\n            visible={modalUsuarioDetails}\r\n            animationType=\"fade\"\r\n            onRequestClose={() => setModalUsuarioDetails(false)}\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"90%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 15,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 10,\r\n                    right: 10,\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    borderRadius: 30,\r\n                    height: 40,\r\n                    width: 40,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                  onPress={() => {\r\n                    setContrasennaVieja(\"\");\r\n                    setContrasennaNueva1(\"\");\r\n                    setContrasennaNueva2(\"\");\r\n                    setModalUsuarioDetails(false);\r\n                  }}\r\n                >\r\n                  <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n                </TouchableOpacity>\r\n\r\n                <View style={styles.separatorNegro} />\r\n                <Text\r\n                  style={{\r\n                    fontSize: 26,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Tus Datos\r\n                </Text>\r\n\r\n                <ScrollView\r\n                  style={{ width: \"100%\" }}\r\n                  contentContainerStyle={{\r\n                    alignItems: \"center\",\r\n                    paddingBottom: 20,\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu nombre: {usuario?.nombre}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu nombre de usuario en el sistema:{\" \"}\r\n                      {usuario?.nombre_usuario}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu rol en el sistema: {usuario?.nombre_rol}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda en la que trabajas: {usuario?.nombre_tienda}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  <View style={styles.separatorNegro} />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 20,\r\n                        color: Colors.negro, // Color del texto\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Cambiar Contraseña\r\n                    </Text>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Contraseña Vieja\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaVieja}\r\n                    onChangeText={setContrasennaVieja}\r\n                    placeholder=\"Contraseña vieja\"\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Contraseña Nueva\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaNueva1}\r\n                    onChangeText={setContrasennaNueva1}\r\n                    placeholder=\"Contraseña nueva\"\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Repita la Nueva Contraseña\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaNueva2}\r\n                    onChangeText={setContrasennaNueva2}\r\n                    placeholder=\"Contraseña nueva\"\r\n                  />\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      marginLeft: \"5%\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                      marginTop: \"3%\", // Margen adicional entre botones\r\n                    }}\r\n                    onPress={() => {\r\n                      setMesajeModalChek(\r\n                        `Estas seguro que deseas cambiar tu contraseña nueva a ${contrasennaNueva1}`\r\n                      );\r\n                      setIsModalChekVisible(true);\r\n                      setModalUsuarioDetails(!modalUsuarioDetails);\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: 16,\r\n                      }}\r\n                    >\r\n                      Cambiar Contraseña\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </ScrollView>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n        )}\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => changePassword()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.navigate(\"Login\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <LinearGradient\r\n          colors={[Colors.azul_Claro, Colors.azul_Oscuro]}\r\n          start={[0, 0]}\r\n          end={[1, 0]}\r\n          style={styles.navbarDekstop}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => setModalUsuarioDetails(!modalUsuarioDetails)}\r\n          >\r\n            <View\r\n              style={{\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                borderWidth: 1,\r\n                borderColor: Colors.blanco,\r\n                borderRadius: 15,\r\n                width: 260,\r\n                height: 60,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 18, color: Colors.blanco }}>\r\n                Usuario\r\n              </Text>\r\n              <View style={styles.separatorBlanco} />\r\n              <Text style={{ fontSize: 14, color: Colors.blanco }}>\r\n                Nombre: {usuario?.nombre}\r\n              </Text>\r\n              <Text style={{ fontSize: 14, color: Colors.blanco }}>\r\n                Usuario: {usuario?.nombre_usuario}\r\n              </Text>\r\n              <TouchableOpacity\r\n                style={{\r\n                  width: \"90%\",\r\n                  height: \"40%\",\r\n                  marginTop: \"5%\",\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n                onPress={() => navigation.navigate(\"Login\")}\r\n              >\r\n                <Text style={{ fontSize: 14, color: Colors.blanco }}>\r\n                  Cerrar Sesión\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </TouchableOpacity>\r\n          {botones()}\r\n        </LinearGradient>\r\n\r\n        {modalUsuarioDetails && (\r\n          <Modal\r\n            transparent={true}\r\n            visible={modalUsuarioDetails}\r\n            animationType=\"fade\"\r\n            onRequestClose={() => setModalUsuarioDetails(false)}\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: \"60%\",\r\n                  height: \"90%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 15,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 10,\r\n                    right: 10,\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    borderRadius: 30,\r\n                    height: 40,\r\n                    width: 40,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                  onPress={() => {\r\n                    setContrasennaVieja(\"\");\r\n                    setContrasennaNueva1(\"\");\r\n                    setContrasennaNueva2(\"\");\r\n                    setModalUsuarioDetails(false);\r\n                  }}\r\n                >\r\n                  <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n                </TouchableOpacity>\r\n\r\n                <View style={styles.separatorNegro} />\r\n                <Text\r\n                  style={{\r\n                    fontSize: 26,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Tus Datos\r\n                </Text>\r\n\r\n                <ScrollView\r\n                  style={{ width: \"100%\" }}\r\n                  contentContainerStyle={{\r\n                    alignItems: \"center\",\r\n                    paddingBottom: 20,\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu nombre: {usuario?.nombre}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu nombre de usuario en el sistema:{\" \"}\r\n                      {usuario?.nombre_usuario}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tu rol en el sistema: {usuario?.nombre_rol}\r\n                    </Text>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda en la que trabajas: {usuario?.nombre_tienda}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  <View style={styles.separatorNegro} />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 20,\r\n                        color: Colors.negro, // Color del texto\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Cambiar Contraseña\r\n                    </Text>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Contraseña Vieja\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaVieja}\r\n                    onChangeText={setContrasennaVieja}\r\n                    placeholder=\"Contraseña vieja\"\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Contraseña Nueva\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaNueva1}\r\n                    onChangeText={setContrasennaNueva1}\r\n                    placeholder=\"Contraseña nueva\"\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Repita la Nueva Contraseña\r\n                    </Text>\r\n                  </View>\r\n                  <CustomTextImputSearch\r\n                    ref={nombreProductoRef}\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={contrasennaNueva2}\r\n                    onChangeText={setContrasennaNueva2}\r\n                    placeholder=\"Contraseña nueva\"\r\n                  />\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      marginLeft: \"5%\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                      marginTop: \"3%\", // Margen adicional entre botones\r\n                    }}\r\n                    onPress={() => {\r\n                      setMesajeModalChek(\r\n                        `Estas seguro que deseas cambiar tu contraseña nueva a ${contrasennaNueva1}`\r\n                      );\r\n                      setIsModalChekVisible(true);\r\n                      setModalUsuarioDetails(!modalUsuarioDetails);\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: 16,\r\n                      }}\r\n                    >\r\n                      Cambiar Contraseña\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </ScrollView>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n        )}\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => changePassword()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() => {\r\n                  setContrasennaVieja(\"\");\r\n                  setContrasennaNueva1(\"\");\r\n                  setContrasennaNueva2(\"\");\r\n                  isReflechModalMensajeView\r\n                    ? navigation.navigate(\"Login\")\r\n                    : setModalMensajeView(!isModalMensajeView);\r\n                }}\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\r\nimport { Colors } from '../styles/Colors';\r\n\r\n// Definir la interfaz para los props\r\ninterface DropdownItem {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface DropdownProps {\r\n  value: string | null; // Puede ser null si no hay valor seleccionado\r\n  setValue: (value: string | null) => void; // Aceptar null como valor\r\n  placeholder: string;\r\n  items: DropdownItem[];\r\n  searchable?: boolean;\r\n  onDropdownOpen?: () => void; // Agregar el nuevo prop\r\n}\r\n\r\nconst CustomDropdown: React.FC<DropdownProps> = ({\r\n  value,\r\n  setValue,\r\n  items,\r\n  placeholder: title,\r\n  searchable = false, // Valor por defecto establecido en false\r\n  onDropdownOpen, // Recibir el nuevo prop\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  const isMobile = width < 1150; // Puedes ajustar este umbral según sea necesario\r\n\r\n  const textStyles = isMobile ? styles.dropdownTextMovil : styles.dropdownTextDesktop;\r\n\r\n  // Efecto para llamar a onDropdownOpen cuando el dropdown se abre\r\n  useEffect(() => {\r\n    if (open && onDropdownOpen) {\r\n      onDropdownOpen(); // Llama a la función cuando se abre el dropdown\r\n    }\r\n  }, [open]); // Este efecto se ejecuta cada vez que 'open' cambia\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <DropDownPicker\r\n        open={open}\r\n        value={value}\r\n        items={items}\r\n        setOpen={setOpen} // Esto ahora es correcto\r\n        setValue={(val) => {\r\n          setValue(val); // Aquí se espera un valor de tipo string | null\r\n          setOpen(false); // Cerrar el dropdown al seleccionar un valor\r\n        }}\r\n        setItems={() => {}} // En este caso no se usa ya que los items se pasan como prop\r\n        placeholder={title}\r\n        style={styles.dropdown}\r\n        textStyle={textStyles}\r\n        dropDownContainerStyle={styles.dropdownContainer}\r\n        searchable={searchable}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginLeft: '5%',\r\n    marginTop: '4%',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  dropdown: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    width: '90%',\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n  },\r\n  dropdownTextDesktop: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    color: Colors.blanco,\r\n  },\r\n  dropdownTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    color: Colors.blanco,\r\n  },\r\n  dropdownContainer: {\r\n    borderColor: Colors.azul_Suave,\r\n    backgroundColor: Colors.azul_Claro,\r\n    width: '90%',\r\n  },\r\n});\r\n\r\nexport default CustomDropdown;\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface ModalProductsDates {\r\n    id_producto: string;\r\n    isAddProducto: boolean;\r\n    isModificarProducto: boolean;\r\n    fileEditable: boolean;\r\n    isAddProductoShowProveedoresTiendas: boolean;\r\n    isAddProductoShowProveedores: boolean;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface ModalProductsDatesContextType {\r\n  modalProductsDates: ModalProductsDates | null;\r\n  setModalProductsDates: (modalProductsDates: ModalProductsDates | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst ModalProductsDatesContext = createContext<ModalProductsDatesContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const ModalProductsDatesProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [modalProductsDates, setModalProductsDates] = useState<ModalProductsDates | null>(null);\r\n\r\n  return (\r\n    <ModalProductsDatesContext.Provider value={{ modalProductsDates: modalProductsDates, setModalProductsDates: setModalProductsDates }}>\r\n      {children}\r\n    </ModalProductsDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useModalProductsDates = () => {\r\n  const context = React.useContext(ModalProductsDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useModalProductsDates debe usarse dentro de un ModalProductsDates');\r\n  }\r\n  return context;\r\n};","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Producto } from '../components/MyDateTableProductos';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortProductos {\r\n  items: Producto[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortProductosContextType {\r\n  sortProductos: SortProductos | null;\r\n  setSortProductos: (sortProductos: SortProductos | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortProductosContext = createContext<SortProductosContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortProductosProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortProductos, setSortProductos] = useState<SortProductos | null>(null);\r\n\r\n  return (\r\n    <SortProductosContext.Provider value={{ sortProductos: sortProductos, setSortProductos: setSortProductos }}>\r\n      {children}\r\n    </SortProductosContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortProductos = () => {\r\n  const context = React.useContext(SortProductosContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortProductos debe usarse dentro de un SortProductos');\r\n  }\r\n  return context;\r\n};","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\nexport interface RolPermiso{\r\n    id_permiso: string,\r\n    tiene: boolean\r\n}\r\n\r\n// Optener todos los roles\r\nexport const getAllRol = async (token: string) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Rol`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener todos los roles: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Optener toos los permisos de un usuario en específico\r\nexport const getPermisosOfRol = async (token: string, id_rol: string) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Rol_permiso/getPermisosbyRol/${id_rol}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          },\r\n        }\r\n      );\r\n  \r\n      return response.data as RolPermiso[];\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error al obtener datos de los productos por el rol: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Saver si un rol en especifico tiene hhavilitado un permiso en específico\r\n  export const isPermiso = async (token: string, id_permiso: string, id_usuario: string) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Usuario/tiene_permiso/${id_usuario}/${id_permiso}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          },\r\n        }\r\n      );\r\n      \r\n      return response.data.tiene;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error al obtener datos de los permisos: \", error);\r\n      return false;\r\n    }\r\n  };","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener Todos los datos de las tiendas\r\nexport const getAllTiendas = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Tienda`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de las tiendas: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar tienda\r\nexport const addTienda = async (\r\n  token: string,\r\n  nombre: string,\r\n  direccion: string,\r\n  comicion: string,\r\n  hora_apertura: string,\r\n  hora_cierre: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Tienda/createTienda`,\r\n      {\r\n        nombre: nombre,\r\n        direccion: direccion,\r\n        comicion: comicion,\r\n        hora_apertura: hora_apertura,\r\n        hora_cierre: hora_cierre\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar la tienda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Realizar venta\r\nexport const tienda_Realizarventa = async (\r\n  token: string,\r\n  id_producto: string,\r\n  id_tienda: string,\r\n  cantidadARestar: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto_tienda/realizarVenta`,\r\n      {\r\n        id_producto: id_producto,\r\n        id_tienda: id_tienda,\r\n        cantidad: cantidadARestar,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al realizar venta en producto tienda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modiciar Tienda\r\nexport const updateTienda = async (\r\n  token: string,\r\n  id_tienda: string,\r\n  nombre: string,\r\n  direccion: string,\r\n  comicion: string,\r\n  hora_apertura: string,\r\n  hora_cierre: string\r\n) => {\r\n  try {\r\n    await axios.put(\r\n      `${cerverHost}/Tienda/updateTienda/${id_tienda}`,\r\n      {\r\n        nombre: nombre,\r\n        direccion: direccion,\r\n        comicion: comicion,\r\n        hora_apertura: hora_apertura,\r\n        hora_cierre: hora_cierre\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error actualizar la tienda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Tienda\r\nexport const deleteTienda = async (token: string, id_tienda: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Tienda/deleteTienda/${id_tienda}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return true;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error eliminar la tienda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener Tienda segun su identificador\r\nexport const getTiendaById = async (token: String, id_tienda: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Tienda/${id_tienda}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener dato de la tienda en específico: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todas las tiendas en las que se encuentre un producto específico\r\nexport const getAllTiendasByProduct = async (\r\n  token: String,\r\n  id_producto: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto_tienda/getTiendas/${id_producto}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de las tiendas según el producto: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Saver si un producto en específico está en una tienda específica\r\nexport const isProductoInTienda = async (\r\n  token: String,\r\n  id_producto: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto_tiendabyID/${id_producto}/${id_tienda}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de las tiendas: \", error);\r\n    return 0;\r\n  }\r\n};\r\n\r\n// Obtener la cantidad que hay de un producto en una tienda específica\r\nexport const getCantidadProductoInTiendaEspecifica = async (\r\n  token: String,\r\n  id_producto: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto_tiendabyID/${id_producto}/${id_tienda}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data.cantidad;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener la cantidad del producto en tienda específica: \",\r\n      error\r\n    );\r\n    return 0;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener moneda\r\nexport const getValorMonedaUSD = async (token: String) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${cerverHost}/Moneda/obtener/USD`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error al obtener valor de la moneda USD: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // cambiar valor de moneda\r\nexport const cambiarValorMonedaUSD = async (token: String, valor: String) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `${cerverHost}/Moneda/cambiar/USD/${valor}`,\r\n        {\r\n          \r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\")\r\n      }\r\n      console.log(\"Error al cambiar el valor de la monea USD: \", error);\r\n      return false;\r\n    }\r\n  };","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { Producto } from \"../components/MyDateTableProductos\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\nimport { getValorMonedaUSD } from \"./MonedaService\";\r\n\r\nexport interface ExelProductoAll {\r\n  id_Producto: string;\r\n  nombre: string;\r\n  sku: string;\r\n  cantidadTotal: string;\r\n  precio: number;\r\n  almacen: number;\r\n  taller_cell: number;\r\n  taller_pc: number;\r\n  tienda: number;\r\n  cienfuegos: number;\r\n}\r\n\r\n// Obtener todos los productos\r\nexport const getAllProductos = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Producto`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n      console.log(\"Error al obtener datos de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todos los productos con el formato para mostrar\r\nexport const getAllProductosFromTable = async (token: String, page: number) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Producto/getPaginated/${page}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n      console.log(\"Error al obtener datos de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener los identificadores de todos los productos que esten en una tienda específica\r\nexport const getRelacionProductoByTienda = async (\r\n  token: String,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/producto_tienda/getProductos/${id_tienda}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de los identificadores de  productos con la tienda: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener la cantidad total de un producto en específico que hay en la empresa\r\nexport const getProductoCantidadTotal = async (\r\n  token: string,\r\n  id_Producto: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto_tienda/getCantidadTotal/${id_Producto}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data.cantidad_total;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todos los datos principales de un producto en específico\r\nexport const getProductoById = async (\r\n  token: String,\r\n  id_Producto: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Producto/${id_Producto}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos principales de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todos las imagenes segun el producto\r\nexport const getAllImagenes = async (token: String, id_Producto: string) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto/getAllimagenes/${id_Producto}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos principales de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar producto\r\nexport const addProducto = async (\r\n  token: string,\r\n  nombre: string,\r\n  Sku: string,\r\n  precio: string,\r\n  precio_empresa: string,\r\n  descripcion: string,\r\n  isFecha_Vencimiento: boolean\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/createProducto`,\r\n      {\r\n        nombre: nombre,\r\n        Sku: Sku,\r\n        precio: precio,\r\n        precio_empresa: precio_empresa,\r\n        descripcion: descripcion,\r\n        isFecha_Vencimiento: isFecha_Vencimiento\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error incertar el producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Importar Productos del Exel\r\nexport const importarDataProductos = async (token: string, path: string) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/import/excel`,\r\n      {\r\n        path: path\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error importar productos del exel: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Importar tiendas de productos en exel\r\nexport const importarDataProducto_Tiendas = async (token: string, path: string) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto_tienda/import/excel`,\r\n      {\r\n        path: path\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error importar productos_tiendas del exel: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener producto que coincida con el SKU\r\nexport const getProductoBySku = async (token: string, sku: string) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Producto/getSku/${sku}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos del producto por sku: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar entradas a un producto especifico\r\nexport const addProductoEntrada = async (\r\n  token: string,\r\n  id_tienda: number,\r\n  id_producto: number,\r\n  cantidad: number\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto_tienda/HacerEntrada`,\r\n      {\r\n        id_producto: id_producto,\r\n        id_tienda: id_tienda,\r\n        cantidad: cantidad,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error incertar el la entrada al producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar imagenes del producto producto\r\nexport const addProductoAndImagenes = async (\r\n  token: string,\r\n  id_producto: string,\r\n  imagenes: any[]\r\n) => {\r\n  console.log(id_producto, imagenes);\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/createProducto`,\r\n      {\r\n        id_producto: id_producto,\r\n        imagenes: imagenes,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error incertar el producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Costo acumulado de producto\r\nexport const updateProductoCostoAcumulado = async (\r\n  token: string,\r\n  id_producto: string,\r\n  costo_acumulado: string\r\n) => {\r\n  console.log(\"id_producto: \",id_producto);\r\n  console.log(\"costo_acumulado: \",costo_acumulado);\r\n  \r\n  try {\r\n    await axios.put(\r\n      `${cerverHost}/Producto/updateProducto/${id_producto}`,\r\n      {\r\n        costo_acumulado: costo_acumulado\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error actualizar el producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// ModiciarProducto\r\nexport const updateProducto = async (\r\n  token: string,\r\n  id_producto: string,\r\n  nombre: string,\r\n  Sku: string,\r\n  precio: string,\r\n  precio_empresa: string,\r\n  descripcion: string,\r\n  isFecha_Vencimiento: boolean\r\n) => {\r\n  try {\r\n    await axios.put(\r\n      `${cerverHost}/Producto/updateProducto/${id_producto}`,\r\n      {\r\n        nombre: nombre,\r\n        Sku: Sku,\r\n        precio: precio,\r\n        precio_empresa: precio_empresa,\r\n        descripcion: descripcion,\r\n        isFecha_Vencimiento: isFecha_Vencimiento\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error actualizar el producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar producto tienda\r\nexport const updateProductoTienda = async (\r\n  token: string,\r\n  id_producto: string,\r\n  id_tienda: string,\r\n  cantidad: string\r\n) => {\r\n  try {\r\n    await axios.put(\r\n      `${cerverHost}/Producto_tienda/updateProducto_tienda`,\r\n      {\r\n        id_producto: id_producto,\r\n        id_tienda: id_tienda,\r\n        cantidad: cantidad\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error actualizar el producto_tienda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar relación al producto de la tienda a la hora de hacer la entrada\r\nexport const createProductoInTienda = async (\r\n  token: string,\r\n  id_producto: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    await axios.post(\r\n      `${cerverHost}/Producto/agregar/Tienda`,\r\n      {\r\n        id_tienda: id_tienda,\r\n        id_producto: id_producto,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\r\n      \"Error crear la relación con la tienda en el producto: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Producto\r\nexport const deleteProducto = async (token: string, id_producto: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Producto/deleteProducto/${id_producto}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return true;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos principales de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Producto\r\nexport const deleteFromProductoTiendaIn_0 = async (token: string) => {\r\n  try {\r\n    const response2 = await axios.delete(\r\n      `${cerverHost}/Producto_tienda/DeleteAllTiendas/inProducto`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Producto_tienda/delete/in0`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return true;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al eliminar en productos en 0: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar productos\r\nexport const filterProducts = async (\r\n  token: string,\r\n  nombre: string,\r\n  sku: string,\r\n  precio_liminf: string,\r\n  precio_limsup: string,\r\n  cantidad: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/api/filtrar`,\r\n      {\r\n        nombre: nombre || \"\",\r\n        sku: sku || \"\",\r\n        precio_liminf: precio_liminf || \"\",\r\n        precio_limsup: precio_limsup || \"\",\r\n        cantidad: (cantidad === \"0\")? 0 : parseInt(cantidad),\r\n        id_tienda: id_tienda || null,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos principales de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar productos_tienda\r\nexport const filterProductsEnTienda = async (\r\n  token: string,\r\n  nombre: string,\r\n  sku: string,\r\n  precio_liminf: string,\r\n  precio_limsup: string,\r\n  cantidad: string,\r\n  id_tienda: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto_tienda/api/filtrar`,\r\n      {\r\n        nombre: nombre || \"\",\r\n        sku: sku || \"\",\r\n        precio_liminf: precio_liminf || \"\",\r\n        precio_limsup: precio_limsup || \"\",\r\n        cantidad: (cantidad === \"0\")? 0 : parseInt(cantidad),\r\n        id_tienda: parseInt(id_tienda),\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener datos principales de los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar productos\r\nexport const ordenarProducts = async (\r\n  token: string,\r\n  items: Producto[],\r\n  criterio: string,\r\n  ascendente: boolean\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar los productos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Mover producto\r\nexport const moverProducto = async (\r\n  token: String,\r\n  id_producto: string,\r\n  id_tienda_origen: string,\r\n  id_tienda_destino: string,\r\n  cantidad: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto_tienda/MoverProducto_tienda`,\r\n      {\r\n        id_producto: id_producto,\r\n        id_tienda_origen: id_tienda_origen,\r\n        id_tienda_destino: id_tienda_destino,\r\n        cantidad: cantidad,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al mover el producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Expedir docuemnto exel en my tienda\r\nexport const expedirExelProductosEnMyTienda = async (token: string, productos: Producto[]) => {\r\n  try {\r\n    // Crear formato para la tabla del exel\r\n    interface ExelTable{\r\n      sku: string;\r\n      nombre: string;\r\n      precioUSD: string;\r\n      precioCUP: string;\r\n      precioEmpresaCUP: string;\r\n      cantidad: string;\r\n    }\r\n\r\n    const valormoneda = await getValorMonedaUSD(token);\r\n    \r\n    const formatExel: ExelTable[] = productos.map((producto) => ({\r\n      sku: producto.sku,\r\n      nombre: producto.nombre,\r\n      precioUSD: producto.precioUSD,\r\n      precioCUP: (parseFloat(producto.precioUSD) * valormoneda).toFixed(2), // Convierte a string con dos decimales\r\n      precioEmpresaCUP: producto.precioEmpresaUSD ?? \"0\",\r\n      cantidad: producto.cantidadTotal ?? \"0\",\r\n    }));\r\n\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/to/excel`,\r\n      { productos: formatExel },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n        responseType: 'blob', // Esto asegura que la respuesta sea un Blob\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al crear excel: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Expedir docuemnto exel de todos los productos\r\n// NOTA: Este método solo funciona con las tiendas: (Almacén, Taller Cell, Taller PC, Tienda) ya que son las que se requieren en el model específico\r\nexport const expedirExelProductos = async (token: string, productos: ExelProductoAll[]) => {\r\n  try {\r\n    // Crear formato para la tabla del exel\r\n    interface ExelTable{\r\n      Sku: string;\r\n      Nombre: string;\r\n      Existencia: string;\r\n      Precio: number;\r\n      Almacén: number;\r\n      \"Taller Cell\": number;\r\n      \"Taller PC\": number;\r\n      Tienda: number;\r\n      Cienfuegos: number;\r\n    }\r\n\r\n    const formatExel: ExelTable[] = productos.map((producto) => ({\r\n      Sku: producto.sku,\r\n      Nombre: producto.nombre,\r\n      Existencia: producto.cantidadTotal ?? \"0\",\r\n      Precio: producto.precio? producto.precio : 0, // Convierte a string con dos decimales\r\n      Almacén: producto.almacen? producto.almacen : 0,\r\n      \"Taller Cell\":producto.taller_cell? producto.taller_cell : 0,\r\n      \"Taller PC\": producto.taller_pc? producto.taller_pc : 0,\r\n      Tienda: producto.tienda? producto.tienda : 0,\r\n      Cienfuegos: producto.cienfuegos? producto.cienfuegos : 0\r\n    }));\r\n\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/to/excel`,\r\n      { productos: formatExel },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n        responseType: 'blob', // Esto asegura que la respuesta sea un Blob\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al crear excel: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Expedir docuemnto exel con columnas especificas\r\nexport const expedirExelProductosConColumnas = async (token: string, columnas: string[], productos: any[]) => {\r\n  // productos: any[], columnas: String[]\r\n  try {\r\n    const columnsasxd: any = ([\"id del producto\", \"nombre\", \"precio\"]);\r\n    const pepe: any = ([\r\n      { \"id del producto\": \"1\", nombre: \"Pepe\", precio: \"12\"},\r\n      { \"id del producto\": \"1\", nombre: \"Pepe\", precio: \"12\"},\r\n      { \"id del producto\": \"1\", nombre: \"Pepe\", precio: \"12\"},\r\n      { \"id del producto\": \"1\", nombre: \"Pepe\", precio: \"12\"},\r\n    ]);\r\n    const response = await axios.post(\r\n      `${cerverHost}/Producto/to/excelwithcolumns`,\r\n      { \r\n        productos: productos,\r\n        columns: columnas\r\n       },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n        responseType: 'blob', // Esto asegura que la respuesta sea un Blob\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al crear excel: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\r\nimport { Colors } from '../styles/Colors';\r\n\r\ninterface DropdownProps {\r\n  value: string;\r\n  setValue: (value: string) => void;\r\n  placeholder: string;\r\n  items: { label: string; value: string }[];\r\n  onDropdownOpen?: () => void; // Agregar el prop\r\n}\r\n\r\nconst CustomDropDownPikerFromMover: React.FC<DropdownProps> = ({\r\n  value,\r\n  setValue,\r\n  items,\r\n  placeholder: title,\r\n  onDropdownOpen, // Añadir el prop a los parámetros\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const { width } = useWindowDimensions();\r\n\r\n  useEffect(() => {\r\n    if (open && onDropdownOpen) {\r\n      onDropdownOpen(); // Llama a la función cuando el dropdown se abre\r\n    }\r\n  }, [open, onDropdownOpen]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <DropDownPicker\r\n        open={open}\r\n        value={value}\r\n        items={items}\r\n        setOpen={setOpen}\r\n        setValue={setValue}\r\n        setItems={() => {}}\r\n        placeholder={title}\r\n        style={styles.dropdown}\r\n        dropDownContainerStyle={styles.dropdownContainer}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    width: '90%',\r\n  },\r\n  dropdown: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    width: '90%',\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n  },\r\n  dropdownContainer: {\r\n    borderColor: Colors.azul_Suave,\r\n    backgroundColor: Colors.azul_Claro,\r\n    width: '90%',\r\n  },\r\n});\r\n\r\nexport default CustomDropDownPikerFromMover;\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Aux para agregar imagen\r\n  export const crearimagenUnProducto = async (token: string, selectedImages: any, nameImagen:string) => {\r\n    try {\r\n        const response = await axios.post(\r\n          `${cerverHost}/Imagen/createImagen`,\r\n          {\r\n            url: nameImagen,\r\n            uri: selectedImages,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `${token}`,\r\n            },\r\n          }\r\n        );\r\n        return response.data;\r\n      } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n          navigate(\"Login\")\r\n        }\r\n        console.log(`Error al guardar imagenes en los archivos ${error}`)\r\n        return false;\r\n      }\r\n  };\r\n\r\n  // Obtener datos de la imagen pro el id\r\n  export const getImagenById = async (token: string, id_imagen: string) => {\r\n    try {\r\n        const response = await axios.get(\r\n          `${cerverHost}/Imagen/${id_imagen}`,\r\n          {\r\n            headers: {\r\n              Authorization: `${token}`,\r\n            },\r\n          }\r\n        );\r\n        return response.data;\r\n      } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n          navigate(\"Login\")\r\n        }\r\n        alert(`Error al obtener imagen ${error}`)\r\n        return false;\r\n      }\r\n  };\r\n\r\n  // Axu para eliminar imagen\r\n  export const deleteImagenByProducto = async (token: string, id_imagen: string, nameImagen:string) => {\r\n    try {\r\n        const response = await axios.delete(\r\n          `${cerverHost}/Imagen/deleteImagen/${id_imagen}/${nameImagen}`,\r\n          {\r\n            headers: {\r\n              Authorization: `${token}`,\r\n            },\r\n          }\r\n        );\r\n        return response.data;\r\n      } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n          navigate(\"Login\")\r\n        }\r\n        alert(`Error al eliminar la imagenes en los archivos ${error}`)\r\n        return false;\r\n      }\r\n  };","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { Movimiento } from \"../components/MyDateTableMovimientos\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todos los movimientos\r\nexport const getAllMovimientos = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Salida`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al obtener todos los datos de los movimientos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Movimiento\r\nexport const addNewMovimiento = async (\r\n  token: String,\r\n  fecha: string,\r\n  id_tienda_origen: string,\r\n  id_tienda_destino: string,\r\n  cantidad: string,\r\n  id_producto: string,\r\n  id_usuario: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Salida/createSalida`,\r\n      {\r\n        fecha: fecha,\r\n        cantidad: cantidad,\r\n        producto: id_producto,\r\n        tienda_origen: id_tienda_origen,\r\n        tienda_destino: id_tienda_destino,\r\n        usuario: id_usuario,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al crear la salida del producto: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener datos de movimiento por id\r\nexport const getMovimientoById = async (\r\n  token: String,\r\n  id_movimiento: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Salida/${id_movimiento}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al obtener datos del movimiento en específico: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Actualizar movimiento\r\nexport const updateMovimiento = async (\r\n  token: String,\r\n  id_movimiento: string,\r\n  fecha: string,\r\n  id_tienda_origen: string,\r\n  id_tienda_destino: string,\r\n  cantidad: string,\r\n  id_producto: string,\r\n  id_usuario: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Salida/updateSalida/${id_movimiento}`,\r\n      {\r\n        fecha: fecha,\r\n        cantidad: cantidad,\r\n        producto: id_producto,\r\n        tienda_origen: id_tienda_origen,\r\n        tienda_destino: id_tienda_destino,\r\n        usuario: id_usuario,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al actualizar datos del movimiento: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar movimiento\r\nexport const deleteMovimiento = async (\r\n  token: String,\r\n  id_movimiento: string,\r\n) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Salida/deleteSalida/${id_movimiento}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al eliminar el movimiento: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar Movimiento\r\nexport const filtrarMovimientos = async (\r\n  token: String,\r\n  nombreUsuario: string,\r\n  nombreProducto: string,\r\n  cantidad: string,\r\n  fechaDesde: string,\r\n  fechaHasta: string,\r\n  tiendaOrigen: string,\r\n  tiendaDestino: string\r\n) => {\r\n  console.log(tiendaOrigen, tiendaDestino);\r\n  \r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Salida/api/filtrar`,\r\n      {\r\n        nombre_usuario: nombreUsuario ?? null,\r\n        nombre_producto: nombreProducto ?? null,\r\n        cantidad: parseInt(cantidad) ?? null,\r\n        fecha_liminf: fechaDesde ?? null,\r\n        fecha_limsup: fechaHasta ?? null,\r\n        id_tienda_origen: tiendaOrigen ?? null,\r\n        id_tienda_destino: tiendaDestino ?? null,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrar movimientos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar movimientos especial\r\nexport const filtrarMovimientosEspecial = async (\r\n  token: String,\r\n  nombreUsuario: string,\r\n  nombreProducto: string,\r\n  cantidad: string,\r\n  fechaDesde: string,\r\n  fechaHasta: string,\r\n  tiendaUsuario: string,\r\n  tienda_origen: string,\r\n  tienda_destino: string\r\n) => {\r\n  console.log(\r\n    \"NombreUsuario: \",nombreUsuario,\r\n    \"NombreProducto: \",nombreProducto,\r\n    \"Cantidad: \",cantidad,\r\n    \"fechaDesde: \",fechaDesde,\r\n    \"fechaHasta: \",fechaHasta,\r\n    \"TiendaUsuario: \",tiendaUsuario,\r\n    \"TiendaOr: \",tienda_origen,\r\n    \"tiendaDes: \",tienda_destino\r\n  );\r\n  \r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Salida/api/filtrarJT`,\r\n      {\r\n        nombre_usuario: nombreUsuario ?? null,\r\n        nombre_producto: nombreProducto ?? null,\r\n        cantidad: parseInt(cantidad) ?? null,\r\n        fecha_liminf: fechaDesde ?? null,\r\n        fecha_limsup: fechaHasta ?? null,\r\n        id_tienda: tiendaUsuario ?? null,\r\n        id_tienda_origen: tienda_origen ?? null,\r\n        id_tienda_destino: tienda_destino ?? null\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrarEspecial movimientos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar movimientos\r\nexport const ordenarMovimientos = async (token: string, items: Movimiento[], criterio: string, ascendente: boolean) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Salida/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar las entradas: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import React, { createContext, useState, ReactNode } from \"react\";\r\n\r\n// Define la interfaz del Usuario\r\nexport interface PaginadoProductos {\r\n  page: number;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface PaginadoProductosContextType {\r\n  paginadoProductos: PaginadoProductos;\r\n  setPaginadoProductos: (paginadoProductos: PaginadoProductos) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst PaginadoProductosContext = createContext<\r\n  PaginadoProductosContextType | undefined\r\n>(undefined);\r\n\r\n// Define el proveedor\r\nexport const PaginadoProductosProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [paginadoProductos, setPaginadoProductos] = useState<PaginadoProductos>({\r\n    page: 1, // Valor por defecto\r\n  });\r\n\r\n  return (\r\n    <PaginadoProductosContext.Provider\r\n      value={{\r\n        paginadoProductos: paginadoProductos,\r\n        setPaginadoProductos: setPaginadoProductos,\r\n      }}\r\n    >\r\n      {children}\r\n    </PaginadoProductosContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const usePaginadoProductos = () => {\r\n  const context = React.useContext(PaginadoProductosContext);\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      \"usePaginadoProductos debe usarse dentro de un PaginadoProductos\"\r\n    );\r\n  }\r\n  return context;\r\n};\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useModalProductsDates } from \"../contexts/AuxiliarContextFromModalProductsDates\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n  isProductoInTienda,\r\n} from \"../services/TiendaServices\";\r\nimport {\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  deleteProducto,\r\n  getProductoCantidadTotal,\r\n  getProductoById,\r\n  getRelacionProductoByTienda,\r\n  moverProducto,\r\n} from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { TiendaPiker } from \"./MyDateTableTiendas\";\r\nimport CustomDropDownPikerFromMover from \"./CustomDropDownPikerFromMover\";\r\nimport { useImagenesDelete } from \"../contexts/DeleteImagenContext\";\r\nimport { deleteImagenByProducto } from \"../services/ImageServices\";\r\nimport { addNewMovimiento } from \"../services/MovimientosServices\";\r\nimport { getProveedorById } from \"../services/ProveedorServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport { usePaginadoProductos } from \"../contexts/AuxiliarContextPaginadoproductos\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport interface Producto {\r\n  id_Producto: string;\r\n  nombre: string;\r\n  sku: string;\r\n  cantidadTotal: string;\r\n  precioUSD: string;\r\n  precioEmpresaUSD?: string;\r\n  tieneOpciones?: boolean;\r\n}\r\n\r\nexport interface ProductoPiker {\r\n  label: string;\r\n  value: string;\r\n}\r\ninterface Props {\r\n  items: Producto[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableProveedorModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n  imtemsLength: number;\r\n}\r\n\r\nexport const MyDateTableProductos: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n  imtemsLength: itemsLength\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalProductsDates, setModalProductsDates } = useModalProductsDates();\r\n  const { sortProductos, setSortProductos } = useSortProductos();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { paginadoProductos, setPaginadoProductos } = usePaginadoProductos();\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Producto[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMesajeMoverVisible, setModalMesajeMoverVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [isRefleshView, setRefleshView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendaMoverDesde, setTiendaMoverDesde] = React.useState(\"\");\r\n  const [tiendaMoverHasta, setTiendaMoverHasta] = React.useState(\"\");\r\n  const [nombreTiendaUsuarioActual, setNombreTiendaUsuarioActual] =\r\n    React.useState(\"\");\r\n  const [cantidadTiendaUsuarioActual, setCantidadTiendaUsuarioActual] =\r\n    React.useState(\"\");\r\n  const [tiendasByProductoDesde, setTiendasByProductoDesde] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [tiendasByProductoHasta, setTiendasByProductoHasta] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [tiendaNombreEspecificaHasta, setTiendaNombreEspecificoHasta] =\r\n    React.useState(\"\");\r\n  const [tiendaNombreEspecificaDesde, setTiendaNombreEspecificoDesde] =\r\n    React.useState(\"\");\r\n\r\n  // Función para mover los productos\r\n  const moverProductoFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    if (usuario?.token) {\r\n      await moverProducto(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto\r\n      );\r\n      const currentDate = new Date();\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n      await addNewMovimiento(\r\n        usuario.token,\r\n        `${month}-${day}-${year}`,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto,\r\n        idProductoOption,\r\n        usuario.id_usuario\r\n      );\r\n\r\n      await createProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverHasta\r\n      );\r\n\r\n      // Agregar Acción de usuario mover producto\r\n      \r\n      let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} movió ${cantidadMoverProducto} de ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} hasta la tienda ${tiendaNombreEspecificaHasta}`;\r\n      await addAccionUsuario(\r\n        usuario.token,\r\n        auxAddAccionUsuarioDescripcion,\r\n        `${year}-${month}-${day}`,\r\n        usuario.id_usuario,\r\n        1\r\n      );\r\n      \r\n\r\n      setModalMensaje(\r\n        `Se movieron ${cantidadMoverProducto} de ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}`\r\n      );\r\n      setModalMesajeMoverVisible(false);\r\n      setRefleshView(true);\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  // Función para validar los campos al mover\r\n  const moverProdcutoFunctionValidarCampos = async () => {\r\n    let flag: boolean = true;\r\n    let validarCampos: string = \"Error. Compruebe los siguientes parámetros:\\n\";\r\n    let cantidadDelProductoEnLaTiendaDesde: number = 0;\r\n    // Obtener cantidad del producto en la tienda especifica desde dodne se quiere mover\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverDesde\r\n      );\r\n      if (result.encontrado) {\r\n        cantidadDelProductoEnLaTiendaDesde = parseInt(result.cantidad);\r\n      }\r\n    }\r\n    if (tiendaMoverDesde === tiendaMoverHasta) {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La tienda origen no puede ser igual a la tienda destino.\\n\";\r\n    }\r\n    if (cantidadMoverProducto === \"0\") {\r\n      flag = false;\r\n      validarCampos += \"-La cantidad a mover debe ser mayor a 0.\\n\"\r\n    }\r\n    if (cantidadMoverProducto === \"\") {\r\n      flag = false;\r\n      validarCampos += \"-La cantidad a mover no puede ser vacio.\\n\";\r\n    } else if (\r\n      parseInt(cantidadMoverProducto) > cantidadDelProductoEnLaTiendaDesde\r\n    ) {\r\n      // Comprobar que la cantidad que se desea mover no es mayor que la cantidad que existe en la tienda\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La cantidad a mover es mayor que la cantidad que existe en la tienda.\\n\";\r\n    }\r\n    if (isPermisoOpcionesDeCeldaMoverGeneral && tiendaMoverDesde === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija la tienda desde la que decea hacer el movimiento.\\n\";\r\n    }\r\n    if (tiendaMoverHasta === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija una tienda a la que desea hacer el movimiento.\\n\";\r\n    }\r\n\r\n    if (flag) {\r\n      const tiendaEspecificaHasta = tiendasByProductoHasta.find(\r\n        (tienda) => tienda.value === tiendaMoverHasta\r\n      );\r\n      setTiendaNombreEspecificoHasta(String(tiendaEspecificaHasta?.label));\r\n      const tiendaEspecificaDesde = tiendasByProductoDesde.find(\r\n        (tienda) => tienda.value === tiendaMoverDesde\r\n      );\r\n      setTiendaNombreEspecificoDesde(String(tiendaEspecificaDesde?.label));\r\n      setModalMoverVisible(false);\r\n      setModalMesajeMoverVisible(true);\r\n    } else {\r\n      setModalMensaje(validarCampos);\r\n      setRefleshView(false);\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  // Cargar datos de las tiendas para mover un producto\r\n  const cargarDatosTiendaParaMover = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n      const resultTiendas = await getAllTiendasByProduct(\r\n        usuario.token,\r\n        idProductoOption\r\n      );\r\n\r\n      if (\r\n        result &&\r\n        Array.isArray(result.data) &&\r\n        resultTiendas !== false &&\r\n        Array.isArray(resultTiendas)\r\n      ) {\r\n        const allTiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n        let auxIdTiendas: string[] = [];\r\n        let auxDataTiendasProducto: TiendaPiker[] = [];\r\n        resultTiendas.forEach(async (element) => {\r\n          // Filtrar productos que esten en la tienda pero que no esten en 0\r\n          if (parseInt(element.cantidad) > 0) {\r\n            auxIdTiendas.push(element.id_tienda);\r\n          }\r\n        });\r\n        for (let element of auxIdTiendas) {\r\n          let item: TiendaPiker = { value: \"\", label: \"\" };\r\n          const datosTendaExisteProducto = await getTiendaById(\r\n            usuario.token,\r\n            element\r\n          );\r\n          item.label = datosTendaExisteProducto.nombre;\r\n          item.value = element;\r\n          auxDataTiendasProducto.push(item);\r\n        }\r\n\r\n        // Verificar si el valor existe en auxDataTiendasProducto\r\n        let existeTienda: boolean = false;\r\n\r\n        existeTienda = auxDataTiendasProducto.some((tienda) => {\r\n          tienda.value === usuario.id_tienda;\r\n        });\r\n\r\n        for (let index = 0; index < auxDataTiendasProducto.length; index++) {\r\n          if (auxDataTiendasProducto[index].value === usuario.id_tienda) {\r\n            existeTienda = true;\r\n          }\r\n        }\r\n        \r\n        if (existeTienda) {\r\n          // Agregar un valor si es que la tienda del usuario es la desde\r\n          setTiendaMoverDesde(usuario.id_tienda)\r\n        }\r\n        if (!isPermisoOpcionesDeCeldaMoverGeneral) {\r\n          setTiendaMoverDesde(usuario.id_tienda);\r\n        }\r\n\r\n        setTiendasByProductoDesde(auxDataTiendasProducto);\r\n        setTiendasByProductoHasta(allTiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const cargarVariablesMover = async () => {\r\n    if (usuario?.token) {\r\n      const resultTienda = await getTiendaById(usuario.token, tiendaMoverDesde);\r\n      const resultCantidadEnTienda = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverDesde\r\n      );\r\n\r\n      setCantidadTiendaUsuarioActual(resultCantidadEnTienda.cantidad);\r\n      setNombreTiendaUsuarioActual(resultTienda.nombre);\r\n    }\r\n  };\r\n  // Controlar las variables que se muestran en el modal de mover\r\n  React.useEffect(() => {\r\n    cargarVariablesMover();\r\n  }, [tiendaMoverDesde]);\r\n\r\n  const detailsModalView = (id_producto: string) => {\r\n    setModalProductsDates({\r\n      id_producto: id_producto,\r\n      isAddProducto: true,\r\n      fileEditable: false,\r\n      isModificarProducto: false,\r\n      isAddProductoShowProveedoresTiendas: true,\r\n      isAddProductoShowProveedores: true,\r\n    });\r\n  };\r\n\r\n  // Controlar el doble clic del boton\r\n    const [isButtonDisabled, setIsButtonDisabled] = React.useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  const resultadoCondicionalOpcionesDeCelda = (item: Producto) => {\r\n    if (usuario?.id_rol) {\r\n      return (usuario.id_rol == \"1\" && isPermisoOpcionesDeCelda) ||\r\n        (usuario.id_rol == \"2\" && isPermisoOpcionesDeCelda)\r\n        ? true\r\n        : item.tieneOpciones && isPermisoOpcionesDeCelda\r\n        ? true\r\n        : false;\r\n    }\r\n  };\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // cargar datos de moneda\r\n        setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, itemsLength);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < itemsLength) {\r\n    setPage(newPage); // Cambia de página si es válido\r\n    setPaginadoProductos({ page: newPage }); // Cambia el estado\r\n    }\r\n  };\r\n\r\n  const sortProductosAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"USD\" || column === \"CUP\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Cantidad\") {\r\n      aux = \"option5\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortProductos({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n            </Text>\r\n            {(column === \"USD\" ||\r\n              column === \"Nombre\" ||\r\n              column === \"CUP\" ||\r\n              column === \"Cantidad\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortProductosAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idProductoOption, setIdProductoOption] = React.useState(\"\");\r\n  const [nombreProductoOption, setNombreProductoOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = async (id_producto: string) => {\r\n    // Capturar el id del producto que se está abriendo las opciones\r\n    setIdProductoOption(id_producto);\r\n    // Capturar el nombre del producto que se está abriendo las opciones\r\n    if (usuario?.token) {\r\n      const auxNombreProducto = await getProductoById(\r\n        usuario.token,\r\n        id_producto\r\n      );\r\n      if (auxNombreProducto) {\r\n        setNombreProductoOption(auxNombreProducto.nombre);\r\n      }\r\n    }\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalProductsDates({\r\n        id_producto: idProductoOption,\r\n        isAddProducto: true,\r\n        fileEditable: true,\r\n        isModificarProducto: true,\r\n        isAddProductoShowProveedoresTiendas: true,\r\n        isAddProductoShowProveedores: true,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      // Cargar tiendas para mover el producto\r\n      cargarDatosTiendaParaMover();\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    // Eliminar las imagenes del producto\r\n    if (usuario?.token) {\r\n      const result = await getProductoById(\r\n        usuario.token,\r\n        idProductoOption\r\n      );\r\n      if (result) {\r\n        for (let imagen of result.imagenes) {\r\n          if (imagen.id_imagen && imagen.url) {\r\n            await deleteImagenByProducto(\r\n              usuario?.token,\r\n              imagen.id_imagen,\r\n              imagen.url.substring(1, imagen.url.length)\r\n            );\r\n          } else {\r\n            console.log(\"Error en comprobar el id o el uri de la imagen\");\r\n          }\r\n        }\r\n      }\r\n      // Eliminar producto\r\n      const aux = await deleteProductoById();\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n      if (aux) {\r\n        const nuevosProductos = displayedItems.filter(\r\n          (producto) => producto.id_Producto !== idProductoOption\r\n        );\r\n\r\n        // Agregar Acción de usuario eliminar producto\r\n        \r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó el producto ${nombreProductoOption}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          1\r\n        );\r\n        \r\n\r\n        setDisplayedItems(nuevosProductos);\r\n        setModalMensaje(\"Producto eliminado con éxito\");\r\n        setModalMensajeView(true);\r\n      } else {\r\n        setModalMensaje(\r\n          \"ERROR AL ELIMINAR: Ya se han hecho operaciones con el producto o ya está en una tienda\"\r\n        );\r\n        setRefleshView(false);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      await deleteFromProductoTiendaIn_0(usuario.token);\r\n      const auxDelete = await deleteProducto(usuario.token, idProductoOption);\r\n      if (auxDelete) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"180%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Producto}\r\n                onPress={() => detailsModalView(item.id_Producto)}\r\n                style={{ justifyContent: \"space-around\" }}\r\n              >\r\n                <DataTable.Cell style={styles.handerRowMovil}>\r\n                  {item.sku}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell style={styles.handerRowMovil}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRowMovil}>\r\n                  {item.precioUSD}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRowMovil}>\r\n                  {(parseFloat(item.precioUSD) * cambioMoneda).toFixed(2)}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRowMovil}>\r\n                  <Text>{item.cantidadTotal} </Text>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    flex: 0.5,\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  {resultadoCondicionalOpcionesDeCelda(item) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        borderRadius: 12,\r\n                        height: \"50%\",\r\n                        width: \"70%\", // Ajustar tamaño del botón\r\n                        shadowColor: Colors.azul_Oscuro,\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6,\r\n                        shadowRadius: 14,\r\n                        marginRight: \"100%\",\r\n                      }}\r\n                      onPressIn={onPressIn}\r\n                      onPressOut={onPressOut}\r\n                      onPress={() => toggleModal(item.id_Producto)}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/option.png\")}\r\n                        style={{ width: \"70%\", height: \"70%\" }}\r\n                      />\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idProductoOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                      disabled={isButtonDisabled}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {tiendaMoverDesde === \"\"\r\n                    ? \"Seleccione una tienda origen\"\r\n                    : `Mover Producto \"${nombreProductoOption}\" en la Tienda\\n ${nombreTiendaUsuarioActual} con una cantidad de ${cantidadTiendaUsuarioActual}`}\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                      <CustomDropDownPikerFromMover\r\n                        value={tiendaMoverDesde}\r\n                        items={tiendasByProductoDesde}\r\n                        placeholder=\"Tienda desde donde se quiere mover\"\r\n                        setValue={setTiendaMoverDesde}\r\n                      />\r\n                    )}\r\n                    <CustomDropDownPikerFromMover\r\n                      value={tiendaMoverHasta}\r\n                      items={tiendasByProductoHasta}\r\n                      placeholder=\"Tienda a la que se quiere mover\"\r\n                      setValue={setTiendaMoverHasta}\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      marginTop: 150,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n            {/* Modal mensaje para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMesajeMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 450,\r\n                    height: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {`Desea mover ${cantidadMoverProducto} producto ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}?`}\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => moverProductoFunction()}\r\n                      disabled={isButtonDisabled}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                      <CustomDropDownPikerFromMover\r\n                        value={tiendaMoverDesde}\r\n                        items={tiendasByProductoDesde}\r\n                        placeholder=\"Tienda desde donde se quiere mover\"\r\n                        setValue={setTiendaMoverDesde}\r\n                      />\r\n                    )}\r\n                    <CustomDropDownPikerFromMover\r\n                      value={tiendaMoverHasta}\r\n                      items={tiendasByProductoHasta}\r\n                      placeholder=\"Tienda a la que se quiere mover\"\r\n                      setValue={setTiendaMoverHasta}\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      marginTop: 150,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  itemsLength\r\n                )} de ${itemsLength}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= itemsLength &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= itemsLength} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Producto}\r\n                onPress={() => detailsModalView(item.id_Producto)}\r\n              >\r\n                <DataTable.Cell style={styles.handerRowDesktop}>\r\n                  {item.sku}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell style={styles.handerRowDesktop}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRowDesktop}>\r\n                  {item.precioUSD}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRowDesktop}>\r\n                  {(parseFloat(item.precioUSD) * cambioMoneda).toFixed(2)}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    flex: 1.5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      marginRight: \"13%\",\r\n                    }}\r\n                  >\r\n                    {item.cantidadTotal}{\" \"}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    flex: 0.5,\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  {resultadoCondicionalOpcionesDeCelda(item) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        borderRadius: 12,\r\n                        height: \"60%\",\r\n                        width: \"80%\", // Ajustar tamaño del botón\r\n                        shadowColor: Colors.azul_Oscuro,\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6,\r\n                        shadowRadius: 14,\r\n                        marginRight: \"100%\",\r\n                      }}\r\n                      onPressIn={onPressIn}\r\n                      onPressOut={onPressOut}\r\n                      onPress={() => toggleModal(item.id_Producto)}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/option.png\")}\r\n                        style={{ width: \"70%\", height: \"70%\" }}\r\n                      />\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalVisible}\r\n            animationType=\"fade\"\r\n            onRequestClose={() => toggleModal(\"\")}\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 250,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  Opciones\r\n                </Text>\r\n\r\n                {isPermisoOpcionesDeCeldaModificar && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Modificar\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/edit.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                      Modificar\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {isPermisoOpcionesDeCeldaEliminar && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Eliminar\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/delete.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                  isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Mover\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/mover.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\" }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {/* Botón para cerrar el modal */}\r\n                <TouchableOpacity\r\n                  onPress={() => toggleModal(\"\")}\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/* Modal para el Eliminar*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalEliminarVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 350,\r\n                  height: 200,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  ¿Estás seguro de que deseas eliminar este producto?\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\", // Espacio entre los botones\r\n                    width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => auxDeleteProductoById()}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Sí</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>No</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    setModalEliminarVisible(!isModalEliminarVisible)\r\n                  }\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n\r\n          {/* Modal para el Mover*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMoverVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 500, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {tiendaMoverDesde === \"\"\r\n                    ? \"Seleccione una tienda origen\"\r\n                    : `Mover Producto \"${nombreProductoOption}\" en la Tienda ${nombreTiendaUsuarioActual} con una cantidad de ${cantidadTiendaUsuarioActual}`}\r\n                </Text>\r\n\r\n                <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                  La cantidad que desea mover\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 50,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                    shadowRadius: 14, // Difuminado\r\n                    width: \"90%\",\r\n                    marginTop: \"2%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18, // Tamaño de letra más grande\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                    fontWeight: \"bold\", // Letra en negritas\r\n                    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Cantidad a mover\"\r\n                  value={cantidadMoverProducto}\r\n                  onChangeText={(text) => {\r\n                    const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                    setCantidadMoverProducto(numericValue);\r\n                  }}\r\n                />\r\n\r\n                <Text style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}>\r\n                  Tiendas para mover los productos\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                  {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                    <CustomDropDownPikerFromMover\r\n                      value={tiendaMoverDesde}\r\n                      items={tiendasByProductoDesde}\r\n                      placeholder=\"Tienda desde donde se quiere mover\"\r\n                      setValue={setTiendaMoverDesde}\r\n                    />\r\n                  )}\r\n                  <CustomDropDownPikerFromMover\r\n                    value={tiendaMoverHasta}\r\n                    items={tiendasByProductoHasta}\r\n                    placeholder=\"Tienda a la que se quiere mover\"\r\n                    setValue={setTiendaMoverHasta}\r\n                  />\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Claro,\r\n                    borderRadius: 15,\r\n                    marginTop: 150,\r\n                    width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                    height: 50, // Altura fija para pantallas de escritorio\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 3, height: 4 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/* Modal mensaje para el Mover*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMesajeMoverVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 450,\r\n                  height: 250,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {`Desea mover ${cantidadMoverProducto} producto ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}?`}\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\", // Espacio entre los botones\r\n                    width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => moverProductoFunction()}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Sí</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                    }\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>No</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                  }\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => {isRefleshView? navigation.replace(\"Productos\") : setModalMensajeView(!isModalMensajeView)}}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                itemsLength\r\n              )} of ${itemsLength}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= itemsLength &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= itemsLength} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRowDesktop: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  handerRowMovil: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport interface TiendaShowModal {\r\n  id_tienda: string;\r\n  nombre: string;\r\n  cantidad: string;\r\n}\r\n\r\ninterface Props {\r\n  items: TiendaShowModal[];\r\n  columns: string[];\r\n}\r\n\r\nexport const MyDateTableModalShowDatesTienda: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(3);\r\n  const [displayedItems, setDisplayedItems] = React.useState<TiendaShowModal[]>(\r\n    []\r\n  ); // Estado para los elementos mostrados\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text style={styles.headerTextDesktop}>{column}</Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerDesktop}>\r\n      <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n        <DataTable style={{ width: \"150%\" }}>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.filter((item)=>parseInt(item.cantidad) !== 0).map((item) => (\r\n            <DataTable.Row\r\n              key={item.id_tienda}\r\n              onPress={() => {}}\r\n            >\r\n              <DataTable.Cell style={styles.handerRow}>\r\n                <Text\r\n                  style={{ flexWrap: \"wrap\", width: \"100%\", textAlign: \"left\" }}\r\n                  numberOfLines={2} // Limita a 2 líneas\r\n                >\r\n                  {item.nombre}\r\n                </Text>\r\n              </DataTable.Cell>\r\n              <DataTable.Cell numeric style={styles.handerRow}>\r\n                {item.cantidad}\r\n              </DataTable.Cell>\r\n            </DataTable.Row>\r\n          ))}\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport interface ProveedoresShowModal {\r\n  id_proveedor: string;\r\n  nombre: string;\r\n  cantidad: string;\r\n  costoPorUnidad: number;\r\n}\r\n\r\ninterface Props {\r\n  items: ProveedoresShowModal[];\r\n  columns: string[];\r\n}\r\n\r\nexport const MyDateTableModalShowDateProveedores: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(3);\r\n  const [displayedItems, setDisplayedItems] = React.useState<\r\n    ProveedoresShowModal[]\r\n  >([]); // Estado para los elementos mostrados\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text style={styles.headerTextDesktop}>{column}</Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerDesktop}>\r\n      <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n        <DataTable style={{ width: \"150%\" }}>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => (\r\n            <DataTable.Row\r\n              key={item.id_proveedor}\r\n              onPress={() => {}}\r\n            >\r\n              <DataTable.Cell style={styles.handerRow}>\r\n                <Text\r\n                  style={{ flexWrap: \"wrap\", width: \"100%\", textAlign: \"left\" }}\r\n                  numberOfLines={2} // Limita a 2 líneas\r\n                >\r\n                  {item.nombre}\r\n                </Text>\r\n              </DataTable.Cell>\r\n              <DataTable.Cell numeric style={styles.handerRow}>\r\n                {item.cantidad}\r\n              </DataTable.Cell>\r\n              <DataTable.Cell numeric style={styles.handerRow}>\r\n                {item.costoPorUnidad}\r\n              </DataTable.Cell>\r\n            </DataTable.Row>\r\n          ))}\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { Entrada } from \"../components/MyDateTableEntradas\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todas las entradas\r\nexport const getAllEntradas = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Entrada`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de todas las entradas: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener una entrada especifica segun el id\r\nexport const getEntradaByID = async (token: String, id_entrada: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Entrada/${id_entrada}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de una entrada en específico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Entrada\r\nexport const addEntrada = async (\r\n  token: string,\r\n  costo: string,\r\n  cantidad: string,\r\n  fecha: string,\r\n  fecha_vencimiento: string | null,\r\n  id_proveedor: number,\r\n  id_producto: number,\r\n  id_tienda: number,\r\n  costo_cup: number\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Entrada/createEntrada`,\r\n      {\r\n        costo: costo,\r\n        cantidad: cantidad,\r\n        fecha: fecha,\r\n        costo_cup: costo_cup,\r\n        fecha_vencimiento: fecha_vencimiento,\r\n        proveedor: { id_proveedor: id_proveedor },\r\n        producto: { id_producto: id_producto },\r\n        tienda: { id_tienda: id_tienda },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar la entrada: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todas las entradas segun el id del producto\r\nexport const getAllEntradasByProductoId = async (\r\n  token: string,\r\n  id_producto: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Entrada/Producto/${id_producto}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener todos las entradas según el producto: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener todas las entradas segun el id del proveedor\r\nexport const getAllEntradasByProveedorId = async (\r\n  token: string,\r\n  id_proveedor: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Entrada/getProveedores/${id_proveedor}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener todos las entradas según el proveedor: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Entrada\r\nexport const modificarEntrada = async (\r\n  token: string,\r\n  id_entrada: string,\r\n  costo: string,\r\n  cantidad: string,\r\n  fecha: string,\r\n  fecha_vencimiento: string | null,\r\n  id_proveedor: number,\r\n  id_producto: number,\r\n  id_tienda: number,\r\n  costo_cup: number\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Entrada/updateEntrada/${id_entrada}`,\r\n      {\r\n        costo: costo,\r\n        cantidad: cantidad,\r\n        fecha: fecha,\r\n        costo_cup: costo_cup,\r\n        fecha_vencimiento: fecha_vencimiento,\r\n        proveedor: { id_proveedor: id_proveedor },\r\n        producto: { id_producto: id_producto },\r\n        tienda: { id_tienda: id_tienda },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar la entrada: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Entrada\r\nexport const deleteEntrada = async (token: string, id_entrada: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Entrada/deleteEntrada/${id_entrada}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar la entrada: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar Entradas\r\nexport const filtrarEntrada = async (\r\n  token: string,\r\n  nombre_proveedor: string,\r\n  nombre_producto: string,\r\n  costo_liminf: string,\r\n  costo_limsup: string,\r\n  fecha_liminf: string,\r\n  fecha_limsup: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Entrada/api/filtrar`,\r\n      {\r\n        nombre_producto: nombre_producto,\r\n        nombre_proveedor: nombre_proveedor,\r\n        costo_liminf: costo_liminf,\r\n        costo_limsup: costo_limsup,\r\n        fecha_liminf: fecha_liminf,\r\n        fecha_limsup: fecha_limsup,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al filtrar los datos: \", error);\r\n    return false;\r\n  }\r\n};\r\n// Ordenar entradas\r\nexport const ordenarEntradas = async (\r\n  token: string,\r\n  items: Entrada[],\r\n  criterio: string,\r\n  ascendente: boolean\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Entrada/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al ordenar las entradas: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface NavigationLost {\r\n    isOnToken: boolean;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface NavigationLostDatesContextType {\r\n  navigationLostDates: NavigationLost | null;\r\n  setNavigationLostDates: (navigationLostDates: NavigationLost | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst NavigationLostDatesContext = createContext<NavigationLostDatesContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const NavigationLostDatesProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  // Inicializa navigationLostDates con isOnToken en false\r\n  const [navigationLostDates, setNavigationLostDates] = useState<NavigationLost | null>({\r\n    isOnToken: false,\r\n  });\r\n\r\n  return (\r\n    <NavigationLostDatesContext.Provider value={{ navigationLostDates, setNavigationLostDates }}>\r\n      {children}\r\n    </NavigationLostDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useNavigationLostDates = () => {\r\n  const context = React.useContext(NavigationLostDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useNavigationLostDates debe usarse dentro de un NavigationLostDatesProvider');\r\n  }\r\n  return context;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport RadioGroup, { RadioButtonProps } from \"react-native-radio-buttons-group\";\r\nimport { Colors } from \"../styles/Colors\";\r\n\r\nconst CustomRadioButton = ({\r\n  onPress,\r\n  selected,\r\n  label,\r\n}: {\r\n  onPress: () => void;\r\n  selected: boolean;\r\n  label: string;\r\n}) => (\r\n  <TouchableOpacity\r\n    onPress={onPress}\r\n    style={[styles.radioButton, selected && styles.radioButtonSelected]}\r\n  >\r\n    <Text\r\n      style={[\r\n        styles.radioButtonText,\r\n        selected && styles.radioButtonTextSelected,\r\n      ]}\r\n    >\r\n      {label}\r\n    </Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  radioButton: {\r\n    flexDirection: \"row\",\r\n    height: 50,\r\n    width: \"45%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    borderColor: Colors.azul_Claro,\r\n    borderWidth: 3,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginHorizontal: \"2%\",\r\n    backgroundColor: Colors.azul_Suave, // Color de fondo del botón\r\n  },\r\n  radioButtonSelected: {\r\n    backgroundColor: Colors.azul_Oscuro, // Color de fondo del botón seleccionado\r\n  },\r\n  radioButtonText: {\r\n    fontSize: 16,\r\n    color: Colors.blanco, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n  },\r\n  radioButtonTextSelected: {\r\n    fontWeight: \"bold\", // Texto en negritas para el botón seleccionado\r\n    color: Colors.blanco_Suave, // Color del texto para el botón seleccionado\r\n  },\r\n  selectedText: {\r\n    marginTop: 20,\r\n    fontSize: 18,\r\n    color: \"#333\",\r\n  },\r\n});\r\n\r\nexport default CustomRadioButton;\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport compressImage from \"react-native-compressor\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport {\r\n  Producto,\r\n  MyDateTableProductos,\r\n} from \"../components/MyDateTableProductos\";\r\nimport {\r\n  addProducto,\r\n  addProductoAndImagenes,\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  ExelProductoAll,\r\n  expedirExelProductos,\r\n  filterProducts,\r\n  getProductoBySku,\r\n  getProductoCantidadTotal,\r\n  getProductoById,\r\n  getAllProductos,\r\n  importarDataProducto_Tiendas,\r\n  importarDataProductos,\r\n  ordenarProducts,\r\n  updateProducto,\r\n  getAllProductosFromTable,\r\n  expedirExelProductosConColumnas,\r\n} from \"../services/ProductoServices\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n  isProductoInTienda,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport {\r\n  launchImageLibrary,\r\n  ImagePickerResponse,\r\n  Asset,\r\n} from \"react-native-image-picker\";\r\nimport {\r\n  PanGestureHandler,\r\n  PanGestureHandlerGestureEvent,\r\n} from \"react-native-gesture-handler\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport {\r\n  MyDateTableModalShowDateProveedores,\r\n  ProveedoresShowModal,\r\n} from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { useModalProductsDates } from \"../contexts/AuxiliarContextFromModalProductsDates\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { SortProductos } from \"../functions/SortFromPacientesView\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport axios from \"axios\";\r\nimport { cerverHost, cerverHostImages } from \"../services/cerverHost\";\r\nimport {\r\n  crearimagenUnProducto,\r\n  deleteImagenByProducto,\r\n  getImagenById,\r\n} from \"../services/ImageServices\";\r\nimport {\r\n  addEntrada,\r\n  getAllEntradasByProductoId,\r\n  getEntradaByID,\r\n} from \"../services/EntradaServices\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport { useNavigationLostDates } from \"../contexts/NavigationLostContext\";\r\nimport { usePaginadoProductos } from \"../contexts/AuxiliarContextPaginadoproductos\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\n\r\nexport default function ProductosViwe() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario } = useUsuario();\r\n  const { sortProductos } = useSortProductos();\r\n  const { modalProductsDates, setModalProductsDates } = useModalProductsDates();\r\n  const { navigationLostDates, setNavigationLostDates } =\r\n    useNavigationLostDates();\r\n  const { paginadoProductos, setPaginadoProductos } = usePaginadoProductos();\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Opciones para saber si el producto tiene fecha de vencimiento o o\r\n  const optionsIsFechaVencimiento = [\r\n    { label: \"Si\", value: \"si\" },\r\n    { label: \"No\", value: \"no\" },\r\n  ];\r\n\r\n  // Variables para controlar los campos de los formularios de agregar producto y ver datos\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"no\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [nombreProductoDetails, setNombreProductoDetails] = useState(\"\");\r\n  const [precioProductoUSDDetails, setPrecioProductoUSDDetails] = useState(\"0\");\r\n  const [precioProductoCUPDetails, setPrecioProductoCUPDetails] = useState(\"0\");\r\n  const [costoPromedio, setCostopromedio] = useState(\"\");\r\n  const [precioEmpresaProductoDetails, setPrecioEmpresaProductoDetails] =\r\n    useState(\"\");\r\n  const [skuDetails, setSkuDetails] = useState(\"\");\r\n  const [descripcionProductoDetails, setDescripcionProductoDetails] =\r\n    useState(\"\");\r\n  // Estado para almacenar las imágenes seleccionadas\r\n  const [selectedImages, setSelectedImages] = useState<Asset[]>([]);\r\n  const [deleteImages, setDeleteImages] = useState<Asset[]>([]);\r\n  const [modificarAddImages, setModificarAddImages] = useState<Asset[]>([]);\r\n\r\n  const [isModalMensajeViewExel, setModalMensajeViewExel] =\r\n    React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  const [\r\n    optimizacionAbrirPorPrimeraVesProductosView,\r\n    setOptimizacionAbrirPorPrimeraVesProductosView,\r\n  ] = useState(false);\r\n  const [controlFiltrarOPaginar, setControlFiltrarOPaginar] = useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  // Controlar el doble clic del boton\r\n  const [isButtonDisabled, setIsButtonDisabled] = React.useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoButtonAddProducto, setIsPermisoButtonAddProducto] =\r\n    useState(false);\r\n  const [isPermisoHistorialDeProveedores, setIsPermisoHistorialDeProveedores] =\r\n    useState(false);\r\n  let opcionesDeCelda: boolean = false;\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultPermisoButonAddProducto = await isPermiso(\r\n        usuario.token,\r\n        \"6\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoHistorialDeProveedores = await isPermiso(\r\n        usuario.token,\r\n        \"38\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionModificar = await isPermiso(\r\n        usuario.token,\r\n        \"7\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionEliminar = await isPermiso(\r\n        usuario.token,\r\n        \"8\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n        usuario.token,\r\n        \"30\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"31\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      // Actualizar cambio de moneda\r\n      setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n\r\n      // Actualiza el estado con los resultado\r\n      opcionesDeCelda =\r\n        resultPermisoButonOptionEliminar ||\r\n        resultPermisoButonOptionModificar ||\r\n        resultPermisoButonOptionMoverLocal ||\r\n        resultPermisoButonOptionMoverGeneral;\r\n\r\n      setIsPermisoButtonAddProducto(resultPermisoButonAddProducto);\r\n      setIsPermisoHistorialDeProveedores(resultPermisoHistorialDeProveedores);\r\n    }\r\n  };\r\n\r\n  const onDrop = () => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Producto[]>([]);\r\n  const [filterItemsLength, setFilterItemsLength] = useState(0);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([]);\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarProductos();\r\n    }\r\n  };\r\n\r\n  const cargarProveedoresPorProducto = async (id_producto: string) => {\r\n    try {\r\n      if (usuario?.token) {\r\n        // Llamamos a la API para obtener todas las entradas según el producto\r\n        const entradas = await getAllEntradasByProductoId(\r\n          usuario?.token,\r\n          id_producto\r\n        );\r\n        const cantidadTotalProducto = await getProductoCantidadTotal(\r\n          usuario.token,\r\n          id_producto\r\n        );\r\n\r\n        if (entradas) {\r\n          // Mapeamos los datos de las entradas para obtener solo la información que necesitamos\r\n          const proveedores = entradas.map((entrada: any) => ({\r\n            id_proveedor: entrada.proveedor.id_proveedor,\r\n            nombre: entrada.proveedor.nombre,\r\n            cantidad: entrada.cantidad,\r\n            costoPorUnidad: entrada.costo,\r\n          }));\r\n\r\n          // Actualizamos el estado con los datos obtenidos\r\n          setProveedorByProducto(proveedores);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error al cargar los proveedores por producto:\", error);\r\n    }\r\n  };\r\n\r\n  const getTiendasByProducto = async (id_producto: string) => {\r\n    if (usuario?.token) {\r\n      const result = await getAllTiendasByProduct(usuario.token, id_producto);\r\n\r\n      // Asegurándonos de que `result` es un array y contiene los datos esperados.\r\n      if (Array.isArray(result)) {\r\n        // Mapeamos los datos de tiendas al formato de TiendaShowModal.\r\n        const tiendas: TiendaShowModal[] = result.map((item) => ({\r\n          id_tienda: item.tienda.id_tienda.toString(),\r\n          nombre: item.tienda.nombre,\r\n          cantidad: item.cantidad.toString(), // Aquí usamos `item.cantidad` directamente.\r\n        }));\r\n\r\n        // Actualizamos el estado con las tiendas formateadas.\r\n        setTiendasByProducto(tiendas);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método para exportar a exel\r\n  const exportarExel = async () => {\r\n    interface Item {\r\n      sku: string;\r\n      Nombre: string;\r\n      Existencia: string;\r\n      Precio_USD: string;\r\n      Precio_CUP: string;\r\n      Precio_Mayorista: string;\r\n      [key: string]: any; // Permite propiedades adicionales con claves de tipo string\r\n    }\r\n\r\n    setModalMensaje(\r\n      \"Recopilando datos de todos los productos filtrados para el Exel. Espere un momento por favor.\"\r\n    );\r\n    setLoadingOfExel(true);\r\n    setModalMensajeViewExel(true);\r\n    if (usuario?.token) {\r\n      if (filterItems.length < filterItemsLength) {\r\n        const resultAllTiendas = await getAllTiendas(usuario.token);\r\n        const resultAllProductos = await filterProducts(\r\n          usuario.token,\r\n          \"\",\r\n          \"\",\r\n          \"\",\r\n          \"\",\r\n          \"\",\r\n          \"\"\r\n        );\r\n\r\n        if (\r\n          resultAllTiendas &&\r\n          Array.isArray(resultAllTiendas.data) &&\r\n          resultAllProductos &&\r\n          Array.isArray(resultAllProductos)\r\n        ) {\r\n          let itemsFromExel: Item[] = []; // Cambia el tipo a Item[]\r\n          for (let index of resultAllProductos) {\r\n            const item: Item = {\r\n              sku: index.Sku,\r\n              Nombre: index.nombre,\r\n              Existencia: index.cantidad_total,\r\n              Precio_USD: parseFloat(index.precio).toFixed(2),\r\n              Precio_CUP: (parseFloat(index.precio) * cambioMoneda).toFixed(2),\r\n              Precio_Mayorista: index.precio_empresa,\r\n            };\r\n\r\n            const resultProductoTienda = await getAllTiendasByProduct(\r\n              usuario.token,\r\n              index.id_producto\r\n            );\r\n            if (resultProductoTienda && Array.isArray(resultProductoTienda)) {\r\n              for (let elemen of resultProductoTienda) {\r\n                item[elemen.tienda.nombre] = elemen.cantidad ?? 0; // Ahora esto no dará error\r\n              }\r\n              for (let element of resultAllTiendas.data) {\r\n                if (!item[element.nombre]) {\r\n                  item[element.nombre] = 0;\r\n                }\r\n              }\r\n            }\r\n\r\n            itemsFromExel.push(item);\r\n          }\r\n\r\n          const result = await expedirExelProductosConColumnas(\r\n            usuario.token,\r\n            [],\r\n            itemsFromExel\r\n          );\r\n          if (result) {\r\n            const currentDate = new Date();\r\n            const year = String(currentDate.getFullYear());\r\n            const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n            const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n            const url = window.URL.createObjectURL(result);\r\n\r\n            // Crea un enlace de descarga\r\n            const a = document.createElement(\"a\");\r\n            a.href = url;\r\n            a.download = `Productos_${year}-${month}-${day}.xlsx`; // Nombre del archivo descargado\r\n            document.body.appendChild(a);\r\n\r\n            // Haz clic en el enlace para iniciar la descarga\r\n            a.click();\r\n\r\n            // Limpia el enlace creado y la URL Blob\r\n            document.body.removeChild(a);\r\n            window.URL.revokeObjectURL(url);\r\n          } else {\r\n            console.error(\"No se pudo descargar el archivo.\");\r\n          }\r\n        }\r\n      } else {\r\n        const resultAllTiendas = await getAllTiendas(usuario.token);\r\n\r\n        if (resultAllTiendas && Array.isArray(resultAllTiendas.data)) {\r\n          let itemsFromExel: Item[] = []; // Cambia el tipo a Item[]\r\n          for (let index of filterItems) {\r\n            const item: Item = {\r\n              sku: index.sku,\r\n              Nombre: index.nombre,\r\n              Existencia: index.cantidadTotal,\r\n              Precio_USD: parseFloat(index.precioUSD).toFixed(2),\r\n              Precio_CUP: (parseFloat(index.precioUSD) * cambioMoneda).toFixed(\r\n                0\r\n              ),\r\n              Precio_Mayorista: index.precioEmpresaUSD ?? \"0\",\r\n            };\r\n\r\n            const resultProductoTienda = await getAllTiendasByProduct(\r\n              usuario.token,\r\n              index.id_Producto\r\n            );\r\n            if (resultProductoTienda && Array.isArray(resultProductoTienda)) {\r\n              for (let elemen of resultProductoTienda) {\r\n                item[elemen.tienda.nombre] = elemen.cantidad ?? 0; // Ahora esto no dará error\r\n              }\r\n              for (let element of resultAllTiendas.data) {\r\n                if (!item[element.nombre]) {\r\n                  item[element.nombre] = 0;\r\n                }\r\n              }\r\n            }\r\n\r\n            itemsFromExel.push(item);\r\n          }\r\n\r\n          const result = await expedirExelProductosConColumnas(\r\n            usuario.token,\r\n            [],\r\n            itemsFromExel\r\n          );\r\n          if (result) {\r\n            const currentDate = new Date();\r\n            const year = String(currentDate.getFullYear());\r\n            const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n            const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n            const url = window.URL.createObjectURL(result);\r\n\r\n            // Crea un enlace de descarga\r\n            const a = document.createElement(\"a\");\r\n            a.href = url;\r\n            a.download = `Productos_${year}-${month}-${day}.xlsx`; // Nombre del archivo descargado\r\n            document.body.appendChild(a);\r\n\r\n            // Haz clic en el enlace para iniciar la descarga\r\n            a.click();\r\n\r\n            // Limpia el enlace creado y la URL Blob\r\n            document.body.removeChild(a);\r\n            window.URL.revokeObjectURL(url);\r\n          } else {\r\n            console.error(\"No se pudo descargar el archivo.\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setLoadingOfExel(false);\r\n  };\r\n\r\n  const nombreProductoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Cuando el modal esté visible, enfocar el campo del nombre del producto\r\n    if (modalProductsDates?.isAddProducto) {\r\n      nombreProductoRef.current?.focus();\r\n    }\r\n  }, [modalProductsDates?.isAddProducto]);\r\n\r\n  useEffect(() => {\r\n    if (navigationLostDates?.isOnToken) {\r\n      alert(navigationLostDates.isOnToken);\r\n    }\r\n  }, [navigationLostDates?.isOnToken]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      optimizacionAbrirPorPrimeraVesProductosView &&\r\n      paginadoProductos?.page !== undefined &&\r\n      usuario?.token &&\r\n      controlFiltrarOPaginar\r\n    ) {\r\n      const auxiliarPagination = async () => {\r\n        if (usuario?.token != undefined) {\r\n          try {\r\n            // Obtener productos desde la tabla\r\n            const result = await getAllProductosFromTable(\r\n              usuario.token,\r\n              paginadoProductos.page + 1\r\n            );\r\n\r\n            setFilterItemsLength(result.cantidad_total_productos);\r\n            if (result && Array.isArray(result.productos)) {\r\n              // Mapeamos los productos y obtenemos tanto la cantidadTotal como si tienen opciones\r\n              const productosMapeados: Producto[] = await Promise.all(\r\n                result.productos.map(async (element: any) => {\r\n                  // Verificar si el producto tiene opciones (en la tienda)\r\n                  let tieneOpciones: boolean = false;\r\n\r\n                  for (let index of element.tiendas) {\r\n                    if (usuario.id_tienda === index.id_tienda) {\r\n                      tieneOpciones = true;\r\n                      break;\r\n                    }\r\n                  }\r\n\r\n                  // Devolvemos el producto con todas las propiedades mapeadas\r\n                  return {\r\n                    id_Producto: element.id_producto, // Mapea 'id_producto' a 'id_Producto'\r\n                    nombre: element.nombre, // Mapea 'nombre' directamente\r\n                    sku: element.Sku, // Mapea 'Sku' a 'sku'\r\n                    cantidadTotal: element.cantidad_total, // Asigna el valor obtenido para cantidadTotal\r\n                    precioUSD: element.precio.toString(), // Mapea 'precio' a 'precioUSD' y lo convierte a string\r\n                    tieneOpciones: tieneOpciones, // Añade el valor de tieneOpciones\r\n                  };\r\n                })\r\n              );\r\n              // Actualizamos el estado de filterItems con los productos mapeados\r\n              setFilterItems((prevFilterItems) => [\r\n                ...prevFilterItems,\r\n                ...productosMapeados,\r\n              ]);\r\n            } else {\r\n              console.log(\"No se encontraron productos.\");\r\n            }\r\n          } catch (error) {\r\n            console.log(\r\n              \"Error al obtener los productos o verificar permisos:\",\r\n              error\r\n            );\r\n            alert(\"Ocurrió un problema al cargar los datos de los productos\");\r\n          }\r\n        } else {\r\n          alert(\r\n            \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de los productos\"\r\n          );\r\n        }\r\n      };\r\n\r\n      auxiliarPagination();\r\n    }\r\n  }, [paginadoProductos]);\r\n\r\n  const [dropdownItems, setDropDownItems] = useState<TiendaPiker[]>([]);\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [sKUSearch, setSKUSearch] = useState(\"\");\r\n  const [cantidadSearch, setCantidadSearch] = useState(\"\");\r\n  const [rangoPrecioDesdeSearch, setRangoPrecioDesdeSearch] = useState(\"\");\r\n  const [rangoPrecioHastaSearch, setRangoPrecioHastaSearch] = useState(\"\");\r\n  const [selectedValueNombreTienda, setSelectedValueNombreTienda] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingOfExel, setLoadingOfExel] = useState(false);\r\n\r\n  const getDatesTiendaPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItems([\r\n          { label: \"Seleccione una tienda\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar producto\r\n  const callModalAddProducto = () => {\r\n    setModalProductsDates({\r\n      id_producto: \"\",\r\n      isAddProducto: false,\r\n      isModificarProducto: false,\r\n      fileEditable: true,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isAddProductoShowProveedores: false,\r\n    });\r\n  };\r\n  const cargarDetailsOfProducto = async () => {\r\n    if (usuario?.token && modalProductsDates?.id_producto) {\r\n      const result = await getProductoById(\r\n        usuario.token,\r\n        modalProductsDates.id_producto\r\n      );\r\n\r\n      if (result) {\r\n        // Establecer los detalles del producto\r\n        setIdProductoDetails(result.id_producto);\r\n        setNombreProductoDetails(result.nombre);\r\n        setPrecioProductoUSDDetails(result.precio);\r\n        setPrecioProductoCUPDetails((result.precio * cambioMoneda).toFixed(2))\r\n        setPrecioEmpresaProductoDetails(result.precio_empresa);\r\n        setSkuDetails(result.Sku);\r\n        setCostopromedio(`USD: ${result.costo_acumulado}  CUP: ${(result.costo_acumulado * cambioMoneda).toFixed(2)}`);\r\n        setSelecterActivoDetails(result.isFecha_Vencimiento ? \"si\" : \"no\");\r\n        setDescripcionProductoDetails(result.descripcion || \"\"); // Maneja el caso de descripción nula\r\n\r\n        // Cargar historial de proveedores y tiendas en el que existe el producto\r\n        getTiendasByProducto(result.id_producto);\r\n        cargarProveedoresPorProducto(result.id_producto);\r\n\r\n        // Convertir las imágenes de URL a base64\r\n        const imagesPromises = result.imagenes.map(async (img: any) => {\r\n          let httpImage: string = await img.url;\r\n          let id_image: string = await img.id_imagen;\r\n          let parseHttp = httpImage.substring(1, httpImage.length);\r\n          httpImage = cerverHostImages + parseHttp;\r\n          return { uri: httpImage, id: id_image }; // Almacenar en el formato adecuado\r\n        });\r\n\r\n        // Esperar a que todas las promesas se resuelvan\r\n        const images = await Promise.all(imagesPromises);\r\n        setSelectedImages(images);\r\n      }\r\n    }\r\n  };\r\n  const auxiliarFunctionFilter = async (): Promise<Producto[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filterProducts(\r\n          usuario.token,\r\n          nombreProductoSearch,\r\n          sKUSearch,\r\n          rangoPrecioDesdeSearch,\r\n          rangoPrecioHastaSearch,\r\n          cantidadSearch,\r\n          selectedValueNombreTienda ?? \"\"\r\n        );\r\n\r\n        if (result) {\r\n          const productosMapeados: Producto[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Producto: element.id_producto, // Mapea 'id_producto' a 'id_Producto'\r\n              nombre: element.nombre, // Mapea 'nombre' directamente\r\n              sku: element.Sku, // Mapea 'Sku' a 'sku'\r\n              cantidadTotal: element.cantidad_total,\r\n              precioUSD: element.precio.toString(), // Mapea 'precio' a 'precioUSD' y lo convierte a string\r\n              precioEmpresaUSD: element.precio_empresa,\r\n            }))\r\n          );\r\n          return productosMapeados; // Devuelve los productos mapeados\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los productos:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null; // Devuelve null si no hay token o no se pudieron filtrar productos\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optimizacionAbrirPorPrimeraVesProductosView) {\r\n      cargarDetailsOfProducto();\r\n    }\r\n  }, [modalProductsDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerProductosConPermisosYDatos = async (page: number) => {\r\n    setModalMensajeView(false);\r\n    setLoading(true);\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener productos desde la tabla\r\n        const result = await getAllProductosFromTable(usuario.token, page);\r\n\r\n        setFilterItemsLength(result.cantidad_total_productos);\r\n        if (result && Array.isArray(result.productos)) {\r\n          // Mapeamos los productos y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const productosMapeados: Producto[] = await Promise.all(\r\n            result.productos.map(async (element: any) => {\r\n              // Verificar si el producto tiene opciones (en la tienda)\r\n              let tieneOpciones: boolean = false;\r\n\r\n              if (opcionesDeCelda) {\r\n                for (let index of element.tiendas) {\r\n                  if (usuario.id_tienda === index.id_tienda) {\r\n                    tieneOpciones = true;\r\n                    break;\r\n                  }\r\n                }\r\n              }\r\n\r\n              // Devolvemos el producto con todas las propiedades mapeadas\r\n              return {\r\n                id_Producto: element.id_producto, // Mapea 'id_producto' a 'id_Producto'\r\n                nombre: element.nombre, // Mapea 'nombre' directamente\r\n                sku: element.Sku, // Mapea 'Sku' a 'sku'\r\n                cantidadTotal: element.cantidad_total, // Asigna el valor obtenido para cantidadTotal\r\n                precioUSD: element.precio.toString(), // Mapea 'precio' a 'precioUSD' y lo convierte a string\r\n                tieneOpciones: tieneOpciones, // Añade el valor de tieneOpciones\r\n              };\r\n            })\r\n          );\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(productosMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron productos.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener los productos o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de los productos\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de los productos\"\r\n      );\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const consumerKey = \"ck_aaae303d49b4ac57c713472aca2f610d4c99e195\";\r\n  const consumerSecret = \"cs_646f2fd371adc5d405a5a7bb9a464909e94a0c75\";\r\n\r\n  async function convertImageUrlToBase64(imageUrl: string): Promise<string> {\r\n    try {\r\n      // Codifica las credenciales en base64 para la autenticación básica\r\n      const credentials = btoa(`${consumerKey}:${consumerSecret}`);\r\n\r\n      const response = await fetch(imageUrl, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Basic ${credentials}`,\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error al obtener la imagen: ${response.statusText}`);\r\n      }\r\n\r\n      const blob = await response.blob();\r\n\r\n      return await new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => resolve(reader.result as string);\r\n        reader.onerror = (error) =>\r\n          reject(`Error al convertir la imagen a Base64: ${error}`);\r\n        reader.readAsDataURL(blob);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error al descargar y convertir la imagen:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  const runEffects = async () => {\r\n    setOptimizacionAbrirPorPrimeraVesProductosView(false);\r\n    /*\r\n    if (usuario?.token) {\r\n      const resultProducto = await importarDataProductos(\r\n        usuario.token,\r\n        \"E:\\\\Solutel\\\\Sitio Web De gestión\\\\Libro1.xlsx\"\r\n      );\r\n      if (resultProducto && Array.isArray(resultProducto)) {\r\n        for(let element of resultProducto){\r\n          if (element.nombre) {\r\n            const result = await addProducto(\r\n              usuario.token,\r\n              element.nombre,\r\n              element.Sku,\r\n              element.precio ?? \"0\",\r\n              element.precio_empresa ?? \"0\",\r\n              \"\"\r\n            );\r\n            if (result) {\r\n              console.log(\"Producto Agregado\");\r\n            }else{\r\n              console.log(\"Error\")\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    /*\r\n    /*\r\n    (async () => {\r\n      const imageUrl =\r\n        \"https://solutelcuba.com/wp-content/uploads/2024/09/ZOSI-C303-Sistema-de-Seguridad-CCTV-8-Camaras-con-Audio-y-DVR-de-1-TB1.jpg\";\r\n      try {\r\n        const base64Image = await convertImageUrlToBase64(imageUrl);\r\n        console.log(`Imagen en Base64: ${base64Image}`);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    })();\r\n    */\r\n    /*\r\n    if (usuario?.token) {\r\n      const resultProducto = await importarDataProducto_Tiendas(\r\n        usuario.token,\r\n        \"E:\\\\Solutel\\\\Sitio Web De gestión\\\\Libro1.xlsx\"\r\n      );\r\n      if (resultProducto && Array.isArray(resultProducto)) {\r\n        for (let element of resultProducto) {\r\n          // Condición para producto tienda \"element && Object.keys(element).length > 0\"\r\n          if (element && Object.keys(element).length > 0) {\r\n            const resultProducto = await getProductoBySku(\r\n              usuario.token,\r\n              element.Sku\r\n            );\r\n            \r\n            if (resultProducto) {\r\n              const currentDate = new Date();\r\n              const year = String(currentDate.getFullYear());\r\n              const month = String(currentDate.getMonth() + 1).padStart(\r\n                2,\r\n                \"0\"\r\n              ); // Los meses comienzan desde 0, por lo que sumamos 1\r\n              const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n              // Almacen\r\n              if (parseInt(element.Almacen) > 0) {\r\n                await addProductoEntrada(usuario.token, 1, resultProducto.id_producto,element.Almacen);\r\n                await addEntrada(usuario.token, \"0\", element.Almacen,`${year}-${month}-${day}`,15, resultProducto.id_producto,1);\r\n                await createProductoInTienda(usuario.token, String(resultProducto.id_producto), \"1\")  \r\n              }\r\n              // Taller_Cell\r\n              if (parseInt(element.Taller_Cell) > 0) {\r\n                await addProductoEntrada(usuario.token, 2, resultProducto.id_producto,element.Taller_Cell);\r\n                await addEntrada(usuario.token, \"0\", element.Taller_Cell,`${year}-${month}-${day}`,15, resultProducto.id_producto,2);\r\n                await createProductoInTienda(usuario.token, String(resultProducto.id_producto), \"2\") \r\n              }\r\n              // Taller_PC\r\n              if (parseInt(element.Taller_PC) > 0) {\r\n                await addProductoEntrada(usuario.token, 3, resultProducto.id_producto,element.Taller_PC);\r\n                await addEntrada(usuario.token, \"0\", element.Taller_PC,`${year}-${month}-${day}`,15, resultProducto.id_producto,3);\r\n                await createProductoInTienda(usuario.token, String(resultProducto.id_producto), \"3\")\r\n              }\r\n              // Tienda\r\n              if (parseInt(element.Tienda) > 0) {\r\n                await addProductoEntrada(usuario.token, 4, resultProducto.id_producto,element.Tienda);\r\n                await addEntrada(usuario.token, \"0\", element.Tienda,`${year}-${month}-${day}`,15, resultProducto.id_producto,4);\r\n                await createProductoInTienda(usuario.token, String(resultProducto.id_producto), \"4\")  \r\n              }\r\n              console.log(true);\r\n            }\r\n              \r\n          }\r\n        }\r\n      }\r\n    }\r\n    */\r\n    setPaginadoProductos({ page: 1 });\r\n    await checkPermiso();\r\n    await obtenerProductosConPermisosYDatos(paginadoProductos.page);\r\n    await getDatesTiendaPiker();\r\n    setOptimizacionAbrirPorPrimeraVesProductosView(true);\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  // Filtrar productos simepre que el usuario seleccione una tienda\r\n  useEffect(() => {\r\n    // Evitar que se ejecute apenas se abre la vista que e filtren los productos solo por primera vez\r\n    if (optimizacionAbrirPorPrimeraVesProductosView) {\r\n      filtrarYOrdenarProductos();\r\n    }\r\n  }, [sortProductos, selectedOptionTipoOrden]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      nombreProductoSearch === \"\" &&\r\n      sKUSearch === \"\" &&\r\n      cantidadSearch === \"\" &&\r\n      rangoPrecioDesdeSearch === \"\" &&\r\n      rangoPrecioHastaSearch === \"\" &&\r\n      selectedValueNombreTienda === null\r\n    ) {\r\n      setControlFiltrarOPaginar(true); // No se está filtrando\r\n    } else {\r\n      setControlFiltrarOPaginar(false); //Se está filtrando\r\n    }\r\n  }, [\r\n    nombreProductoSearch,\r\n    sKUSearch,\r\n    cantidadSearch,\r\n    rangoPrecioDesdeSearch,\r\n    rangoPrecioHastaSearch,\r\n    selectedValueNombreTienda,\r\n  ]);\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarProductos = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let productosFiltrados: Producto[] = await auxiliarFunctionFilter();\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortProductos?.criterioOrden && sortProductos.tipoOrden) {\r\n          productosFiltrados = await ordenarProducts(\r\n            usuario.token,\r\n            productosFiltrados,\r\n            sortProductos.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItemsLength(productosFiltrados.length);\r\n        setFilterItems(productosFiltrados);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los productos:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const auxSetModalProductsDates = () => {\r\n    setNombreProductoDetails(\"\");\r\n    setPrecioProductoUSDDetails(\"\");\r\n    setPrecioEmpresaProductoDetails(\"\");\r\n    setSkuDetails(\"\");\r\n    setDescripcionProductoDetails(\"\");\r\n    setSelectedImages([]);\r\n\r\n    setModalProductsDates({\r\n      id_producto: \"\",\r\n      isAddProducto: true,\r\n      fileEditable: true,\r\n      isModificarProducto: false,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isAddProductoShowProveedores: false,\r\n    });\r\n  };\r\n\r\n  // Método para cargar las imágenes\r\n  /*\r\n  const handleImageUpload = () => {\r\n    const options = {\r\n      mediaType: \"photo\" as const, // Solo fotos\r\n      quality: 1, // Calidad máxima de la imagen\r\n      includeBase64: false, // No incluir en base64\r\n      selectionLimit: 100,\r\n      includeExtra: true,\r\n    };\r\n\r\n    // Abre la galería de imágenes\r\n    launchImageLibrary(options, (response: ImagePickerResponse) => {\r\n      if (response.didCancel) {\r\n        console.log(\"El usuario canceló la selección de la imagen.\");\r\n      } else if (response.errorMessage) {\r\n        console.error(\r\n          \"Error al seleccionar la imagen: \",\r\n          response.errorMessage\r\n        );\r\n      } else if (response.assets && response.assets.length > 0) {\r\n        // Agregar la nueva imagen al estado\r\n        setSelectedImages((prevImages) => {\r\n          // Calcula cuántas imágenes se pueden agregar sin exceder el límite de 100\r\n          const availableSpace = 100 - prevImages.length; // Espacio disponible en el estado\r\n          const newImages = response.assets.slice(0, availableSpace); // Selecciona solo las imágenes necesarias para no exceder el límite\r\n          return [...prevImages, ...newImages]; // Agrega las nuevas imágenes al estado\r\n        });\r\n      } else {\r\n        console.log(\"No se seleccionó ninguna imagen.\");\r\n      }\r\n    });\r\n  };\r\n  */\r\n\r\n  const handleImageUpload = async () => {\r\n    const options = {\r\n      mediaType: \"photo\" as const,\r\n      quality: 0.8,\r\n      includeBase64: false,\r\n      selectionLimit: 100,\r\n    };\r\n\r\n    launchImageLibrary(options, async (response: ImagePickerResponse) => {\r\n      if (response.didCancel) {\r\n        console.log(\"El usuario canceló la selección de la imagen.\");\r\n        return;\r\n      }\r\n\r\n      if (response.errorMessage) {\r\n        console.error(\r\n          \"Error al seleccionar la imagen: \",\r\n          response.errorMessage\r\n        );\r\n        return;\r\n      }\r\n\r\n      if (response.assets && response.assets.length > 0) {\r\n        const processedImages = await Promise.all(\r\n          response.assets.map(async (asset) => {\r\n            if (asset.uri) {\r\n              const size = await getImageFileSize(asset.uri);\r\n\r\n              try {\r\n                if (size > 300 * 1024) {\r\n                  // Compresión de la imagen\r\n                  const fileResponse = await fetch(asset.uri);\r\n                  const blob = await fileResponse.blob();\r\n                  const file = new File([blob], asset.fileName || \"image.jpg\", {\r\n                    type: blob.type,\r\n                  });\r\n\r\n                  const compressedFile = await imageCompression(file, {\r\n                    maxSizeMB: 1,\r\n                    maxWidthOrHeight: 1920,\r\n                    useWebWorker: true,\r\n                  });\r\n\r\n                  // Convertir el archivo comprimido en base64\r\n                  const base64 = await convertFileToBase64(compressedFile);\r\n\r\n                  return {\r\n                    ...asset,\r\n                    uri: base64, // Guardar como base64\r\n                    isCompressed: true,\r\n                  };\r\n                } else {\r\n                  // Convertir imágenes no comprimidas a base64 desde la URI\r\n                  const base64 = await convertUriToBase64(asset.uri);\r\n\r\n                  // Validar que la conversión a base64 fue exitosa\r\n                  if (!base64.startsWith(\"data:image\")) {\r\n                    throw new Error(\"Conversión incorrecta de la URI a base64\");\r\n                  }\r\n\r\n                  return { ...asset, uri: base64, isCompressed: false };\r\n                }\r\n              } catch (error) {\r\n                console.error(\r\n                  `Error al procesar la imagen (${\r\n                    asset.fileName || \"sin nombre\"\r\n                  }):`,\r\n                  error\r\n                );\r\n              }\r\n            }\r\n\r\n            return asset; // Si no tiene URI, devolver el asset original\r\n          })\r\n        );\r\n\r\n        setSelectedImages(processedImages);\r\n      } else {\r\n        console.log(\"No se seleccionó ninguna imagen.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  // Función para convertir un archivo en base64\r\n  const convertFileToBase64 = (file: File): Promise<string> => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => resolve(reader.result as string);\r\n      reader.onerror = (error) => reject(error);\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  // Función para convertir URI en base64\r\n  const convertUriToBase64 = async (uri: string): Promise<string> => {\r\n    try {\r\n      const response = await fetch(uri);\r\n      const blob = await response.blob();\r\n      return convertFileToBase64(\r\n        new File([blob], \"image.jpg\", { type: blob.type })\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error al convertir URI a base64:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Función auxiliar para obtener el tamaño de un archivo de imagen desde su URI\r\n  const getImageFileSize = async (uri: string): Promise<number> => {\r\n    try {\r\n      const response = await fetch(uri);\r\n      const blob = await response.blob();\r\n      return blob.size;\r\n    } catch (error) {\r\n      console.error(\"Error al obtener el tamaño del archivo:\", error);\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // Función auxiliar para obtener el tamaño de un archivo de imagen desde su URI\r\n\r\n  // Función para eliminar una imagen por su índice\r\n  const handleRemoveImage = (index: number) => {\r\n    const updatedImages = selectedImages.filter((_, i) => i !== index);\r\n    const deleteImage = selectedImages.filter((_, i) => i === index)[0]; // Obtener el primer elemento del resultado\r\n    setDeleteImages((prevImages) => [...prevImages, deleteImage]);\r\n    //const aux:ImagenesDelete = ImagenesDelete(deleteImages);\r\n    //setImagenesDelete(deleteImages);\r\n    setSelectedImages(updatedImages);\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProductoSearch(\"\");\r\n    setSKUSearch(\"\");\r\n    setCantidadSearch(\"\");\r\n    setRangoPrecioDesdeSearch(\"\");\r\n    setRangoPrecioHastaSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n    setSelectedValueNombreTienda(null);\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewProducto = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando producto. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarMesaje: string =\r\n        \"ERROR AL INSERTAR PRODUCTO. Por favor compruebe los siguientes campos:\\n\";\r\n      const resultAllProductos = await getAllProductos(usuario.token);\r\n      if (resultAllProductos && Array.isArray(resultAllProductos.data)) {\r\n        resultAllProductos.data.forEach((element) => {\r\n          if (element.Sku === skuDetails) {\r\n            (flag = false),\r\n              (validarMesaje += `-El SKU debe ser único. Coincide con el SKU de  ${element.nombre}`);\r\n          }\r\n        });\r\n      }\r\n\r\n      // Condiciones para validar campos\r\n      if (nombreProductoDetails.trim() === \"\") {\r\n        validarMesaje += \"-El nombre no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (skuDetails.trim() == \"\") {\r\n        validarMesaje += \"-El SKU no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (String(precioProductoUSDDetails).trim() === \"\") {\r\n        validarMesaje += \"-El precio en USD del producto no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (String(precioEmpresaProductoDetails).trim() === \"\") {\r\n        validarMesaje +=\r\n          \"-El precio de la empresa en USD no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (flag) {\r\n        const result = await addProducto(\r\n          usuario.token,\r\n          nombreProductoDetails,\r\n          skuDetails,\r\n          precioProductoUSDDetails,\r\n          precioEmpresaProductoDetails,\r\n          descripcionProductoDetails,\r\n          selecterActivoDetails === \"si\"\r\n        );\r\n        if (result) {\r\n          // agregar el nuevo producto a la tabla\r\n          const nuevoProducto: Producto = {\r\n            id_Producto: result.id_producto,\r\n            nombre: nombreProductoDetails,\r\n            sku: skuDetails,\r\n            cantidadTotal: await getProductoCantidadTotal(\r\n              usuario.token,\r\n              result.id_producto\r\n            ),\r\n            precioUSD: precioProductoUSDDetails,\r\n            tieneOpciones: true,\r\n          };\r\n          setFilterItems((prevItems) => [...prevItems, nuevoProducto]);\r\n\r\n          let auxDataImagesResponses: any[] = [];\r\n          let imagenes: any[] = [];\r\n\r\n          // Cambia forEach por un for...of\r\n          for (const [cont, element] of selectedImages.entries()) {\r\n            const resul = await crearimagenUnProducto(\r\n              usuario.token,\r\n              element,\r\n              `\\\\${result.id_producto}_${cont}.jpg`\r\n            );\r\n            if (resul) {\r\n              auxDataImagesResponses.push(resul);\r\n            } else {\r\n              alert(\"Error en algo de las imagenes\");\r\n            }\r\n          }\r\n\r\n          let i = 0;\r\n\r\n          while (i < auxDataImagesResponses.length) {\r\n            imagenes.push({\r\n              id_imagen: auxDataImagesResponses[i].id_imagen,\r\n            });\r\n            i++;\r\n          }\r\n\r\n          await addProductoAndImagenes(\r\n            usuario.token,\r\n            result.id_producto,\r\n            imagenes\r\n          );\r\n\r\n          // Agregar Acción de usuario mover producto\r\n\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó al sistema el producto ${nombreProductoDetails} a un precio en usd de ${precioProductoUSDDetails} y con un precio de empresa en usd de ${precioEmpresaProductoDetails}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            1\r\n          );\r\n\r\n          setModalMensaje(\r\n            `El Producto ${nombreProductoDetails} fue agregado con éxito`\r\n          );\r\n          setIsBotonModalMesajeVisible(true);\r\n          setModalMensajeView(true);\r\n\r\n          setSkuDetails(\"\");\r\n          setNombreProductoDetails(\"\");\r\n          setPrecioProductoUSDDetails(\"\");\r\n          setDescripcionProductoDetails(\"\");\r\n          setPrecioEmpresaProductoDetails(\"\");\r\n          setSelectedImages([]);\r\n          setModalProductsDates({\r\n            id_producto: \"\",\r\n            isAddProducto: false,\r\n            fileEditable: true,\r\n            isModificarProducto: false,\r\n            isAddProductoShowProveedoresTiendas: false,\r\n            isAddProductoShowProveedores: false,\r\n          });\r\n        } else {\r\n          alert(\"Error al agregar prducto\");\r\n        }\r\n      } else {\r\n        setModalMensaje(validarMesaje);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(false);\r\n        setIsBotonModalMesajeVisible(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Metodo para actualizar los datos de un producto\r\n  const modificarProducto = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando producto. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarMesaje: string =\r\n        \"ERROR AL MODIFICAR PRODUCTO. Por favor compruebe los siguientes campos:\\n\";\r\n\r\n      // Condiciones para validar campos\r\n      if (nombreProductoDetails.trim() === \"\") {\r\n        validarMesaje += \"-El nombre no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (skuDetails.trim() === \"\") {\r\n        validarMesaje += \"-El SKU no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (String(precioProductoUSDDetails).trim() === \"\") {\r\n        validarMesaje += \"-El precio en USD del producto no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (String(precioEmpresaProductoDetails).trim() === \"\") {\r\n        validarMesaje +=\r\n          \"-El precio de la empresa en USD no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      let auxDataImagesResponses: any[] = [];\r\n      let imagenes: any[] = [];\r\n\r\n      if (flag) {\r\n        // Actualizar datos de las imagenes\r\n        for (const [cont, image] of selectedImages.entries()) {\r\n          if (image.id) {\r\n            const resul = await crearimagenUnProducto(\r\n              usuario.token,\r\n              image,\r\n              `\\\\${idProductoDetails}_${cont}.jpg`\r\n            );\r\n            if (resul) {\r\n              auxDataImagesResponses.push(resul);\r\n            } else {\r\n              alert(\"Error en algo de las imagenes\");\r\n            }\r\n          }\r\n        }\r\n\r\n        let i = 0;\r\n        while (i < auxDataImagesResponses.length) {\r\n          imagenes.push({\r\n            id_imagen: auxDataImagesResponses[i].id_imagen,\r\n          });\r\n          i++;\r\n        }\r\n\r\n        // Agregar a la relación de imagen producto\r\n        await addProductoAndImagenes(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          imagenes\r\n        );\r\n\r\n        // Actualizar datos del producto\r\n        await updateProducto(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          nombreProductoDetails,\r\n          skuDetails,\r\n          precioProductoUSDDetails,\r\n          precioEmpresaProductoDetails,\r\n          descripcionProductoDetails,\r\n          selecterActivoDetails === \"si\"\r\n        );\r\n        // Eliminar imagenes necesarias datos de las imagenes\r\n        deleteImages.forEach(async (image) => {\r\n          if (image.id && image.uri) {\r\n            await deleteImagenByProducto(\r\n              usuario.token,\r\n              image.id,\r\n              image.uri.split(\"/\")[3]\r\n            );\r\n          }\r\n        });\r\n\r\n        // Agregar Acción de usuario modificar producto\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó el producto ${nombreProductoDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          1\r\n        );\r\n\r\n        setReflechModalMensajeView(true);\r\n        setModalMensaje(\r\n          `El Producto \"${nombreProductoDetails}\" se modificó con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setIsBotonModalMesajeVisible(true);\r\n      } else {\r\n        setModalMensaje(validarMesaje);\r\n        setIsBotonModalMesajeVisible(true);\r\n        setReflechModalMensajeView(false);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"SKU\",\r\n    \"Nombre\",\r\n    \"USD\",\r\n    \"CUP\",\r\n    \"Cantidad\",\r\n    \" \",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\"Nombre\", \"Cantidad\", \"Costo\"];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"SKU\",\r\n    \"Nombre\",\r\n    \"USD\",\r\n    \"CUP\",\r\n    \"Cantidad\",\r\n    \" \",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoButtonAddProducto && (\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                setModalProductsDates({\r\n                  id_producto: \"\",\r\n                  isAddProducto: true,\r\n                  fileEditable: true,\r\n                  isModificarProducto: false,\r\n                  isAddProductoShowProveedoresTiendas: false,\r\n                  isAddProductoShowProveedores: false,\r\n                })\r\n              }\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Producto</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableProductos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n              imtemsLength={filterItemsLength}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <Text style={styles.textSearchMovil}>SKU:</Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}>Cantidad:</Text>\r\n                  </View>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"SKU\"\r\n                      value={sKUSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={setSKUSearch}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Cantidad\"\r\n                      value={cantidadSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Rango de Precio USD:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={rangoPrecioDesdeSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={rangoPrecioHastaSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioHastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Buscar por Tienda:</Text>\r\n                  <View\r\n                    style={{ position: \"relative\", zIndex: 500, height: 100 }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={selectedValueNombreTienda}\r\n                      placeholder=\"Seleccione un Tiendas\"\r\n                      setValue={setSelectedValueNombreTienda}\r\n                      items={dropdownItems}\r\n                    />\r\n                  </View>\r\n                  <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarProductos();\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProductsDates?.isAddProducto ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProducto}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProducto}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {/*(modalProductsDates?.isModificarProducto ?? false)? \"Modificar Producto\" : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                false */}\r\n                {modalProductsDates?.isModificarProducto ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Producto\"\r\n                  : \"Agregar Producto\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  value={nombreProductoDetails}\r\n                  onChangeText={setNombreProductoDetails}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  placeholder=\"Nombre del producto\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Precio y Precio de Empresa */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio en USD\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={precioProductoUSDDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n                        let aux = parseFloat(validNumericValue) * cambioMoneda\r\n                        setPrecioProductoUSDDetails(validNumericValue);\r\n                        setPrecioProductoCUPDetails(aux.toFixed(2))\r\n                      }}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio en USD\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Precio de Empresa */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio de empresa en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioEmpresaProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioEmpresaProductoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio de empresa en CUP\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio en CUP*/}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioProductoCUPDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n                        let aux = parseFloat(validNumericValue) / cambioMoneda\r\n                        setPrecioProductoUSDDetails(aux.toFixed(5));\r\n                        setPrecioProductoCUPDetails(validNumericValue)\r\n                      }}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio en CUP\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo Promedio*/}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    {isPermisoHistorialDeProveedores && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo Promedio\r\n                      </Text>\r\n                    )}\r\n                    {isPermisoHistorialDeProveedores && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedio}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={false}\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Campo SKU */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Sku</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={skuDetails}\r\n                      onChangeText={setSkuDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Sku\"\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={{ width: \"45%\", marginRight: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Descripción\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={descripcionProductoDetails}\r\n                      onChangeText={setDescripcionProductoDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Descripción\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Campo Tiene Fecha de Vencimiento*/}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 16,\r\n                      marginTop: \"3%\",\r\n                      color: Colors.negro, // Color del texto\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                    }}\r\n                  >\r\n                    ¿Este producto tiene fecha de vencimiento?\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    padding: 20,\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"flex-start\",\r\n                  }}\r\n                >\r\n                  {optionsIsFechaVencimiento.map((option) => (\r\n                    <CustomRadioButton\r\n                      key={option.value}\r\n                      label={option.label}\r\n                      selected={selecterActivoDetails === option.value}\r\n                      onPress={() => {\r\n                        if (modalProductsDates?.fileEditable) {\r\n                          setSelecterActivoDetails(option.value);\r\n                        }\r\n                      }}\r\n                    />\r\n                  ))}\r\n                </View>\r\n\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          flexDirection: \"row\",\r\n                          height: 350,\r\n                          width: \"90%\",\r\n                        }}\r\n                      >\r\n                        <View\r\n                          style={{\r\n                            flexDirection: \"column\",\r\n                            height: 340,\r\n                            width: \"45%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalMovil}>\r\n                            Tiendas en las que existe el producto\r\n                          </Text>\r\n                          <MyDateTableModalShowDatesTienda\r\n                            columns={columnasMyDateTableTiendaModal}\r\n                            items={tiendasByProducto}\r\n                          />\r\n                        </View>\r\n                        {(modalProductsDates?.isAddProductoShowProveedores ??\r\n                          false) &&\r\n                          isPermisoHistorialDeProveedores && (\r\n                            <View\r\n                              style={{\r\n                                height: 340,\r\n                                width: \"45%\",\r\n                              }}\r\n                            >\r\n                              <Text style={styles.labelTextModalMovil}>\r\n                                Historial de proveedores\r\n                              </Text>\r\n                              <MyDateTableModalShowDateProveedores\r\n                                columns={columnasMyDateTableProveedorModal}\r\n                                items={proveedorByProducto}\r\n                              />\r\n                            </View>\r\n                          )}\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Descripción */}\r\n                {/*<Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  value={descripcionProductoDetails}\r\n                  onChangeText={setDescripcionProductoDetails}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  numberOfLines={5}\r\n                  scrollEnabled={true}\r\n                />*/}\r\n\r\n                {/* Campo para cargar fotos */}\r\n                <PanGestureHandler onGestureEvent={onDrop}>\r\n                  <View\r\n                    style={{\r\n                      marginTop: 20,\r\n                      width: \"90%\",\r\n                      borderWidth: 1,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderRadius: 13,\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Colors.negro,\r\n                        marginBottom: \"5%\",\r\n                      }}\r\n                    >\r\n                      Imágenes del producto\r\n                    </Text>\r\n\r\n                    {/* Botón para cargar imágenes */}\r\n                    {(modalProductsDates?.fileEditable ?? false) && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                        }}\r\n                        onPress={handleImageUpload}\r\n                      >\r\n                        <Text style={{ color: Colors.blanco }}>\r\n                          Seleccionar Imágenes\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Vista para mostrar las imágenes seleccionadas */}\r\n                    {selectedImages.length > 0 && (\r\n                      <ScrollView\r\n                        horizontal={true}\r\n                        style={{\r\n                          marginTop: 10,\r\n                          width: \"100%\",\r\n                          height: 100, // Ajusta la altura de la vista de imágenes\r\n                        }}\r\n                      >\r\n                        {selectedImages.map((image, index) => (\r\n                          <View\r\n                            key={index}\r\n                            style={{\r\n                              position: \"relative\",\r\n                              width: 100,\r\n                              height: 100,\r\n                              marginRight: 10,\r\n                            }}\r\n                          >\r\n                            <Image\r\n                              key={index}\r\n                              source={{ uri: image.uri }} // Usa la URI de la imagen\r\n                              style={{\r\n                                width: 100,\r\n                                height: 100,\r\n                                marginRight: 10,\r\n                                borderRadius: 10,\r\n                              }}\r\n                            />\r\n                            <TouchableOpacity\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                top: 5,\r\n                                right: 5,\r\n                                backgroundColor: \"red\",\r\n                                borderRadius: 15,\r\n                                width: 20,\r\n                                height: 20,\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                zIndex: 1,\r\n                              }}\r\n                              onPress={() => handleRemoveImage(index)}\r\n                            >\r\n                              <Text\r\n                                style={{\r\n                                  color: \"white\",\r\n                                  fontSize: 14,\r\n                                }}\r\n                              >\r\n                                X\r\n                              </Text>\r\n                            </TouchableOpacity>\r\n                          </View>\r\n                        ))}\r\n                      </ScrollView>\r\n                    )}\r\n                  </View>\r\n                </PanGestureHandler>\r\n                {(modalProductsDates?.fileEditable ?? false) && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                      marginTop: \"3%\",\r\n                    }}\r\n                    onPress={() =>\r\n                      modalProductsDates?.isModificarProducto\r\n                        ? modificarProducto()\r\n                        : addNewProducto()\r\n                    }\r\n                    disabled={isButtonDisabled}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: 14,\r\n                      }}\r\n                    >\r\n                      {modalProductsDates?.isModificarProducto\r\n                        ? \"Modificar Producto\"\r\n                        : \"Agregar Producto\"}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? obtenerProductosConPermisosYDatos(1)\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje para el exel */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeViewExel}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {loadingOfExel ? (\r\n                <ActivityIndicator\r\n                  size={100}\r\n                  color=\"#007BFF\"\r\n                  style={{\r\n                    flex: 1,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"15%\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <View\r\n                  style={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Datos Recopilados. Espere a que termine la descarga.\r\n                  </Text>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: \"#007BFF\", // Cambia esto por Colors.azul_Oscuro si lo tienes definido\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho del botón\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMensajeViewExel(!isModalMensajeViewExel)\r\n                    } // Llama a la función onClose para cerrar el modal\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {isPermisoButtonAddProducto && (\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                auxSetModalProductsDates();\r\n              }}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginHorizontal: \"1%\",\r\n                marginTop: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  sortProductos?.criterioOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Producto\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n\r\n          <TouchableOpacity\r\n            onPress={() => exportarExel()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              height: 30,\r\n              width: \"12%\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n              shadowOffset: { width: 0, height: 0 },\r\n              shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n              shadowRadius: 14, // Difuminado\r\n              borderColor: Colors.verde_claro,\r\n              borderWidth: 3,\r\n              padding: 10,\r\n              borderRadius: 10,\r\n              marginHorizontal: \"1%\",\r\n              marginTop: \"1%\",\r\n              backgroundColor: Colors.verde_claro, // Color de fondo del botón\r\n            }}\r\n          >\r\n            <Image\r\n              source={require(\"../images/exel.png\")}\r\n              style={{ width: 20, height: 20, marginRight: \"10%\" }}\r\n            />\r\n            <Text\r\n              style={[\r\n                styles.radioButtonTextDesktop,\r\n                sortProductos?.criterioOrden === \"option1\" &&\r\n                  styles.radioButtonSelected &&\r\n                  styles.radioButtonTextSelected,\r\n              ]}\r\n            >\r\n              Exportar a Excel\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <Text style={styles.textSearchDesktop}>SKU:</Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}>Cantidad:</Text>\r\n            </View>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"SKU\"\r\n                onKeyPress={handleKeyPress}\r\n                value={sKUSearch}\r\n                onChangeText={setSKUSearch}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Cantidad\"\r\n                value={cantidadSearch}\r\n                onKeyPress={handleKeyPress}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              Rango de Precio en USD:\r\n            </Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                onKeyPress={handleKeyPress}\r\n                value={rangoPrecioDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={rangoPrecioHastaSearch}\r\n                onKeyPress={handleKeyPress}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioHastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Buscar por Tienda:</Text>\r\n            <View style={{ position: \"relative\", zIndex: 500, height: 100 }}>\r\n              <CustomDropdown\r\n                value={selectedValueNombreTienda}\r\n                placeholder=\"Seleccione una Tienda\"\r\n                setValue={setSelectedValueNombreTienda}\r\n                items={dropdownItems}\r\n              />\r\n            </View>\r\n            <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarProductos()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableProductos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n              imtemsLength={filterItemsLength}\r\n            />\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProductsDates?.isAddProducto ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProducto}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProducto}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProductsDates?.isModificarProducto ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Producto\"\r\n                  : \"Agregar Producto\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={modalProductsDates?.fileEditable}\r\n                  value={nombreProductoDetails}\r\n                  onChangeText={setNombreProductoDetails}\r\n                  placeholder=\"Nombre del producto\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Precio y Precio de Empresa */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio en USD\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={precioProductoUSDDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n                        let aux = parseFloat(validNumericValue) * cambioMoneda\r\n                        setPrecioProductoUSDDetails(validNumericValue);\r\n                        setPrecioProductoCUPDetails(aux.toFixed(2))\r\n                      }}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio en USD\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Precio de Empresa */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio de empresa en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioEmpresaProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioEmpresaProductoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio de empresa en CUP\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio en CUP*/}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioProductoCUPDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n                        let aux = parseFloat(validNumericValue) / cambioMoneda\r\n                        setPrecioProductoUSDDetails(aux.toFixed(5));\r\n                        setPrecioProductoCUPDetails(validNumericValue)\r\n                      }}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio en CUP\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Precio de Empresa en CUP*/}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    {isPermisoHistorialDeProveedores && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo Promedio\r\n                      </Text>\r\n                    )}\r\n                    {isPermisoHistorialDeProveedores && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedio}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={false}\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Campo SKU  y Descripcion*/}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Sku</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={skuDetails}\r\n                      onChangeText={setSkuDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Sku\"\r\n                    />\r\n                  </View>\r\n                  <View style={{ width: \"45%\", marginRight: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Descripción\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={descripcionProductoDetails}\r\n                      onChangeText={setDescripcionProductoDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Descripción\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Campo Tiene Fecha de Vencimiento*/}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 16,\r\n                      marginTop: \"3%\",\r\n                      color: Colors.negro, // Color del texto\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                    }}\r\n                  >\r\n                    ¿Este producto tiene fecha de vencimiento?\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    padding: 20,\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"flex-start\",\r\n                  }}\r\n                >\r\n                  {optionsIsFechaVencimiento.map((option) => (\r\n                    <CustomRadioButton\r\n                      key={option.value}\r\n                      label={option.label}\r\n                      selected={selecterActivoDetails === option.value}\r\n                      onPress={() => {\r\n                        if (modalProductsDates?.fileEditable) {\r\n                          setSelecterActivoDetails(option.value);\r\n                        }\r\n                      }}\r\n                    />\r\n                  ))}\r\n                </View>\r\n                {/* Descripción */}\r\n                {/*(<Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                \r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  numberOfLines={5}\r\n                  value={descripcionProductoDetails}\r\n                  onChangeText={setDescripcionProductoDetails}\r\n                  scrollEnabled={true}\r\n                />*/}\r\n\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          flexDirection: \"row\",\r\n                          height: 350,\r\n                          width: \"90%\",\r\n                        }}\r\n                      >\r\n                        <View\r\n                          style={{\r\n                            flexDirection: \"column\",\r\n                            height: 350,\r\n                            width: \"50%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalDesktop}>\r\n                            Tiendas en las que existe el producto\r\n                          </Text>\r\n                          <MyDateTableModalShowDatesTienda\r\n                            columns={columnasMyDateTableTiendaModal}\r\n                            items={tiendasByProducto}\r\n                          />\r\n                        </View>\r\n                        {(modalProductsDates?.isAddProductoShowProveedores ??\r\n                          false) &&\r\n                          isPermisoHistorialDeProveedores && (\r\n                            <View\r\n                              style={{\r\n                                height: 350,\r\n                                width: \"50%\",\r\n                              }}\r\n                            >\r\n                              <Text style={styles.labelTextModalDesktop}>\r\n                                Historial de proveedores\r\n                              </Text>\r\n                              <MyDateTableModalShowDateProveedores\r\n                                columns={columnasMyDateTableProveedorModal}\r\n                                items={proveedorByProducto}\r\n                              />\r\n                            </View>\r\n                          )}\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Campo para cargar fotos */}\r\n                <PanGestureHandler onGestureEvent={onDrop}>\r\n                  <View\r\n                    style={{\r\n                      marginTop: 20,\r\n                      width: \"90%\",\r\n                      borderWidth: 1,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderRadius: 13,\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Colors.negro,\r\n                        marginBottom: \"5%\",\r\n                      }}\r\n                    >\r\n                      Imágenes del producto\r\n                    </Text>\r\n\r\n                    {/* Botón para cargar imágenes */}\r\n                    {(modalProductsDates?.fileEditable ?? false) && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                        }}\r\n                        onPress={handleImageUpload}\r\n                      >\r\n                        <Text style={{ color: Colors.blanco }}>\r\n                          Seleccionar Imágenes\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Vista para mostrar las imágenes seleccionadas */}\r\n                    {selectedImages.length > 0 && (\r\n                      <ScrollView\r\n                        horizontal={true}\r\n                        style={{\r\n                          marginTop: 10,\r\n                          width: \"100%\",\r\n                          height: 100, // Ajusta la altura de la vista de imágenes\r\n                        }}\r\n                      >\r\n                        {selectedImages.map((image, index) => (\r\n                          <View\r\n                            key={index}\r\n                            style={{\r\n                              position: \"relative\",\r\n                              width: 100,\r\n                              height: 100,\r\n                              marginRight: 10,\r\n                            }}\r\n                          >\r\n                            <Image\r\n                              key={index}\r\n                              source={{ uri: image.uri }} // Usa la URI de la imagen\r\n                              style={{\r\n                                width: 100,\r\n                                height: 100,\r\n                                marginRight: 10,\r\n                                borderRadius: 10,\r\n                              }}\r\n                            />\r\n                            {modalProductsDates?.fileEditable && (\r\n                              <TouchableOpacity\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  top: 5,\r\n                                  right: 5,\r\n                                  backgroundColor: \"red\",\r\n                                  borderRadius: 15,\r\n                                  width: 20,\r\n                                  height: 20,\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                  zIndex: 1,\r\n                                }}\r\n                                onPress={() => handleRemoveImage(index)}\r\n                              >\r\n                                <Text\r\n                                  style={{\r\n                                    color: \"white\",\r\n                                    fontSize: 14,\r\n                                  }}\r\n                                >\r\n                                  X\r\n                                </Text>\r\n                              </TouchableOpacity>\r\n                            )}\r\n                          </View>\r\n                        ))}\r\n                      </ScrollView>\r\n                    )}\r\n                  </View>\r\n                </PanGestureHandler>\r\n                {(modalProductsDates?.fileEditable ?? false) && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                      marginTop: \"3%\",\r\n                    }}\r\n                    onPress={() =>\r\n                      modalProductsDates?.isModificarProducto\r\n                        ? modificarProducto()\r\n                        : addNewProducto()\r\n                    }\r\n                    disabled={isButtonDisabled}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: 14,\r\n                      }}\r\n                    >\r\n                      {modalProductsDates?.isModificarProducto\r\n                        ? \"Modificar Producto\"\r\n                        : \"Agregar Producto\"}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? obtenerProductosConPermisosYDatos(1)\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje para el exel */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeViewExel}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {loadingOfExel ? (\r\n                <ActivityIndicator\r\n                  size={100}\r\n                  color=\"#007BFF\"\r\n                  style={{\r\n                    flex: 1,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"15%\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <View\r\n                  style={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Datos Recopilados. Espere a que termine la descarga.\r\n                  </Text>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: \"#007BFF\", // Cambia esto por Colors.azul_Oscuro si lo tienes definido\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho del botón\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMensajeViewExel(!isModalMensajeViewExel)\r\n                    } // Llama a la función onClose para cerrar el modal\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import Navbar from \"../components/Navbar\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport React, { useEffect, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport { Image, Text, useWindowDimensions, View } from \"react-native\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { usePermisosUsuario as usePermisosUsuarioNavbar } from \"../contexts/PermisosNavbarContext\";\r\n\r\n\r\nexport function HomeScreen() {\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  const isMobile = width < 930;\r\n  const navigation = useNavigation();\r\n  const { setUsuario, usuario } = useUsuario();\r\n  const { permisosUsuarioNavbar, setPermisosUsuarioNavbar } = usePermisosUsuarioNavbar();\r\n  \r\n  useEffect(() =>{\r\n\r\n    const cargarPermisosDeUsuario = async () =>{\r\n      if (usuario?.token) {\r\n        \r\n        const resultProductoView = true; //Permiso 9\r\n        const resultProveedorView = (parseInt(usuario.id_rol) !== 4) //Permiso 38\r\n        const resultEntradaView = (parseInt(usuario.id_rol) !== 4) //Permiso 13\r\n        const resultMovimientoLocalView = (parseInt(usuario.id_rol) !== 4) //Permiso 30\r\n        const resultMovimientoGeneralView = (parseInt(usuario.id_rol) !== 4) //Permiso 31\r\n        const resultAgregarUsuario = (parseInt(usuario.id_rol) !== 4 && parseInt(usuario.id_rol) !== 3) //Permiso 1\r\n        const resultModificarUsuario = (parseInt(usuario.id_rol) !== 4 && parseInt(usuario.id_rol) !== 3) //Permiso 2\r\n        const resultEliminarUsuario = (parseInt(usuario.id_rol) !== 4 && parseInt(usuario.id_rol) !== 3) //Permiso 3\r\n        const resultAccionesView = (parseInt(usuario.id_rol) !== 4 && parseInt(usuario.id_rol) !== 3) //Permiso 15\r\n        const resultAgregarTipoServicioView = (parseInt(usuario.id_rol) !== 4 && parseInt(usuario.id_rol) !== 3) //Permiso 20\r\n        const resultModificarTipoServicioView = (parseInt(usuario.id_rol) !== 4 && parseInt(usuario.id_rol) !== 3) //Permiso 21\r\n        const resultEliminarTipoServicioView = (parseInt(usuario.id_rol) !== 4 && parseInt(usuario.id_rol) !== 3) //Permiso 22\r\n        const resultEliminarClienteView = (parseInt(usuario.id_rol) !== 4) //Permiso 18\r\n        const resultModificarClienteView = (parseInt(usuario.id_rol) !== 4) //Permiso 17\r\n        const resultAgregarClienteView = (parseInt(usuario.id_rol) !== 4) //Permiso 16\r\n        const resultVerClienteView = true //Permiso 19\r\n        const resultExpedirGarantiaView = false //Not Suport\r\n        const resultModificarGarantiaView = false //Not Suport\r\n        const resultVerGarantiaView = false //Not Suport\r\n        \r\n        setPermisosUsuarioNavbar({\r\n          resultAccionesView: resultAccionesView,\r\n          resultAgregarUsuario: resultAgregarUsuario,\r\n          resultEliminarUsuario: resultEliminarUsuario,\r\n          resultEntradaView: resultEntradaView,\r\n          resultModificarUsuario: resultModificarUsuario,\r\n          resultMovimientoGeneralView: resultMovimientoGeneralView,\r\n          resultMovimientoLocalView: resultMovimientoLocalView,\r\n          resultProductoView: resultProductoView,\r\n          resultProveedorView: resultProveedorView,\r\n          resultTipoServicio: (resultAgregarTipoServicioView || resultModificarTipoServicioView || resultEliminarTipoServicioView),\r\n          resultClienteView: (resultVerClienteView || resultAgregarClienteView || resultModificarClienteView || resultEliminarClienteView),\r\n          resultGarantiaView: (resultVerGarantiaView || resultExpedirGarantiaView || resultModificarGarantiaView)\r\n        });\r\n\r\n      }\r\n    }\r\n\r\n    cargarPermisosDeUsuario();\r\n\r\n  },[])\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\"\r\n          }}\r\n        >\r\n          <Image\r\n            source={require(\"../images/solutel.jpg\")}\r\n            style={{ width: \"60%\", height: \"55%\" }}\r\n          />\r\n          <Image\r\n            source={require(\"../images/solutel1.jpg\")}\r\n            style={{ width: \"90%\", height: \"30%\" }}\r\n          />\r\n        </View>\r\n      </View>\r\n    );\r\n  }else{\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"row\"\r\n          }}\r\n        >\r\n          <Image\r\n            source={require(\"../images/solutel.jpg\")}\r\n            style={{ width: \"25%\", height: \"60%\", marginTop: \"5%\" }}\r\n          />\r\n          <Image\r\n            source={require(\"../images/solutel1.jpg\")}\r\n            style={{ width: \"50%\", height: \"40%\" }}\r\n          />\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\r\nimport { Colors } from '../styles/Colors';\r\n\r\ninterface DropdownProps {\r\n  value: string;\r\n  setValue: (value: string) => void;\r\n  placeholder: string;\r\n  items: { label: string; value: string }[];\r\n  searchable: boolean;\r\n  readOnly?: boolean;\r\n  onDropdownOpen?: () => void; // Nueva propiedad opcional\r\n}\r\n\r\nconst CustomDropdownDetails: React.FC<DropdownProps> = ({\r\n  value,\r\n  setValue,\r\n  items,\r\n  placeholder: title,\r\n  searchable,\r\n  readOnly = false,\r\n  onDropdownOpen,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const { width } = useWindowDimensions();\r\n  const isMobile = width < 1150;\r\n  const textStyles = isMobile ? styles.dropdownTextMovil : styles.dropdownTextDesktop;\r\n\r\n  // Efecto para llamar a `onDropdownOpen` cuando el dropdown se abre\r\n  useEffect(() => {\r\n    if (open && onDropdownOpen) {\r\n      onDropdownOpen();\r\n    }\r\n  }, [open]);\r\n\r\n  // Función de apertura condicional basada en `readOnly`\r\n  const handleOpen = () => {\r\n    if (!readOnly) {\r\n      setOpen((prevOpen) => !prevOpen);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <DropDownPicker\r\n        open={open}\r\n        value={value}\r\n        items={items}\r\n        setOpen={handleOpen} // Llamada a la función `handleOpen`\r\n        setValue={setValue}\r\n        setItems={() => {}}\r\n        placeholder={title}\r\n        style={styles.dropdown}\r\n        textStyle={textStyles}\r\n        dropDownContainerStyle={styles.dropdownContainer}\r\n        searchable={searchable && !readOnly}\r\n        searchPlaceholder=\"Buscar...\"\r\n        searchTextInputStyle={styles.searchInput}\r\n        zIndex={1000}\r\n        disabled={readOnly}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: '1%',\r\n    marginLeft: '5%',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    zIndex: 1,\r\n    position: 'relative',\r\n  },\r\n  dropdown: {\r\n    backgroundColor: Colors.blanco,\r\n    borderColor: Colors.azul_Suave,\r\n    borderRadius: 13,\r\n    width: '95%',\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    zIndex: 1000,\r\n  },\r\n  dropdownTextDesktop: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: Colors.negro,\r\n  },\r\n  dropdownTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    color: Colors.negro,\r\n  },\r\n  dropdownContainer: {\r\n    borderColor: Colors.azul_Suave,\r\n    backgroundColor: Colors.blanco,\r\n    width: '95%',\r\n    zIndex: 1000,\r\n  },\r\n  searchInput: {\r\n    borderColor: Colors.azul_Suave,\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport default CustomDropdownDetails;\r\n","import React, { createContext, useState, ReactNode } from \"react\";\r\n\r\n// Define la interfaz del Usuario\r\nexport interface ModalEntradasDates {\r\n  id_entrada: string;\r\n  isAddEntrada: boolean;\r\n  isModificarEntrada: boolean;\r\n  fileEditable: boolean;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface ModalEntradasDatesContextType {\r\n  modalEntradasDates: ModalEntradasDates | null;\r\n  setModalEntradasDates: (\r\n    modalEntradasDates: ModalEntradasDates | null\r\n  ) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst ModalEntradasDatesContext = createContext<\r\n  ModalEntradasDatesContextType | undefined\r\n>(undefined);\r\n\r\n// Define el proveedor\r\nexport const ModalEntradasDatesProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [modalEntradasDates, setModalEntradasDates] =\r\n    useState<ModalEntradasDates | null>(null);\r\n\r\n  return (\r\n    <ModalEntradasDatesContext.Provider\r\n      value={{\r\n        modalEntradasDates: modalEntradasDates,\r\n        setModalEntradasDates: setModalEntradasDates,\r\n      }}\r\n    >\r\n      {children}\r\n    </ModalEntradasDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useModalEntradasDates = () => {\r\n  const context = React.useContext(ModalEntradasDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      \"useModalEntradasDates debe usarse dentro de un ModalEntradasDates\"\r\n    );\r\n  }\r\n  return context;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Text, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\n\r\ninterface DateInputProps {\r\n  dayValue: string;\r\n  monthValue: string;\r\n  yearValue: string;\r\n  onDayChange: (day: string) => void;\r\n  onMonthChange: (month: string) => void;\r\n  onYearChange: (year: string) => void;\r\n  style?: StyleProp<ViewStyle>;\r\n  styleText?: StyleProp<TextStyle>;\r\n  isReadOnly?: boolean;\r\n  onDropdownOpen?: () => void; // Nueva propiedad para manejar la apertura del dropdown\r\n}\r\n\r\nexport const MyDateInput: React.FC<DateInputProps> = ({\r\n  dayValue,\r\n  monthValue,\r\n  yearValue,\r\n  onDayChange,\r\n  onMonthChange,\r\n  onYearChange,\r\n  style,\r\n  styleText,\r\n  isReadOnly = false,\r\n  onDropdownOpen, // Desestructuración de la nueva propiedad\r\n}) => {\r\n  const [day, setDay] = useState<string>(dayValue);\r\n  const [month, setMonth] = useState<string>(monthValue);\r\n  const [year, setYear] = useState<string>(yearValue);\r\n  const [days, setDays] = useState<Array<{ label: string; value: string }>>([]);\r\n\r\n  const [activePicker, setActivePicker] = useState<'day' | 'month' | 'year' | null>(null);\r\n\r\n  const getDaysInMonth = (month: number, year: number) => {\r\n    return new Date(year, month, 0).getDate();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const numberOfDays = getDaysInMonth(Number(month), Number(year));\r\n    const daysArray = Array.from({ length: numberOfDays }, (_, i) => ({\r\n      label: String(i + 1),\r\n      value: String(i + 1),\r\n    }));\r\n\r\n    if (Number(day) > numberOfDays) {\r\n      setDay(String(numberOfDays));\r\n    }\r\n\r\n    setDays(daysArray);\r\n  }, [month, year]);\r\n\r\n  const updateDate = (newDay: string, newMonth: string, newYear: string) => {\r\n    onDayChange(newDay);\r\n    onMonthChange(newMonth);\r\n    onYearChange(newYear);\r\n  };\r\n\r\n  const togglePicker = (picker: 'day' | 'month' | 'year') => {\r\n    if (activePicker === picker) {\r\n      setActivePicker(null);\r\n    } else {\r\n      setActivePicker(picker);\r\n      onDropdownOpen && onDropdownOpen(); // Llama a onDropdownOpen cuando se abre un picker\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, style]}>\r\n      <View style={styles.inputWrapper}>\r\n        <Text style={[styles.label, styleText]}>Día</Text>\r\n        <DropDownPicker\r\n          open={activePicker === 'day'}\r\n          value={day}\r\n          items={days}\r\n          setOpen={() => !isReadOnly && togglePicker('day')}\r\n          setValue={(value) => {\r\n            setDay(value);\r\n            updateDate(value, month, year);\r\n          }}\r\n          style={styles.picker}\r\n          containerStyle={[styles.pickerContainer, { zIndex: activePicker === 'day' ? 2 : 1 }]}\r\n          dropDownContainerStyle={styles.dropDownContainer}\r\n          disabled={isReadOnly}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputWrapper}>\r\n        <Text style={[styles.label, styleText]}>Mes</Text>\r\n        <DropDownPicker\r\n          open={activePicker === 'month'}\r\n          value={month}\r\n          items={Array.from({ length: 12 }, (_, i) => ({\r\n            label: String(i + 1),\r\n            value: String(i + 1),\r\n          }))}\r\n          setOpen={() => !isReadOnly && togglePicker('month')}\r\n          setValue={(value) => {\r\n            setMonth(value);\r\n            updateDate(day, value, year);\r\n          }}\r\n          style={styles.picker}\r\n          containerStyle={[styles.pickerContainer, { zIndex: activePicker === 'month' ? 2 : 1 }]}\r\n          dropDownContainerStyle={styles.dropDownContainer}\r\n          disabled={isReadOnly}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputWrapper}>\r\n        <Text style={[styles.label, styleText]}>Año</Text>\r\n        <DropDownPicker\r\n          open={activePicker === 'year'}\r\n          value={year}\r\n          items={Array.from({ length: 101 }, (_, i) => {\r\n            const year = new Date().getFullYear() - i;\r\n            return { label: String(year), value: String(year) };\r\n          })}\r\n          setOpen={() => !isReadOnly && togglePicker('year')}\r\n          setValue={(value) => {\r\n            setYear(value);\r\n            updateDate(day, month, value);\r\n          }}\r\n          style={styles.picker}\r\n          containerStyle={[styles.pickerContainer, { zIndex: activePicker === 'year' ? 2 : 1 }]}\r\n          dropDownContainerStyle={styles.dropDownContainer}\r\n          disabled={isReadOnly}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  inputWrapper: {\r\n    flex: 1,\r\n    marginHorizontal: 5,\r\n  },\r\n  label: {\r\n    fontSize: 14,\r\n    marginBottom: 5,\r\n    color: '#000',\r\n  },\r\n  picker: {\r\n    height: 20,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    borderRadius: 12,\r\n  },\r\n  pickerContainer: {\r\n    height: 35,\r\n    width: 80,\r\n  },\r\n  dropDownContainer: {\r\n    borderColor: 'gray',\r\n    zIndex: 9999,\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport interface TiendaMoverShowModal {\r\n  id_tienda: string;\r\n  nombre: string;\r\n}\r\n\r\ninterface Props {\r\n  items: TiendaMoverShowModal[];\r\n  columns: string[];\r\n}\r\n\r\nexport const MyDateTableModalDataMoverTiendas: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(3);\r\n  const [displayedItems, setDisplayedItems] = React.useState<TiendaMoverShowModal[]>(\r\n    []\r\n  ); // Estado para los elementos mostrados\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text style={styles.headerTextDesktop}>{column}</Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerDesktop}>\r\n      <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n        <DataTable style={{ width: \"150%\" }}>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => (\r\n            <DataTable.Row\r\n              key={item.id_tienda}\r\n              onPress={() => alert(\"Not supported yet\")}\r\n            >\r\n              <DataTable.Cell style={styles.handerRow}>\r\n                <Text\r\n                  style={{ flexWrap: \"wrap\", width: \"100%\", textAlign: \"left\" }}\r\n                  numberOfLines={2} // Limita a 2 líneas\r\n                >\r\n                  {item.nombre}\r\n                </Text>\r\n              </DataTable.Cell>\r\n            </DataTable.Row>\r\n          ))}\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n    width: \"100%\"\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 16,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 50,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 20,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Servicio } from '../components/MyDateTableServicios';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortServicios {\r\n  items: Servicio[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortServiciosContextType {\r\n  sortServicios: SortServicios | null;\r\n  setSortServicios: (sortServicios: SortServicios | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortServiciosContext = createContext<SortServiciosContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortServiciosProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortServicios, setSortServicios] = useState<SortServicios | null>(null);\r\n\r\n  return (\r\n    <SortServiciosContext.Provider value={{ sortServicios: sortServicios, setSortServicios: setSortServicios }}>\r\n      {children}\r\n    </SortServiciosContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortServicios = () => {\r\n  const context = React.useContext(SortServiciosContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortServicios debe usarse dentro de un SortServicios');\r\n  }\r\n  return context;\r\n};","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { TiendaShowModal } from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport interface Servicio {\r\n  id_Servicio: string;\r\n  id_Cliente: string;\r\n  id_Tienda: string;\r\n  id_Tipo_servicio: string;\r\n  id_Deuda: string;\r\n  id_Garantia: string;\r\n  fecha: string;\r\n  precio: string;\r\n  nota: string;\r\n  descripcion: string;\r\n  nombreCliente: string;\r\n  nombreTienda: string;\r\n  nombreTipoServicio: string;\r\n  nombreProducto?: string;\r\n  cantidad?: string;\r\n  devuelto: boolean;\r\n  costo: string;\r\n  costo_tipo_servicio: string;\r\n  cantidad_transferida: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Servicio[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableServicios: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Servicio[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n  const [isPermisoServicioGeneral, setIsPermisoServicioGeneral] =\r\n    React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      // Actualiza el estado con los resultado\r\n      setIsPermisoServicioGeneral(resultServicioGeneral);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const obtenerCambioPrecio = async () => {\r\n      if (usuario?.token) {\r\n        // Obtener alro de oneda de cambio\r\n        setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n      }\r\n    };\r\n    checkPermiso();\r\n    obtenerCambioPrecio();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Este métodod devuelve el mensaje el fodo de la tabla con los parámetros requeridos\r\n  const mensajeOfEndTable = () => {\r\n    let mensaje = \"Importes totales minoristas filtrados:  \";\r\n    let sumaMinoristaUSD = 0;\r\n    let sumaMayoristaUSD = 0;\r\n    let sumaTransferencias = 0;\r\n\r\n    items.forEach((item) => {\r\n      if (!item.devuelto) {\r\n        sumaTransferencias += parseFloat(item.cantidad_transferida)\r\n        if (parseInt(item.id_Tipo_servicio) === 25) {\r\n          sumaMayoristaUSD +=\r\n            parseFloat(item.precio) *\r\n            (item.cantidad ? parseInt(item.cantidad ?? \"0\") : 0);\r\n        } else {\r\n          sumaMinoristaUSD +=\r\n            parseFloat(item.precio) *\r\n            (parseInt(item.id_Tipo_servicio) === 2\r\n              ? item.cantidad\r\n                ? parseInt(item.cantidad ?? \"0\")\r\n                : 0\r\n              : 1); //\r\n        }\r\n      }\r\n    });\r\n\r\n    mensaje += `USD: ${sumaMinoristaUSD.toFixed(5)}  CUP: ${(\r\n      sumaMinoristaUSD * cambioMoneda\r\n    ).toFixed(\r\n      2\r\n    )}      Importes mayoristas filtrados:  CUP: ${(\r\n      sumaMayoristaUSD * cambioMoneda\r\n    ).toFixed(2)} `;\r\n    mensaje += `      Transferencis CUP: ${sumaTransferencias}`\r\n    return String(mensaje);\r\n  };\r\n  const mensajeOfEndTableGanancia = () => {\r\n    let mensaje = \"Suma de ganancias por servicios prestados  USD: \";\r\n    let sumaGanancia = 0;\r\n\r\n    items.forEach((item) => {\r\n      \r\n      if (\r\n        parseInt(item.id_Tipo_servicio) === 2 ||\r\n        parseInt(item.id_Tipo_servicio) === 25\r\n      ) {\r\n\r\n        sumaGanancia += (parseFloat(item.precio) - parseFloat(item.costo) + parseFloat(item.costo_tipo_servicio)) * ((item.cantidad ? parseInt(item.cantidad ?? \"0\") : 0));\r\n      } else{\r\n        sumaGanancia +=\r\n          parseFloat(item.precio) -\r\n          parseFloat(item.costo) +\r\n          parseFloat(item.costo_tipo_servicio);\r\n      }\r\n    });\r\n\r\n    mensaje += sumaGanancia.toFixed(5);\r\n    mensaje += `    CUP: ${(sumaGanancia * cambioMoneda).toFixed(2)}`;\r\n\r\n    return String(mensaje);\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Fecha\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Cliente\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Precio\") {\r\n      aux = \"option5\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortServicios({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Cliente\" ||\r\n                column === \"Precio\" ||\r\n                column === \"Fecha\") && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Suave,\r\n                    marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                    width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                    height: 24, // Asegúrate de que tenga tamaño consistente\r\n                    justifyContent: \"center\", // Centrar contenido del botón\r\n                    alignItems: \"center\", // Centrar contenido del botón\r\n                    borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                    marginBottom: 4, // Elevar el botón del borde inferior\r\n                    paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                  }}\r\n                  onPress={() => sortEntradasAux(column)}\r\n                >\r\n                  <Image\r\n                    source={require(\"../images/ordenar.png\")}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </TouchableOpacity>\r\n              )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Cliente !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Servicio}\r\n                onPress={() => detailsModalView(item.id_Servicio)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Precio USD */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.nombreTipoServicio}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {parseFloat(item.precio).toFixed(5)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(parseFloat(item.precio) * cambioMoneda).toFixed(2)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Cantidad Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.cantidad ? item.cantidad : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Servicios\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <Text>{mensajeOfEndTable()}</Text>\r\n            </View>\r\n\r\n            {(parseInt(usuario?.id_rol) === 1 || parseInt(usuario?.id_rol) === 2) && (<View\r\n            style={{\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <Text>{mensajeOfEndTableGanancia()}</Text>\r\n          </View>)}\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Servicio}\r\n                onPress={() => detailsModalView(item.id_Servicio)}\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Nombre Del Tipo de Servicio */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombreTipoServicio}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio USD */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {parseFloat(item.precio).toFixed(5)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(parseFloat(item.precio) * cambioMoneda).toFixed(2)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Cantidad Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.cantidad ? item.cantidad : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <Text>{mensajeOfEndTable()}</Text>\r\n          </View>\r\n\r\n          {(parseInt(usuario?.id_rol) === 1 || parseInt(usuario?.id_rol) === 2) && (<View\r\n            style={{\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <Text>{mensajeOfEndTableGanancia()}</Text>\r\n          </View>)}\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\nimport { Servicio } from \"../components/MyDateTableServicios\";\r\n\r\n// Obtener todos los servicios\r\nexport const getAllServicios = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Servicio`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de todos los servicios: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener un servicio según el id específico\r\nexport const getServicioByID = async (token: String, id_servicio: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Servicio/${id_servicio}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de un servicio en específico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Servicio\r\nexport const addServicio = async (\r\n  token: string,\r\n  fecha: string,\r\n  precio: string,\r\n  nota: string,\r\n  descripcion: string,\r\n  id_tienda: string,\r\n  id_tipo_servicio: string,\r\n  costo: string,\r\n  cantidad_transferida: string,\r\n  id_cliente?: string,\r\n  id_garantia?: string,\r\n  id_encargo?: string\r\n) => {\r\n  /*\r\n  console.log(\"fecha: \",fecha);\r\n  console.log(\"precio: \",precio);\r\n  console.log(\"nota: \",nota);\r\n  console.log(\"descripcion: \",descripcion);\r\n  console.log(\"id_tienda: \",id_tienda);\r\n  console.log(\"id_tipo_servicio: \",id_tipo_servicio);\r\n  console.log(\"costo: \",costo);\r\n  console.log(\"cantidad_transferida: \",cantidad_transferida);\r\n  console.log(\"id_cliente: \",id_cliente);\r\n  */\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Servicio/createServicio`,\r\n      {\r\n        fecha: fecha,\r\n        precio: precio,\r\n        nota: nota,\r\n        descripcion: descripcion,\r\n        tienda: { id_tienda: id_tienda },\r\n        tipo_servicio: { id_tipo_servicio: id_tipo_servicio },\r\n        cliente: { id_cliente: id_cliente ?? null },\r\n        costo: costo,\r\n        cantidad_transferida: cantidad_transferida,\r\n        garantia: null,\r\n        deuda: null,\r\n        encargo: null,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error agregar servicio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Servicio\r\nexport const modificarServicio = async (\r\n  token: string,\r\n  id_Servicio: string,\r\n  fecha: string,\r\n  precio: string,\r\n  nota: string,\r\n  id_tienda: string,\r\n  id_tipo_servicio: string,\r\n  costo: string,\r\n  cantidad_transferida: string,\r\n  devuelto: boolean,\r\n  id_cliente?: string,\r\n  id_garantia?: string,\r\n  id_encargo?: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Servicio/updateServicio/${id_Servicio}`,\r\n      {\r\n        fecha: fecha,\r\n        precio: precio,\r\n        nota: nota,\r\n        costo: costo,\r\n        cantidad_transferida: cantidad_transferida,\r\n        devuelto: devuelto,\r\n        tienda: { id_tienda: id_tienda },\r\n        tipo_servicio: { id_tipo_servicio: id_tipo_servicio },\r\n        cliente: { id_cliente: id_cliente ?? null }\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar servicio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Servicio\r\nexport const deleteServicio = async (token: string, id_servicio: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Servicio/deleteServicio/${id_servicio}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al eliminar servicio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar Servicio\r\nexport const filtrarSrvicio = async (\r\n  token: string,\r\n  nombre_cliente: string,\r\n  id_tipo_servicio: string,\r\n  id_tienda: string,\r\n  precio_liminf: string,\r\n  precio_limsup: string,\r\n  fecha_liminf: string,\r\n  fecha_limsup: string,\r\n  nombre_producto: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Servicio/api/filtrar`,\r\n      {\r\n        nombre_cliente: nombre_cliente,\r\n        id_tipo_servicio: id_tipo_servicio,\r\n        id_tienda: id_tienda,\r\n        precio_liminf: precio_liminf,\r\n        precio_limsup: precio_limsup,\r\n        fecha_liminf: fecha_liminf,\r\n        fecha_limsup: fecha_limsup,\r\n        nombre_producto: nombre_producto\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al filtrar los datos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar servicio\r\nexport const ordenarServicios = async (token: string, items: any[], criterio: string, ascendente: boolean) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Servicio/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar las servicios: \", error);\r\n    return false;\r\n  }\r\n};","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todos los tipos de servicios\r\nexport const getAllTipoServicios = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Tipo_servicio`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de todos los Tipos de Servicios: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener un tipo de servicio especifico segun el id\r\nexport const getTipoServicioByID = async (\r\n  token: String,\r\n  id_TipoServicio: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${cerverHost}/Tipo_servicio/${id_TipoServicio}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de un Tipo de Servicio espesifico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar tipo de servicio\r\nexport const addTipoServicio = async (\r\n  token: string,\r\n  nombre: string,\r\n  costo: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Tipo_servicio/createTipo_servicio`,\r\n      {\r\n        nombre: nombre,\r\n        costo: costo,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar el tipo de servicio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Tipo de servicio\r\nexport const modificarTipoServicio = async (\r\n  token: string,\r\n  id_TipoServicio: string,\r\n  nombre: string,\r\n  costo: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Tipo_servicio/updateTipo_servicio/${id_TipoServicio}`,\r\n      {\r\n        nombre: nombre,\r\n        costo: costo,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar el tipo de servicio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Tipo de servicio\r\nexport const deleteTipoServicio = async (\r\n  token: string,\r\n  id_TipoServicio: string\r\n) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Tipo_servicio/deleteTipo_servicio/${id_TipoServicio}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error eliminar el tipo de servocio: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar TipoServicio\r\nexport const filtrarTipoSrvicio = async (\r\n  token: string,\r\n  nombre: string,\r\n  costo_liminf: string,\r\n  costo_limsup: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Tipo_servicio/api/filtrar`,\r\n      {\r\n        nombre: nombre,\r\n        costo_liminf: costo_liminf,\r\n        costo_limsup: costo_limsup,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al filtrar los datos: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\nimport { Cliente } from \"../components/MyDateTableClientes\";\r\n\r\n// Obtener todos los clientes\r\nexport const getAllClientes = async (token: String) => {\r\n    try {\r\n      const response = await axios.get(`${cerverHost}/cliente`, {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\"Error al obtener datos de todos los Clientes: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n// Obtener cliente por el id\r\nexport const getClienteById = async (token: String, id_cliente: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Cliente/${id_cliente}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al obtener datos del cliente: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar un nuevo cliente\r\nexport const addCliente = async (token: String, nombre: string, email: string, telefono:string, descripcion :string, nota: string, Cif:string, detalles_bancarios:string) => {\r\n  try {\r\n    const response = await axios.post(`${cerverHost}/Cliente/createCliente`, {\r\n      nombre: nombre,\r\n      email: email || \"\",\r\n      descripcion: descripcion || \"\",\r\n      nota: nota || \"\",\r\n      telefono: telefono || \"\",\r\n      Cif: Cif || \"\",\r\n      detalles_bancarios: detalles_bancarios || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al incertar un nuevo cliente: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Actualizar cliente\r\nexport const actualizarCliente = async (token: String, id_cliente: string, nombre: string, email: string, telefono:string, descripcion :string, nota: string, Cif:string, detalles_bancarios:string) => {\r\n  try {\r\n    const response = await axios.put(`${cerverHost}/Cliente/updateCliente/${id_cliente}`, {\r\n      nombre: nombre,\r\n      email: email || \"\",\r\n      descripcion: descripcion || \"\",\r\n      nota: nota || \"\",\r\n      telefono: telefono || \"\",\r\n      Cif: Cif || \"\",\r\n      detalles_bancarios: detalles_bancarios || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al actualizar el cliente: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar cliente\r\nexport const deleteCliente = async (token: String, id_cliente:string) => {\r\n  try {\r\n    const response = await axios.delete(`${cerverHost}/Cliente/deleteCliente/${id_cliente}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al eliminar el cliente: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar clientes\r\nexport const filtrarCliente = async (token: String, nombre: string, telefono:string, cif: string, detalle_bacario:string) => {\r\n  try {\r\n    const response = await axios.post(`${cerverHost}/Cliente/api/filtrar`, {\r\n      nombre: nombre || \"\",\r\n      cif: cif || \"\",\r\n      telefono: telefono || \"\",\r\n      detalles_bancarios: detalle_bacario || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrar los clientes: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar clientes\r\nexport const ordenarClientes = async (token: string, items: Cliente[], criterio: string, ascendente: boolean) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Cliente/ordenar/all`,\r\n      {\r\n        items: items,\r\n        criterio: criterio,\r\n        ascendente: ascendente,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar los clientes: \", error);\r\n    return false;\r\n  }\r\n};","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todas las ventas\r\nexport const getAllVentas = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Venta`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de todas las ventas: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener una venta especifica por id\r\nexport const getVentaByID = async (token: String, id_venta: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Venta/${id_venta}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de una venta especifica segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Venta\r\nexport const addVenta = async (\r\n  token: string,\r\n  id_producto: string,\r\n  id_servicio: string,\r\n  cantidad: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Venta/createVenta`,\r\n      {\r\n        producto: { id_producto: id_producto },\r\n        servicio: { id_servicio: id_servicio },\r\n        cantidad: cantidad,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error agregar venta: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Venta\r\nexport const modificarVenta = async (\r\n  token: string,\r\n  id_venta: string,\r\n  id_producto: string,\r\n  id_servicio: string,\r\n  cantidad: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Venta/updateVenta/${id_venta}`,\r\n      {\r\n        producto: { id_producto: id_producto },\r\n        servicio: { id_servicio: id_servicio },\r\n        cantidad: cantidad,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar venta: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Venta\r\nexport const deleteVenta = async (token: string, id_producto: string, id_servicio: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Venta/deleteVenta/${id_producto}/${id_servicio}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al eliminar venta: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener venta según el id del servicio\r\nexport const getVentaByIDOfServicio = async (token: String, id_servicio: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Venta/getbyServicio/${id_servicio}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de la venta segun el id del servicio: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};","import React from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\n\r\ninterface CustomRadioButtonProps {\r\n  onPress: () => void;\r\n  selected: boolean;\r\n  label: string;\r\n}\r\n\r\nconst CustomRadioButtonSingle: React.FC<CustomRadioButtonProps> = ({\r\n  onPress,\r\n  selected,\r\n  label,\r\n}) => (\r\n  <TouchableOpacity\r\n    onPress={onPress}\r\n    style={[styles.radioButton, selected && styles.radioButtonSelected]}\r\n  >\r\n    <Text\r\n      style={[\r\n        styles.radioButtonText,\r\n        selected && styles.radioButtonTextSelected,\r\n      ]}\r\n    >\r\n      {label}\r\n    </Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  radioButton: {\r\n    flexDirection: \"row\",\r\n    height: 40,\r\n    width: \"35%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Oscuro,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    borderColor: Colors.azul_Claro,\r\n    borderWidth: 3,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginLeft: \"5%\",\r\n    backgroundColor: Colors.azul_Suave,\r\n  },\r\n  radioButtonSelected: {\r\n    backgroundColor: Colors.azul_Oscuro,\r\n  },\r\n  radioButtonText: {\r\n    fontSize: 16,\r\n    color: Colors.blanco,\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n    textShadowOffset: { width: 1, height: 1 },\r\n    textShadowRadius: 2,\r\n  },\r\n  radioButtonTextSelected: {\r\n    fontWeight: \"bold\",\r\n    color: Colors.blanco_Suave,\r\n  },\r\n});\r\n\r\nexport default CustomRadioButtonSingle;","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todas las garantias\r\nexport const getAllGarantias = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Garantia`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al obtener datos de las garantias: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener una garantia especifica segun el id\r\nexport const getGarantiaByID = async (token: String, id_garantia: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Garantia/${id_garantia}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de una garantia en específico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Garantia\r\nexport const addGarantia = async (\r\n  token: string,\r\n  duracion: string,\r\n  id_servicio: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Garantia/createGarantia`,\r\n      {\r\n        duracion: duracion,\r\n        servicio: { id_servicio: id_servicio },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar la garantia: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Garantia\r\nexport const modificarGarantia = async (\r\n  token: string,\r\n  duracion: string,\r\n  id_servicio: string,\r\n  id_garantia: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Garantia/updateGarantia/${id_garantia}`,\r\n      {\r\n        duracion: duracion,\r\n        servicio: { id_servicio: id_servicio },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar la garantia: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Garantia\r\nexport const deleteGarantia = async (token: string, id_garantia: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Garantia/deleteGarantia/${id_garantia}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error eliminar la garantia: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar Garantia\r\nexport const filtrarGarantia = async (token: string, nombre_cliente: string, duracion_limsup: string, duracion_liminf: string, nombre_producto: string, fecha_liminf: string, fecha_limsup: string, id_tienda: string) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Garantia/api/filtrar`,\r\n      {\r\n          nombre_producto: nombre_producto,\r\n          nombre_cliente: nombre_cliente,\r\n          duracion_liminf: duracion_liminf,\r\n          duracion_limsup: duracion_limsup,\r\n          fecha_liminf: fecha_liminf,\r\n          fecha_limsup: fecha_limsup,\r\n          id_tienda: id_tienda\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrar los datos: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todos los encargos\r\nexport const getAllEncargos = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Encargo`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al obtener datos de los encargos: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener un encargo especifica segun el id\r\nexport const getEncargoByID = async (token: String, id_encargo: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Encargo/${id_encargo}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de un encargo en específico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Encargo\r\nexport const addEncargo = async (\r\n  token: string,\r\n  adelanto: string,\r\n  fecha_final: string,\r\n  id_servicio: string\r\n) => {\r\n  console.log(adelanto, fecha_final, id_servicio);\r\n  \r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Encargo/createEncargo`,\r\n      {\r\n        adelanto: adelanto,\r\n        fecha_final: fecha_final,\r\n        servicio: { id_servicio: id_servicio }\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar el encargo: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Encargo\r\nexport const modificarEncargo = async (\r\n    token: string,\r\n    adelanto: string,\r\n    fecha_final: string,\r\n    id_servicio: string,\r\n    id_encargo: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Encargo/updateEncargo/${id_encargo}`,\r\n      {\r\n        adelanto: adelanto,\r\n        fecha_final: fecha_final,\r\n        servicio: { id_servicio: id_servicio },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar el encargo: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Encargo\r\nexport const deleteEncargo = async (token: string, id_encargo: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Encargo/deleteEncargo/${id_encargo}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error eliminar el encargo: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todas las deudas\r\nexport const getAllDeudas = async (token: String) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Deuda`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al obtener datos de todas las deudas: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener una deuda especifica segun el id\r\nexport const getDeudaByID = async (token: String, id_deuda: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Deuda/${id_deuda}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\r\n      \"Error al obtener datos de una deuda en específico segun el ID: \",\r\n      error\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar Deuda\r\nexport const addDeuda = async (\r\n  token: string,\r\n  deuda: string,\r\n  id_servicio: string,\r\n  id_pagos_deuda?: string\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Deuda/createDeuda`,\r\n      {\r\n        deuda: deuda,\r\n        pago_deuda: { id_pago_deuda: id_pagos_deuda },\r\n        servicio: { id_servicio: id_servicio },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error incertar la deuda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Modificar Deuda\r\nexport const modificarDeuda = async (\r\n  token: string,\r\n  id_deuda: string,\r\n  deuda: string,\r\n  id_pagos_deuda: string,\r\n  id_servicio: string\r\n) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${cerverHost}/Deuda/updateDeuda/${id_deuda}`,\r\n      {\r\n        deuda: deuda,\r\n        pago_deuda: { id_pago_deuda: id_pagos_deuda },\r\n        servicio: { id_servicio: id_servicio },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error modificar la deuda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar Dedua\r\nexport const deleteDeuda = async (token: string, id_deuda: string) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${cerverHost}/Deuda/deleteDeuda/${id_deuda}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error eliminar la deuda: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar Deudas\r\nexport const filtrarDeudas = async (\r\n  token: string,\r\n  nombre_producto: string,\r\n  nombre_cliente: string,\r\n  deuda_liminf: string,\r\n  deuda_limsup: string,\r\n  fecha_liminf: string,\r\n  fecha_limsup: string,\r\n  id_tienda: string,\r\n  id_tipo_servicio: string,\r\n  saldada?: boolean\r\n) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${cerverHost}/Deuda/api/filtrar`,\r\n      {\r\n        nombre_producto: nombre_producto,\r\n        nombre_cliente: nombre_cliente,\r\n        deuda_liminf: deuda_liminf,\r\n        deuda_limsup: deuda_limsup,\r\n        id_tienda: id_tienda,\r\n        id_tipo_servicio: id_tipo_servicio,\r\n        fecha_liminf: fecha_liminf,\r\n        fecha_limsup: fecha_limsup,\r\n        saldada: saldada\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\");\r\n    }\r\n    console.log(\"Error al filtrar los datos: \", error);\r\n    return false;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n// Obtener todas las pago_deudas\r\nexport const getAllPagoDeudas = async (token: String) => {\r\n    try {\r\n      const response = await axios.get(`${cerverHost}/Pago_Deuda`, {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\"Error al obtener datos de todas las pago deudas: \", error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Obtener una pago_deuda especifica segun el id\r\n  export const getPagoDeudaByID = async (token: String, id_pago_deuda: string) => {\r\n    try {\r\n      const response = await axios.get(`${cerverHost}/Pago_Deuda/${id_pago_deuda}`, {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\r\n        \"Error al obtener datos de una pago deuda en específico segun el ID: \",\r\n        error\r\n      );\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Agregar Pago Deuda\r\n  export const addPagoDeuda = async (\r\n    token: string,\r\n    pagada: string,\r\n    fecha: string,\r\n    id_deuda: string\r\n  ) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${cerverHost}/Pago_Deuda/createPago_Deuda`,\r\n        {\r\n          pagada: pagada,\r\n          fecha: fecha,\r\n          deuda: {\"id_deuda\": id_deuda}\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\"Error incertar la pago deuda: \", error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Modificar Pago Deuda\r\n  export const modificarPagoDeuda = async (\r\n    token: string,\r\n    id_pago_deuda: string,\r\n    pagada: string,\r\n    fecha: string,\r\n    id_deuda: string\r\n  ) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `${cerverHost}/Pago_Deuda/updatePago_Deuda/${id_pago_deuda}`,\r\n        {\r\n            pagada: pagada,\r\n            fecha: fecha,\r\n            deuda: {\"id_deuda\": id_deuda}\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\"Error modificar la pago deuda: \", error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Eliminar Pago Dedua\r\n  export const deletePagoDeuda = async (token: string, id_pago_deuda: string) => {\r\n    try {\r\n      const response = await axios.delete(\r\n        `${cerverHost}/Pago_Deuda/deletePago_Deuda/${id_pago_deuda}`,\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        navigate(\"Login\");\r\n      }\r\n      console.log(\"Error eliminar la pago deuda: \", error);\r\n      return false;\r\n    }\r\n  };","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getCantidadProductoInTiendaEspecifica,\r\n  isProductoInTienda,\r\n  tienda_Realizarventa,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getAllEntradasByProductoId,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n  getProductoById,\r\n  getProductoCantidadTotal,\r\n  getRelacionProductoByTienda,\r\n  updateProductoTienda,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  MyDateTableServicios,\r\n  Servicio,\r\n} from \"../components/MyDateTableServicios\";\r\nimport {\r\n  addServicio,\r\n  deleteServicio,\r\n  filtrarSrvicio,\r\n  getAllServicios,\r\n  getServicioByID,\r\n  modificarServicio,\r\n  ordenarServicios,\r\n} from \"../services/ServiciosServices\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport { getAllTipoServicios } from \"../services/TipoServiciosServices\";\r\nimport { getAllClientes } from \"../services/clienteServices\";\r\nimport {\r\n  addVenta,\r\n  deleteVenta,\r\n  getAllVentas,\r\n  getVentaByIDOfServicio,\r\n} from \"../services/ventasServices\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\nimport CustomRadioButtonSingle from \"../components/CustomRadioButtonSearch\";\r\nimport {\r\n  addGarantia,\r\n  deleteGarantia,\r\n  modificarGarantia,\r\n} from \"../services/GarantiaServices\";\r\nimport {\r\n  addEncargo,\r\n  deleteEncargo,\r\n  modificarEncargo,\r\n} from \"../services/EncargoServices\";\r\nimport {\r\n  addDeuda,\r\n  deleteDeuda,\r\n  getDeudaByID,\r\n} from \"../services/DeudasServices\";\r\nimport { addPagoDeuda, deletePagoDeuda } from \"../services/PagoDeudaServices\";\r\n\r\nexport default function ServiciosView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n  const [\r\n    capaPrioridadTipoServicioDetails,\r\n    setCapaPrioridadTipoServicioDetails,\r\n  ] = useState(1000);\r\n  const [capaPrioridadProductoDetails, setCapaPrioridadProductoDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadClienteDetails, setCapaPrioridadClienteDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTipoServicioSearsh, setCapaPrioridadTipoServicioSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendaSearsh, setCapaPrioridadTiendaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"TipoServicioDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ProductoDetails\") {\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(2000);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ClienteDetails\") {\r\n      setCapaPrioridadClienteDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"TipoServicioSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(2000);\r\n    } else if (prioridad === \"TiendaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(2000);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n\r\n  const [idFirstTimeProducto, setIdFirsTimeProducto] = useState(\"\");\r\n  const [auxOptimizacion, setAuxOptimizacion] = useState(false);\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idServicioDetails, setIdServicioDetails] = useState(\"\");\r\n  const [idClienteDetails, setIdClienteDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [idTipoServicioDetails, setIdTipoServicioDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [cantidadProductoDetails, setCantidadProductoDetails] = useState(\"1\");\r\n  const [costoPromedioProductoCUPDetails, setCostoPromedioProductoCUPDetails] =\r\n    useState(\"0\");\r\n  const [costoPromedioProductoUSDDetails, setCostoPromedioProductoUSDDetails] =\r\n    useState(\"0\");\r\n  const [precioUSDDetails, setPrecioUSDDetails] = useState(\"\");\r\n  const [devueltoDetails, setDevueltoDetails] = useState(\"sin Devolver\");\r\n  const [precioCUPDetails, setPrecioCUPDetails] = useState(\"\");\r\n  const [notaDetails, setNotaDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n  const [fechaDiaDetailsEncargo, setFechaDiaDetailsEncargo] = useState(\"\");\r\n  const [fechaMesDetailsEncargo, setFechaMesDetailsEncargo] = useState(\"\");\r\n  const [fechaAnnoDetailsEncargo, setFechaAnnoDetailsEncargo] = useState(\"\");\r\n  const [adelantoEncargo, setAdelantoEncargo] = useState(\"\");\r\n  const [isGarantiaDetails, setIsGarantiaDetails] = useState(false);\r\n  const [isDeudaDetails, setIsDeudaDetails] = useState(false);\r\n  const [isGarantiaDetailsViejo, setIsGarantiaDetailsViejo] = useState(false);\r\n  const [idGarantiaDetails, setIdGarantiaDetails] = useState(\"\");\r\n  const [duracionGarantiaDetails, setDuracionGarantiaDetails] = useState(\"\");\r\n  const [cantidadTransferencia, setCantidadTransferencia] = useState(\"0\");\r\n  const [adelantoUSDDeudaDetails, setAdelantoUSDDeudaDetails] = useState(\"0\");\r\n  const [adelantoCUPDeudaDetails, setAdelantoCUPDeudaDetails] = useState(\"0\");\r\n  const [duracionGarantiaDetailsVieja, setDuracionGarantiaDetailsVieja] =\r\n    useState(\"\");\r\n  const [idEncargoDetails, setIdEncargoDetails] = useState(\"\");\r\n  const [idDeudaDetails, setIdDeudaDetails] = useState(\"\");\r\n\r\n  // Variable auxiliar para el redondeo de memerio\r\n  const [auxRedondeo, setAuxRedondeo] = useState(\"\");\r\n\r\n  // Variables axiliares para lavalidación de campos\r\n  const [idTiendaDetailsViejo, setIdTiendaDetailsViejo] = useState(\"\");\r\n  const [idProductoDetailsViejo, setIdProductoDetailsViejo] = useState(\"\");\r\n  const [cantidadProductoDetailsViejo, setCantidadProductoDetailsViejo] =\r\n    useState(\"\");\r\n  const [idTipoServicioDetailsViejo, setIdTipoServicioDetailsViejo] =\r\n    useState(\"\");\r\n  const [devueltoDetailsViejo, setDevueltoDetailsViejo] =\r\n    useState(\"sin Devolver\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  // Variable que controla si se está haciendo una venta o se hizo una venta\r\n  const [isVentaProducto, setIsVentaProducto] = useState(false);\r\n  const [isEncargoProducto, setIsEncargoProducto] = useState<boolean>(false);\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Controlar el doble clic del boton\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarServicio, setIsPermisoAgregarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarServicio, setIsPermisoEliminarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoModificarServicio, setIsPermisoModificarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoServicioLocal, setIsPermisoServicioLocal] =\r\n    React.useState(false);\r\n  const [isPermisoServicioGeneral, setIsPermisoServicioGeneral] =\r\n    React.useState(false);\r\n\r\n  const [isPermisoVerCostoVenta, setIsPermisoVerCostoVenta] = useState(false);\r\n\r\n  const mensajeSumaVenta = () =>{\r\n    let mensaje = `Se deve cobrar USD: ${parseFloat(precioUSDDetails) * parseFloat(cantidadProductoDetails)}  CUP: ${(parseFloat(precioCUPDetails) * parseFloat(cantidadProductoDetails)).toFixed(2)} y se pagará por transferencia una cantidad de ${cantidadTransferencia}`;\r\n\r\n    return mensaje\r\n  }\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultEliminarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"25\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"24\",\r\n        usuario.id_usuario\r\n      );\r\n      const resulServicioLocal = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      // cargar cambio de moneda\r\n      setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n\r\n      setIsPermisoServicioLocal(resulServicioLocal);\r\n      setIsPermisoServicioGeneral(resultServicioGeneral);\r\n      setIsPermisoAgregarServicio(resultAgregarServicio);\r\n      setIsPermisoEliminarServicio(resultEliminarServicio);\r\n      setIsPermisoModificarServicio(resultModificarServicio);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Servicio[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreCliente, setDropDownItemsNombreCliente] = useState<\r\n    ProveedorPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreTipoServicio, setDropDownItemsNombreTipoServicio] =\r\n    useState<ProductoPiker[]>([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreClienteSearch, setNombreClienteSearch] = useState(\"\");\r\n  const [nombreProductoSearsh, setNombreProductoSearch] = useState(\"\");\r\n  const [idTipoServicioSearch, setIdTipoServicioSearch] = useState(\"\");\r\n  const [idTiendaSearch, setIdTiendaSearch] = useState(\"\");\r\n  const [rangoPrecioDesdeSearch, setRangoPrecioDesdeSearch] = useState(\"\");\r\n  const [rangoPrecioHastaSearch, setRangoPrecioHastaSearch] = useState(\"\");\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2024\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n\r\n  const options = [\r\n    { label: \"Día\", value: \"dia\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n    { label: \"Mes\", value: \"mes\" },\r\n  ];\r\n\r\n  const optionsDevueltoDetails = [\r\n    { label: \"Devolver\", value: \"devolver\" },\r\n    { label: \"Sin Devolver\", value: \"sin devolver\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"dia\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 6);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else if (value === \"mes\") {\r\n      // Restar 1 mes a la fecha actual\r\n      const lastMonthDate = new Date(currentDate);\r\n      lastMonthDate.setMonth(currentDate.getMonth() - 1);\r\n      const monthYear = String(lastMonthDate.getFullYear());\r\n      const monthMonth = String(lastMonthDate.getMonth() + 1).padStart(2, \"0\");\r\n      const monthDay = String(lastMonthDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${monthYear}-${monthMonth}-${monthDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarServicios(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      let result: any;\r\n\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n      const resulServicioLocal = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      if (resultServicioGeneral) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          usuario.id_tienda\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      } else if (resulServicioLocal) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          usuario.id_tienda\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTipoServicioPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTipoServicios(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const tipoServiciosMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tipo_servicio,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTipoServicio([\r\n          { label: \"Todos los tipos de servicios\", value: \"\" },\r\n          ...tipoServiciosMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getClientesPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllClientes(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const ClientesMapeados: ProductoPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_cliente,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreCliente(ClientesMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Todas las tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setCantidadTransferencia(\"0\");\r\n    setIdTipoServicioDetails(\"\");\r\n    setIsDeudaDetails(false);\r\n    setIsEncargoProducto(false);\r\n    setAdelantoCUPDeudaDetails(\"0\");\r\n    setAdelantoUSDDeudaDetails(\"0\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  // Cargar datos de lprodcut o del servicio de venta\r\n  const cargarDetailsOfProductoVenta = async () => {\r\n    if (usuario?.token) {\r\n      const resultServicio = await getServicioByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        const resultventa = await getVentaByIDOfServicio(\r\n          usuario.token,\r\n          idServicioDetails\r\n        );\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(true);\r\n\r\n        // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n        if (resultventa) {\r\n\r\n          // Actualizar variables para la validación de campos\r\n          setIdProductoDetailsViejo(resultventa.producto.id_producto);\r\n          setCantidadProductoDetailsViejo(resultventa.cantidad);\r\n          setIdTiendaDetailsViejo(resultServicio.tienda.id_tienda);\r\n\r\n          setIdProductoDetails(resultventa.producto.id_producto);\r\n          setIdFirsTimeProducto(resultventa.producto.id_producto);\r\n          setCantidadProductoDetails(resultventa.cantidad);\r\n          setIdTiendaDetails(resultServicio.tienda.id_tienda);\r\n          setPrecioUSDDetails(resultServicio.precio);\r\n          setPrecioCUPDetails(\r\n            String((parseFloat(resultServicio.precio) * cambioMoneda).toFixed(2))\r\n          );\r\n          setCostoPromedioProductoUSDDetails(resultventa.producto.costo_acumulado);\r\n        } else {\r\n          // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(true);\r\n\r\n          setIdProductoDetails(\"\");\r\n          setCantidadProductoDetails(\"\");\r\n          setPrecioUSDDetails(\"\");\r\n          setPrecioCUPDetails(\"\");\r\n          setCostoPromedioProductoUSDDetails(\"\");\r\n        }\r\n      } else {\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(false);\r\n        setPrecioUSDDetails(resultServicio.precio);\r\n        setPrecioCUPDetails(\r\n          String((parseInt(resultServicio.precio) * cambioMoneda).toFixed(2))\r\n        );\r\n        setCostoPromedioProductoUSDDetails(resultServicio.costo);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Cargar todos los datos de el servicio pro primera ves que se abre el servicio\r\n  const cargarDetailsOfServicio = async () => {\r\n    setAuxOptimizacion(false);\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getServicioByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.fecha.split(\"T\")[0].split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdServicioDetails(result.id_servicio);\r\n        setIdClienteDetails(result.cliente.id_cliente);\r\n        setIdTipoServicioDetails(result.tipo_servicio.id_tipo_servicio);\r\n        setNotaDetails(result.nota);\r\n        setDescripcionDetails(result.descripcion);\r\n        setDevueltoDetails(result.devuelto ? \"devolver\" : \"sin devolver\");\r\n        setIsGarantiaDetails(result.garantia !== null);\r\n        setCantidadTransferencia(result.cantidad_transferida)\r\n        setDuracionGarantiaDetails(\r\n          result.garantia !== null ? result.garantia.duracion : \"\"\r\n        );\r\n        setIdGarantiaDetails(\r\n          result.garantia !== null ? result.garantia.id_garantia : \"\"\r\n        );\r\n        setIdEncargoDetails(\r\n          result.encargo !== null ? result.encargo.id_encargo : \"\"\r\n        );\r\n        setAdelantoEncargo(\r\n          result.encargo !== null ? result.encargo.adelanto : \"\"\r\n        );\r\n        setIdDeudaDetails(result.deuda !== null ? result.deuda.id_deuda : \"\");\r\n        if (result.encargo !== null) {\r\n          const partes: string[] = String(result.encargo.fecha).split(\"-\");\r\n\r\n          // Asignar las partes a variables separadas\r\n          const anio: string = partes[0]; // \"2024\"\r\n          const mes: string = partes[1]; // \"12\"\r\n          const dia: string = partes[2]; // \"16\"\r\n          setFechaAnnoDetailsEncargo(String(parseInt(anio)));\r\n          setFechaMesDetailsEncargo(String(parseInt(mes)));\r\n          setFechaDiaDetailsEncargo(String(parseInt(dia)));\r\n        }\r\n\r\n        // Actualizar variables para la validación de campos\r\n        setIdTipoServicioDetailsViejo(result.tipo_servicio.id_tipo_servicio);\r\n        setDevueltoDetailsViejo(result.devuelto ? \"devolver\" : \"sin devolver\");\r\n        setDuracionGarantiaDetailsVieja(\r\n          result.garantia !== null ? result.garantia.duracion : \"\"\r\n        );\r\n        setIsGarantiaDetailsViejo(result.garantia !== null);\r\n\r\n        // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n        if (\r\n          parseInt(result.tipo_servicio.id_tipo_servicio) === 2\r\n        ) {\r\n          const resultventa = await getVentaByIDOfServicio(\r\n            usuario.token,\r\n            idServicioDetails\r\n          );\r\n          // Obtener entradas del produto para calcular datos del producto\r\n\r\n          // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n          if (resultventa) {\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setIdProductoDetails(resultventa.producto.id_producto);\r\n            setCantidadProductoDetails(resultventa.cantidad);\r\n            setIdTiendaDetails(result.tienda.id_tienda);\r\n            setPrecioUSDDetails(result.precio);\r\n            setPrecioCUPDetails(\r\n              String((parseFloat(result.precio) * cambioMoneda).toFixed(2))\r\n            );\r\n            setCostoPromedioProductoUSDDetails(result.costo_acumulado);\r\n          } else {\r\n            // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setIdProductoDetails(\"\");\r\n            setCantidadProductoDetails(\"\");\r\n            setIdTiendaDetails(\"\");\r\n            setPrecioUSDDetails(\"\");\r\n            setPrecioCUPDetails(\"\");\r\n            setCostoPromedioProductoUSDDetails(\"\");\r\n          }\r\n        } else {\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(false);\r\n          setPrecioUSDDetails(result.precio);\r\n          setPrecioCUPDetails(String((parseInt(result.precio) * cambioMoneda).toFixed(2)));\r\n          setCostoPromedioProductoUSDDetails(result.costo);\r\n        }\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n        // Actualizar fechas para el encargo\r\n        setFechaDiaDetailsEncargo(String(parseInt(day)));\r\n        setFechaMesDetailsEncargo(String(parseInt(month)));\r\n        setFechaAnnoDetailsEncargo(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares;\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n    setAuxOptimizacion(true);\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Servicio[] | null> => {\r\n    if (usuario?.token) {\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      try {\r\n        const result = await filtrarSrvicio(\r\n          usuario.token,\r\n          nombreClienteSearch,\r\n          idTipoServicioSearch,\r\n          resultServicioGeneral ? idTiendaSearch : usuario.id_tienda,\r\n          rangoPrecioDesdeSearch,\r\n          rangoPrecioHastaSearch,\r\n          fechaDesde,\r\n          fechaHasta,\r\n          nombreProductoSearsh\r\n        );\r\n\r\n        if (result) {\r\n          const serviciosMapeados: Servicio[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Servicio: element.id_servicio,\r\n              id_Cliente: element.cliente.id_cliente,\r\n              id_Tienda: element.tienda.id_tienda,\r\n              id_Tipo_servicio: element.tipo_servicio.id_tipo_servicio,\r\n              id_Deuda: \"\",\r\n              id_Garantia: \"\",\r\n              fecha: element.fecha,\r\n              precio: element.precio,\r\n              nota: element.nota,\r\n              descripcion: element.descripcion,\r\n              nombreCliente: element.cliente.nombre,\r\n              nombreTienda: element.tienda.nombre,\r\n              nombreTipoServicio: element.tipo_servicio.nombre,\r\n              nombreProducto: element.venta\r\n                ? element.venta.producto.nombre\r\n                : \"\", // Verifica si 'venta' no es null\r\n              cantidad: element.venta ? element.venta.cantidad : \"\", // Verifica si 'venta' no es null\r\n              devuelto: element.devuelto,\r\n              costo: element.costo,\r\n              cantidad_transferida: element.cantidad_transferida,\r\n              costo_tipo_servicio: element.tipo_servicio.costo\r\n            }))\r\n          );\r\n          return serviciosMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Cargar datos del servicio cuando se seleccionado en la tabla\r\n  useEffect(() => {\r\n    cargarDetailsOfServicio();\r\n  }, [modalEntradasDates]);\r\n\r\n  // Cargar datos de el producto si es que es seleccioando una venta de algun tipoServicio\r\n  useEffect(() => {\r\n    // Actualizar si es Encargo\r\n    if (parseInt(idTipoServicioDetails) === 26) {\r\n      setIsEncargoProducto(true);\r\n    } else {\r\n      setIsEncargoProducto(false);\r\n    }\r\n    cargarDetailsOfProductoVenta();\r\n  }, [idTipoServicioDetails]);\r\n  useEffect(() => {\r\n    if (auxRedondeo === \"PrecioCUP\") {\r\n      setPrecioUSDDetails(parseFloat(precioUSDDetails).toFixed(4));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"PrecioUSD\") {\r\n      setPrecioCUPDetails(parseFloat(precioCUPDetails).toFixed(2));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoCUP\") {\r\n      setCostoPromedioProductoUSDDetails(\r\n        parseFloat(costoPromedioProductoUSDDetails).toFixed(4)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoUSD\") {\r\n      setCostoPromedioProductoCUPDetails(\r\n        parseFloat(costoPromedioProductoCUPDetails).toFixed(2)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    }\r\n    setAuxRedondeo(\"\");\r\n  }, [auxRedondeo]);\r\n\r\n  useEffect(() => {\r\n    const auxiliar = async () => {\r\n      if (usuario?.token) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          idTiendaDetails\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      }\r\n    };\r\n    auxiliar();\r\n  }, [idTiendaDetails]);\r\n  useEffect(() => {\r\n    if (auxOptimizacion) {\r\n      if (\r\n        idProductoDetails !== \"\" &&\r\n        idProductoDetails !== idFirstTimeProducto &&\r\n        usuario?.token\r\n      ) {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n        const auxiliarAsyncFuncion = async () => {\r\n          const resultProdcuto = await getProductoById(\r\n            usuario.token,\r\n            idProductoDetails\r\n          );\r\n\r\n          // Cargar el costo promedio del producto seleccionado\r\n          setCostoPromedioProductoUSDDetails(resultProdcuto.costo_acumulado);\r\n          // Cargar precio del producto seleccioando en USD y CUP\r\n          setPrecioUSDDetails(resultProdcuto.precio ?? 0);\r\n          setPrecioCUPDetails(\r\n            String((parseFloat(resultProdcuto.precio) * cambioMoneda).toFixed(2)) ?? 0\r\n          );\r\n        };\r\n        auxiliarAsyncFuncion();\r\n      } else {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n      }\r\n    }\r\n  }, [idProductoDetails]);\r\n\r\n  // Funcion para controlar la vicion del campo de costo del servicio y del producto\r\n  const isCampoCostoVisible = async () => {\r\n    if (usuario?.token && usuario?.id_usuario) {\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultado =\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n          ? isPermisoServicioGeneral\r\n          : true;\r\n      return resultado;\r\n    }\r\n    return false;\r\n  };\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        setAuxOptimizacion(false);\r\n        await checkPermiso();\r\n        await getTipoServicioPikerDetails();\r\n        await getClientesPikerDetails();\r\n        await getTiendasPikerDetails();\r\n        await getProductosPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarServicios = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let serviciosFiltradas: Servicio[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortServicios?.criterioOrden && sortServicios.tipoOrden) {\r\n          serviciosFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            serviciosFiltradas,\r\n            sortServicios.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        } else {\r\n          serviciosFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            serviciosFiltradas,\r\n            \"option3\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(serviciosFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarServicios(\r\n      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n    );\r\n  }, [sortServicios, selectedOptionTipoOrden]);\r\n  useEffect(() => {\r\n    setSelecterActivoDetails(\"\");\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ]);\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setIdTiendaDetails(usuario?.id_tienda);\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setPrecioCUPDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setCostoPromedioProductoUSDDetails(\"\");\r\n    setIdTipoServicioDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setNotaDetails(\"\");\r\n    setDescripcionDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Extraemos el año, mes y día de la fecha actual\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    setFechaDiaDetails(String(parseInt(day)));\r\n    setFechaMesDetails(String(parseInt(month)));\r\n    setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n    setFechaDiaDetailsEncargo(String(parseInt(day)));\r\n    setFechaMesDetailsEncargo(String(parseInt(month)));\r\n    setFechaAnnoDetailsEncargo(String(parseInt(year)));\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarServicios(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreClienteSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n    setIdTiendaSearch(\"\");\r\n    setIdTipoServicioSearch(\"\");\r\n    setRangoPrecioDesdeSearch(\"\");\r\n    setRangoPrecioHastaSearch(\"\");\r\n    setSelecterActivoDetails(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewServicio = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando servicio. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      const auxIsProductoInTienda = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR SERVICIO. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (\r\n        costoPromedioProductoUSDDetails === \"\" ||\r\n        costoPromedioProductoUSDDetails === undefined\r\n      ) {\r\n        flag = false;\r\n        validarCampos += \"-Digite el costo del servicio.\\n\";\r\n      }\r\n\r\n      if (\r\n        precioUSDDetails === \"\" ||\r\n        costoPromedioProductoUSDDetails === undefined\r\n      ) {\r\n        flag = false;\r\n        validarCampos += \"-Defina el precio cobrado al cliente.\\n\";\r\n      }\r\n      if (idClienteDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione un cliente. Si no hay datos del cliente seleccione anónimo\\n\";\r\n      }\r\n      if (idTipoServicioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione el tipo de servicio que está ofreciendo.\\n\";\r\n      }\r\n      if (isGarantiaDetails && duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (isGarantiaDetails && parseInt(idClienteDetails) === 1) {\r\n        flag = false;\r\n        validarCampos += \"-El ciente Anónimo no puede tener garantías\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (parseFloat(cantidadTransferencia) > (parseFloat(precioCUPDetails) * parseInt(cantidadProductoDetails))) {\r\n        flag = false;\r\n        validarCampos += \"-La cantidad de la transferencia es mayor que el precio del producto. \\n\";\r\n      }\r\n      if (auxIsProductoInTienda) {\r\n        if (\r\n          parseInt(auxIsProductoInTienda.cantidad) <\r\n          parseInt(cantidadProductoDetails)\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que desea vender es mayor que la cantidad que hay en la tienda.\\n\";\r\n        }\r\n      }\r\n      // Validaciones si es una venta\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        if (idProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos += \"-Seleccione un producto para vender.\\n\";\r\n        }\r\n        if (cantidadProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Defina la cantidad que desea vender del producto.\\n\";\r\n        }\r\n      }\r\n      // Validacion si es un encargo\r\n      if (parseInt(idTipoServicioDetails) === 26) {\r\n        const fechaBase = new Date(\r\n          `${fechaAnnoDetails}-${fechaMesDetails}-${fechaDiaDetails}`\r\n        );\r\n        const fechaEncargo = new Date(\r\n          `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`\r\n        );\r\n\r\n        if (parseInt(idClienteDetails) === 1) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-No se puede hacer un encargo al cliente Anónimo.\\n\";\r\n        }\r\n        if (fechaEncargo < fechaBase) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La fecha del encargo no puede ser menor que la fecha del servicio.\\n\";\r\n        }\r\n      }\r\n      // Validacion de deuda\r\n      if (isDeudaDetails && !isEncargoProducto) {\r\n        if (parseFloat(adelantoUSDDeudaDetails) > parseFloat(precioUSDDetails)) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-El adelanto inicial de la deuda es mayor que el monto a cobrar por el servicio.\\n\";\r\n        }\r\n        if (parseInt(idClienteDetails) === 1) {\r\n          flag = false;\r\n          validarCampos += \"-El cliente Anónimo no puede tener deudas\";\r\n        }\r\n      }\r\n\r\n      if (flag) {\r\n        const resultAddServicio = await addServicio(\r\n          usuario.token,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          precioUSDDetails,\r\n          notaDetails,\r\n          descripcionDetails,\r\n          idTiendaDetails,\r\n          idTipoServicioDetails,\r\n          costoPromedioProductoUSDDetails,\r\n          (cantidadTransferencia === \"\")? \"0\" : cantidadTransferencia,\r\n          idClienteDetails,\r\n          \"Not suport yet\",\r\n          \"not suport yet\"\r\n        );\r\n        console.log(resultAddServicio);\r\n        \r\n\r\n        //Agregar Garantía si es que hay\r\n        if (isGarantiaDetails) {\r\n          await addGarantia(\r\n            usuario.token,\r\n            duracionGarantiaDetails,\r\n            resultAddServicio.id_servicio\r\n          );\r\n        }\r\n        // Agregar Deuda y pago de deuda si es que existen\r\n        if (isDeudaDetails) {\r\n          const resultDeuda = await addDeuda(\r\n            usuario.token,\r\n            precioUSDDetails,\r\n            resultAddServicio.id_servicio,\r\n            undefined\r\n          );\r\n          if (adelantoUSDDeudaDetails && parseFloat(adelantoUSDDeudaDetails) > 0) {\r\n            await addPagoDeuda(\r\n              usuario.token,\r\n              adelantoUSDDeudaDetails,\r\n              `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n              resultDeuda.id_deuda\r\n            );\r\n          }\r\n        }\r\n\r\n        //Agregar venta si es que es necezario\r\n        if (\r\n          parseInt(idTipoServicioDetails) === 2 ||\r\n          parseInt(idTipoServicioDetails) === 25\r\n        ) {\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            resultAddServicio.id_servicio,\r\n            cantidadProductoDetails\r\n          );\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n\r\n          // Agregar Acción de usuario agregar servicio normal\r\n          const nombreCliente = dropdownItemsNombreCliente.find((element) => {\r\n            return element.value === idClienteDetails;\r\n          });\r\n          const nombreTipoServicio = dropdownItemsNombreTipoServicio.find(\r\n            (element) => {\r\n              return element.value === idTipoServicioDetails;\r\n            }\r\n          );\r\n          const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n            return element.value === idProductoDetails;\r\n          });\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un servicio del tipo de servicio ${nombreTipoServicio?.label} al cliente ${nombreCliente?.label}. Se vendió una cantidad de ${cantidadProductoDetails} del producto ${nombreProducto?.label} a un precio de ${precioUSDDetails} USD`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        } else {\r\n          // Si no es venta de ningun tipo comprobar si es encargo\r\n          if (parseInt(idTipoServicioDetails) === 26) {\r\n            await addEncargo(\r\n              usuario.token,\r\n              adelantoEncargo,\r\n              `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`,\r\n              resultAddServicio.id_servicio\r\n            );\r\n          }\r\n\r\n          // Agregar Acción de usuario agregar servicio normal\r\n          const nombreCliente = dropdownItemsNombreCliente.find((element) => {\r\n            return element.value === idClienteDetails;\r\n          });\r\n          const nombreTipoServicio = dropdownItemsNombreTipoServicio.find(\r\n            (element) => {\r\n              return element.value === idTipoServicioDetails;\r\n            }\r\n          );\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un servicio del tipo de servicio ${nombreTipoServicio?.label} a un precio de ${precioUSDDetails} USD al cliente ${nombreCliente?.label}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        }\r\n\r\n        await createProductoInTienda(\r\n          usuario.token,\r\n          idTipoServicioDetails,\r\n          idTiendaDetails\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El servicio se agregó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setPrecioCUPDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setCostoPromedioProductoUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setNotaDetails(\"\");\r\n        setDescripcionDetails(\"\");\r\n        setDuracionGarantiaDetails(\"\");\r\n\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarServicioFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando servicio. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let cantidadEnTiendaNueva: number = 0;\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      if (result) {\r\n        cantidadEnTiendaNueva = result.cantidad;\r\n      }\r\n\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR EL SERVICIO. Compruebe los siguientes campos:\\n\";\r\n\r\n      if (idClienteDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione un cliente. Si no hay datos del cliente seleccione anónimo\\n\";\r\n      }\r\n      if (idTipoServicioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione el tipo de servicio que está ofreciendo.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (parseFloat(cantidadTransferencia) > (parseFloat(precioCUPDetails) * parseInt(cantidadProductoDetails))) {\r\n        flag = false;\r\n        validarCampos += \"-La cantidad de la transferencia es mayor que el precio del producto. \\n\";\r\n      }\r\n      if (isGarantiaDetails && duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (costoPromedioProductoUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Digite el costo del servicio.\\n\";\r\n      }\r\n      if (precioUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina el precio cobrado al cliente.\\n\";\r\n      }\r\n      if (isGarantiaDetails && duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (isGarantiaDetails && parseInt(idClienteDetails) === 1) {\r\n        flag = false;\r\n        validarCampos += \"-El ciente Anónimo no puede tener garantías\";\r\n      }\r\n      // Validacion si es un encargo\r\n      if (parseInt(idTipoServicioDetails) === 26) {\r\n        const fechaBase = new Date(\r\n          `${fechaAnnoDetails}-${fechaMesDetails}-${fechaDiaDetails}`\r\n        );\r\n        const fechaEncargo = new Date(\r\n          `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`\r\n        );\r\n\r\n        if (parseInt(idClienteDetails) === 1) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-No se puede hacer un encargo al cliente Anónimo.\\n\";\r\n        }\r\n        if (fechaEncargo < fechaBase) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La fecha del encargo no puede ser menor que la fecha del servicio.\\n\";\r\n        }\r\n      }\r\n      // Validaciones si es una venta\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        if (idProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos += \"-Seleccione un producto para vender.\\n\";\r\n        }\r\n        if (cantidadProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Defina la cantidad que desea vender del producto.\\n\";\r\n        }\r\n      }\r\n      // validación de campos avanzada\r\n      if (\r\n        cantidadEnTiendaNueva + parseInt(cantidadProductoDetailsViejo) <\r\n        parseInt(cantidadProductoDetails)\r\n      ) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-La cantidad que desea modificar es mayor que la cantidad que hay en la tienda.\\n\";\r\n      }\r\n      // se modificó solo la cantidad del producto\r\n      if (\r\n        (cantidadProductoDetails !== cantidadProductoDetailsViejo &&\r\n          idProductoDetails === idProductoDetailsViejo &&\r\n          idTiendaDetails === idTiendaDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 2) ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        if (\r\n          cantidadEnTiendaNueva + parseInt(cantidadProductoDetailsViejo) <\r\n          parseInt(cantidadProductoDetailsViejo) -\r\n            parseInt(cantidadProductoDetails)\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que hay en la tienda no es suficiente para modificar la venta del producto.\\n\";\r\n        }\r\n      } else if (\r\n        idProductoDetails !== idProductoDetailsViejo ||\r\n        idTiendaDetails !== idTiendaDetailsViejo\r\n      ) {\r\n        if (cantidadEnTiendaNueva < parseInt(cantidadProductoDetails)) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que hay en la tienda no es suficiente para modificar la venta del producto.\\n\";\r\n        }\r\n      }\r\n      if (flag) {\r\n        await modificarServicio(\r\n          usuario.token,\r\n          idServicioDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          precioUSDDetails,\r\n          notaDetails,\r\n          idTiendaDetails,\r\n          idTipoServicioDetails,\r\n          costoPromedioProductoUSDDetails,\r\n          (cantidadTransferencia === \"\")? \"0\" : cantidadTransferencia,\r\n          devueltoDetails === \"devolver\",\r\n          idClienteDetails,\r\n          \"Not suport yet\",\r\n          \"not suport yet\"\r\n        );\r\n\r\n        // Actualizar Garantía\r\n        if (\r\n          isGarantiaDetails !== isGarantiaDetailsViejo ||\r\n          duracionGarantiaDetails !== duracionGarantiaDetailsVieja\r\n        ) {\r\n          if (isGarantiaDetails) {\r\n            if (idGarantiaDetails !== \"\") {\r\n              await modificarGarantia(\r\n                usuario.token,\r\n                duracionGarantiaDetails,\r\n                idServicioDetails,\r\n                idGarantiaDetails\r\n              );\r\n            } else {\r\n              await addGarantia(\r\n                usuario.token,\r\n                duracionGarantiaDetails,\r\n                idServicioDetails\r\n              );\r\n            }\r\n          } else {\r\n            await deleteGarantia(usuario.token, idGarantiaDetails);\r\n          }\r\n        }\r\n        // Actualizar encargo\r\n        if (\r\n          idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetailsViejo) === 26\r\n        ) {\r\n          await deleteEncargo(usuario.token, idEncargoDetails);\r\n        } else if (\r\n          idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 26\r\n        ) {\r\n          await addEncargo(\r\n            usuario.token,\r\n            adelantoEncargo,\r\n            `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`,\r\n            idServicioDetails\r\n          );\r\n        } else if (\r\n          idTipoServicioDetails === idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 26\r\n        ) {\r\n          await modificarEncargo(\r\n            usuario.token,\r\n            adelantoEncargo,\r\n            `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`,\r\n            idServicioDetails,\r\n            idEncargoDetails\r\n          );\r\n        }\r\n        // Si se cambio de tipo de servicio venta a otro\r\n        if (\r\n          (parseInt(idTipoServicioDetailsViejo) === 2) &&\r\n          parseInt(idTipoServicioDetails) !== 2 &&\r\n          parseInt(idTipoServicioDetails) !== 4\r\n        ) {\r\n          // Se suma la cantidad de la venta pasada en la tienda\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // Se elimina la venta\r\n          await deleteVenta(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idServicioDetails\r\n          );\r\n        }\r\n\r\n        // Comprobar si solamente se cambio la cantidad si es que el tip ode sericio viejo era ya una venta\r\n        if (\r\n          cantidadProductoDetails !== cantidadProductoDetailsViejo &&\r\n          idProductoDetails === idProductoDetailsViejo &&\r\n          idTiendaDetails === idTiendaDetailsViejo\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${\r\n              parseInt(cantidadProductoDetails) -\r\n              parseInt(cantidadProductoDetailsViejo)\r\n            }`\r\n          );\r\n          // Agregar o sobreescrivir la venta\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // Si no es el caso se modificó el id del producto o l tienda volviendo para atras la venta a la tienda y haciendola denuevo con lso nuevos datos de la venta\r\n        } else if (\r\n          (idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n            parseInt(idTipoServicioDetails) === 2) ||\r\n          parseInt(idTipoServicioDetails) === 25\r\n        ) {\r\n          // Agregar o sobreescrivir la venta\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // sumar en la tienda la cantidad vieja del producto para volver atras la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // restar en la tienda nueva o vieja donde se este haciendo la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        } else if (\r\n          idTiendaDetails !== idTiendaDetailsViejo ||\r\n          idProductoDetails !== idProductoDetailsViejo\r\n        ) {\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // sumar en la tienda la cantidad vieja del producto para volver atras la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // restar en la tienda nueva o vieja donde se este haciendo la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        }\r\n\r\n        // Si es una devolucion y ademas el tipo de servicio actual es una venta se devuelve la cantidad a la tienda\r\n        if (\r\n          devueltoDetails !== devueltoDetailsViejo &&\r\n          devueltoDetails === \"devolver\" &&\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 25)\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails) * -1}`\r\n          );\r\n        } else if (\r\n          devueltoDetails !== devueltoDetailsViejo &&\r\n          devueltoDetails === \"sin devolver\" &&\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 25)\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        }\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó una entrada de originalmente ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          7\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El servicio se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarServicioFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando servicio. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR SERVICIO. Compruebe los siguientes parámetros:\\n\";\r\n\r\n      if (flag) {\r\n        const resultServicio = await getServicioByID(\r\n          usuario.token,\r\n          idServicioDetails\r\n        );\r\n        const resultventa = await getVentaByIDOfServicio(\r\n          usuario.token,\r\n          idServicioDetails\r\n        );\r\n        // Eliminar Garantía si es que existe\r\n        if (isGarantiaDetailsViejo) {\r\n          await deleteGarantia(usuario.token, idGarantiaDetails);\r\n        }\r\n        // Eliminar deuda\r\n        if (idDeudaDetails !== \"\") {\r\n          const resultDeuda = await getDeudaByID(usuario.token, idDeudaDetails);\r\n          if (\r\n            Array.isArray(resultDeuda.deuda.pagos_deuda) &&\r\n            resultDeuda.deuda.pagos_deuda.length > 0\r\n          ) {\r\n            // Eliminar los pagoDeuda\r\n            resultDeuda.deuda.pagos_deuda.map(async (pagoDeuda: any) => {\r\n              await deletePagoDeuda(usuario.token, pagoDeuda.id_pago_deuda);\r\n            });\r\n          }\r\n          await deleteDeuda(usuario.token, idDeudaDetails);\r\n        }\r\n        // Eliminar Encargo\r\n        // Actualizar encargo\r\n        if (parseInt(idTipoServicioDetailsViejo) === 26) {\r\n          await deleteEncargo(usuario.token, idEncargoDetails);\r\n        }\r\n        // Eliminar la venta y sumar en proucto tienda si es que era una venta y no se havia echo devolución\r\n        if (\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 25) &&\r\n          devueltoDetailsViejo === \"sin devolver\"\r\n        ) {\r\n          await deleteVenta(\r\n            usuario.token,\r\n            resultventa.producto.id_producto,\r\n            resultServicio.id_servicio\r\n          );\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            resultventa.producto.id_producto,\r\n            resultServicio.tienda.id_tienda,\r\n            `${parseInt(resultventa.cantidad) * -1}`\r\n          );\r\n        } else if (\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 25) &&\r\n          devueltoDetailsViejo === \"devolver\"\r\n        ) {\r\n          // Solo se elimina la venta porque ya se sumó en producto tienda si es devolución\r\n          await deleteVenta(\r\n            usuario.token,\r\n            resultventa.producto.id_producto,\r\n            resultServicio.id_servicio\r\n          );\r\n        }\r\n        await deleteServicio(usuario.token, idServicioDetails);\r\n\r\n        if (parseInt(idServicioDetails) === 2) {\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la el servicio de venta de la tienda ${resultServicio.tienda.nombre}. La venta eliminada fue del producto ${nombreClienteSearch}, se sumo una canidad de ${resultventa.cantidad} nuevamente en la tienda cuyo producto valía ${resultventa.precio} y se vendió una cantidad de ${resultventa.cantidad}.`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        } else {\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la un servicio de la tienda ${resultServicio.tienda.nombre} por el cual se había cobrado ${resultServicio.precio} y tenía un costo de ${resultServicio.costo}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        }\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El servicio se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setPrecioCUPDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setCostoPromedioProductoUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setNotaDetails(\"\");\r\n        setDescripcionDetails(\"\");\r\n        setDuracionGarantiaDetails(\"\");\r\n\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre Cliente\",\r\n    \"Tienda\",\r\n    \"Tipo de Servicio\",\r\n    \"Precio USD\",\r\n    \"Precio CUP\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre Cliente\",\r\n    \"Tienda\",\r\n    \"Tipo de Servicio\",\r\n    \"Precio USD\",\r\n    \"Precio CUP\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarServicio && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Servicio</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableServicios\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearsh}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Cliente:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del cliente\"\r\n                    value={nombreClienteSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreClienteSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Tipo de Servicio:\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadTipoServicioSearsh,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={idTipoServicioSearch}\r\n                      placeholder=\"Seleccione un tipo de servicio\"\r\n                      setValue={setIdTipoServicioSearch}\r\n                      items={dropdownItemsNombreTipoServicio}\r\n                      direction=\"BOTTOM\"\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioSearsh\")\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {isPermisoServicioGeneral && (\r\n                    <View style={styles.separatorBlanco} />\r\n                  )}\r\n\r\n                  {isPermisoServicioGeneral && (\r\n                    <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n                  )}\r\n                  {isPermisoServicioGeneral && (\r\n                    <View\r\n                      style={{\r\n                        width: \"100%\",\r\n                        zIndex: capaPrioridadTiendaSearsh,\r\n                        position: \"relative\",\r\n                      }}\r\n                    >\r\n                      <CustomDropdown\r\n                        value={idTiendaSearch}\r\n                        placeholder=\"Seleccione un tienda\"\r\n                        setValue={setIdTiendaSearch}\r\n                        items={dropdownItemsNombreTienda}\r\n                        direction=\"BOTTOM\"\r\n                        onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Rango de Precio en USD:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyDesktop}\r\n                      placeholder=\"Desde\"\r\n                      value={rangoPrecioDesdeSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyDesktop}\r\n                      placeholder=\"Hasta\"\r\n                      value={rangoPrecioHastaSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioHastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaDesdeSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaHastaSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() =>\r\n                          filtrarYOrdenarServicios(\r\n                            `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                            `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                          )\r\n                        }\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Servicio\"\r\n                  : \"Datos del Servicio\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idClienteDetails}\r\n                    placeholder=\"Seleccione un Cliente\"\r\n                    setValue={setIdClienteDetails}\r\n                    items={dropdownItemsNombreCliente}\r\n                    searchable={true}\r\n                    readOnly={\r\n                      !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                    }\r\n                    onDropdownOpen={() => controlarCapas(\"ClienteDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDetails}\r\n                      placeholder=\"Seleccione una tienda\"\r\n                      setValue={setIdTiendaDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={\r\n                        !(isPermisoServicioGeneral &&\r\n                        modalEntradasDates?.id_entrada === \"\"\r\n                          ? true\r\n                          : isPermisoServicioGeneral &&\r\n                            isPermisoModificarServicio)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTipoServicioDetails}\r\n                      placeholder=\"Seleccione un tipo de servicio\"\r\n                      setValue={setIdTipoServicioDetails}\r\n                      items={dropdownItemsNombreTipoServicio}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: 500,\r\n                  }}\r\n                >\r\n                  {/* Pago por ptransferencia */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    {isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Adelanto del encargo\r\n                      </Text>\r\n                    )}\r\n                    {isEncargoProducto && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={adelantoEncargo}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n                          setAdelantoEncargo(validNumericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={true}\r\n                        placeholder=\"Adelanto del encargo\"\r\n                      />\r\n                    )}\r\n\r\n                    <View style={{ marginTop: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad Pagada por Transferencia CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={cantidadTransferencia}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n                          setCantidadTransferencia(validNumericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad Pagada por Transferencia CUP\"\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  {/*  */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    {!isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Genera Deuda\r\n                      </Text>\r\n                    )}\r\n                    {!isEncargoProducto && (\r\n                      <CustomRadioButtonSingle\r\n                        onPress={() => setIsDeudaDetails(!isDeudaDetails)}\r\n                        selected={isDeudaDetails}\r\n                        label=\"Deuda\"\r\n                      />\r\n                    )}\r\n\r\n                    {isDateLoaded && isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Fecha llegada\r\n                      </Text>\r\n                    )}\r\n                    {isDateLoaded && isEncargoProducto && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetailsEncargo}\r\n                        monthValue={fechaMesDetailsEncargo}\r\n                        yearValue={fechaAnnoDetailsEncargo}\r\n                        onDayChange={setFechaDiaDetailsEncargo}\r\n                        onMonthChange={setFechaMesDetailsEncargo}\r\n                        onYearChange={setFechaAnnoDetailsEncargo}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n\r\n                    {isDeudaDetails &&\r\n                      !isEncargoProducto &&\r\n                      modalEntradasDates?.id_entrada === \"\" && (\r\n                        <View style={{ marginTop: \"2%\" }}>\r\n                          <Text style={styles.labelTextModalDesktop}>\r\n                            Adelanto inicial de la deuda en USD:\r\n                          </Text>\r\n                          <CustomTextImputSearch\r\n                            style={styles.textImputModal}\r\n                            value={adelantoUSDDeudaDetails}\r\n                            onChangeText={(text) => {\r\n                              // Permite solo números y un punto decimal\r\n                              const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                              // Asegura que solo haya un punto decimal\r\n                              const validNumericValue =\r\n                                numericValue.split(\".\").length > 2\r\n                                  ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                                  : numericValue;\r\n                          \r\n                              setAdelantoUSDDeudaDetails(validNumericValue);\r\n                              const costoCUP = parseFloat(validNumericValue) * cambioMoneda;\r\n                              setAdelantoCUPDeudaDetails(costoCUP.toFixed(2));\r\n                            }}\r\n                            cursorColor={Colors.azul_Oscuro}\r\n                            editable={\r\n                              isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                            }\r\n                            placeholder=\"Adelanto\"\r\n                          />\r\n                        </View>\r\n                      )}\r\n\r\n                    {!isEncargoProducto &&\r\n                      isDeudaDetails &&\r\n                      modalEntradasDates?.id_entrada === \"\" && (\r\n                        <Text style={styles.labelTextModalDesktop}>\r\n                          Adelanto inicial de la deuda en CUP:\r\n                        </Text>\r\n                      )}\r\n                    {!isEncargoProducto &&\r\n                      isDeudaDetails &&\r\n                      modalEntradasDates?.id_entrada === \"\" && (\r\n                        <CustomTextImputSearch\r\n                            style={styles.textImputModal}\r\n                            value={adelantoCUPDeudaDetails}\r\n                            onChangeText={(text) => {\r\n                              // Permite solo números y un punto decimal\r\n                              const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                              // Asegura que solo haya un punto decimal\r\n                              const validNumericValue =\r\n                                numericValue.split(\".\").length > 2\r\n                                  ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                                  : numericValue;\r\n                          \r\n                              setAdelantoCUPDeudaDetails(validNumericValue);\r\n                              const costoUSD = parseFloat(validNumericValue) / cambioMoneda;\r\n                              setAdelantoUSDDeudaDetails(costoUSD.toFixed(5));\r\n                            }}\r\n                            cursorColor={Colors.azul_Oscuro}\r\n                            editable={\r\n                              isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                            }\r\n                            placeholder=\"Adelanto\"\r\n                          />\r\n                      )}\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdownDetails\r\n                      value={idProductoDetails}\r\n                      placeholder=\"Seleccione un produto\"\r\n                      setValue={setIdProductoDetails}\r\n                      items={dropdownItemsNombreproducto}\r\n                      searchable={true}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      onDropdownOpen={() => controlarCapas(\"ProductoDetails\")}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={cantidadProductoDetails}\r\n                        onChangeText={(text) => {\r\n                          // Filtra caracteres no numéricos\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                          setCantidadProductoDetails(numericValue);\r\n                        }}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad del producto\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoUSDDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoCUPDetails(\r\n                              String(\r\n                                (\r\n                                  parseFloat(validNumericValue) * cambioMoneda\r\n                                ).toFixed(2)\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoCUPDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoUSDDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoUSD\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoCUPDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoUSDDetails(\r\n                              String(\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoUSDDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoCUPDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoCUP\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={precioUSDDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioCUPDetails(\r\n                            String(\r\n                              (\r\n                                parseFloat(validNumericValue) * cambioMoneda\r\n                              ).toFixed(2)\r\n                            )\r\n                          );\r\n                        } else {\r\n                          setPrecioCUPDetails(\"0\");\r\n                        }\r\n                        setPrecioUSDDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioUSD\");\r\n                      }}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en usd\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModalNOEDITABLE}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioUSDDetails(\r\n                            String((parseFloat(validNumericValue) / cambioMoneda).toFixed(5))\r\n                          );\r\n                        } else {\r\n                          setPrecioUSDDetails(\"0\");\r\n                        }\r\n                        setPrecioCUPDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioCUP\");\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en cup\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && (<View style={{\r\n                  width: \"100%\",\r\n                  justifyContent: \"center\", // Para separar los campos de forma uniforme\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"row\",\r\n                  paddingHorizontal: 10,\r\n                }}>\r\n                  <Text>{mensajeSumaVenta()}</Text>\r\n                </View>)}\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={notaDetails}\r\n                      onChangeText={setNotaDetails}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Nota\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del servicio\"\r\n                  multiline={true}\r\n                  editable={\r\n                    isPermisoModificarServicio || isPermisoServicioLocal\r\n                  }\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este servicio?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarServicio &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewServicio()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al este servicio?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarServicioFunction()\r\n                      : modificarServicioFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Ventas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarServicio && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Servicio\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearsh}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Cliente:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del cliente\"\r\n              value={nombreClienteSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreClienteSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Tipo de Servicio:</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                zIndex: capaPrioridadTipoServicioSearsh,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={idTipoServicioSearch}\r\n                placeholder=\"Seleccione un tipo de servicio\"\r\n                setValue={setIdTipoServicioSearch}\r\n                items={dropdownItemsNombreTipoServicio}\r\n                direction=\"BOTTOM\"\r\n                onDropdownOpen={() => controlarCapas(\"TipoServicioSearsh\")}\r\n              />\r\n            </View>\r\n\r\n            {isPermisoServicioGeneral && (\r\n              <View style={styles.separatorBlanco} />\r\n            )}\r\n\r\n            {isPermisoServicioGeneral && (\r\n              <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n            )}\r\n            {isPermisoServicioGeneral && (\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  zIndex: capaPrioridadTiendaSearsh,\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <CustomDropdown\r\n                  value={idTiendaSearch}\r\n                  placeholder=\"Seleccione un tienda\"\r\n                  setValue={setIdTiendaSearch}\r\n                  items={dropdownItemsNombreTienda}\r\n                  direction=\"BOTTOM\"\r\n                  onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n                />\r\n              </View>\r\n            )}\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              Rango de Precio en USD:\r\n            </Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={rangoPrecioDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={rangoPrecioHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioHastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() =>\r\n                    filtrarYOrdenarServicios(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    )\r\n                  }\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableServicios\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Servicio\"\r\n                  : \"Datos del Servicio\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idClienteDetails}\r\n                    placeholder=\"Seleccione un Cliente\"\r\n                    setValue={setIdClienteDetails}\r\n                    items={dropdownItemsNombreCliente}\r\n                    searchable={true}\r\n                    readOnly={\r\n                      !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                    }\r\n                    onDropdownOpen={() => controlarCapas(\"ClienteDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDetails}\r\n                      placeholder=\"Seleccione una tienda\"\r\n                      setValue={setIdTiendaDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={\r\n                        !(isPermisoServicioGeneral &&\r\n                        modalEntradasDates?.id_entrada === \"\"\r\n                          ? true\r\n                          : isPermisoServicioGeneral &&\r\n                            isPermisoModificarServicio)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTipoServicioDetails}\r\n                      placeholder=\"Seleccione un tipo de servicio\"\r\n                      setValue={setIdTipoServicioDetails}\r\n                      items={dropdownItemsNombreTipoServicio}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: 500,\r\n                  }}\r\n                >\r\n                  {/* Garantías */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    {isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Adelanto del encargo\r\n                      </Text>\r\n                    )}\r\n                    {isEncargoProducto && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={adelantoEncargo}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n                          setAdelantoEncargo(validNumericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={true}\r\n                        placeholder=\"Adelanto del encargo\"\r\n                      />\r\n                    )}\r\n\r\n                    <View style={{ marginTop: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad Pagada por Transferencia CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={cantidadTransferencia}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n                          setCantidadTransferencia(validNumericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad Pagada por Transferencia CUP\"\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  {/*  */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    {!isEncargoProducto &&\r\n                      modalEntradasDates?.id_entrada === \"\" && (\r\n                        <Text style={styles.labelTextModalDesktop}>\r\n                          Genera Deuda\r\n                        </Text>\r\n                      )}\r\n                    {!isEncargoProducto &&\r\n                      modalEntradasDates?.id_entrada === \"\" && (\r\n                        <CustomRadioButtonSingle\r\n                          onPress={() => setIsDeudaDetails(!isDeudaDetails)}\r\n                          selected={isDeudaDetails}\r\n                          label=\"Deuda\"\r\n                        />\r\n                      )}\r\n\r\n                    {isDateLoaded && isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Fecha llegada\r\n                      </Text>\r\n                    )}\r\n                    {isDateLoaded && isEncargoProducto && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetailsEncargo}\r\n                        monthValue={fechaMesDetailsEncargo}\r\n                        yearValue={fechaAnnoDetailsEncargo}\r\n                        onDayChange={setFechaDiaDetailsEncargo}\r\n                        onMonthChange={setFechaMesDetailsEncargo}\r\n                        onYearChange={setFechaAnnoDetailsEncargo}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n\r\n                    {isDeudaDetails && !isEncargoProducto && (\r\n                      <View style={{ marginTop: \"2%\" }}>\r\n                        <Text style={styles.labelTextModalDesktop}>\r\n                          Adelanto inicial de la deuda en USD:\r\n                        </Text>\r\n                        <CustomTextImputSearch\r\n                          style={styles.textImputModal}\r\n                          value={adelantoUSDDeudaDetails}\r\n                          onChangeText={(text) => {\r\n                            // Permite solo números y un punto decimal\r\n                            const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                            // Asegura que solo haya un punto decimal\r\n                            const validNumericValue =\r\n                              numericValue.split(\".\").length > 2\r\n                                ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                                : numericValue;\r\n                        \r\n                            setAdelantoUSDDeudaDetails(validNumericValue);\r\n                            const costoCUP = parseFloat(validNumericValue) * cambioMoneda;\r\n                            setAdelantoCUPDeudaDetails(costoCUP.toFixed(2));\r\n                          }}\r\n                          cursorColor={Colors.azul_Oscuro}\r\n                          editable={\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          }\r\n                          placeholder=\"Adelanto\"\r\n                        />\r\n                      </View>\r\n                    )}\r\n\r\n                    {!isEncargoProducto && isDeudaDetails && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Adelanto inicial de la deuda en CUP:\r\n                      </Text>\r\n                    )}\r\n                    {!isEncargoProducto && isDeudaDetails && (\r\n                      <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={adelantoCUPDeudaDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n                    \r\n                        setAdelantoCUPDeudaDetails(validNumericValue);\r\n                        const costoUSD = parseFloat(validNumericValue) / cambioMoneda;\r\n                        setAdelantoUSDDeudaDetails(costoUSD.toFixed(5));\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        isPermisoModificarServicio ||\r\n                        isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Adelanto\"\r\n                    />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdownDetails\r\n                      value={idProductoDetails}\r\n                      placeholder=\"Seleccione un produto\"\r\n                      setValue={setIdProductoDetails}\r\n                      items={dropdownItemsNombreproducto}\r\n                      searchable={true}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      onDropdownOpen={() => controlarCapas(\"ProductoDetails\")}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={cantidadProductoDetails}\r\n                        onChangeText={(text) => {\r\n                          // Filtra caracteres no numéricos\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                          setCantidadProductoDetails(numericValue);\r\n                        }}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad del producto\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={`USD: ${costoPromedioProductoUSDDetails}  CUP: ${(parseFloat(costoPromedioProductoUSDDetails) * cambioMoneda).toFixed(2)}`}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoCUPDetails(\r\n                              String(\r\n                                (\r\n                                  parseFloat(validNumericValue) * cambioMoneda\r\n                                ).toFixed(2)\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoCUPDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoUSDDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoUSD\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoCUPDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoUSDDetails(\r\n                              String(\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoUSDDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoCUPDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoCUP\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={precioUSDDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioCUPDetails(\r\n                            String(\r\n                              (\r\n                                parseFloat(validNumericValue) * cambioMoneda\r\n                              ).toFixed(2)\r\n                            )\r\n                          );\r\n                        } else {\r\n                          setPrecioCUPDetails(\"0\");\r\n                        }\r\n                        setPrecioUSDDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioUSD\");\r\n                      }}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en usd\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModalNOEDITABLE}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioUSDDetails(\r\n                            String((parseFloat(validNumericValue) / cambioMoneda).toFixed(5))\r\n                          );\r\n                        } else {\r\n                          setPrecioUSDDetails(\"0\");\r\n                        }\r\n                        setPrecioCUPDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioCUP\");\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en cup\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && (<View style={{\r\n                  width: \"100%\",\r\n                  justifyContent: \"center\", // Para separar los campos de forma uniforme\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"row\",\r\n                  paddingHorizontal: 10,\r\n                }}>\r\n                  <Text>{mensajeSumaVenta()}</Text>\r\n                </View>)}\r\n\r\n                {/*Campo de los check bootom */}\r\n                {modalEntradasDates?.id_entrada !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        marginTop: \"3%\",\r\n                        color: Colors.negro, // Color del texto\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Hacer Devolución\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                {modalEntradasDates?.id_entrada !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    {optionsDevueltoDetails.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={devueltoDetails === option.value}\r\n                        onPress={() => {\r\n                          if (\r\n                            modalEntradasDates?.id_entrada === \"\"\r\n                              ? true\r\n                              : isPermisoModificarServicio\r\n                          ) {\r\n                            setDevueltoDetails(option.value);\r\n                          }\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n                )}\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={notaDetails}\r\n                      onChangeText={setNotaDetails}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Nota\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del servicio\"\r\n                  multiline={true}\r\n                  editable={\r\n                    isPermisoModificarServicio || isPermisoServicioLocal\r\n                  }\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este servicio?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarServicio &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewServicio()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al este servicio?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarServicioFunction()\r\n                      : modificarServicioFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Ventas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import Navbar from \"../components/Navbar\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport React, { useEffect, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  Image,\r\n  Modal,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getUsuarioById, iniciarSecionUser } from \"../services/UsuarioServices\";\r\nimport { getPermisosOfRol, RolPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { useSelectedButon } from \"../contexts/globalButonNavbarSelected\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\n\r\nexport default function LoginView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  //Datos de el usuario\r\n  const { setUsuario, usuario } = useUsuario();\r\n  const { setSelectedButon, selectedButon } = useSelectedButon();\r\n\r\n  // Estilo según la vita desktop o movil\r\n  const ContainerStyle = isMobile\r\n    ? styles.loginContainerStilesMovil\r\n    : styles.loginContainerStilesDesktop;\r\n\r\n  // Constantes para controlar el estado del Modal\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n  // Variables para los datos de los usuarios\r\n  const [username, setUsername] = useState(\"\");\r\n  const [pasword, setPasword] = useState(\"\");\r\n\r\n  // Funciones de servicios con los usuarios\r\n  const iniciarSecion = async () => {\r\n    \r\n    if (username.trim() != \"\" && pasword.trim() != \"\") {\r\n      \r\n      const resultUserAuth = await iniciarSecionUser(username, pasword);\r\n    // Comprueba si result es false\r\n    if (resultUserAuth) {\r\n      // Si result no es false, se manejan la resuesta\r\n      // Obtener más datos de los usuarios\r\n      const resultUserDates = await getUsuarioById(resultUserAuth.data.token,resultUserAuth.data.id_usuario);\r\n      \r\n      if (resultUserDates) {\r\n        // Guardamos el usuario en el contexto\r\n        const permisos: RolPermiso[] | false = await getPermisosOfRol(resultUserAuth.data.token, resultUserAuth.data.rol.id_rol);\r\n        if (permisos) {\r\n          setUsuario({\r\n            id_usuario: resultUserDates.data.id_usuario,\r\n            nombre: resultUserAuth.data.nombre,\r\n            telefono: resultUserDates.data.telefono, // Usa undefined si no hay valor\r\n            direccion: resultUserDates.data.direccion, // Usa undefined si no hay valor\r\n            carnet_identidad: resultUserDates.data.carnet_identidad, // Usa undefined si no hay valor\r\n            detalles_bancarios: resultUserDates.data.detalles_bancarios, // Usa undefined si no hay valor\r\n            nombre_usuario: username, // Esta propiedad es obligatoria\r\n            email: resultUserDates.data.email, // Esta propiedad es obligatoria\r\n            token: resultUserAuth.data.token,\r\n            id_rol: resultUserAuth.data.rol.id_rol,\r\n            nombre_rol: resultUserAuth.data.rol.nombre,\r\n            id_tienda: resultUserAuth.data.tienda.id_tienda,\r\n            nombre_tienda: resultUserAuth.data.tienda.nombre,\r\n            permisos: permisos\r\n          });\r\n\r\n          // Agregar Acción de usuario iniciar seción\r\n          \r\n          const currentDate = new Date();\r\n          \r\n          // Extraemos el año, mes y día de la fecha actual\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${resultUserAuth.data.nombre} con el nombre de usuario ${username} inició sesión`;\r\n          await addAccionUsuario(resultUserAuth.data.token, auxAddAccionUsuarioDescripcion, `${year}-${month}-${day}`, resultUserDates.data.id_usuario, 5);\r\n          \r\n          // Navegar\r\n          navigation.navigate(\"HomeScreen\");\r\n        }\r\n      }else{\r\n        alert(\"Error en userDates\");\r\n        toggleModal();\r\n      }\r\n    } else {\r\n      // Maneja el caso en que la autenticación falla\r\n      setPasword(\"\");\r\n      toggleModal();\r\n    }\r\n    }else{\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === 'Enter') {\r\n      // Aquí ejecutas la función que deseas\r\n      iniciarSecion()\r\n    }\r\n  };\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Image\r\n        source={require(\"../images/wallpaper.jpg\")}\r\n        style={{\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          resizeMode: \"cover\", // O 'stretch', según lo que necesites\r\n        }}\r\n      />\r\n\r\n      <LinearGradient\r\n        colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n        start={[0, 0]}\r\n        end={[1, 0]}\r\n        style={ContainerStyle}\r\n      >\r\n        <Image\r\n          source={require(\"../images/logo.png\")}\r\n          style={{\r\n            position: \"absolute\",\r\n            resizeMode: \"cover\",\r\n            height: \"50%\",\r\n            width: \"70%\",\r\n            marginBottom: \"95%\",\r\n            shadowOffset: { width: 3, height: 4 },\r\n            shadowOpacity: 0.3,\r\n            shadowRadius: 5,\r\n          }}\r\n        />\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            marginTop: \"35%\",\r\n          }}\r\n        >\r\n          <Text style={styles.textSearchDesktop}>Nombre de Usuario:</Text>\r\n          <CustomTextImputSearch\r\n            style={styles.textImputLogin}\r\n            placeholder=\"Nombre de Usuario\"\r\n            value={username}\r\n            onChangeText={setUsername}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n\r\n          <Text style={styles.textSearchDesktop}>Contraseña</Text>\r\n          <CustomTextImputSearch\r\n            style={styles.textImputLogin}\r\n            placeholder=\"Contraseña\"\r\n            value={pasword}\r\n            secureTextEntry={true}\r\n            onChangeText={setPasword}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              borderRadius: 15,\r\n              borderColor: Colors.azul_Suave,\r\n              borderWidth: 2,\r\n              width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n              height: 35, // Altura fija para pantallas de escritorio\r\n              alignItems: \"center\",\r\n              marginTop: \"5%\",\r\n              justifyContent: \"center\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={() => {\r\n              setSelectedButon({\r\n                butonSelected: \"\"\r\n              })\r\n              iniciarSecion()\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: Colors.blanco,\r\n                fontSize: 20,\r\n                justifyContent: \"center\",\r\n                fontWeight: \"bold\", // Para negritas\r\n                textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                textShadowRadius: 200, // Difuminado de la sombra\r\n              }}\r\n            >\r\n              Iniciar Sesión\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <View\r\n            style={{\r\n              justifyContent: \"center\",\r\n              alignItems: \"flex-end\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <TouchableOpacity\r\n              style={{\r\n                backgroundColor: Colors.azul_Claro,\r\n                borderRadius: 15,\r\n                borderColor: Colors.azul_Suave,\r\n                borderWidth: 2,\r\n                width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                height: 30, // Altura fija para pantallas de escritorio\r\n                alignItems: \"center\",\r\n                marginRight: \"5%\",\r\n                marginTop: \"5%\",\r\n                justifyContent: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 3, height: 4 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n              }}\r\n              onPress={() => alert(\"Not Suport Yet\")}\r\n            >\r\n              <Text\r\n                style={{\r\n                  color: Colors.blanco,\r\n                  fontSize: 14,\r\n                  justifyContent: \"center\",\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                }}\r\n              >\r\n                Recuperar Contraseña\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={toggleModal}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={isMobile? styles.modalViewMesajeContainerMovil : styles.modalViewMesajeContainerDesktop}\r\n                >\r\n                  <Text style={styles.labelTextDesktop}>\r\n                    Error al iniciar sesión, posibles errores:\r\n                  </Text>\r\n                  <Text style={styles.labelTextDesktop}>\r\n                    -Nombre de usuario o contraseña incorrecta.\r\n                  </Text>\r\n                  <Text style={styles.labelTextDesktop}>\r\n                    -Debe llenar todos los campos.\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      marginTop: \"5%\",\r\n                      width: \"100%\", // Hacer que el botón ocupe todo el ancho\r\n                      paddingVertical: 10, // Espaciado vertical\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      borderRadius: 5, // Bordes redondeados\r\n                    }}\r\n                    onPress={toggleModal}\r\n                  >\r\n                    <Text style={{ color: \"white\", fontWeight: \"bold\" }}>\r\n                      Intentar de nuevo\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n          </View>\r\n        </View>\r\n      </LinearGradient>\r\n    </View>\r\n  );\r\n}\r\n","import React, { createContext, useState, ReactNode } from \"react\";\r\nimport { Movimiento } from \"../components/MyDateTableMovimientos\";\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortMovimientosDates {\r\n    items: Movimiento[];\r\n    criterioOrden: string;\r\n    tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortMovimientosDatesContextType {\r\n  SortMovimientosDates: SortMovimientosDates | null;\r\n  setSortMovimientosDates: (\r\n    SortMovimientosDates: SortMovimientosDates | null\r\n  ) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortMovimientosDatesContext = createContext<\r\n  SortMovimientosDatesContextType | undefined\r\n>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortMovimientosDatesProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [SortMovimientosDates, setSortMovimientosDates] =\r\n    useState<SortMovimientosDates | null>(null);\r\n\r\n  return (\r\n    <SortMovimientosDatesContext.Provider\r\n      value={{\r\n        SortMovimientosDates: SortMovimientosDates,\r\n        setSortMovimientosDates: setSortMovimientosDates,\r\n      }}\r\n    >\r\n      {children}\r\n    </SortMovimientosDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortMovimientosDates = () => {\r\n  const context = React.useContext(SortMovimientosDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      \"useModalMovimientosDates debe usarse dentro de un ModalMovimientosDates\"\r\n    );\r\n  }\r\n  return context;\r\n};\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface ModalProveedoresDates {\r\n    id_proveedor: string;\r\n    isAddProveedor: boolean;\r\n    isModificarProveedor: boolean;\r\n    fileEditable: boolean;\r\n    isAddProductoShowProveedoresTiendas: boolean;\r\n    isDetallesProveedores: boolean;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface ModalProductsDatesContextType {\r\n  modalProveedoresDates: ModalProveedoresDates | null;\r\n  setModalProveedoresDates: (modalProveedoresDates: ModalProveedoresDates | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst ModalProveedoresDatesContext = createContext<ModalProductsDatesContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const ModalProveedoresDatesProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [modalProveedoresDates, setModalProveedoresDates] = useState<ModalProveedoresDates | null>(null);\r\n\r\n  return (\r\n    <ModalProveedoresDatesContext.Provider value={{ modalProveedoresDates: modalProveedoresDates, setModalProveedoresDates: setModalProveedoresDates }}>\r\n      {children}\r\n    </ModalProveedoresDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useModalProveedoresDates = () => {\r\n  const context = React.useContext(ModalProveedoresDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useModalProveedoresDates debe usarse dentro de un ModalProveedoresDates');\r\n  }\r\n  return context;\r\n};","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Entrada } from '../components/MyDateTableEntradas';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortEntradas {\r\n  items: Entrada[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortEntradasContextType {\r\n  sortEntradas: SortEntradas | null;\r\n  setSortEntradas: (sortEntradas: SortEntradas | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortEntradasContext = createContext<SortEntradasContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortEntradasProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortEntradas, setSortEntradas] = useState<SortEntradas | null>(null);\r\n\r\n  return (\r\n    <SortEntradasContext.Provider value={{ sortEntradas: sortEntradas, setSortEntradas: setSortEntradas }}>\r\n      {children}\r\n    </SortEntradasContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortEntradas = () => {\r\n  const context = React.useContext(SortEntradasContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortEntradas debe usarse dentro de un SortEntradas');\r\n  }\r\n  return context;\r\n};","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Producto } from '../components/MyDateTableProductos';\r\nimport { Asset } from 'react-native-image-picker';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface ImagenesDelete {\r\n  imagenes: Asset[];\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface ImagenesDeleteContextType {\r\n  imagenesDelete: ImagenesDelete | null;\r\n  setImagenesDelete: (imagenesDelete: ImagenesDelete | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst ImagenesDeleteContext = createContext<ImagenesDeleteContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const ImagenesDeleteProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [imagenesDelete, setImagenesDelete] = useState<ImagenesDelete | null>(null);\r\n\r\n  return (\r\n    <ImagenesDeleteContext.Provider value={{ imagenesDelete: imagenesDelete, setImagenesDelete: setImagenesDelete }}>\r\n      {children}\r\n    </ImagenesDeleteContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useImagenesDelete = () => {\r\n  const context = React.useContext(ImagenesDeleteContext);\r\n  if (context === undefined) {\r\n    throw new Error('useImagenesDelete debe usarse dentro de un ImagenesDelete');\r\n  }\r\n  return context;\r\n};","import axios from \"axios\";\r\nimport { cerverHost } from \"./cerverHost\";\r\nimport { Proveedor } from \"../components/MyDateTableProveedores\";\r\nimport { navigate } from \"../contexts/navigationRef\";\r\n\r\n\r\n// Obtener todos los proveedores\r\nexport const getAllProveedores = async (token: String) => {\r\n    try {\r\n      const response = await axios.get(`${cerverHost}/Proveedor`, {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      console.log(\"Error al obtener datos de los proveedores: \", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n// Obtener proveedor por el id\r\nexport const getProveedorById = async (token: String, id_proveedor: string) => {\r\n  try {\r\n    const response = await axios.get(`${cerverHost}/Proveedor/${id_proveedor}`, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al obtener datos de el proveedor: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Agregar un nuevo proveedor\r\nexport const addProveedor = async (token: String, nombre: string, email: string, telefono:string, direccion:string, nota: string, Cif:string, detalle_bacario:string) => {\r\n  try {\r\n    const response = await axios.post(`${cerverHost}/Proveedor/createProveedor`, {\r\n      nombre: nombre,\r\n      email: email || \"\",\r\n      direccion: direccion || \"\",\r\n      nota: nota || \"\",\r\n      telefono: telefono || \"\",\r\n      Cif: Cif || \"\",\r\n      detalle_bacario: detalle_bacario || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al incertar un nuevo proveedor: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Actualizar proveedor\r\nexport const actualizarProveedor = async (token: String, id_proveedor:string, nombre: string, email: string, telefono:string, direccion:string, nota: string, Cif:string, detalle_bacario:string) => {\r\n  try {\r\n    const response = await axios.put(`${cerverHost}/Proveedor/updateProveedor/${id_proveedor}`, {\r\n      nombre: nombre,\r\n      email: email || \"\",\r\n      direccion: direccion || \"\",\r\n      nota: nota || \"\",\r\n      telefono: telefono || \"\",\r\n      Cif: Cif || \"\",\r\n      detalle_bancario: detalle_bacario || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error al actualizar el proveedor: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Eliminar proveedor\r\nexport const deleteProveedor = async (token: String, id_proveedor:string) => {\r\n  try {\r\n    const response = await axios.delete(`${cerverHost}/Proveedor/deleteProveedor/${id_proveedor}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al eliminar el proveedor: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Filtrar proveedores\r\nexport const filtrarProveedor = async (token: String, nombre: string, telefono:string, email: string, detalle_bacario:string) => {\r\n  try {\r\n    const response = await axios.post(`${cerverHost}/Proveedor/api/filtrar`, {\r\n      nombre: nombre,\r\n      email: email || \"\",\r\n      telefono: telefono || \"\",\r\n      detalle_bacario: detalle_bacario || \"\"\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al filtrar los proveedores: \", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ordenar proveedores\r\nexport const ordenarProveedor = async (token: String, items: Proveedor[], criterio:string, ascendente: boolean) => {\r\n  try {\r\n    const response = await axios.post(`${cerverHost}/Proveedor/api/filtrar`, {\r\n      items: items,\r\n      criterio: criterio,\r\n      ascendente: ascendente\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      navigate(\"Login\")\r\n    }\r\n    console.log(\"Error al ordenar los proveedores: \", error);\r\n    return false;\r\n  }\r\n};","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\n\r\nexport interface Proveedor {\r\n  id_Proveedor: string;\r\n  nombre: string;\r\n  correo: string;\r\n  direccion?: string;\r\n  telefono: string;\r\n  nota?: string;\r\n  cif?: string;\r\n  detalle_bancario: string;\r\n}\r\n\r\nexport interface ProveedorPiker {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Proveedor[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableProveedorModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableProveedores: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n  const { sortProductos, setSortProductos } = useSortProductos();\r\n  const { usuario, setUsuario } = useUsuario();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Proveedor[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_producto: string) => {\r\n    setModalProveedoresDates({\r\n      id_proveedor: id_producto,\r\n      isAddProveedor: true,\r\n      fileEditable: false,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: true,\r\n      isDetallesProveedores: true,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  const resultadoCondicionalOpcionesDeCelda = (item: Proveedor) => {\r\n    if (usuario?.id_rol) {\r\n      return (usuario.id_rol == \"1\" && isPermisoOpcionesDeCelda) ||\r\n        (usuario.id_rol == \"2\" && isPermisoOpcionesDeCelda)\r\n        ? true\r\n        : item.telefono && isPermisoOpcionesDeCelda\r\n        ? true\r\n        : false;\r\n    }\r\n  };\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario,\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario,\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idProductoOption, setIdProductoOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdProductoOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalProveedoresDates({\r\n        id_proveedor: idProductoOption,\r\n        isAddProveedor: true,\r\n        fileEditable: true,\r\n        isModificarProveedor: true,\r\n        isAddProductoShowProveedoresTiendas: true,\r\n        isDetallesProveedores: true,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Proveedor !== idProductoOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idProductoOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Proveedor}\r\n                onPress={() => detailsModalView(item.id_Proveedor)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.detalle_bancario}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Teléfono */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.telefono}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idProductoOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Proveedor}\r\n                onPress={() => detailsModalView(item.id_Proveedor)}\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.detalle_bancario}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Teléfono */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    flex: 1.5,\r\n                    justifyContent: \"center\", // Centrar horizontalmente\r\n                    alignItems: \"center\", // Centrar verticalmente\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text>{item.telefono}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 16,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport interface EntradaShowModal {\r\n  id_entrada: string;\r\n  nombreProducto: string;\r\n  cantidad: string;\r\n  costo: string;\r\n  fecha: string;\r\n}\r\n\r\ninterface Props {\r\n  items: EntradaShowModal[];\r\n  columns: string[];\r\n}\r\n\r\nexport const MyDateTableModalShowDatesEntradas: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(3);\r\n  const [displayedItems, setDisplayedItems] = React.useState<EntradaShowModal[]>(\r\n    []\r\n  ); // Estado para los elementos mostrados\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text style={styles.headerTextDesktop}>{column}</Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerDesktop}>\r\n        <DataTable style={{ width: \"100%\", height: \"auto\" }}>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.filter((item)=>parseInt(item.cantidad) !== 0).map((item) => (\r\n            <DataTable.Row\r\n              key={item.id_entrada}\r\n              onPress={() => {}}\r\n            >\r\n              <DataTable.Cell style={styles.handerRow}>\r\n                <Text\r\n                  style={{ flexWrap: \"wrap\", width: \"100%\", textAlign: \"left\" }}\r\n                  numberOfLines={2} // Limita a 2 líneas\r\n                >\r\n                  {item.nombreProducto}\r\n                </Text>\r\n              </DataTable.Cell>\r\n              <DataTable.Cell numeric style={styles.handerRow}>\r\n                {item.cantidad}\r\n              </DataTable.Cell>\r\n              <DataTable.Cell numeric style={styles.handerRow}>\r\n                {item.costo}\r\n              </DataTable.Cell>\r\n              <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n            </DataTable.Row>\r\n          ))}\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonMovil,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    justifyContent:\"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport {\r\n  actualizarProveedor,\r\n  addProveedor,\r\n  deleteProveedor,\r\n  filtrarProveedor,\r\n  getAllProveedores,\r\n  getProveedorById,\r\n} from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport {\r\n  PanGestureHandler,\r\n  PanGestureHandlerGestureEvent,\r\n} from \"react-native-gesture-handler\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport {\r\n  MyDateTableModalShowDateProveedores,\r\n  ProveedoresShowModal,\r\n} from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  MyDateTableProveedores,\r\n  Proveedor,\r\n} from \"../components/MyDateTableProveedores\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\nimport {\r\n  EntradaShowModal,\r\n  MyDateTableModalShowDatesEntradas,\r\n} from \"../components/MyDateTableModalShowDatesEntradas\";\r\nimport { getAllEntradasByProveedorId } from \"../services/EntradaServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\n\r\nexport default function ProveedoresView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar proovedores y ver datos\r\n  const [idProveedorDetails, setIdProveedorDetails] = useState(\"\");\r\n  const [nombreProveedorDetails, setNombreProveedorDetails] = useState(\"\");\r\n  const [correoEmailProveedorDetails, setCorreoEmailProveedorDetails] =\r\n    useState(\"\");\r\n  const [direccionProveedorDetails, setDireccionProveedorDetails] =\r\n    useState(\"\");\r\n  const [telefonoProveedorDetails, setTelefonoProveedorDetails] = useState(\"\");\r\n  const [notaProveedorDetails, setNotaProveedorDetails] = useState(\"\");\r\n  const [cfiProveedorDetails, setCfiProveedorDetails] = useState(\"\");\r\n  const [\r\n    detallesBancariosProveedorDetils,\r\n    setDetallesBancariosProveedorDetils,\r\n  ] = useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [isModalChekEliminarVisible, setIsModalChekEliminarVisible] =\r\n    useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] = useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarProveedor, setIsPermisoAgregarProveedor] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarProveedor, setIsPermisoEliminarProveedor] =\r\n    React.useState(false);\r\n  const [isPermisoModificarProveedor, setIsPermisoModificarProveedor] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarProveedor = await isPermiso(\r\n        usuario.token,\r\n        \"35\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultEliminarProveedor = await isPermiso(\r\n        usuario.token,\r\n        \"37\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarProveedor = await isPermiso(\r\n        usuario.token,\r\n        \"36\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      setIsPermisoAgregarProveedor(resultAgregarProveedor);\r\n      setIsPermisoEliminarProveedor(resultEliminarProveedor);\r\n      setIsPermisoModificarProveedor(resultModificarProveedor);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [entradasByProveedor, setEntradasByProveedor] = useState<\r\n    EntradaShowModal[]\r\n  >([]);\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Proveedor[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItems, setDropDownItems] = useState<TiendaPiker[]>([]);\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProveedorSearch, setNombreProveedorSearch] = useState(\"\");\r\n  const [correoEmyleSearch, setCorreoEmyleSearch] = useState(\"\");\r\n  const [telefonoSearch, setTelefonoSearch] = useState(\"\");\r\n  const [detallesBancariosSearch, setDetallesBancariosSearch] = useState(\"\");\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getDatesTiendaPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItems([{ label: \"Tiendas\", value: \"\" }, ...tiendasMapeados]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setNombreProveedorDetails(\"\");\r\n    setCfiProveedorDetails(\"\");\r\n    setNotaProveedorDetails(\"\");\r\n    setTelefonoProveedorDetails(\"\");\r\n    setDireccionProveedorDetails(\"\");\r\n    setCorreoEmailProveedorDetails(\"\");\r\n    setDetallesBancariosProveedorDetils(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: false,\r\n      isModificarProveedor: false,\r\n      fileEditable: true,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n  };\r\n  const cargarDetailsOfProveedores = async () => {\r\n    if (usuario?.token && modalProveedoresDates?.id_proveedor) {\r\n      const result = await getProveedorById(\r\n        usuario.token,\r\n        modalProveedoresDates.id_proveedor\r\n      );\r\n      if (result) {\r\n        setIdProveedorDetails(modalProveedoresDates.id_proveedor);\r\n        setNombreProveedorDetails(result.nombre);\r\n        setCorreoEmailProveedorDetails(result.email || \"\");\r\n        setDireccionProveedorDetails(result.direccion || \"\");\r\n        setTelefonoProveedorDetails(result.telefono || \"\");\r\n        setNotaProveedorDetails(result.nota || \"\");\r\n        setCfiProveedorDetails(result.Cfi || \"\");\r\n        setDetallesBancariosProveedorDetils(result.detalle_bancario || \"\");\r\n\r\n        const resultEntradasByProveedor = await getAllEntradasByProveedorId(\r\n          usuario.token,\r\n          modalProveedoresDates.id_proveedor\r\n        );\r\n        if (resultEntradasByProveedor) {\r\n          const entradasMapeados: EntradaShowModal[] = await Promise.all(\r\n            resultEntradasByProveedor.map(async (element: any) => ({\r\n              id_entrada: element.id_entrada,\r\n              nombreProducto: element.producto.nombre,\r\n              cantidad: element.cantidad,\r\n              costo: element.costo,\r\n              fecha: element.fecha,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setEntradasByProveedor(entradasMapeados);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<Proveedor[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarProveedor(\r\n          usuario.token,\r\n          nombreProveedorSearch,\r\n          telefonoSearch,\r\n          correoEmyleSearch,\r\n          detallesBancariosSearch\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Proveedor[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Proveedor: element.id_proveedor,\r\n              nombre: element.nombre,\r\n              correo: element.email || \"\",\r\n              direccion: element.direccion || \"\",\r\n              telefono: element.telefono || \"\",\r\n              nota: element.nota || \"\",\r\n              cif: element.Cif || \"\",\r\n              detalle_bancario: element.detalle_bancario || \"\",\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    filtrarYOrdenarProovedores();\r\n  }, [selectedOptionTipoOrden]);\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfProveedores();\r\n  }, [modalProveedoresDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosProveedores = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllProveedores(usuario.token);\r\n\r\n        if (result && Array.isArray(result.data)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: Proveedor[] = await Promise.all(\r\n            result.data.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Proveedor: element.id_proveedor, // Mapea 'id_proovedor' a 'id_Proveedor'\r\n                nombre: element.nombre, // Mapea 'nombre' directamente\r\n                correo: element.email || \"\", // Asume que hay un campo 'correo' o usa un valor por defecto\r\n                detalle_bancario: element.detalle_bancario || \"\", // Asume que hay un campo 'detalle_bancario' o usa un valor por defecto\r\n                telefono: element.telefono || \"\", // Mapea un teléfono o usa un valor por defecto\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron proveedoress.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener los proveedores o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de los proveedores\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de los proovedores\"\r\n      );\r\n    }\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarProovedores();\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosProveedores();\r\n        getDatesTiendaPiker();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarProovedores = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let productosFiltrados: Proveedor[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n        /*\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortProductos?.criterioOrden && selectedOptionTipoOrden) {\r\n          productosFiltrados = await ordenarProducts(\r\n            usuario.token,\r\n            productosFiltrados,\r\n            sortProductos.criterioOrden,\r\n            selectedOptionTipoOrden === \"option1\" ? true : false\r\n          );\r\n        }\r\n*/\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(productosFiltrados);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setNombreProveedorDetails(\"\");\r\n    setCorreoEmailProveedorDetails(\"\");\r\n    setDireccionProveedorDetails(\"\");\r\n    setTelefonoProveedorDetails(\"\");\r\n    setNotaProveedorDetails(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: true,\r\n      fileEditable: true,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProveedorSearch(\"\");\r\n    setCorreoEmyleSearch(\"\");\r\n    setDetallesBancariosSearch(\"\");\r\n    setTelefonoSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewProveedor = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Agregando proveedor. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL AGREGAR PROVEEDOR. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (nombreProveedorDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombre del proveedor no puede ser vacío\";\r\n        flag = false;\r\n      }\r\n\r\n      if (flag) {\r\n        await addProveedor(\r\n          usuario.token,\r\n          nombreProveedorDetails,\r\n          correoEmailProveedorDetails,\r\n          telefonoProveedorDetails,\r\n          direccionProveedorDetails,\r\n          notaProveedorDetails,\r\n          cfiProveedorDetails,\r\n          detallesBancariosProveedorDetils\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó al sistema al proveedor ${nombreProveedorDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          3\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(\r\n          `El Proveedor \"${nombreProveedorDetails}\" fue insertado con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreProveedorDetails(\"\");\r\n        setTelefonoProveedorDetails(\"\");\r\n        setCorreoEmailProveedorDetails(\"\");\r\n        setDireccionProveedorDetails(\"\");\r\n        setNotaProveedorDetails(\"\");\r\n        setCfiProveedorDetails(\"\");\r\n        setDetallesBancariosProveedorDetils(\"\");\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarProveedor = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Modificando proveedor. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR PROVEEDOR. Compruebe los siguientes campos:\\n\";\r\n\r\n      if (nombreProveedorDetails.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-El nombre del proveedor no puede ser vacío\";\r\n      }\r\n\r\n      if (flag) {\r\n        await actualizarProveedor(\r\n          usuario.token,\r\n          idProveedorDetails,\r\n          nombreProveedorDetails,\r\n          correoEmailProveedorDetails,\r\n          telefonoProveedorDetails,\r\n          direccionProveedorDetails,\r\n          notaProveedorDetails,\r\n          cfiProveedorDetails,\r\n          detallesBancariosProveedorDetils\r\n        );\r\n        // Agregar Acción de usuario modificar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó al proveedor ${nombreProveedorDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          3\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(\r\n          `El Proveedor \"${nombreProveedorDetails}\" se modificó con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar proveedor\r\n  const eliminarProveedor = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Eliminando proveedor. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL TRATAR DE ELIMINAR EL PROVEEDOR. Motivos:\\n\";\r\n\r\n      if (flag) {\r\n        const resulDeletProveedor = await deleteProveedor(\r\n          usuario.token,\r\n          idProveedorDetails\r\n        );\r\n        if (resulDeletProveedor) {\r\n          // Agregar Acción de usuario agregar proveedor\r\n\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó al proveedor ${nombreProveedorDetails}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            3\r\n          );\r\n\r\n          setIsBotonModalMesajeVisible(true)\r\n          setModalMensaje(\r\n            `El Proveedor \"${nombreProveedorDetails}\" se eliminó con éxito`\r\n          );\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(true);\r\n        } else {\r\n          setIsBotonModalMesajeVisible(true)\r\n          validarCampos +=\r\n            \"-El proveedor ya ha echo operaciones en el sistema.\\n\";\r\n          setModalMensaje(validarCampos);\r\n          setModalMensajeView(true);\r\n        }\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n  const columnasMyDateTableEntradaModal = [\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Costo\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"telefono\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarProveedor && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Proveedor</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableProveedores\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Proveedor:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del proveedor\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={nombreProveedorSearch}\r\n                    onChangeText={setNombreProveedorSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Correo del Proveedor:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Correo del Proveedor\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={correoEmyleSearch}\r\n                    onChangeText={setCorreoEmyleSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Detalles Bancarios:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Detalles Bancarios\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={detallesBancariosSearch}\r\n                    onChangeText={setDetallesBancariosSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Número de Teléfono:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Número de Teléfono\"\r\n                    value={telefonoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setTelefonoSearch}\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarProovedores();\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Proveedor\"\r\n                  : \"Agregar Proveedor\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  value={nombreProveedorDetails}\r\n                  onChangeText={setNombreProveedorDetails}\r\n                  placeholder=\"Nombre del proveedor\"\r\n                />\r\n\r\n                {/* Dirección del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  value={direccionProveedorDetails}\r\n                  onChangeText={setDireccionProveedorDetails}\r\n                  placeholder=\"Dirección del Proveedor\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y CIF */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoProveedorDetails}\r\n                      onChangeText={setTelefonoProveedorDetails}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CIF */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Código de Identificación Fiscal (CIF)\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={cfiProveedorDetails}\r\n                      onChangeText={setCfiProveedorDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Código de Identificación Fiscal\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailProveedorDetails}\r\n                      onChangeText={setCorreoEmailProveedorDetails}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosProveedorDetils}\r\n                      onChangeText={setDetallesBancariosProveedorDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {modalProveedoresDates?.isModificarProveedor\r\n                  ? false\r\n                  : (modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          alignItems: \"center\",\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          flexDirection: \"row\",\r\n                          height: 350,\r\n                          width: \"90%\",\r\n                        }}\r\n                      >\r\n                        <MyDateTableModalShowDatesEntradas\r\n                          columns={columnasMyDateTableEntradaModal}\r\n                          items={entradasByProveedor}\r\n                        />\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Nota */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Nota\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  numberOfLines={5}\r\n                  value={notaProveedorDetails}\r\n                  onChangeText={setNotaProveedorDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos proveedor ${nombreProveedorDetails}?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al proveedor ${nombreProveedorDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarProveedor &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewProveedor()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarProveedor()\r\n                      : modificarProveedor()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (<TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Proveedores\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>)}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {(isPermisoAgregarProveedor ||\r\n            isPermisoModificarProveedor ||\r\n            isPermisoEliminarProveedor) && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Proveedor\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Proveedor:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del proveedor\"\r\n              value={nombreProveedorSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProveedorSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Correo del Proveedor:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Correo del Proveedor\"\r\n              value={correoEmyleSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setCorreoEmyleSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Detalles Bancarios:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Detalles Bancarios\"\r\n              value={detallesBancariosSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setDetallesBancariosSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Número de Teléfono:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Número de Teléfono\"\r\n              value={telefonoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setTelefonoSearch}\r\n            />\r\n\r\n            <View\r\n              style={{ width: \"100%\", flexDirection: \"row\", marginTop: \"5%\" }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarProovedores()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableProveedores\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Proveedor\"\r\n                  : \"Agregar Proveedor\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  value={nombreProveedorDetails}\r\n                  onChangeText={setNombreProveedorDetails}\r\n                  placeholder=\"Nombre del proveedor\"\r\n                />\r\n\r\n                {/* Dirección del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  value={direccionProveedorDetails}\r\n                  onChangeText={setDireccionProveedorDetails}\r\n                  placeholder=\"Dirección del Proveedor\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y CIF */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoProveedorDetails}\r\n                      onChangeText={setTelefonoProveedorDetails}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CIF */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Código de Identificación Fiscal (CIF)\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={cfiProveedorDetails}\r\n                      onChangeText={setCfiProveedorDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Código de Identificación Fiscal\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailProveedorDetails}\r\n                      onChangeText={setCorreoEmailProveedorDetails}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosProveedorDetils}\r\n                      onChangeText={setDetallesBancariosProveedorDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarProveedor ? true : false}\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {modalProveedoresDates?.isModificarProveedor\r\n                  ? false\r\n                  : (modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          flex: 1,\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          height: 500,\r\n                          width: \"90%\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <MyDateTableModalShowDatesEntradas\r\n                          columns={columnasMyDateTableEntradaModal}\r\n                          items={entradasByProveedor}\r\n                        />\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Nota */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Nota\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={isPermisoModificarProveedor ? true : false}\r\n                  numberOfLines={5}\r\n                  value={notaProveedorDetails}\r\n                  onChangeText={setNotaProveedorDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos proveedor ${nombreProveedorDetails}?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al proveedor ${nombreProveedorDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarProveedor &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewProveedor()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Proveedor\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarProveedor()\r\n                      : modificarProveedor()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (<TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Proveedores\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>)}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useModalProductsDates } from \"../contexts/AuxiliarContextFromModalProductsDates\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n  isProductoInTienda,\r\n} from \"../services/TiendaServices\";\r\nimport { deleteProducto, moverProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { TiendaPiker } from \"./MyDateTableTiendas\";\r\nimport CustomDropDownPikerFromMover from \"./CustomDropDownPikerFromMover\";\r\nimport { addNewMovimiento } from \"../services/MovimientosServices\";\r\nimport { Producto } from \"./MyDateTableProductos\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\ninterface Props {\r\n  items: Producto[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableProveedorModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableEnMyTienda: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalProductsDates, setModalProductsDates } = useModalProductsDates();\r\n  const { sortProductos, setSortProductos } = useSortProductos();\r\n  const { usuario, setUsuario } = useUsuario();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Producto[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [isModalMesajeMoverVisible, setModalMesajeMoverVisible] =\r\n    React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendaByProductoSelected, setTiendaByProductoSelected] =\r\n    React.useState<string | null>(\"\");\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaPiker[]\r\n  >([\r\n    { value: \"1\", label: \"Tienda 1\" },\r\n    { value: \"2\", label: \"Tienda 2\" },\r\n    { value: \"3\", label: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_producto: string) => {\r\n    setModalProductsDates({\r\n      id_producto: id_producto,\r\n      isAddProducto: true,\r\n      fileEditable: false,\r\n      isModificarProducto: false,\r\n      isAddProductoShowProveedoresTiendas: true,\r\n      isAddProductoShowProveedores: true,\r\n    });\r\n  };\r\n\r\n  // Controlar el doble clic del boton\r\n    const [isButtonDisabled, setIsButtonDisabled] = React.useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [tiendaMoverDesde, setTiendaMoverDesde] = React.useState(\"\");\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  const [nombreProductoOption, setNombreProductoOption] = React.useState(\"\");\r\n  const [tiendaNombreEspecificaDesde, setTiendaNombreEspecificoDesde] =\r\n    React.useState(\"\");\r\n  const [tiendaNombreEspecificaHasta, setTiendaNombreEspecificoHasta] =\r\n    React.useState(\"\");\r\n  const [tiendaMoverHasta, setTiendaMoverHasta] = React.useState(\"\");\r\n  const [tiendasByProductoDesde, setTiendasByProductoDesde] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [tiendasByProductoHasta, setTiendasByProductoHasta] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const moverProductoFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    if (usuario?.token) {\r\n      await moverProducto(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto\r\n      );\r\n      const currentDate = new Date();\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n      await addNewMovimiento(\r\n        usuario.token,\r\n        `${month}-${day}-${year}`,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto,\r\n        idProductoOption,\r\n        usuario.id_usuario\r\n      );\r\n\r\n      setModalMensaje(\r\n        `Se movieron ${cantidadMoverProducto} de ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}`\r\n      );\r\n      setModalMesajeMoverVisible(false);\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n\r\n  const moverProdcutoFunctionValidarCampos = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    let flag: boolean = true;\r\n    let validarCampos: string = \"Error. Comprueve los siguientes parámetros:\\n\";\r\n    let cantidadDelProductoEnLaTiendaDesde: number = 0;\r\n    // Obtener cantidad del producto en la tienda especifica desde dodne se quiere mover\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        tiendaMoverDesde\r\n      );\r\n      if (result.encontrado) {\r\n        cantidadDelProductoEnLaTiendaDesde = parseInt(result.cantidad);\r\n      }\r\n    }\r\n    if (tiendaMoverDesde === tiendaMoverHasta) {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La tienda origen no puede ser igual a la tienda destino.\\n\";\r\n    }\r\n    if (cantidadMoverProducto === \"\") {\r\n      flag = false;\r\n      validarCampos += \"-La cantidad a mover no puede ser vacio.\\n\";\r\n    } else if (\r\n      parseInt(cantidadMoverProducto) > cantidadDelProductoEnLaTiendaDesde\r\n    ) {\r\n      // Comprobar que la cantidad que se desea mover no es mayor que la cantidad que existe en la tienda\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La cantidad a mover es mayor que la cantidad que existe en la tienda.\\n\";\r\n    }\r\n    if (isPermisoOpcionesDeCeldaMoverGeneral && tiendaMoverDesde === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija la tienda desde la que decea hacer el movimiento.\\n\";\r\n    }\r\n    if (tiendaMoverHasta === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija una tienda a la que desea hacer el movimiento.\\n\";\r\n    }\r\n\r\n    if (flag) {\r\n      const tiendaEspecificaHasta = tiendasByProductoHasta.find(\r\n        (tienda) => tienda.value === tiendaMoverHasta\r\n      );\r\n      setTiendaNombreEspecificoHasta(String(tiendaEspecificaHasta?.label));\r\n      const tiendaEspecificaDesde = tiendasByProductoDesde.find(\r\n        (tienda) => tienda.value === tiendaMoverDesde\r\n      );\r\n      setTiendaNombreEspecificoDesde(String(tiendaEspecificaDesde?.label));\r\n      setModalMoverVisible(false);\r\n      setModalMesajeMoverVisible(true);\r\n    } else {\r\n      setModalMensaje(validarCampos);\r\n      setModalMoverVisible(false);\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n\r\n  // Cargar datos de las tiendas para mover un producto\r\n  const cargarDatosTiendaParaMover = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n      const resultTiendas = await getAllTiendasByProduct(\r\n        usuario.token,\r\n        idProductoOption\r\n      );\r\n\r\n      if (\r\n        result &&\r\n        Array.isArray(result.data) &&\r\n        resultTiendas !== false &&\r\n        Array.isArray(resultTiendas)\r\n      ) {\r\n        const allTiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n        let auxIdTiendas: string[] = [];\r\n        let auxDataTiendasProducto: TiendaPiker[] = [];\r\n        resultTiendas.forEach(async (element) => {\r\n          // Filtrar productos que esten en la tienda pero que no esten en 0\r\n          if (parseInt(element.cantidad) > 0) {\r\n            auxIdTiendas.push(element.id_tienda);\r\n          }\r\n        });\r\n        for (let element of auxIdTiendas) {\r\n          let item: TiendaPiker = { value: \"\", label: \"\" };\r\n          const datosTendaExisteProducto = await getTiendaById(\r\n            usuario.token,\r\n            element\r\n          );\r\n          item.label = datosTendaExisteProducto.nombre;\r\n          item.value = element;\r\n          auxDataTiendasProducto.push(item);\r\n        }\r\n\r\n        // Verificar si el valor existe en auxDataTiendasProducto\r\n        let existeTienda: boolean = false;\r\n\r\n        existeTienda = auxDataTiendasProducto.some((tienda) => {\r\n          tienda.value === usuario.id_tienda;\r\n        });\r\n\r\n        for (let index = 0; index < auxDataTiendasProducto.length; index++) {\r\n          if (auxDataTiendasProducto[index].value === usuario.id_tienda) {\r\n            existeTienda = true;\r\n          }\r\n        }\r\n\r\n        if (existeTienda) {\r\n          // Agregar un valor si es que la tienda del usuario es la desde\r\n          setTiendaMoverDesde(usuario.id_tienda);\r\n        }\r\n        if (!isPermisoOpcionesDeCeldaMoverGeneral) {\r\n          setTiendaMoverDesde(usuario.id_tienda);\r\n        }\r\n\r\n        alert(`Datos cargador: ${auxDataTiendasProducto.length}`);\r\n        setTiendasByProductoDesde(auxDataTiendasProducto);\r\n        setTiendasByProductoHasta(allTiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n\r\n        // Cargar cambio de moneda\r\n        setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Función para comunicarse con el context de Sortroductos para ordenar luego\r\n  const sortProductosAux = (column: string) => {\r\n    let aux = \"\";\r\n    if (column === \"Nombre\") {\r\n      aux = \"option3\";\r\n    } else if (\r\n      column === \"PrecioUSD\" ||\r\n      column === \"PrecioCUP\" ||\r\n      column === \"Precio\"\r\n    ) {\r\n      aux = \"option4\";\r\n    } else if (column === \"Cantidad Total\" || column === \"Cantidad\") {\r\n      aux = \"option5\";\r\n    }\r\n    setSortProductos({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\",\r\n    });\r\n  };\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n            </Text>\r\n            {(column === \"PrecioUSD\" ||\r\n              column === \"Nombre\" ||\r\n              column === \"Precio\" ||\r\n              column === \"PrecioCUP\" ||\r\n              column === \"Cantidad\" ||\r\n              column === \"Cantidad Total\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortProductosAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idProductoOption, setIdProductoOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdProductoOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalProductsDates({\r\n        id_producto: idProductoOption,\r\n        isAddProducto: true,\r\n        fileEditable: true,\r\n        isModificarProducto: true,\r\n        isAddProductoShowProveedoresTiendas: true,\r\n        isAddProductoShowProveedores: true,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      alert(\"Entró a mover\");\r\n      cargarDatosTiendaParaMover();\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Producto !== idProductoOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idProductoOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Producto}\r\n                onPress={() => detailsModalView(item.id_Producto)}\r\n                style={{ justifyContent: \"space-around\" }}\r\n              >\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  {item.sku}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRow}>\r\n                  {item.precioUSD}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRow}>\r\n                  {(parseFloat(item.precioUSD) * cambioMoneda).toFixed(2)}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRow}>\r\n                  <Text>{item.cantidadTotal} </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idProductoOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Producto}\r\n                onPress={() => detailsModalView(item.id_Producto)}\r\n              >\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  {item.sku}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRow}>\r\n                  {item.precioUSD}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRow}>\r\n                  {(parseFloat(item.precioUSD) * cambioMoneda).toFixed(2)}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell numeric style={styles.handerRow}>\r\n                  <Text>{item.cantidadTotal} </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalVisible}\r\n            animationType=\"fade\"\r\n            onRequestClose={() => toggleModal(\"\")}\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 250,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  Opciones\r\n                </Text>\r\n\r\n                {isPermisoOpcionesDeCeldaModificar && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Modificar\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/edit.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                      Modificar\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {isPermisoOpcionesDeCeldaEliminar && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Eliminar\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/delete.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                  isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      marginBottom: 10,\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                    }}\r\n                    onPress={() => {\r\n                      toggleModalOption(\"Mover\");\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../images/mover.png\")}\r\n                      style={{\r\n                        height: 26, // Ajusta el tamaño según lo necesites\r\n                        width: 26, // Ajusta el tamaño según lo necesites\r\n                        marginRight: 10, // Espacio entre la imagen y el texto\r\n                      }}\r\n                    />\r\n                    <Text style={{ color: \"white\" }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                {/* Botón para cerrar el modal */}\r\n                <TouchableOpacity\r\n                  onPress={() => toggleModal(\"\")}\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/* Modal para el Eliminar*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalEliminarVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 350,\r\n                  height: 200,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  ¿Estás seguro de que deseas eliminar este producto?\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\", // Espacio entre los botones\r\n                    width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => auxDeleteProductoById()}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Sí</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>No</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    setModalEliminarVisible(!isModalEliminarVisible)\r\n                  }\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/* Modal mensaje para el Mover*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMesajeMoverVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 350,\r\n                  height: 200,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {`Estas seguro de que deseas mover una cantidad de ${cantidadMoverProducto} del producto ${nombreProductoOption} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}?`}\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\", // Espacio entre los botones\r\n                    width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.rojo_oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => moverProductoFunction()}\r\n                    disabled={isButtonDisabled}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Sí</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                    }\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>No</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                  }\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/* Modal para el Mover*/}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMoverVisible}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {`Mover Producto \"${nombreProductoOption}\" a una Tienda\\ncon una cantidad de ${cantidadMoverProducto} en ${tiendaNombreEspecificaDesde}`}\r\n                </Text>\r\n\r\n                <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                  La cantidad que desea mover\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 50,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                    shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                    shadowRadius: 14, // Difuminado\r\n                    width: \"90%\",\r\n                    marginTop: \"2%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18, // Tamaño de letra más grande\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                    fontWeight: \"bold\", // Letra en negritas\r\n                    paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Cantidad a mover\"\r\n                  value={cantidadMoverProducto}\r\n                  onChangeText={(text) => {\r\n                    const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                    setCantidadMoverProducto(numericValue);\r\n                  }}\r\n                />\r\n\r\n                <Text style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}>\r\n                  Tiendas para mover los productos\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                  {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                    <CustomDropDownPikerFromMover\r\n                      value={tiendaMoverDesde}\r\n                      items={tiendasByProductoDesde}\r\n                      placeholder=\"Tienda desde donde se quiere mover\"\r\n                      setValue={setTiendaMoverDesde}\r\n                    />\r\n                  )}\r\n                  <CustomDropDownPikerFromMover\r\n                    value={tiendaMoverHasta}\r\n                    items={tiendasByProductoHasta}\r\n                    placeholder=\"Tienda a la que se quiere mover\"\r\n                    setValue={setTiendaMoverHasta}\r\n                  />\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                  disabled={isButtonDisabled}\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Claro,\r\n                    borderRadius: 15,\r\n                    marginTop: 150,\r\n                    width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                    height: 50, // Altura fija para pantallas de escritorio\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 3, height: 4 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                  style={{ marginTop: 20, alignItems: \"center\" }}\r\n                >\r\n                  <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport {\r\n  createProductoInTienda,\r\n  expedirExelProductosEnMyTienda,\r\n  filterProductsEnTienda,\r\n  getAllProductos,\r\n  getProductoById,\r\n  getProductoCantidadTotal,\r\n  getRelacionProductoByTienda,\r\n  moverProducto,\r\n  ordenarProducts,\r\n  updateProductoTienda,\r\n} from \"../services/ProductoServices\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getCantidadProductoInTiendaEspecifica,\r\n  getTiendaById,\r\n  isProductoInTienda,\r\n  tienda_Realizarventa,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport {\r\n  launchImageLibrary,\r\n  ImagePickerResponse,\r\n  Asset,\r\n} from \"react-native-image-picker\";\r\nimport {\r\n  PanGestureHandler,\r\n  PanGestureHandlerGestureEvent,\r\n} from \"react-native-gesture-handler\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport {\r\n  MyDateTableModalShowDateProveedores,\r\n  ProveedoresShowModal,\r\n} from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { useModalProductsDates } from \"../contexts/AuxiliarContextFromModalProductsDates\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { crearimagenUnProducto } from \"../services/ImageServices\";\r\nimport { MyDateTableEnMyTienda } from \"../components/MyDataTableEnMyTienda\";\r\nimport CustomDropDownPikerFromMover from \"../components/CustomDropDownPikerFromMover\";\r\nimport { cerverHostImages } from \"../services/cerverHost\";\r\nimport { addNewMovimiento } from \"../services/MovimientosServices\";\r\nimport { Producto, ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport { getAllEntradasByProductoId } from \"../services/EntradaServices\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { getAllTipoServicios } from \"../services/TipoServiciosServices\";\r\nimport { getAllClientes } from \"../services/clienteServices\";\r\nimport { addVenta, getVentaByIDOfServicio } from \"../services/ventasServices\";\r\nimport { addServicio, getServicioByID } from \"../services/ServiciosServices\";\r\n\r\nexport default function EnMyTiendaView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortProductos, setSortProductos } = useSortProductos();\r\n  const { modalProductsDates, setModalProductsDates } = useModalProductsDates();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variable auxiliar para la optimización\r\n  const [optimizacionFirstLoadingData, setOptimizacionFirstLoadingData] =\r\n    useState(false);\r\n\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n  // Variables para controlar los campos de los formularios de agregar producto y ver datos\r\n  const [costoPromedio, setCostoPromedio] = useState(\"\");\r\n  const [cantidadProductoDetails, setCantidadProductoDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [nombreProductoDetails, setNombreProductoDetails] = useState(\"\");\r\n  const [precioProductoDetails, setPrecioProductoDetails] = useState(\"\");\r\n  const [precioEmpresaProductoDetails, setPrecioEmpresaProductoDetails] =\r\n    useState(\"\");\r\n  const [skuDetails, setSkuDetails] = useState(\"\");\r\n  const [descripcionProductoDetails, setDescripcionProductoDetails] =\r\n    useState(\"\");\r\n  // Estado para almacenar las imágenes seleccionadas\r\n  const [selectedImages, setSelectedImages] = useState<Asset[]>([]);\r\n\r\n  const [isModalMensajeViewExel, setModalMensajeViewExel] =\r\n    React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [isModalMesajeMoverVisible, setModalMesajeMoverVisible] =\r\n    React.useState(false);\r\n  const [isModalMesajeRestarVisible, setModalMesajeRestarVisible] =\r\n    React.useState(false);\r\n  const [isModalRestarProductos, setModalRestarProductos] =\r\n    React.useState(false);\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalVenderProductoVisible, setIsModalVenderProductoVisible] =\r\n    React.useState(false);\r\n\r\n  // ********** Variables y metodos para servicio **************\r\n  const [dropdownItemsNombreCliente, setDropDownItemsNombreCliente] = useState<\r\n    ProveedorPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreTipoServicio, setDropDownItemsNombreTipoServicio] =\r\n    useState<ProductoPiker[]>([]);\r\n\r\n  const [isVentaProducto, setIsVentaProducto] = useState(false);\r\n\r\n  const [isPermisoAgregarServicio, setIsPermisoAgregarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarServicio, setIsPermisoEliminarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoModificarServicio, setIsPermisoModificarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoServicioLocal, setIsPermisoServicioLocal] =\r\n    React.useState(false);\r\n  const [isPermisoServicioGeneral, setIsPermisoServicioGeneral] =\r\n    React.useState(false);\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idServicioDetails, setIdServicioDetails] = useState(\"\");\r\n  const [idClienteDetails, setIdClienteDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\r\n    usuario?.id_tienda ?? \"\"\r\n  );\r\n  const [idTipoServicioDetails, setIdTipoServicioDetails] = useState(\"2\");\r\n  const [cantidadProductoServicioDetails, setCantidadProductoServicioDetails] =\r\n    useState(\"1\");\r\n  const [costoPromedioProductoUSDDetails, setCostoPromedioProductoUSDDetails] =\r\n    useState(\"0\");\r\n  const [costoPromedioProductoCUPDetails, setCostoPromedioProductoCUPDetails] =\r\n    useState(\"0\");\r\n  const [precioUSDDetails, setPrecioUSDDetails] = useState(\"\");\r\n  const [precioCUPDetails, setPrecioCUPDetails] = useState(\"\");\r\n  const [notaDetails, setNotaDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n\r\n  // Variable auxiliar para el redondeo de memerio\r\n  const [auxRedondeo, setAuxRedondeo] = useState(\"\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const checkPermisoServicios = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultEliminarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"25\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"24\",\r\n        usuario.id_usuario\r\n      );\r\n      const resulServicioLocal = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      // cargar cambio de moneda\r\n      setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n\r\n      setIsPermisoServicioLocal(resulServicioLocal);\r\n      setIsPermisoServicioGeneral(resultServicioGeneral);\r\n      setIsPermisoAgregarServicio(resultAgregarServicio);\r\n      setIsPermisoEliminarServicio(resultEliminarServicio);\r\n      setIsPermisoModificarServicio(resultModificarServicio);\r\n    }\r\n  };\r\n  const getTipoServicioPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTipoServicios(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const tipoServiciosMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tipo_servicio,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTipoServicio(tipoServiciosMapeados);\r\n        setIdTipoServicioDetails(\"2\");\r\n      }\r\n    }\r\n  };\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Todas las tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n  const getClientesPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllClientes(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const ClientesMapeados: ProductoPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_cliente,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreCliente(ClientesMapeados);\r\n      }\r\n    }\r\n  };\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      let result: any;\r\n\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n      const resulServicioLocal = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      if (resultServicioGeneral) {\r\n        result = await getAllProductos(usuario.token);\r\n        if (result && Array.isArray(result.data)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.data.map(async (element: any) => ({\r\n              label: element.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      } else if (resulServicioLocal) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          usuario.id_tienda\r\n        );\r\n        if (result && Array.isArray(result.data)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.data.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const cargarDetailsOfProductoVenta = async () => {\r\n    if (usuario?.token) {\r\n      const result = await getServicioByID(usuario.token, idProductoDetails);\r\n\r\n      // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2\r\n      ) {\r\n        const resultventa = await getVentaByIDOfServicio(\r\n          usuario.token,\r\n          idServicioDetails\r\n        );\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(true);\r\n\r\n        // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n        if (resultventa) {\r\n          setIdProductoDetails(resultventa.producto.id_producto);\r\n          setCantidadProductoServicioDetails(resultventa.cantidad);\r\n          setIdTiendaDetails(result.tienda.id_tienda);\r\n          setPrecioUSDDetails(resultventa.producto.precio);\r\n          setPrecioCUPDetails(\r\n            String(parseInt(resultventa.producto.precio) * cambioMoneda)\r\n          );\r\n          setCostoPromedioProductoUSDDetails(\r\n            resultventa.producto.costo_acumulado\r\n          );\r\n        } else {\r\n          // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(true);\r\n\r\n          setIdProductoDetails(\"\");\r\n          setCantidadProductoServicioDetails(\"\");\r\n          setPrecioUSDDetails(\"\");\r\n          setPrecioCUPDetails(\"\");\r\n          setCostoPromedioProductoUSDDetails(\"\");\r\n        }\r\n      } else {\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(false);\r\n        setPrecioUSDDetails(result.precio);\r\n        setPrecioCUPDetails(String(parseInt(result.precio) * cambioMoneda));\r\n        setCostoPromedioProductoUSDDetails(result.costo);\r\n      }\r\n    }\r\n  };\r\n  const addNewServicio = async () => {\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      const auxIsProductoInTienda = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR SERVICIO. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (idClienteDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione un cliente. Si no hay datos del cliente seleccione anonimo\\n\";\r\n      }\r\n      if (idTipoServicioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione el tipo de servicio que está ofreciendo.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (auxIsProductoInTienda) {\r\n        if (\r\n          parseInt(auxIsProductoInTienda.cantidad) <\r\n          parseInt(cantidadProductoServicioDetails)\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que desea vender es mayor que la cantidad que hay en la tienda.\\n\";\r\n        }\r\n      }\r\n      if (costoPromedioProductoUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Digite el costo del servicio.\\n\";\r\n      }\r\n      if (precioUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina el precio cobrado al cliente.\\n\";\r\n      }\r\n      // Validaciones si es una venta\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2\r\n      ) {\r\n        if (idProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos += \"-Seleccione un producto para vender.\\n\";\r\n        }\r\n        if (cantidadProductoServicioDetails === \"\") {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Defina la cantidad que desea vender del producto.\\n\";\r\n        }\r\n      }\r\n      if (flag) {\r\n        const resultAddServicio = await addServicio(\r\n          usuario.token,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          precioUSDDetails,\r\n          notaDetails,\r\n          idTiendaDetails,\r\n          idTipoServicioDetails,\r\n          idClienteDetails,\r\n          \"Not suport yet\",\r\n          \"not suport yet\"\r\n        );\r\n\r\n        //Agregar venta si es que es necezario\r\n        if (\r\n          parseInt(idTipoServicioDetails) === 2\r\n        ) {\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            resultAddServicio.id_servicio,\r\n            cantidadProductoServicioDetails\r\n          );\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoServicioDetails)}`\r\n          );\r\n\r\n          // Agregar Acción de usuario agregar servicio normal\r\n          const nombreCliente = dropdownItemsNombreCliente.find((element) => {\r\n            return element.value === idClienteDetails;\r\n          });\r\n          const nombreTipoServicio = dropdownItemsNombreTipoServicio.find(\r\n            (element) => {\r\n              return element.value === idTipoServicioDetails;\r\n            }\r\n          );\r\n          const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n            return element.value === idProductoDetails;\r\n          });\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un servicio del tipo de servicio ${nombreTipoServicio?.label} al cliente ${nombreCliente?.label}. Se vendió una cantidad de ${cantidadProductoServicioDetails} del producto ${nombreProducto?.label} a un precio de ${precioUSDDetails} USD`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        } else {\r\n          // Agregar Acción de usuario agregar servicio normal\r\n          const nombreCliente = dropdownItemsNombreCliente.find((element) => {\r\n            return element.value === idClienteDetails;\r\n          });\r\n          const nombreTipoServicio = dropdownItemsNombreTipoServicio.find(\r\n            (element) => {\r\n              return element.value === idTipoServicioDetails;\r\n            }\r\n          );\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un servicio del tipo de servicio ${nombreTipoServicio?.label} a un precio de ${precioUSDDetails} USD al cliente ${nombreCliente?.label}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n        }\r\n\r\n        await createProductoInTienda(\r\n          usuario.token,\r\n          idTipoServicioDetails,\r\n          idTiendaDetails\r\n        );\r\n        setModalMensaje(`El servicio se agregó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setPrecioCUPDetails(\"\");\r\n        setCantidadProductoServicioDetails(\"\");\r\n        setCostoPromedioProductoUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setNotaDetails(\"\");\r\n        setDescripcionDetails(\"\");\r\n        setIsModalVenderProductoVisible(false);\r\n        setModalProductsDates({\r\n          id_producto: \"\",\r\n          isAddProducto: false,\r\n          fileEditable: true,\r\n          isModificarProducto: false,\r\n          isAddProductoShowProveedoresTiendas: false,\r\n          isAddProductoShowProveedores: false,\r\n        });\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  const callVenta = async () => {\r\n    if (usuario?.token) {\r\n      setIsDateLoaded(false);\r\n      const currentDate = new Date();\r\n\r\n      // Extraemos el año, mes y día de la fecha actual\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n      setFechaDiaDetails(String(parseInt(day)));\r\n      setFechaMesDetails(String(parseInt(month)));\r\n      setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n      setIsModalVenderProductoVisible(true);\r\n      setIsDateLoaded(true);\r\n    }\r\n  };\r\n  // ********** Variables y metodos para servicio **************\r\n\r\n  // Constante para almacenar variables para mover roducto\r\n  const [nombreTiendaUsuarioActual, setNombreTiendaUsuarioActual] =\r\n    React.useState(\"\");\r\n  const [cantidadTiendaUsuarioActual, setCantidadTiendaUsuarioActual] =\r\n    React.useState(\"\");\r\n  const [tiendaMoverDesde, setTiendaMoverDesde] = React.useState(\"\");\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  const [cantidadRestarProducto, setCantidadRestarProducto] =\r\n    React.useState(\"\");\r\n  const [tiendaNombreEspecificaDesde, setTiendaNombreEspecificoDesde] =\r\n    React.useState(\"\");\r\n  const [tiendaNombreEspecificaHasta, setTiendaNombreEspecificoHasta] =\r\n    React.useState(\"\");\r\n  const [tiendaMoverHasta, setTiendaMoverHasta] = React.useState(\"\");\r\n  const [tiendasByProductoDesde, setTiendasByProductoDesde] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [tiendasByProductoHasta, setTiendasByProductoHasta] = React.useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  // Restar productos function\r\n  const restarProductosValidarCampos = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string = `ERROR AL RESTAR PRODUCTOS. Verifique los siguientes parámetros.\\n`;\r\n\r\n      if (\r\n        parseInt(cantidadTiendaUsuarioActual) < parseInt(cantidadRestarProducto)\r\n      ) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-La cantidad a restar es mayor que la cantidad en la tienda.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        setModalRestarProductos(false);\r\n        setModalMesajeRestarVisible(true);\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n        setIsBotonModalMesajeVisible(true);\r\n        setReflechModalMensajeView(false);\r\n      }\r\n    }\r\n  };\r\n  const restarProductosFuction = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Restando producto. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario) {\r\n      let cantidadNueva: number =\r\n        parseInt(cantidadTiendaUsuarioActual) -\r\n        parseInt(cantidadRestarProducto);\r\n      await updateProductoTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        selectedValueNombreTienda,\r\n        String(cantidadNueva)\r\n      );\r\n\r\n      // Agregar Acción de usuario mover producto\r\n\r\n      const currentDate = new Date();\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n      let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} restó una cantidad de ${cantidadRestarProducto} de ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual}`;\r\n      await addAccionUsuario(\r\n        usuario.token,\r\n        auxAddAccionUsuarioDescripcion,\r\n        `${year}-${month}-${day}`,\r\n        usuario.id_usuario,\r\n        1\r\n      );\r\n\r\n      setModalMensaje(\r\n        `Se restaron ${cantidadRestarProducto} de la tienda ${nombreTiendaUsuarioActual}`\r\n      );\r\n      setIsBotonModalMesajeVisible(true);\r\n      setModalMensajeView(true);\r\n      setIsBotonModalMesajeVisible(true);\r\n      setReflechModalMensajeView(true);\r\n    }\r\n  };\r\n  // Mover productos\r\n  const moverProductoFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Moviendo producto. Espere por favor\");\r\n    setModalMensajeView(true);\r\n\r\n    if (usuario?.token) {\r\n      await moverProducto(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto\r\n      );\r\n      const currentDate = new Date();\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n      await addNewMovimiento(\r\n        usuario.token,\r\n        `${month}-${day}-${year}`,\r\n        tiendaMoverDesde,\r\n        tiendaMoverHasta,\r\n        cantidadMoverProducto,\r\n        idProductoDetails,\r\n        usuario.id_usuario\r\n      );\r\n\r\n      await createProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        tiendaMoverHasta\r\n      );\r\n\r\n      // Agregar Acción de usuario mover producto\r\n\r\n      let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} movió ${cantidadMoverProducto} de ${nombreProductoDetails} desde la tienda ${tiendaNombreEspecificaDesde} hasta la tienda ${tiendaNombreEspecificaHasta}`;\r\n      await addAccionUsuario(\r\n        usuario.token,\r\n        auxAddAccionUsuarioDescripcion,\r\n        `${year}-${month}-${day}`,\r\n        usuario.id_usuario,\r\n        2\r\n      );\r\n\r\n      setModalMensaje(\r\n        `Se movieron ${cantidadMoverProducto} de ${nombreProductoDetails} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}`\r\n      );\r\n      setIsBotonModalMesajeVisible(true);\r\n      setReflechModalMensajeView(true);\r\n      setModalMesajeMoverVisible(false);\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n\r\n  const moverProdcutoFunctionValidarCampos = async () => {\r\n    let flag: boolean = true;\r\n    let validarCampos: string = \"Error. Compruebe los siguientes parámetros:\\n\";\r\n    let cantidadDelProductoEnLaTiendaDesde: number = 0;\r\n    // Obtener cantidad del producto en la tienda especifica desde dodne se quiere mover\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        tiendaMoverDesde\r\n      );\r\n      if (result.encontrado) {\r\n        cantidadDelProductoEnLaTiendaDesde = parseInt(result.cantidad);\r\n      }\r\n    }\r\n    if (tiendaMoverDesde === tiendaMoverHasta) {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La tienda origen no puede ser igual a la tienda destino.\\n\";\r\n    }\r\n    if (cantidadMoverProducto === \"0\") {\r\n      flag = false;\r\n      validarCampos += \"-La cantidad a mover debe ser mayor que 0.\\n\";\r\n    }\r\n    if (cantidadMoverProducto === \"\") {\r\n      flag = false;\r\n      validarCampos += \"-La cantidad a mover no puede ser vacío.\\n\";\r\n    } else if (\r\n      parseInt(cantidadMoverProducto) > cantidadDelProductoEnLaTiendaDesde\r\n    ) {\r\n      // Comprobar que la cantidad que se desea mover no es mayor que la cantidad que existe en la tienda\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-La cantidad a mover es mayor que la cantidad que existe en la tienda.\\n\";\r\n    }\r\n    if (isPermisoMoverGeneral && tiendaMoverDesde === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija la tienda desde la que decea hacer el movimiento.\\n\";\r\n    }\r\n    if (tiendaMoverHasta === \"\") {\r\n      flag = false;\r\n      validarCampos +=\r\n        \"-Elija una tienda a la que desea hacer el movimiento.\\n\";\r\n    }\r\n\r\n    if (flag) {\r\n      const tiendaEspecificaHasta = tiendasByProductoHasta.find(\r\n        (tienda) => tienda.value === tiendaMoverHasta\r\n      );\r\n      setTiendaNombreEspecificoHasta(String(tiendaEspecificaHasta?.label));\r\n      const tiendaEspecificaDesde = tiendasByProductoDesde.find(\r\n        (tienda) => tienda.value === tiendaMoverDesde\r\n      );\r\n      setTiendaNombreEspecificoDesde(String(tiendaEspecificaDesde?.label));\r\n      setModalMoverVisible(false);\r\n      setReflechModalMensajeView(true);\r\n      setModalMesajeMoverVisible(true);\r\n    } else {\r\n      setModalMensaje(validarCampos);\r\n      setModalMensajeView(true);\r\n      setIsBotonModalMesajeVisible(true);\r\n      setReflechModalMensajeView(false);\r\n    }\r\n  };\r\n  // Función para buscar cuando se precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarProductos();\r\n    }\r\n  };\r\n\r\n  // Cargar datos de las tiendas para mover un producto\r\n  const cargarDatosTiendaParaMover = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n      const resultTiendas = await getAllTiendasByProduct(\r\n        usuario.token,\r\n        idProductoDetails\r\n      );\r\n\r\n      if (\r\n        result &&\r\n        Array.isArray(result.data) &&\r\n        resultTiendas !== false &&\r\n        Array.isArray(resultTiendas)\r\n      ) {\r\n        const allTiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n        let auxIdTiendas: string[] = [];\r\n        let auxDataTiendasProducto: TiendaPiker[] = [];\r\n        resultTiendas.forEach(async (element) => {\r\n          // Filtrar productos que esten en la tienda pero que no esten en 0\r\n          if (parseInt(element.cantidad) > 0) {\r\n            auxIdTiendas.push(element.id_tienda);\r\n          }\r\n        });\r\n        for (let element of auxIdTiendas) {\r\n          let item: TiendaPiker = { value: \"\", label: \"\" };\r\n          const datosTendaExisteProducto = await getTiendaById(\r\n            usuario.token,\r\n            element\r\n          );\r\n          item.label = datosTendaExisteProducto.nombre;\r\n          item.value = element;\r\n          auxDataTiendasProducto.push(item);\r\n        }\r\n\r\n        // Verificar si el valor existe en auxDataTiendasProducto\r\n        let existeTienda: boolean = false;\r\n\r\n        existeTienda = auxDataTiendasProducto.some((tienda) => {\r\n          tienda.value === usuario.id_tienda;\r\n        });\r\n\r\n        for (let index = 0; index < auxDataTiendasProducto.length; index++) {\r\n          if (auxDataTiendasProducto[index].value === usuario.id_tienda) {\r\n            existeTienda = true;\r\n          }\r\n        }\r\n\r\n        if (existeTienda) {\r\n          // Agregar un valor si es que la tienda del usuario es la desde\r\n          setTiendaMoverDesde(usuario.id_tienda);\r\n        }\r\n        if (!isPermisoMoverGeneral) {\r\n          setTiendaMoverDesde(usuario.id_tienda);\r\n        }\r\n\r\n        setTiendasByProductoDesde(auxDataTiendasProducto);\r\n        setTiendasByProductoHasta(allTiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const cargarVariablesMover = async () => {\r\n    if (usuario?.token) {\r\n      const resultTienda = await getTiendaById(usuario.token, tiendaMoverDesde);\r\n      const resultCantidadEnTienda = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        tiendaMoverDesde\r\n      );\r\n\r\n      setCantidadTiendaUsuarioActual(resultCantidadEnTienda.cantidad);\r\n      setNombreTiendaUsuarioActual(resultTienda.nombre);\r\n    }\r\n  };\r\n  // Controlar las variables que se muestran en el modal de mover\r\n  useEffect(() => {\r\n    if (optimizacionFirstLoadingData) {\r\n      cargarVariablesMover();\r\n    }\r\n  }, [tiendaMoverDesde]);\r\n\r\n  useEffect(() => {\r\n    if (auxRedondeo === \"PrecioCUP\") {\r\n      setPrecioUSDDetails(parseFloat(precioUSDDetails).toFixed(4));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"PrecioUSD\") {\r\n      setPrecioCUPDetails(parseFloat(precioCUPDetails).toFixed(0));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoCUP\") {\r\n      setCostoPromedioProductoUSDDetails(\r\n        parseFloat(costoPromedioProductoUSDDetails).toFixed(4)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoUSD\") {\r\n      setCostoPromedioProductoCUPDetails(\r\n        parseFloat(costoPromedioProductoCUPDetails).toFixed(0)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    }\r\n    setAuxRedondeo(\"\");\r\n  }, [auxRedondeo]);\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfProductoVenta();\r\n  }, [idTipoServicioDetails]);\r\n  useEffect(() => {\r\n    if (idProductoDetails !== \"\" && usuario?.token) {\r\n      const auxiliarAsyncFuncion = async () => {\r\n        const resultProdcuto = await getProductoById(\r\n          usuario.token,\r\n          idProductoDetails\r\n        );\r\n        // Cargar el costo promedio del producto seleccionado\r\n        setCostoPromedioProductoUSDDetails(resultProdcuto.costo_acumulado);\r\n        // Cargar precio del producto seleccioando en USD y CUP\r\n        setPrecioUSDDetails(resultProdcuto.precio ?? 0);\r\n        setPrecioCUPDetails(\r\n          String(parseFloat(resultProdcuto.precio) * cambioMoneda) ?? 0\r\n        );\r\n      };\r\n      auxiliarAsyncFuncion();\r\n    }\r\n  }, [idProductoDetails]);\r\n\r\n  // Método para exportar a exel\r\n  const exportarExel = async () => {\r\n    setModalMensaje(\r\n      \"Recopilando datos de todos los productos filtrados para el Exel. Espere un momento por favor.\"\r\n    );\r\n    setLoadingOfExel(true);\r\n    setModalMensajeViewExel(true);\r\n    if (usuario?.token) {\r\n      const currentDate = new Date();\r\n\r\n      // Extraemos el año, mes y día de la fecha actual\r\n      const year = String(currentDate.getFullYear());\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n      const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n      const result = await expedirExelProductosEnMyTienda(\r\n        usuario.token,\r\n        filterItems\r\n      );\r\n\r\n      if (result) {\r\n        const url = window.URL.createObjectURL(result);\r\n\r\n        // Crea un enlace de descarga\r\n        const a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = `${usuario.nombre_tienda}_${day}-${month}-${year}.xlsx`; // Nombre del archivo descargado\r\n        document.body.appendChild(a);\r\n\r\n        // Haz clic en el enlace para iniciar la descarga\r\n        a.click();\r\n\r\n        // Limpia el enlace creado y la URL Blob\r\n        document.body.removeChild(a);\r\n        window.URL.revokeObjectURL(url);\r\n      } else {\r\n        console.error(\"No se pudo descargar el archivo.\");\r\n      }\r\n    }\r\n    setLoadingOfExel(false);\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoButtonAddProducto, setIsPermisoButtonAddProducto] =\r\n    useState(false);\r\n  const [isPermisoHistorialDeProveedores, setIsPermisoHistorialDeProveedores] =\r\n    useState(false);\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [isPermisoMoverLocal, setIsPermisoMoverLocal] = React.useState(false);\r\n  const [isPermisoMoverGeneral, setIsPermisoMoverGeneral] =\r\n    React.useState(false);\r\n  const [isPermisoRestarProducto, setIsPermisoRestarProducto] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultPermisoButonAddProducto = await isPermiso(\r\n        usuario.token,\r\n        \"6\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoHistorialDeProveedores = await isPermiso(\r\n        usuario.token,\r\n        \"38\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionModificar = await isPermiso(\r\n        usuario.token,\r\n        \"7\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionEliminar = await isPermiso(\r\n        usuario.token,\r\n        \"8\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n        usuario.token,\r\n        \"30\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"31\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoVentaGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n      checkPermisoServicios();\r\n\r\n      // Actualiza el estado con los resultado\r\n      setIsPermisoOpcionesDeCelda(\r\n        resultPermisoButonOptionEliminar ||\r\n          resultPermisoButonOptionModificar ||\r\n          resultPermisoButonOptionMoverLocal ||\r\n          resultPermisoButonOptionMoverGeneral\r\n      );\r\n\r\n      setIsPermisoButtonAddProducto(resultPermisoButonAddProducto);\r\n      setIsPermisoHistorialDeProveedores(resultPermisoHistorialDeProveedores);\r\n      setIsPermisoMoverGeneral(resultPermisoButonOptionMoverGeneral);\r\n      setIsPermisoMoverLocal(resultPermisoButonOptionMoverLocal);\r\n\r\n      // Provicionalmente hasta que se implemente el tipo de servicio de venta\r\n      setIsPermisoRestarProducto(resultPermisoVentaGeneral);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Producto[]>([]);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  const getTiendasByProducto = async (id_producto: string) => {\r\n    if (usuario?.token) {\r\n      const result = await getAllTiendasByProduct(usuario.token, id_producto);\r\n\r\n      // Asegurándonos de que `result` es un array y contiene los datos esperados.\r\n      if (Array.isArray(result)) {\r\n        // Mapeamos los datos de tiendas al formato de TiendaShowModal.\r\n        const tiendas: TiendaShowModal[] = result.map((item) => ({\r\n          id_tienda: item.tienda.id_tienda.toString(),\r\n          nombre: item.tienda.nombre,\r\n          cantidad: item.cantidad.toString(), // Aquí usamos `item.cantidad` directamente.\r\n        }));\r\n\r\n        // Actualizamos el estado con las tiendas formateadas.\r\n        setTiendasByProducto(tiendas);\r\n      }\r\n    }\r\n  };\r\n\r\n  const cargarProveedoresPorProducto = async (id_producto: string) => {\r\n    try {\r\n      if (usuario?.token) {\r\n        // Llamamos a la API para obtener todas las entradas según el producto\r\n        const entradas = await getAllEntradasByProductoId(\r\n          usuario?.token,\r\n          id_producto\r\n        );\r\n        const resultProducto = await getProductoById(\r\n          usuario.token,\r\n          id_producto\r\n        );\r\n\r\n        if (entradas) {\r\n          setCostoPromedio(\r\n            `USD: ${resultProducto.costo_acumulado}  CUP: ${(\r\n              resultProducto.costo_acumulado * cambioMoneda\r\n            ).toFixed(0)}`\r\n          );\r\n          // Mapeamos los datos de las entradas para obtener solo la información que necesitamos\r\n          const proveedores = entradas.map((entrada: any) => ({\r\n            id_proveedor: entrada.proveedor.id_proveedor,\r\n            nombre: entrada.proveedor.nombre,\r\n            cantidad: entrada.cantidad,\r\n            costoPorUnidad: entrada.costo,\r\n          }));\r\n\r\n          // Actualizamos el estado con los datos obtenidos\r\n          setProveedorByProducto(proveedores);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error al cargar los proveedores por producto:\", error);\r\n    }\r\n  };\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([]);\r\n\r\n  const [dropdownItems, setDropDownItems] = useState<TiendaPiker[]>([]);\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [sKUSearch, setSKUSearch] = useState(\"\");\r\n  const [cantidadSearch, setCantidadSearch] = useState(\"\");\r\n  const [rangoPrecioDesdeSearch, setRangoPrecioDesdeSearch] = useState(\"\");\r\n  const [rangoPrecioHastaSearch, setRangoPrecioHastaSearch] = useState(\"\");\r\n  const [selectedValueNombreTienda, setSelectedValueNombreTienda] = useState<\r\n    string | null\r\n  >(usuario?.id_tienda);\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingOfExel, setLoadingOfExel] = useState(false);\r\n\r\n  const getDatesTiendaPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItems(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar producto\r\n  const callModalAddProducto = () => {\r\n    setModalProductsDates({\r\n      id_producto: \"\",\r\n      isAddProducto: false,\r\n      isModificarProducto: false,\r\n      fileEditable: true,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isAddProductoShowProveedores: false,\r\n    });\r\n  };\r\n  const cargarDetailsOfProducto = async () => {\r\n    if (usuario?.token && modalProductsDates?.id_producto) {\r\n      const result = await getProductoById(\r\n        usuario.token,\r\n        modalProductsDates.id_producto\r\n      );\r\n\r\n      if (result) {\r\n        // Establecer los detalles del producto\r\n        setIdProductoDetails(result.id_producto);\r\n        setNombreProductoDetails(result.nombre);\r\n        setPrecioProductoDetails(result.precio);\r\n        setPrecioEmpresaProductoDetails(result.precio_empresa);\r\n        setSkuDetails(result.Sku);\r\n        setDescripcionProductoDetails(result.descripcion || \"\"); // Maneja el caso de descripción nula\r\n\r\n        // Cargar historial de proveedores y tiendas en el que existe el producto\r\n        getTiendasByProducto(result.id_producto);\r\n        cargarProveedoresPorProducto(result.id_producto);\r\n\r\n        const resultTienda = await getTiendaById(\r\n          usuario.token,\r\n          tiendaMoverDesde\r\n        );\r\n\r\n        const resultCantidadEnTienda = await isProductoInTienda(\r\n          usuario.token,\r\n          result.id_producto,\r\n          selectedValueNombreTienda\r\n        );\r\n\r\n        const auxiliarNombreTiendaPiker = dropdownItems.find((element) => {\r\n          return (\r\n            parseInt(element.value) ===\r\n            parseInt(selectedValueNombreTienda ?? \"0\")\r\n          );\r\n        });\r\n\r\n        setCantidadTiendaUsuarioActual(resultCantidadEnTienda.cantidad);\r\n        setNombreTiendaUsuarioActual(auxiliarNombreTiendaPiker?.label ?? \"\");\r\n\r\n        // Convertir las imágenes de URL a base64\r\n        const imagesPromises = result.imagenes.map(async (img: any) => {\r\n          let httpImage: string = await img.url;\r\n          let parseHttp = httpImage.substring(1, httpImage.length);\r\n          httpImage = cerverHostImages + parseHttp;\r\n          return { uri: httpImage }; // Almacenar en el formato adecuado\r\n        });\r\n\r\n        // Esperar a que todas las promesas se resuelvan\r\n        const images = await Promise.all(imagesPromises);\r\n        setSelectedImages(images);\r\n      }\r\n    }\r\n  };\r\n\r\n  const convertUrlToBase64 = async (url: string): Promise<string> => {\r\n    console.log(url);\r\n\r\n    const response = await fetch(url);\r\n\r\n    // Verificar si la respuesta es exitosa\r\n    if (!response.ok) {\r\n      throw new Error(\"Error al obtener la imagen\");\r\n    }\r\n\r\n    const blob = await response.blob();\r\n    const reader = new FileReader();\r\n\r\n    return new Promise<string>((resolve, reject) => {\r\n      reader.onloadend = () => {\r\n        resolve(reader.result as string); // Este es el contenido en base64\r\n      };\r\n      reader.onerror = reject;\r\n      reader.readAsDataURL(blob); // Convierte el blob a base64\r\n    });\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<Producto[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filterProductsEnTienda(\r\n          usuario.token,\r\n          nombreProductoSearch,\r\n          sKUSearch,\r\n          rangoPrecioDesdeSearch,\r\n          rangoPrecioHastaSearch,\r\n          cantidadSearch,\r\n          selectedValueNombreTienda\r\n        );\r\n\r\n        if (result) {\r\n          const productosMapeados: Producto[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Producto: element.id_producto, // Mapea 'id_producto' a 'id_Producto'\r\n              nombre: element.producto.nombre, // Mapea 'nombre' directamente\r\n              sku: element.producto.Sku, // Mapea 'Sku' a 'sku'\r\n              cantidadTotal: element.cantidad,\r\n              precioUSD: element.producto.precio.toString(), // Mapea 'precio' a 'precioUSD' y lo convierte a string\r\n              precioEmpresaUSD: element.producto.precio_empresa,\r\n            }))\r\n          );\r\n\r\n          return productosMapeados; // Devuelve los productos mapeados\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los productos:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null; // Devuelve null si no hay token o no se pudieron filtrar productos\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optimizacionFirstLoadingData) {\r\n      cargarDetailsOfProducto();\r\n    }\r\n  }, [modalProductsDates]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        setSelectedValueNombreTienda(usuario?.id_tienda);\r\n        setCambioMoneda(await getValorMonedaUSD(usuario?.token));\r\n        await checkPermiso();\r\n\r\n        // *************\r\n        await getTipoServicioPikerDetails();\r\n        await getClientesPikerDetails();\r\n        await getProductosPikerDetails();\r\n        await getTiendasPikerDetails();\r\n        // ******************\r\n\r\n        getDatesTiendaPiker();\r\n      };\r\n      runEffects();\r\n      setOptimizacionFirstLoadingData(true);\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarProductos = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let productosFiltrados: Producto[] = await auxiliarFunctionFilter();\r\n\r\n        console.log(sortProductos?.criterioOrden && selectedOptionTipoOrden);\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortProductos?.criterioOrden && sortProductos.tipoOrden) {\r\n          productosFiltrados = await ordenarProducts(\r\n            usuario.token,\r\n            productosFiltrados,\r\n            sortProductos.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(productosFiltrados);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los productos:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarProductos();\r\n  }, [sortProductos, selectedOptionTipoOrden]);\r\n\r\n  const auxSetModalProductsDates = () => {\r\n    setNombreProductoDetails(\"\");\r\n    setPrecioProductoDetails(\"\");\r\n    setPrecioEmpresaProductoDetails(\"\");\r\n    setSkuDetails(\"\");\r\n    setDescripcionProductoDetails(\"\");\r\n    setSelectedImages([]);\r\n\r\n    setModalProductsDates({\r\n      id_producto: \"\",\r\n      isAddProducto: true,\r\n      fileEditable: true,\r\n      isModificarProducto: false,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isAddProductoShowProveedores: false,\r\n    });\r\n  };\r\n\r\n  // Método para cargar las imágenes\r\n  const handleImageUpload = () => {\r\n    const options = {\r\n      mediaType: \"photo\" as const, // Solo fotos\r\n      quality: 1, // Calidad máxima de la imagen\r\n      includeBase64: false, // No incluir en base64\r\n      selectionLimit: 100,\r\n      includeExtra: true,\r\n    };\r\n\r\n    // Abre la galería de imágenes\r\n    launchImageLibrary(options, (response: ImagePickerResponse) => {\r\n      if (response.didCancel) {\r\n        console.log(\"El usuario canceló la selección de la imagen.\");\r\n      } else if (response.errorMessage) {\r\n        console.error(\r\n          \"Error al seleccionar la imagen: \",\r\n          response.errorMessage\r\n        );\r\n      } else if (response.assets && response.assets.length > 0) {\r\n        // Agregar la nueva imagen al estado\r\n        setSelectedImages((prevImages) => {\r\n          // Calcula cuántas imágenes se pueden agregar sin exceder el límite de 100\r\n          const availableSpace = 100 - prevImages.length; // Espacio disponible en el estado\r\n          const newImages = response.assets.slice(0, availableSpace); // Selecciona solo las imágenes necesarias para no exceder el límite\r\n          return [...prevImages, ...newImages]; // Agrega las nuevas imágenes al estado\r\n        });\r\n      } else {\r\n        console.log(\"No se seleccionó ninguna imagen.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  // Función para eliminar una imagen por su índice\r\n  const handleRemoveImage = (index: number) => {\r\n    const updatedImages = selectedImages.filter((_, i) => i !== index);\r\n    setSelectedImages(updatedImages);\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProductoSearch(\"\");\r\n    setSKUSearch(\"\");\r\n    setCantidadSearch(\"\");\r\n    setRangoPrecioDesdeSearch(\"\");\r\n    setRangoPrecioHastaSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n    setSelectedValueNombreTienda(usuario?.id_tienda);\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"SKU\",\r\n    \"Nombre\",\r\n    \"PrecioUSD\",\r\n    \"PrecioCUP\",\r\n    \"Cantidad en la Tienda\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\"Nombre\", \"Cantidad\", \"Costo\"];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"SKU\",\r\n    \"Nombre\",\r\n    \"Precio\",\r\n    \"Precio\",\r\n    \"Cantidad\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => exportarExel()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              height: 30,\r\n              width: \"40%\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n              shadowOffset: { width: 0, height: 0 },\r\n              shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n              shadowRadius: 14, // Difuminado\r\n              borderColor: Colors.verde_claro,\r\n              borderWidth: 3,\r\n              padding: 10,\r\n              borderRadius: 10,\r\n              marginHorizontal: \"1%\",\r\n              marginTop: \"1%\",\r\n              backgroundColor: Colors.verde_claro, // Color de fondo del botón\r\n            }}\r\n          >\r\n            <Image\r\n              source={require(\"../images/exel.png\")}\r\n              style={{ width: 20, height: 20, marginRight: \"10%\" }}\r\n            />\r\n            <Text\r\n              style={[\r\n                styles.radioButtonTextDesktop,\r\n                sortProductos?.criterioOrden === \"option1\" &&\r\n                  styles.radioButtonSelected &&\r\n                  styles.radioButtonTextSelected,\r\n              ]}\r\n            >\r\n              Exportar a Excel\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableEnMyTienda\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <Text style={styles.textSearchMovil}>SKU:</Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}></Text>\r\n                    <Text style={styles.textSearchMovil}>Cantidad:</Text>\r\n                  </View>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"SKU\"\r\n                      value={sKUSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={setSKUSearch}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Cantidad\"\r\n                      value={cantidadSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Rango de Precio USD:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={rangoPrecioDesdeSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={rangoPrecioHastaSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioHastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  {(String(usuario?.id_rol) === \"2\" ||\r\n                    String(usuario?.id_rol) === \"1\") && (\r\n                    <View style={styles.separatorBlanco} />\r\n                  )}\r\n\r\n                  {(String(usuario?.id_rol) === \"2\" ||\r\n                    String(usuario?.id_rol) === \"1\") && (\r\n                    <Text style={styles.textSearchMovil}>\r\n                      Cambiar de Tienda:\r\n                    </Text>\r\n                  )}\r\n                  {(String(usuario?.id_rol) === \"2\" ||\r\n                    String(usuario?.id_rol) === \"1\") && (\r\n                    <View\r\n                      style={{ position: \"relative\", zIndex: 500, height: 100 }}\r\n                    >\r\n                      <CustomDropdown\r\n                        value={selectedValueNombreTienda}\r\n                        placeholder=\"Tiendas\"\r\n                        setValue={setSelectedValueNombreTienda}\r\n                        items={dropdownItems}\r\n                      />\r\n                    </View>\r\n                  )}\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      marginTop: 25,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarProductos();\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProductsDates?.isAddProducto ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProducto}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProducto}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {/*(modalProductsDates?.isModificarProducto ?? false)? \"Modificar Producto\" : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                false */}\r\n                {modalProductsDates?.isModificarProducto ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Producto\"\r\n                  : \"Agregar Producto\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Del Producto\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  value={nombreProductoDetails}\r\n                  onChangeText={setNombreProductoDetails}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  placeholder=\"Nombre del producto\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Precio y Precio de Empresa */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio en USD\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioProductoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio en USD\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Precio de Empresa */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio de empresa en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioEmpresaProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioEmpresaProductoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio de empresa en CUP\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio CUP */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoPromedio(validNumericValue);\r\n                      }}\r\n                      editable={false}\r\n                      placeholder=\"Precio en CUP\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Costo */}\r\n                  {isPermisoHistorialDeProveedores && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo Promedio\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={costoPromedio}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          setCostoPromedio(validNumericValue);\r\n                        }}\r\n                        editable={false}\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/*Contenedor para los precios en CUP */}\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          width: \"100%\",\r\n                          justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                          alignItems: \"center\",\r\n                          flexDirection: \"row\",\r\n                          paddingHorizontal: 10,\r\n                        }}\r\n                      >\r\n                        {/* Campo Precio en CUP*/}\r\n                        <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                          <Text style={styles.labelTextModalDesktop}>\r\n                            Precio en CUP\r\n                          </Text>\r\n                          <CustomTextImputSearch\r\n                            style={styles.textImputModal}\r\n                            value={(\r\n                              parseFloat(precioProductoDetails) * cambioMoneda\r\n                            ).toFixed(0)}\r\n                            cursorColor={Colors.azul_Oscuro}\r\n                            editable={false}\r\n                            placeholder=\"Precio en CUP\"\r\n                          />\r\n                        </View>\r\n\r\n                        {/* Campo SKU*/}\r\n                        <View\r\n                          style={{\r\n                            width: \"45%\",\r\n                            marginLeft: \"2%\",\r\n                            marginRight: \"2%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalDesktop}>Sku</Text>\r\n                          <CustomTextImputSearch\r\n                            style={styles.textImputModal}\r\n                            value={skuDetails}\r\n                            onChangeText={setSkuDetails}\r\n                            cursorColor={Colors.azul_Oscuro}\r\n                            editable={\r\n                              modalProductsDates?.fileEditable ? true : false\r\n                            }\r\n                            placeholder=\"Sku\"\r\n                          />\r\n                        </View>\r\n                      </View>\r\n                    )}\r\n\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          flexDirection: \"row\",\r\n                          height: 350,\r\n                          width: \"90%\",\r\n                        }}\r\n                      >\r\n                        <View\r\n                          style={{\r\n                            flexDirection: \"column\",\r\n                            height: 340,\r\n                            width: \"45%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalMovil}>\r\n                            Tiendas en las que existe el producto\r\n                          </Text>\r\n                          <MyDateTableModalShowDatesTienda\r\n                            columns={columnasMyDateTableTiendaModal}\r\n                            items={tiendasByProducto}\r\n                          />\r\n                        </View>\r\n                        {(modalProductsDates?.isAddProductoShowProveedores ??\r\n                          false) &&\r\n                          isPermisoHistorialDeProveedores && (\r\n                            <View\r\n                              style={{\r\n                                height: 340,\r\n                                width: \"45%\",\r\n                              }}\r\n                            >\r\n                              <Text style={styles.labelTextModalMovil}>\r\n                                Historial de proveedores\r\n                              </Text>\r\n                              <MyDateTableModalShowDateProveedores\r\n                                columns={columnasMyDateTableProveedorModal}\r\n                                items={proveedorByProducto}\r\n                              />\r\n                            </View>\r\n                          )}\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  value={descripcionProductoDetails}\r\n                  onChangeText={setDescripcionProductoDetails}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  numberOfLines={5}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/* Campo para cargar fotos */}\r\n                <PanGestureHandler onGestureEvent={onDrop}>\r\n                  <View\r\n                    style={{\r\n                      marginTop: 20,\r\n                      width: \"90%\",\r\n                      borderWidth: 1,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderRadius: 13,\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Colors.negro,\r\n                        marginBottom: \"5%\",\r\n                      }}\r\n                    >\r\n                      Imágenes del producto\r\n                    </Text>\r\n\r\n                    {/* Botón para cargar imágenes */}\r\n                    {(modalProductsDates?.fileEditable ?? false) && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                        }}\r\n                        onPress={handleImageUpload}\r\n                      >\r\n                        <Text style={{ color: Colors.blanco }}>\r\n                          Seleccionar Imagenes\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Vista para mostrar las imágenes seleccionadas */}\r\n                    {selectedImages.length > 0 && (\r\n                      <ScrollView\r\n                        horizontal={true}\r\n                        style={{\r\n                          marginTop: 10,\r\n                          width: \"100%\",\r\n                          height: 100, // Ajusta la altura de la vista de imágenes\r\n                        }}\r\n                      >\r\n                        {selectedImages.map((image, index) => (\r\n                          <View\r\n                            key={index}\r\n                            style={{\r\n                              position: \"relative\",\r\n                              width: 100,\r\n                              height: 100,\r\n                              marginRight: 10,\r\n                            }}\r\n                          >\r\n                            <Image\r\n                              key={index}\r\n                              source={{ uri: image.uri }} // Usa la URI de la imagen\r\n                              style={{\r\n                                width: 100,\r\n                                height: 100,\r\n                                marginRight: 10,\r\n                                borderRadius: 10,\r\n                              }}\r\n                            />\r\n                            <TouchableOpacity\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                top: 5,\r\n                                right: 5,\r\n                                backgroundColor: \"red\",\r\n                                borderRadius: 15,\r\n                                width: 20,\r\n                                height: 20,\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                zIndex: 1,\r\n                              }}\r\n                              onPress={() => handleRemoveImage(index)}\r\n                            >\r\n                              <Text\r\n                                style={{\r\n                                  color: \"white\",\r\n                                  fontSize: 14,\r\n                                }}\r\n                              >\r\n                                X\r\n                              </Text>\r\n                            </TouchableOpacity>\r\n                          </View>\r\n                        ))}\r\n                      </ScrollView>\r\n                    )}\r\n                  </View>\r\n                </PanGestureHandler>\r\n\r\n                {/**Contenedor para los botones */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  {(isPermisoMoverGeneral || isPermisoMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        marginLeft: \"5%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        setModalProductsDates({\r\n                          id_producto: \"\",\r\n                          isAddProducto: false,\r\n                          isModificarProducto: false,\r\n                          fileEditable: false,\r\n                          isAddProductoShowProveedoresTiendas: false,\r\n                          isAddProductoShowProveedores: false,\r\n                        });\r\n                        cargarDatosTiendaParaMover();\r\n                        setModalMoverVisible(true);\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Mover Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  {isPermisoRestarProducto && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        callModalAddProducto();\r\n                        setModalRestarProductos(true);\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Restar Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  {false && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.verde_claro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        marginRight: \"5%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        callVenta();\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Vender Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal de servicio */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalVenderProductoVisible}\r\n          animationType=\"fade\"\r\n          onRequestClose={() =>\r\n            setIsModalVenderProductoVisible(!isModalVenderProductoVisible)\r\n          }\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  setIsModalVenderProductoVisible(!isModalVenderProductoVisible)\r\n                }\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                Vender Producto\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 5000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 5000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idClienteDetails}\r\n                    placeholder=\"Seleccione un Cliente\"\r\n                    setValue={setIdClienteDetails}\r\n                    items={dropdownItemsNombreCliente}\r\n                    searchable={true}\r\n                    readOnly={\r\n                      !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                    }\r\n                  />\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: 1500,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDetails}\r\n                      placeholder=\"Seleccione una tienda\"\r\n                      setValue={setIdTiendaDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={!false}\r\n                      searchable={true}\r\n                      onDropdownOpen={() => {}}\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio: Venta\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: 100,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: 500,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdownDetails\r\n                      value={idProductoDetails}\r\n                      placeholder=\"Seleccione un produto\"\r\n                      setValue={setIdProductoDetails}\r\n                      items={dropdownItemsNombreproducto}\r\n                      searchable={true}\r\n                      readOnly={!false}\r\n                      onDropdownOpen={() => {}}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={cantidadProductoServicioDetails}\r\n                        onChangeText={(text) => {\r\n                          // Filtra caracteres no numéricos\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                          setCantidadProductoServicioDetails(numericValue);\r\n                        }}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad del producto\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en USD\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoUSDDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoCUPDetails(\r\n                              String(\r\n                                (\r\n                                  parseFloat(validNumericValue) * cambioMoneda\r\n                                ).toFixed(0)\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoCUPDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoUSDDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoUSD\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoCUPDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoUSDDetails(\r\n                              String(\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoUSDDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoCUPDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoCUP\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={precioUSDDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioCUPDetails(\r\n                            String(\r\n                              (\r\n                                parseFloat(validNumericValue) * cambioMoneda\r\n                              ).toFixed(0)\r\n                            )\r\n                          );\r\n                        } else {\r\n                          setPrecioCUPDetails(\"0\");\r\n                        }\r\n                        setPrecioUSDDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioUSD\");\r\n                      }}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en usd\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModalNOEDITABLE}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioUSDDetails(\r\n                            String(parseFloat(validNumericValue) / cambioMoneda)\r\n                          );\r\n                        } else {\r\n                          setPrecioUSDDetails(\"0\");\r\n                        }\r\n                        setPrecioCUPDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioCUP\");\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en cup\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: 600,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => {}}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: 500,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={notaDetails}\r\n                      onChangeText={setNotaDetails}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Nota\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del servicio\"\r\n                  multiline={true}\r\n                  editable={\r\n                    isPermisoModificarServicio || isPermisoServicioLocal\r\n                  }\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      marginLeft: \"5%\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                      marginTop: \"3%\", // Margen adicional entre botones\r\n                    }}\r\n                    onPress={() => {\r\n                      addNewServicio();\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: 16,\r\n                      }}\r\n                    >\r\n                      Agregar Servicio\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal mensaje para Restar Productos*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMesajeRestarVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Estás seguro de que deseas restar una cantidad de ${cantidadRestarProducto} del producto ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual}?`}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => restarProductosFuction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    setModalMesajeRestarVisible(!isModalMesajeRestarVisible)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setModalMesajeRestarVisible(!isModalMesajeRestarVisible)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal restar Productos*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalRestarProductos}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 300,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Restar ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual} en la cual hay ${cantidadTiendaUsuarioActual}`}\r\n              </Text>\r\n\r\n              <Text\r\n                style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10 }}\r\n              >\r\n                Cantidad a restar\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  marginHorizontal: \"5%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 16, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                value={cantidadRestarProducto}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadRestarProducto(numericValue);\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                editable={modalProductsDates?.fileEditable ? true : false}\r\n                placeholder=\"Cantidad a restar\"\r\n              />\r\n\r\n              <TouchableOpacity\r\n                onPress={() => restarProductosValidarCampos()}\r\n                style={{\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 15,\r\n                  marginTop: 30,\r\n                  width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                    color: Colors.blanco_Suave,\r\n                  }}\r\n                >\r\n                  Restar Productos\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setModalRestarProductos(!isModalRestarProductos)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal restar Productos*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalRestarProductos}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Restar ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual} en la cual hay ${cantidadTiendaUsuarioActual}`}\r\n              </Text>\r\n\r\n              <Text\r\n                style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10 }}\r\n              >\r\n                Cantidad a restar\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={styles.textImputModal}\r\n                value={nombreProductoDetails}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadSearch(numericValue);\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                editable={modalProductsDates?.fileEditable ? true : false}\r\n                placeholder=\"Cantidad a restar\"\r\n              />\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal mensaje para el Mover*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMesajeMoverVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 450,\r\n                height: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Desea mover ${cantidadMoverProducto} producto ${nombreProductoDetails} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}?`}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => moverProductoFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para el Mover*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMoverVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {tiendaMoverDesde === \"\"\r\n                  ? \"Seleccione una tienda origen\"\r\n                  : `Mover Producto \"${nombreProductoDetails}\" en la Tienda\\n ${nombreTiendaUsuarioActual} con una cantidad de ${cantidadTiendaUsuarioActual}`}\r\n              </Text>\r\n\r\n              <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                La cantidad que desea mover\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 18, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                placeholder=\"Cantidad a mover\"\r\n                value={cantidadMoverProducto}\r\n                onChangeText={(text) => {\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadMoverProducto(numericValue);\r\n                }}\r\n              />\r\n\r\n              <Text style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}>\r\n                Tiendas para mover los productos\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                {isPermisoMoverGeneral && (\r\n                  <CustomDropDownPikerFromMover\r\n                    value={tiendaMoverDesde}\r\n                    items={tiendasByProductoDesde}\r\n                    placeholder=\"Tienda desde donde se quiere mover\"\r\n                    setValue={setTiendaMoverDesde}\r\n                  />\r\n                )}\r\n                <CustomDropDownPikerFromMover\r\n                  value={tiendaMoverHasta}\r\n                  items={tiendasByProductoHasta}\r\n                  placeholder=\"Tienda a la que se quiere mover\"\r\n                  setValue={setTiendaMoverHasta}\r\n                />\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                style={{\r\n                  backgroundColor: Colors.azul_Claro,\r\n                  borderRadius: 15,\r\n                  marginTop: 150,\r\n                  width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 50, // Altura fija para pantallas de escritorio\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n              >\r\n                <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Mi Tienda\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje para el exel */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeViewExel}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {loadingOfExel ? (\r\n                <ActivityIndicator\r\n                  size={100}\r\n                  color=\"#007BFF\"\r\n                  style={{\r\n                    flex: 1,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"15%\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <View\r\n                  style={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Datos Recopilados. Espere a que termine la descarga.\r\n                  </Text>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: \"#007BFF\", // Cambia esto por Colors.azul_Oscuro si lo tienes definido\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho del botón\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMensajeViewExel(!isModalMensajeViewExel)\r\n                    } // Llama a la función onClose para cerrar el modal\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => exportarExel()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              height: 30,\r\n              width: \"12%\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n              shadowOffset: { width: 0, height: 0 },\r\n              shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n              shadowRadius: 14, // Difuminado\r\n              borderColor: Colors.verde_claro,\r\n              borderWidth: 3,\r\n              padding: 10,\r\n              borderRadius: 10,\r\n              marginHorizontal: \"1%\",\r\n              marginTop: \"1%\",\r\n              backgroundColor: Colors.verde_claro, // Color de fondo del botón\r\n            }}\r\n          >\r\n            <Image\r\n              source={require(\"../images/exel.png\")}\r\n              style={{ width: 20, height: 20, marginRight: \"10%\" }}\r\n            />\r\n            <Text\r\n              style={[\r\n                styles.radioButtonTextDesktop,\r\n                sortProductos?.criterioOrden === \"option1\" &&\r\n                  styles.radioButtonSelected &&\r\n                  styles.radioButtonTextSelected,\r\n              ]}\r\n            >\r\n              Exportar a Excel\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearch}\r\n              onChangeText={setNombreProductoSearch}\r\n              onKeyPress={handleKeyPress}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <Text style={styles.textSearchDesktop}>SKU:</Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}></Text>\r\n              <Text style={styles.textSearchDesktop}>Cantidad:</Text>\r\n            </View>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"SKU\"\r\n                value={sKUSearch}\r\n                onChangeText={setSKUSearch}\r\n                onKeyPress={handleKeyPress}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Cantidad\"\r\n                value={cantidadSearch}\r\n                onKeyPress={handleKeyPress}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              Rango de Precio en USD:\r\n            </Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={rangoPrecioDesdeSearch}\r\n                onKeyPress={handleKeyPress}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={rangoPrecioHastaSearch}\r\n                onKeyPress={handleKeyPress}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioHastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            {(String(usuario?.id_rol) === \"2\" ||\r\n              String(usuario?.id_rol) === \"1\") && (\r\n              <View style={styles.separatorBlanco} />\r\n            )}\r\n\r\n            {(String(usuario?.id_rol) === \"2\" ||\r\n              String(usuario?.id_rol) === \"1\") && (\r\n              <Text style={styles.textSearchDesktop}>Cambiar de Tienda:</Text>\r\n            )}\r\n            {(String(usuario?.id_rol) === \"2\" ||\r\n              String(usuario?.id_rol) === \"1\") && (\r\n              <View style={{ position: \"relative\", zIndex: 500, height: 100 }}>\r\n                <CustomDropdown\r\n                  value={selectedValueNombreTienda}\r\n                  placeholder=\"Tiendas\"\r\n                  setValue={setSelectedValueNombreTienda}\r\n                  items={dropdownItems}\r\n                />\r\n              </View>\r\n            )}\r\n            <View\r\n              style={{ width: \"100%\", flexDirection: \"row\", marginTop: 25 }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarProductos()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableEnMyTienda\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        {/*Modal de en my tienda producto details */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProductsDates?.isAddProducto ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProducto}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProducto}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProductsDates?.isModificarProducto ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Producto\"\r\n                  : \"Agregar Producto\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Del Producto\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  value={nombreProductoDetails}\r\n                  onChangeText={setNombreProductoDetails}\r\n                  placeholder=\"Nombre del producto\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Precio y Precio de Empresa */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio en USD\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioProductoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio en USD\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Precio de Empresa */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio de empresa en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={precioEmpresaProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setPrecioEmpresaProductoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={modalProductsDates?.fileEditable ? true : false}\r\n                      placeholder=\"Precio de empresa en CUP\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Precio CUP */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Precio en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoPromedio(validNumericValue);\r\n                      }}\r\n                      editable={false}\r\n                      placeholder=\"Precio en CUP\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Costo */}\r\n                  {isPermisoHistorialDeProveedores && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo Promedio\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={costoPromedio}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          setCostoPromedio(validNumericValue);\r\n                        }}\r\n                        editable={false}\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          width: \"100%\",\r\n                          justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                          alignItems: \"center\",\r\n                          flexDirection: \"row\",\r\n                          paddingHorizontal: 10,\r\n                        }}\r\n                      >\r\n                        {/* Campo Precio en CUP*/}\r\n                        <View style={{ width: \"45%\", marginLeft: \"2%\" }}></View>\r\n\r\n                        {/* Campo Precio de Empresa en CUP*/}\r\n                        <View\r\n                          style={{\r\n                            width: \"45%\",\r\n                            marginLeft: \"2%\",\r\n                            marginRight: \"2%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalDesktop}>Sku</Text>\r\n                          <CustomTextImputSearch\r\n                            style={styles.textImputModal}\r\n                            value={skuDetails}\r\n                            onChangeText={setSkuDetails}\r\n                            cursorColor={Colors.azul_Oscuro}\r\n                            editable={\r\n                              modalProductsDates?.fileEditable ? true : false\r\n                            }\r\n                            placeholder=\"Sku\"\r\n                          />\r\n                        </View>\r\n                      </View>\r\n                    )}\r\n\r\n                {modalProductsDates?.isModificarProducto\r\n                  ? false\r\n                  : (modalProductsDates?.isAddProductoShowProveedoresTiendas ??\r\n                      false) && (\r\n                      <View\r\n                        style={{\r\n                          borderColor: Colors.azul_Oscuro,\r\n                          borderWidth: 2,\r\n                          marginTop: \"3%\",\r\n                          borderRadius: 15,\r\n                          flexDirection: \"row\",\r\n                          height: 350,\r\n                          width: \"90%\",\r\n                        }}\r\n                      >\r\n                        <View\r\n                          style={{\r\n                            flexDirection: \"column\",\r\n                            height: 350,\r\n                            width: \"50%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.labelTextModalDesktop}>\r\n                            Tiendas en las que existe el producto\r\n                          </Text>\r\n                          <MyDateTableModalShowDatesTienda\r\n                            columns={columnasMyDateTableTiendaModal}\r\n                            items={tiendasByProducto}\r\n                          />\r\n                        </View>\r\n                        {(modalProductsDates?.isAddProductoShowProveedores ??\r\n                          false) &&\r\n                          isPermisoHistorialDeProveedores && (\r\n                            <View\r\n                              style={{\r\n                                height: 350,\r\n                                width: \"50%\",\r\n                              }}\r\n                            >\r\n                              <Text style={styles.labelTextModalDesktop}>\r\n                                Historial de proveedores\r\n                              </Text>\r\n                              <MyDateTableModalShowDateProveedores\r\n                                columns={columnasMyDateTableProveedorModal}\r\n                                items={proveedorByProducto}\r\n                              />\r\n                            </View>\r\n                          )}\r\n                      </View>\r\n                    )}\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={modalProductsDates?.fileEditable ? true : false}\r\n                  numberOfLines={5}\r\n                  value={descripcionProductoDetails}\r\n                  onChangeText={setDescripcionProductoDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/* Campo para cargar fotos */}\r\n                <PanGestureHandler onGestureEvent={onDrop}>\r\n                  <View\r\n                    style={{\r\n                      marginTop: 20,\r\n                      width: \"90%\",\r\n                      borderWidth: 1,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderRadius: 13,\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Colors.negro,\r\n                        marginBottom: \"5%\",\r\n                      }}\r\n                    >\r\n                      Imágenes del producto\r\n                    </Text>\r\n\r\n                    {/* Botón para cargar imágenes */}\r\n                    {(modalProductsDates?.fileEditable ?? false) && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                        }}\r\n                        onPress={handleImageUpload}\r\n                      >\r\n                        <Text style={{ color: Colors.blanco }}>\r\n                          Seleccionar Imagenes\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Vista para mostrar las imágenes seleccionadas */}\r\n                    {selectedImages.length > 0 && (\r\n                      <ScrollView\r\n                        horizontal={true}\r\n                        style={{\r\n                          marginTop: 10,\r\n                          width: \"100%\",\r\n                          height: 100, // Ajusta la altura de la vista de imágenes\r\n                        }}\r\n                      >\r\n                        {selectedImages.map((image, index) => (\r\n                          <View\r\n                            key={index}\r\n                            style={{\r\n                              position: \"relative\",\r\n                              width: 100,\r\n                              height: 100,\r\n                              marginRight: 10,\r\n                            }}\r\n                          >\r\n                            <Image\r\n                              key={index}\r\n                              source={{ uri: image.uri }} // Usa la URI de la imagen\r\n                              style={{\r\n                                width: 100,\r\n                                height: 100,\r\n                                marginRight: 10,\r\n                                borderRadius: 10,\r\n                              }}\r\n                            />\r\n                            <TouchableOpacity\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                top: 5,\r\n                                right: 5,\r\n                                backgroundColor: \"red\",\r\n                                borderRadius: 15,\r\n                                width: 20,\r\n                                height: 20,\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                zIndex: 1,\r\n                              }}\r\n                              onPress={() => handleRemoveImage(index)}\r\n                            >\r\n                              <Text\r\n                                style={{\r\n                                  color: \"white\",\r\n                                  fontSize: 14,\r\n                                }}\r\n                              >\r\n                                X\r\n                              </Text>\r\n                            </TouchableOpacity>\r\n                          </View>\r\n                        ))}\r\n                      </ScrollView>\r\n                    )}\r\n                  </View>\r\n                </PanGestureHandler>\r\n\r\n                {/**Contenedor para los botones */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  {(isPermisoMoverGeneral || isPermisoMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        marginLeft: \"5%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        setModalProductsDates({\r\n                          id_producto: \"\",\r\n                          isAddProducto: false,\r\n                          isModificarProducto: false,\r\n                          fileEditable: false,\r\n                          isAddProductoShowProveedoresTiendas: false,\r\n                          isAddProductoShowProveedores: false,\r\n                        });\r\n                        cargarDatosTiendaParaMover();\r\n                        setModalMoverVisible(true);\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Mover Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  {isPermisoRestarProducto && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        callModalAddProducto();\r\n                        setModalRestarProductos(true);\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Restar Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  {false && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.verde_claro,\r\n                        padding: 10,\r\n                        marginTop: \"3%\",\r\n                        marginRight: \"5%\",\r\n                        borderRadius: 12,\r\n                        width: \"30%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => {\r\n                        callVenta();\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Vender Producto</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal mensaje para Restar Productos*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMesajeRestarVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Estás seguro de que deseas restar una cantidad de ${cantidadRestarProducto} del producto ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual}?`}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => restarProductosFuction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    setModalMesajeRestarVisible(!isModalMesajeRestarVisible)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setModalMesajeRestarVisible(!isModalMesajeRestarVisible)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal restar Productos*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalRestarProductos}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 300,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Restar ${nombreProductoDetails} de la tienda ${nombreTiendaUsuarioActual} en la cual hay ${cantidadTiendaUsuarioActual}`}\r\n              </Text>\r\n\r\n              <Text\r\n                style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10 }}\r\n              >\r\n                Cantidad a restar\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  marginHorizontal: \"5%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 16, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                value={cantidadRestarProducto}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadRestarProducto(numericValue);\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                editable={modalProductsDates?.fileEditable ? true : false}\r\n                placeholder=\"Cantidad a restar\"\r\n              />\r\n\r\n              <TouchableOpacity\r\n                onPress={() => restarProductosValidarCampos()}\r\n                style={{\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 15,\r\n                  marginTop: 30,\r\n                  width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                    color: Colors.blanco_Suave,\r\n                  }}\r\n                >\r\n                  Restar Productos\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setModalRestarProductos(!isModalRestarProductos)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal mensaje para el Mover*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMesajeMoverVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 450,\r\n                height: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Desea mover ${cantidadMoverProducto} producto ${nombreProductoDetails} desde la tienda ${tiendaNombreEspecificaDesde} a ${tiendaNombreEspecificaHasta}?`}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => moverProductoFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setModalMesajeMoverVisible(!isModalMesajeMoverVisible)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para el Mover*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMoverVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 500, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {tiendaMoverDesde === \"\"\r\n                  ? \"Seleccione una tienda origen\"\r\n                  : `Mover Producto \"${nombreProductoDetails}\" en la Tienda ${nombreTiendaUsuarioActual} con una cantidad de ${cantidadTiendaUsuarioActual}`}\r\n              </Text>\r\n\r\n              <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                La cantidad que desea mover\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 18, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                placeholder=\"Cantidad a mover\"\r\n                value={cantidadMoverProducto}\r\n                onChangeText={(text) => {\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCantidadMoverProducto(numericValue);\r\n                }}\r\n              />\r\n\r\n              <Text style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}>\r\n                Tiendas para mover los productos\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"row\",\r\n                  position: \"relative\",\r\n                  zIndex: 500,\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                {isPermisoMoverGeneral && (\r\n                  <CustomDropDownPikerFromMover\r\n                    value={tiendaMoverDesde}\r\n                    items={tiendasByProductoDesde}\r\n                    placeholder=\"Tienda desde donde se quiere mover\"\r\n                    setValue={setTiendaMoverDesde}\r\n                  />\r\n                )}\r\n                <CustomDropDownPikerFromMover\r\n                  value={tiendaMoverHasta}\r\n                  items={tiendasByProductoHasta}\r\n                  placeholder=\"Tienda a la que se quiere mover\"\r\n                  setValue={setTiendaMoverHasta}\r\n                />\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => moverProdcutoFunctionValidarCampos()}\r\n                style={{\r\n                  backgroundColor: Colors.azul_Claro,\r\n                  borderRadius: 15,\r\n                  marginTop: 170,\r\n                  width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 50, // Altura fija para pantallas de escritorio\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n              >\r\n                <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Mi Tienda\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje para el exel */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeViewExel}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {loadingOfExel ? (\r\n                <ActivityIndicator\r\n                  size={100}\r\n                  color=\"#007BFF\"\r\n                  style={{\r\n                    flex: 1,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"15%\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <View\r\n                  style={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Datos Recopilados. Espere a que termine la descarga.\r\n                  </Text>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: \"#007BFF\", // Cambia esto por Colors.azul_Oscuro si lo tienes definido\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho del botón\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() =>\r\n                      setModalMensajeViewExel(!isModalMensajeViewExel)\r\n                    } // Llama a la función onClose para cerrar el modal\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { TiendaShowModal } from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport interface Entrada {\r\n  id_Entrada: string;\r\n  id_Proveedor: string;\r\n  id_Producto: string;\r\n  nombre_Proveedor: string;\r\n  nombre_Producto: string;\r\n  cantidad: string;\r\n  costo: string;\r\n  fecha: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Entrada[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableEntradas: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortEntradas, setSortEntradas } = useSortEntradas();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Entrada[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // cargar cambio de moneda\r\n              setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  // Metodo que devuelve el mensaje al final de la pagina\r\n  const mensajeOfEndTable = () =>{\r\n    let mensaje = \"La suma total de los costos de los productos filtrados es de: \";\r\n    let sumaCostos: number = 0\r\n\r\n    items.forEach((item) =>{\r\n      sumaCostos += parseFloat(item.costo)\r\n    })\r\n    mensaje += `${sumaCostos} USD.`\r\n    return mensaje\r\n  }\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre Proveedor\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Producto\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Costo Por Unidad\") {\r\n      aux = \"option5\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option6\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortEntradas({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Proveedor\" ||\r\n                column === \"Nombre Producto\" ||\r\n                column === \"Costo Por Unidad\" ||\r\n                column === \"Fecha\") && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Suave,\r\n                    marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                    width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                    height: 24, // Asegúrate de que tenga tamaño consistente\r\n                    justifyContent: \"center\", // Centrar contenido del botón\r\n                    alignItems: \"center\", // Centrar contenido del botón\r\n                    borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                    marginBottom: 4, // Elevar el botón del borde inferior\r\n                    paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                  }}\r\n                  onPress={() => sortEntradasAux(column)}\r\n                >\r\n                  <Image\r\n                    source={require(\"../images/ordenar.png\")}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </TouchableOpacity>\r\n              )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Proveedor !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Entrada}\r\n                onPress={() => detailsModalView(item.id_Entrada)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Proveedor}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo USD */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.costo}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{(parseFloat(item.costo) * cambioMoneda).toFixed(2)}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <Text>{mensajeOfEndTable()}</Text>\r\n            </View>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Entrada}\r\n                onPress={() => detailsModalView(item.id_Entrada)}\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Proveedor}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo USD*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.costo}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo CUP*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {(parseFloat(item.costo) * cambioMoneda).toFixed(2)}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <Text>{mensajeOfEndTable()}</Text>\r\n          </View>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Text, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\n\r\ninterface DateInputProps {\r\n  dayValue: string;\r\n  monthValue: string;\r\n  yearValue: string;\r\n  onDayChange: (day: string) => void;\r\n  onMonthChange: (month: string) => void;\r\n  onYearChange: (year: string) => void;\r\n  style?: StyleProp<ViewStyle>;\r\n  styleText?: StyleProp<TextStyle>;\r\n  isReadOnly?: boolean;\r\n  onDropdownOpen?: () => void; // Nueva propiedad para manejar la apertura del dropdown\r\n}\r\n\r\nexport const MyDateInputVencimiento: React.FC<DateInputProps> = ({\r\n  dayValue,\r\n  monthValue,\r\n  yearValue,\r\n  onDayChange,\r\n  onMonthChange,\r\n  onYearChange,\r\n  style,\r\n  styleText,\r\n  isReadOnly = false,\r\n  onDropdownOpen, // Desestructuración de la nueva propiedad\r\n}) => {\r\n  const [day, setDay] = useState<string>(dayValue);\r\n  const [month, setMonth] = useState<string>(monthValue);\r\n  const [year, setYear] = useState<string>(yearValue);\r\n  const [days, setDays] = useState<Array<{ label: string; value: string }>>([]);\r\n\r\n  const [activePicker, setActivePicker] = useState<'day' | 'month' | 'year' | null>(null);\r\n\r\n  const getDaysInMonth = (month: number, year: number) => {\r\n    return new Date(year, month, 0).getDate();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const numberOfDays = getDaysInMonth(Number(month), Number(year));\r\n    const daysArray = Array.from({ length: numberOfDays }, (_, i) => ({\r\n      label: String(i + 1),\r\n      value: String(i + 1),\r\n    }));\r\n\r\n    if (Number(day) > numberOfDays) {\r\n      setDay(String(numberOfDays));\r\n    }\r\n\r\n    setDays(daysArray);\r\n  }, [month, year]);\r\n\r\n  const updateDate = (newDay: string, newMonth: string, newYear: string) => {\r\n    onDayChange(newDay);\r\n    onMonthChange(newMonth);\r\n    onYearChange(newYear);\r\n  };\r\n\r\n  const togglePicker = (picker: 'day' | 'month' | 'year') => {\r\n    if (activePicker === picker) {\r\n      setActivePicker(null);\r\n    } else {\r\n      setActivePicker(picker);\r\n      onDropdownOpen && onDropdownOpen(); // Llama a onDropdownOpen cuando se abre un picker\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, style]}>\r\n      <View style={styles.inputWrapper}>\r\n        <Text style={[styles.label, styleText]}>Día</Text>\r\n        <DropDownPicker\r\n          open={activePicker === 'day'}\r\n          value={day}\r\n          items={days}\r\n          setOpen={() => !isReadOnly && togglePicker('day')}\r\n          setValue={(value) => {\r\n            setDay(value);\r\n            updateDate(value, month, year);\r\n          }}\r\n          style={styles.picker}\r\n          containerStyle={[styles.pickerContainer, { zIndex: activePicker === 'day' ? 2 : 1 }]}\r\n          dropDownContainerStyle={styles.dropDownContainer}\r\n          disabled={isReadOnly}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputWrapper}>\r\n        <Text style={[styles.label, styleText]}>Mes</Text>\r\n        <DropDownPicker\r\n          open={activePicker === 'month'}\r\n          value={month}\r\n          items={Array.from({ length: 12 }, (_, i) => ({\r\n            label: String(i + 1),\r\n            value: String(i + 1),\r\n          }))}\r\n          setOpen={() => !isReadOnly && togglePicker('month')}\r\n          setValue={(value) => {\r\n            setMonth(value);\r\n            updateDate(day, value, year);\r\n          }}\r\n          style={styles.picker}\r\n          containerStyle={[styles.pickerContainer, { zIndex: activePicker === 'month' ? 2 : 1 }]}\r\n          dropDownContainerStyle={styles.dropDownContainer}\r\n          disabled={isReadOnly}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputWrapper}>\r\n        <Text style={[styles.label, styleText]}>Año</Text>\r\n        <DropDownPicker\r\n          open={activePicker === 'year'}\r\n          value={year}\r\n          items={Array.from({ length: 51 }, (_, i) => {\r\n            const year = new Date().getFullYear() - 25 + i;\r\n            return { label: String(year), value: String(year) };\r\n          })}\r\n          setOpen={() => !isReadOnly && togglePicker('year')}\r\n          setValue={(value) => {\r\n            setYear(value);\r\n            updateDate(day, month, value);\r\n          }}\r\n          style={styles.picker}\r\n          containerStyle={[styles.pickerContainer, { zIndex: activePicker === 'year' ? 2 : 1 }]}\r\n          dropDownContainerStyle={styles.dropDownContainer}\r\n          disabled={isReadOnly}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  inputWrapper: {\r\n    flex: 1,\r\n    marginHorizontal: 5,\r\n  },\r\n  label: {\r\n    fontSize: 14,\r\n    marginBottom: 5,\r\n    color: '#000',\r\n  },\r\n  picker: {\r\n    height: 20,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    borderRadius: 12,\r\n  },\r\n  pickerContainer: {\r\n    height: 35,\r\n    width: 80,\r\n  },\r\n  dropDownContainer: {\r\n    borderColor: 'gray',\r\n    zIndex: 9999,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getAllTiendas, isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  Entrada,\r\n  MyDateTableEntradas,\r\n} from \"../components/MyDateTableEntradas\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n  getProductoById,\r\n  getProductoCantidadTotal,\r\n  updateProductoCostoAcumulado,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { MyDateInputVencimiento } from \"../components/MyDateInputVencimiento\"\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport default function EntradasView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadProductosDetails, setCapaPrioridadProductosDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadProveedoresDetails, setCapaPrioridadProveedoresDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadProductosDetails(1500);\r\n      setCapaPrioridadProveedoresDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductosDetails(1500);\r\n      setCapaPrioridadProveedoresDetails(1500);\r\n    } else if (prioridad === \"ProductosDetails\") {\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductosDetails(2000);\r\n      setCapaPrioridadProveedoresDetails(1500);\r\n    } else if (prioridad === \"ProveedoresDetails\") {\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductosDetails(1500);\r\n      setCapaPrioridadProveedoresDetails(2000);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortEntradas, setSortEntradas } = useSortEntradas();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idEntradaDetails, setIdEntradaDetails] = useState(\"\");\r\n  const [idProveedorDetails, setIdProveedorDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [cantidadDetails, setCantidadDetails] = useState(\"\");\r\n  const [costoUSDDetails, setCostoUSDDetails] = useState(\"\");\r\n  const [costoCUPDetails, setCostoCUPDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n  const [fechaVencimientoDiaDetails, setFechaVencimientoDiaDetails] =\r\n    useState(\"\");\r\n  const [fechaVencimientoMesDetails, setFechaVencimientoMesDetails] =\r\n    useState(\"\");\r\n  const [fechaVencimientoAnnoDetails, setFechaVencimientoAnnoDetails] =\r\n    useState(\"\");\r\n  const [isFechaVencimientoDetails, setIsFechaVencimientoDetails] =\r\n    useState(false);\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [costoAuxModificarDetails, setCostoAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  // Controlar el doble clic del boton\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarEntrada, setIsPermisoAgregarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarEntrada, setIsPermisoEliminarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoModificarEntrada, setIsPermisoModificarEntrada] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarEntrada = await isPermiso(\r\n        usuario.token,\r\n        \"10\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultEliminarEntrada = await isPermiso(\r\n        usuario.token,\r\n        \"12\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarEntrada = await isPermiso(\r\n        usuario.token,\r\n        \"11\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      // cargar cambio de moneda\r\n      setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n      setIsPermisoAgregarEntrada(resultAgregarEntrada);\r\n      setIsPermisoEliminarEntrada(resultEliminarEntrada);\r\n      setIsPermisoModificarEntrada(resultModificarEntrada);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Entrada[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreProveedor, setDropDownItemsNombreProveedor] =\r\n    useState<ProveedorPiker[]>([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProveedorSearch, setNombreProveedorSearch] = useState(\"\");\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [costoDesdeSearch, setCostoDesdeSearch] = useState(\"\");\r\n  const [costoHastaSearch, setCostohastaSearch] = useState(\"\");\r\n  const [fechaDesdeSearch, setFechaDesdeSearch] = useState(new Date());\r\n  const [fechaHastaSearch, setFechaHastaSearch] = useState(new Date());\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2024\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n\r\n  const options = [\r\n    { label: \"Día\", value: \"dia\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n    { label: \"Mes\", value: \"mes\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"dia\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 6);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else if (value === \"mes\") {\r\n      // Restar 1 mes a la fecha actual\r\n      const lastMonthDate = new Date(currentDate);\r\n      lastMonthDate.setMonth(currentDate.getMonth() - 1);\r\n      const monthYear = String(lastMonthDate.getFullYear());\r\n      const monthMonth = String(lastMonthDate.getMonth() + 1).padStart(2, \"0\");\r\n      const monthDay = String(lastMonthDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${monthYear}-${monthMonth}-${monthDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarEntradas(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  const getProveedoresPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProveedores(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_proveedor,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProveedor(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([...tiendasMapeados]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdProveedorDetails(\"\");\r\n    setCostoUSDDetails(\"\");\r\n    setCantidadDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n    setIsFechaVencimientoDetails(false);\r\n    setFechaVencimientoDiaDetails(\"\");\r\n    setFechaVencimientoMesDetails(\"\");\r\n    setFechaVencimientoAnnoDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfEntradas = async () => {\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getEntradaByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.fecha.split(\"T\")[0].split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdEntradaDetails(result.id_entrada);\r\n        setIdProveedorDetails(result.proveedor.id_proveedor);\r\n        setIdProductoDetails(result.producto.id_producto);\r\n        setCantidadDetails(result.cantidad);\r\n        setIdTiendaDetails(result.tienda.id_tienda);\r\n        setCostoUSDDetails(result.costo);\r\n        setCostoCUPDetails(String((result.costo * cambioMoneda).toFixed(2)))\r\n        \r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n        if (result.fecha_vencimiento) {\r\n          const [yearVencimiento, monthVencimiento, dayVencimiento] = result.fecha_vencimiento.split(\"T\")[0].split(\"-\");\r\n          setFechaVencimientoDiaDetails(String(parseInt(dayVencimiento)));\r\n          setFechaVencimientoMesDetails(String(parseInt(monthVencimiento)));\r\n          setFechaVencimientoAnnoDetails(String(parseInt(yearVencimiento)));\r\n        }\r\n\r\n        // Actualizamos los valores auxiliares\r\n        setIdProductoAuxModificarDetails(result.producto.id_producto);\r\n        setIdTiendaAuxModificarDetails(result.tienda.id_tienda);\r\n        setCantidadAuxModificarDetails(result.cantidad);\r\n        setCostoAuxModificarDetails(result.costo);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Entrada[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarEntrada(\r\n          usuario.token,\r\n          nombreProveedorSearch,\r\n          nombreProductoSearch,\r\n          costoDesdeSearch,\r\n          costoHastaSearch,\r\n          fechaDesde,\r\n          fechaHasta\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Entrada[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Entrada: element.id_entrada,\r\n              id_Proveedor: element.proveedor.id_proveedor,\r\n              id_Producto: element.producto.id_producto,\r\n              nombre_Proveedor: element.proveedor.nombre,\r\n              nombre_Producto: element.producto.nombre,\r\n              cantidad: element.cantidad,\r\n              costo: element.costo,\r\n              fecha: element.fecha,\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfEntradas();\r\n  }, [modalEntradasDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosProveedores = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllEntradas(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: Entrada[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Entrada: element.id_entrada,\r\n                id_Proveedor: element.proveedor.id_proveedor,\r\n                id_Producto: element.producto.id_producto,\r\n                nombre_Proveedor: element.proveedor.nombre,\r\n                nombre_Producto: element.producto.nombre,\r\n                cantidad: element.cantidad,\r\n                costo: element.costo,\r\n                fecha: element.fecha,\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron entradas.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener las entradas o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de las entradas\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosProveedores();\r\n        getProveedoresPikerDetails();\r\n        getProductosPikerDetails();\r\n        getTiendasPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarEntradas = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let EntradasFiltradas: Entrada[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortEntradas?.criterioOrden && sortEntradas.tipoOrden) {\r\n          EntradasFiltradas = await ordenarEntradas(\r\n            usuario.token,\r\n            EntradasFiltradas,\r\n            sortEntradas?.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        } else {\r\n          EntradasFiltradas = await ordenarEntradas(\r\n            usuario.token,\r\n            EntradasFiltradas,\r\n            \"option6\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(EntradasFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarEntradas(\r\n      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n    );\r\n  }, [sortEntradas, selectedOptionTipoOrden]);\r\n\r\n  useEffect(() => {\r\n    const obtenerFechaVencimiento = async () => {\r\n      if (idProductoDetails && usuario?.token) {\r\n        const result = await getProductoById(usuario.token, idProductoDetails);\r\n        if (result) {\r\n          if (modalEntradasDates?.id_entrada === \"\") {\r\n            const currentDate = new Date();\r\n  \r\n            // Extraemos el año, mes y día de la fecha actual\r\n            const year = String(currentDate.getFullYear());\r\n            const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n            const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n  \r\n            setFechaVencimientoDiaDetails(String(parseInt(day)));\r\n            setFechaVencimientoMesDetails(String(parseInt(month)));\r\n            setFechaVencimientoAnnoDetails(String(parseInt(year)));\r\n          }\r\n          setIsFechaVencimientoDetails(result.isFecha_Vencimiento);\r\n        } else {\r\n          setIsFechaVencimientoDetails(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    obtenerFechaVencimiento();\r\n  }, [idProductoDetails]);\r\n\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    setSelecterActivoDetails(\"\");\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ]);\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setIdProveedorDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n    setIdTiendaDetails(\"\");\r\n    setCantidadDetails(\"\");\r\n    setCostoUSDDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Extraemos el año, mes y día de la fecha actual\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    setFechaDiaDetails(String(parseInt(day)));\r\n    setFechaMesDetails(String(parseInt(month)));\r\n    setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarEntradas(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProveedorSearch(\"\");\r\n    setNombreProductoSearch(\"\");\r\n    setCostoDesdeSearch(\"\");\r\n    setCostohastaSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n  // Retorna el Promedio ponderado\r\n  const calcularCPP = (cant_existencia: number, CPP_anterior: number, cant_i: number, costoUnidad_i: number) =>{\r\n    const cpp = ((cant_existencia * CPP_anterior)+(cant_i * costoUnidad_i))/(cant_existencia + cant_i);\r\n    return cpp.toFixed(5);\r\n  }\r\n  const calcularCPPAjustado = (cant_existencia: number, CPP_anterior: number, diferencia: number) =>{\r\n    const cpp = ((cant_existencia * CPP_anterior) + diferencia) / cant_existencia\r\n    return cpp.toFixed(5);\r\n  }\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewEntrada = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando entrada. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR ENTRADA. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (idProveedorDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo total de la entrada.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await addEntrada(\r\n          usuario.token,\r\n          costoUSDDetails,\r\n          cantidadDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          isFechaVencimientoDetails? `${fechaVencimientoMesDetails}-${fechaVencimientoDiaDetails}-${fechaVencimientoAnnoDetails}` : null,\r\n          parseInt(idProveedorDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails),\r\n          parseFloat(costoCUPDetails)\r\n        );\r\n\r\n        setModalMensaje(\"Actualizando costo promedio ponderado del producto\")\r\n        // Actualizar costo promedio ponderado CPP\r\n        // Obtener datos necezarios\r\n        const productoData = await getProductoById(usuario.token, idProductoDetails);\r\n        const cantidadExistencia = await getProductoCantidadTotal(usuario.token, idProductoDetails);\r\n        const cpp = calcularCPP(cantidadExistencia, productoData.costo_acumulado, parseInt(cantidadDetails), parseFloat(costoUSDDetails)/parseInt(cantidadDetails))\r\n        await updateProductoCostoAcumulado(usuario.token, idProductoDetails, cpp);\r\n\r\n        setModalMensaje(\"Actualizando cantidad en tienda\")\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(cantidadDetails)\r\n        );\r\n        \r\n        setModalMensaje(\"Agregando acción\")\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó una entrada de ${cantidadDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        await createProductoInTienda(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          idTiendaDetails\r\n        );\r\n        setIdProveedorDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setIdTiendaDetails(\"\");\r\n        setCostoUSDDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La entrada fue insertado con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarEntradaFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando entrada. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR ENTRADA. Compruebe los siguientes campos:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      const resultViejo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaAuxModificarDetails\r\n      );\r\n\r\n      if (\r\n        idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n        idProductoAuxModificarDetails !== idProductoDetails\r\n      ) {\r\n        if (\r\n          parseInt(resultViejo.cantidad ?? 0) -\r\n            parseInt(cantidadAuxModificarDetails) <\r\n          0\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Operación inválida. No se dispone de sificientes productos para realizar la operoción.\";\r\n        }\r\n      }\r\n      if (\r\n        parseInt(cantidadAuxModificarDetails) - parseInt(cantidadDetails) >\r\n        parseInt(resultNuevo.cantidad ?? 0)\r\n      ) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n      if (idProveedorDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo del producto por unidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await modificarEntrada(\r\n          usuario.token,\r\n          idEntradaDetails,\r\n          costoUSDDetails,\r\n          cantidadDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          isFechaVencimientoDetails? `${fechaVencimientoMesDetails}-${fechaVencimientoDiaDetails}-${fechaVencimientoAnnoDetails}` : null,\r\n          parseInt(idProveedorDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails),\r\n          parseFloat(costoCUPDetails)\r\n        );\r\n\r\n        setModalMensaje(\"Actualizando costo promedio ponderado del producto\")\r\n        // Actualizar costo promedio ponderado CPP\r\n        // Obtener datos necezarios\r\n        const productoData = await getProductoById(usuario.token, idProductoDetails);\r\n        const cantidadExistencia = await getProductoCantidadTotal(usuario.token, idProductoDetails);\r\n        const auxDiferencia = (parseFloat(cantidadDetails) * parseFloat(costoUSDDetails)) - (parseFloat(cantidadAuxModificarDetails) * parseFloat(costoAuxModificarDetails))\r\n        const cpp = calcularCPPAjustado(cantidadExistencia, productoData.costo_acumulado, auxDiferencia);\r\n        await updateProductoCostoAcumulado(usuario.token, idProductoDetails, cpp);\r\n\r\n        if (\r\n          idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n          idProductoAuxModificarDetails !== idProductoDetails\r\n        ) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaAuxModificarDetails),\r\n            parseInt(idProductoAuxModificarDetails),\r\n            parseInt(cantidadAuxModificarDetails) * -1\r\n          );\r\n\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(cantidadDetails)\r\n          );\r\n        } else if (cantidadAuxModificarDetails !== cantidadDetails) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(cantidadDetails) - parseInt(cantidadAuxModificarDetails)\r\n          );\r\n        }\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó una entrada de originalmente ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La entrada se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarEntradaFunction = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando entrada. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR ENTRADA. Compruebe los siguientes parámetros:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n\r\n      if (parseInt(cantidadDetails) > parseInt(resultNuevo.cantidad ?? 0)) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n\r\n      if (flag) {\r\n        await deleteEntrada(usuario.token, idEntradaDetails);\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(cantidadDetails) * -1\r\n        );\r\n\r\n        // Actualizar productos en 0 en productoTienda\r\n        await deleteFromProductoTiendaIn_0(usuario.token);\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la entrada con una cantidad de ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La entrada se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdProveedorDetails(\"\");\r\n        setCostoUSDDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre Proveedor\",\r\n    \"Nombre Producto\",\r\n    \"Cantidad\",\r\n    \"Costo Unidad USD\",\r\n    \"Costo Unidad CUP\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre Proveedor\",\r\n    \"Nombre Producto\",\r\n    \"Cantidad\",\r\n    \"Costo Unidad USD\",\r\n    \"Costo Unidad CUP\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarEntrada && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Entrada</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableEntradas\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del Producto\"\r\n                    value={nombreProductoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Proveedor:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del proveedor\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={nombreProveedorSearch}\r\n                    onChangeText={setNombreProveedorSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Rango de Costo en USD:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={idProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setIdProductoDetails(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={idProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setIdProductoDetails(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.blanco,\r\n                        fontSize: 18,\r\n                        justifyContent: \"center\",\r\n                        marginRight: \"25%\",\r\n                        fontWeight: \"bold\", // Para negritas\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Desde\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.blanco,\r\n                        fontSize: 18,\r\n                        marginLeft: \"12%\",\r\n                        justifyContent: \"center\",\r\n                        fontWeight: \"bold\", // Para negritas\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Hasta\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaDesdeSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n\r\n                    <View\r\n                      style={{\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaHastaSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarProductos();\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProveedorDetails}\r\n                    placeholder=\"Seleccione un Proveedor\"\r\n                    setValue={setIdProveedorDetails}\r\n                    items={dropdownItemsNombreProveedor}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProveedoresDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Seleccione un Producto\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProductosDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre de la Tienda */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idTiendaDetails}\r\n                    placeholder=\"Seleccione una Tienda\"\r\n                    setValue={setIdTiendaDetails}\r\n                    items={dropdownItemsNombreTienda}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalMovil}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalMovil}>Costo total de la entrada en USD</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={costoUSDDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoUSDDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Costo en USD\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{ width: \"90%\", marginLeft: \"2%\", marginRight: \"2%\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>Fecha</Text>\r\n                  {isDateLoaded && (\r\n                    <MyDateInput\r\n                      dayValue={fechaDiaDetails}\r\n                      monthValue={fechaMesDetails}\r\n                      yearValue={fechaAnnoDetails}\r\n                      onDayChange={setFechaDiaDetails}\r\n                      onMonthChange={setFechaMesDetails}\r\n                      onYearChange={setFechaAnnoDetails}\r\n                      style={{ margin: 20 }}\r\n                      styleText={styles.labelTextModalMovil}\r\n                    />\r\n                  )}\r\n                </View>\r\n\r\n                {/* Campo fecha vencimiento */}\r\n                {isFechaVencimientoDetails && (\r\n                    <View\r\n                      style={{\r\n                        width: \"90%\", marginLeft: \"2%\", marginRight: \"2%\" \r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Fecha vencimiento\r\n                      </Text>\r\n                      {isDateLoaded && (\r\n                        <MyDateInputVencimiento\r\n                          dayValue={fechaVencimientoDiaDetails}\r\n                          monthValue={fechaVencimientoMesDetails}\r\n                          yearValue={fechaVencimientoAnnoDetails}\r\n                          onDayChange={setFechaVencimientoDiaDetails}\r\n                          onMonthChange={setFechaVencimientoMesDetails}\r\n                          onYearChange={setFechaVencimientoAnnoDetails}\r\n                          style={{ margin: 20 }}\r\n                          styleText={styles.labelTextModalDesktop}\r\n                          onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        />\r\n                      )}\r\n                    </View>\r\n                  )}\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar entrada */}\r\n                  {isPermisoModificarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar entrada */}\r\n                  {isPermisoAgregarEntrada &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewEntrada()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarEntradaFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Entradas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarEntrada && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Entrada\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del Producto\"\r\n              value={nombreProductoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Proveedor:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del proveedor\"\r\n              value={nombreProveedorSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProveedorSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Rango de Costo en USD:</Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={costoDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostoDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={costoHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostohastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() =>\r\n                    filtrarYOrdenarEntradas(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    )\r\n                  }\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableEntradas\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProveedorDetails}\r\n                    placeholder=\"Seleccione un Proveedor\"\r\n                    setValue={setIdProveedorDetails}\r\n                    items={dropdownItemsNombreProveedor}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProveedoresDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Seleccione un Producto\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProductosDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre de la Tienda */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTiendasDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTiendasDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idTiendaDetails}\r\n                    placeholder=\"Seleccione una Tienda\"\r\n                    setValue={setIdTiendaDetails}\r\n                    items={dropdownItemsNombreTienda}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"TiendaDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Costo total de la entrada en USD \r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={costoUSDDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n                    \r\n                        setCostoUSDDetails(validNumericValue);\r\n                        const costoCUP = parseFloat(validNumericValue) * cambioMoneda;\r\n                        setCostoCUPDetails(costoCUP.toFixed(2));\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Costo en USD\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Contenedor para la texto costo por unidad y el costo CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo texto costo por unidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Costo de cada unidad</Text>\r\n                    <Text style={styles.labelTextModalDesktop}>USD: {(parseFloat(costoUSDDetails)/parseInt(cantidadDetails)).toFixed(5)}   CUP: {((parseFloat(costoUSDDetails)/parseInt(cantidadDetails)) * cambioMoneda).toFixed(5)}</Text>\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Costo total de la entrada en CUP \r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={costoCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n                    \r\n                        setCostoCUPDetails(validNumericValue);\r\n                        const costoUSD = parseFloat(validNumericValue) / cambioMoneda;\r\n                        setCostoUSDDetails(costoUSD.toFixed(5));\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Costo en CUP\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha entrada */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Fecha entrada\r\n                    </Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo fecha vencimiento */}\r\n                  {isFechaVencimientoDetails && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Fecha vencimiento\r\n                      </Text>\r\n                      {isDateLoaded && (\r\n                        <MyDateInputVencimiento\r\n                          dayValue={fechaVencimientoDiaDetails}\r\n                          monthValue={fechaVencimientoMesDetails}\r\n                          yearValue={fechaVencimientoAnnoDetails}\r\n                          onDayChange={setFechaVencimientoDiaDetails}\r\n                          onMonthChange={setFechaVencimientoMesDetails}\r\n                          onYearChange={setFechaVencimientoAnnoDetails}\r\n                          style={{ margin: 20 }}\r\n                          styleText={styles.labelTextModalDesktop}\r\n                          onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        />\r\n                      )}\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarEntrada &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewEntrada()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarEntradaFunction()\r\n                      : modificarEntradaFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Entradas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import { Colors } from \"../styles/Colors\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  TouchableOpacity,\r\n  Image,\r\n  StyleSheet,\r\n  Text,\r\n  Animated,\r\n  View,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\n\r\ninterface CustomButtonProps {\r\n  text: any;\r\n  imageSource: any;\r\n  onPress: () => void;\r\n}\r\n\r\nconst CustomButtonAdministradorView: React.FC<CustomButtonProps> = ({\r\n  onPress,\r\n  text,\r\n  imageSource,\r\n}) => {\r\n  const [scale] = useState(new Animated.Value(1));\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 1150; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Estilos condicionales\r\n  const buttonStyles = isMobile ? styles.movilButton : styles.desktopButton;\r\n\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={buttonStyles}\r\n      onPressIn={onPressIn}\r\n      onPressOut={onPressOut}\r\n      onPress={onPress}\r\n    >\r\n      <Animated.View style={{ transform: [{ scale }] }}>\r\n        <View style={styles.desktopContent}>\r\n          <Image source={imageSource} style={styles.image} />\r\n          <Text style={styles.textDesktop}>{text}</Text>\r\n        </View>\r\n      </Animated.View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  desktopButton: {\r\n    height: 110,\r\n    width: 110,\r\n    justifyContent: \"center\",\r\n    borderRadius: 15,\r\n    alignItems: \"center\",\r\n    shadowColor: Colors.negro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    marginHorizontal: 10\r\n  },\r\n  movilButton: {\r\n    height: 110,\r\n    width: 110,\r\n    justifyContent: \"center\",\r\n    borderRadius: 15,\r\n    alignItems: \"center\",\r\n    shadowColor: Colors.negro, // Color de la sombra\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n    shadowRadius: 14, // Difuminado\r\n    marginHorizontal: 10\r\n  },\r\n  desktopContent: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  textDesktop: {\r\n    fontSize: 16,\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n    fontWeight: \"bold\"\r\n  },\r\n  textMovil: {\r\n    fontSize: 16,\r\n    color: Colors.negro, // Color del texto\r\n    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n    textShadowRadius: 2, // Difuminado de la sombra\r\n    fontWeight: \"bold\"\r\n  },\r\n  image: {\r\n    height: 70,\r\n    width: 70,\r\n    tintColor: Colors.negro,\r\n  },\r\n});\r\n\r\nexport default CustomButtonAdministradorView;\r\n","import Navbar from \"../components/Navbar\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport React, { useEffect, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport { Image, Text, TouchableOpacity, useWindowDimensions, View } from \"react-native\";\r\nimport CustomButtonOptions from \"../components/CustomButtonOptions\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport CustomButtonAdministradorView from \"../components/CustomButtonAdministradorView\";\r\n\r\n\r\nexport function Administracion() {\r\n    const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n    const isMobile = width < 930;\r\n    const navigation = useNavigation();\r\n\r\n\r\n    if (isMobile) {\r\n        return (\r\n            <View style={{ flex: 1 }}>\r\n                <Navbar />\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        justifyContent: \"space-around\",\r\n                        alignItems: \"center\",\r\n                        flexDirection: \"column\"\r\n                    }}\r\n                >\r\n                </View>\r\n            </View>\r\n        );\r\n    } else {\r\n        return (\r\n            <View style={{ flex: 1 }}>\r\n                <Navbar />\r\n                <View\r\n                    style={{\r\n                        marginTop: 150,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        flexDirection: \"row\"\r\n                    }}\r\n                >\r\n                    <CustomButtonAdministradorView\r\n                        imageSource={require(\"../images/gerente.png\")}\r\n                        onPress={() => navigation.navigate(\"Usuarios\")}\r\n                        text={\"Usuarios\"}\r\n                    />\r\n                    <CustomButtonAdministradorView\r\n                        imageSource={require(\"../images/gerente.png\")}\r\n                        onPress={() => navigation.navigate(\"Tiendas\")}\r\n                        text={\"Tiendas\"}\r\n                    />\r\n                </View>\r\n                <View>\r\n\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import React, { createContext, useState, ReactNode } from \"react\";\r\n\r\n// Define la interfaz del Usuario\r\nexport interface ModalMovimientosDates {\r\n  id_movimiento: string;\r\n  isAddMovimiento: boolean;\r\n  isModificarMovimiento: boolean;\r\n  fileEditable: boolean;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface ModalMovimientosDatesContextType {\r\n  modalMovimientosDates: ModalMovimientosDates | null;\r\n  setModalMovimientosDates: (\r\n    modalMovimientosDates: ModalMovimientosDates | null\r\n  ) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst ModalMovimientosDatesContext = createContext<\r\n  ModalMovimientosDatesContextType | undefined\r\n>(undefined);\r\n\r\n// Define el proveedor\r\nexport const ModalMovimientosDatesProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [modalMovimientosDates, setModalEntradasDates] =\r\n    useState<ModalMovimientosDates | null>(null);\r\n\r\n  return (\r\n    <ModalMovimientosDatesContext.Provider\r\n      value={{\r\n        modalMovimientosDates: modalMovimientosDates,\r\n        setModalMovimientosDates: setModalEntradasDates,\r\n      }}\r\n    >\r\n      {children}\r\n    </ModalMovimientosDatesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useModalMovimientosDates = () => {\r\n  const context = React.useContext(ModalMovimientosDatesContext);\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      \"useModalMovimientosDates debe usarse dentro de un ModalMovimientosDates\"\r\n    );\r\n  }\r\n  return context;\r\n};\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { useSortMovimientosDates } from \"../contexts/AuxiliarSortMovimientos\";\r\nimport { useModalMovimientosDates } from \"../contexts/AuxiliarContextModalMovimientos\";\r\n\r\nexport interface Movimiento {\r\n  id_Movimiento: string;\r\n  id_TiendaOrigen: string;\r\n  id_TiendaDestino: string;\r\n  id_Producto: string;\r\n  nombreTiendaOrigen: string;\r\n  nombreTiendaDestino: string;\r\n  nombre_Usuario: string;\r\n  nombre_Producto: string;\r\n  cantidad: string;\r\n  fecha: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Movimiento[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableMovimientos: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalMovimientosDates, setModalMovimientosDates } = useModalMovimientosDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { SortMovimientosDates, setSortMovimientosDates} = useSortMovimientosDates();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Movimiento[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_movimiento: string) => {\r\n    setModalMovimientosDates({\r\n      id_movimiento: id_movimiento,\r\n      isAddMovimiento: true,\r\n      fileEditable: false,\r\n      isModificarMovimiento: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Usuario\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Producto\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Cantidad\") {\r\n      aux = \"option5\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option6\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortMovimientosDates({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Usuario\" ||\r\n              column === \"Producto\" ||\r\n              column === \"Cantidad\" ||\r\n              column === \"Fecha\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortEntradasAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalMovimientosDates({\r\n        id_movimiento: idEntradaOption,\r\n        isAddMovimiento: true,\r\n        fileEditable: true,\r\n        isModificarMovimiento: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_TiendaOrigen !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han hecho operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Movimiento}\r\n                onPress={() => detailsModalView(item.id_Movimiento)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Usuario*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Tienda Origen*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreTiendaOrigen}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Tienda Destino */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombreTiendaDestino}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Movimiento}\r\n                onPress={() => detailsModalView(item.id_Movimiento)}\r\n              >\r\n                {/* Primera celda - Nombre Usuario*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Tienda Origen */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombreTiendaOrigen}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Tienda Destino */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombreTiendaDestino}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 50,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getAllTiendas, isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  getAllProductos,\r\n  moverProducto,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport {\r\n  Movimiento,\r\n  MyDateTableMovimientos,\r\n} from \"../components/MyDateTableMovimientos\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport { ProductoProvider } from \"../contexts/ProductoContext\";\r\nimport {\r\n  deleteMovimiento,\r\n  filtrarMovimientos,\r\n  filtrarMovimientosEspecial,\r\n  getAllMovimientos,\r\n  getMovimientoById,\r\n  ordenarMovimientos,\r\n  updateMovimiento,\r\n} from \"../services/MovimientosServices\";\r\nimport { useSortMovimientosDates } from \"../contexts/AuxiliarSortMovimientos\";\r\nimport { useModalMovimientosDates } from \"../contexts/AuxiliarContextModalMovimientos\";\r\nimport { longPressGestureHandlerProps } from \"react-native-gesture-handler/lib/typescript/handlers/LongPressGestureHandler\";\r\nimport { getAllUsuarios } from \"../services/UsuarioServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\n\r\nexport default function MovimientosView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables auxiliares para controlar el despliege de los dropDownsPiers\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesdeSearsh] =\r\n    useState(500);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(500);\r\n  const [capaPrioridadTiendaOrigenSearsh, setCapaPrioridadTiendaOrigenSearsh] =\r\n    useState(500);\r\n  const [\r\n    capaPrioridadTiendaDestinoSearsh,\r\n    setCapaPrioridadTiendaDestinoSearsh,\r\n  ] = useState(500);\r\n  const [capaPrioridadViewTiendasSearsh, setCapaPrioridadViewTiendasSearsh] =\r\n    useState(500);\r\n  const [capaPrioridadViewFechaSearsh, setCapaPrioridadViewFechaSearsh] =\r\n    useState(500);\r\n\r\n  const [capaPrioridadViewFechaDetails, setCapaPrioridadViewFechaDetails] =\r\n    useState(500);\r\n  const [capaPrioridadViewTiendasDetails, setCapaPrioridadViewTiendasDetails] =\r\n    useState(500);\r\n  const [\r\n    capaPrioridadViewProductosDetails,\r\n    setCapaPrioridadViewProductosDetails,\r\n  ] = useState(500);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    if (prioridad === \"TiendaOrigenSearsh\") {\r\n      setCapaPrioridadTiendaOrigenSearsh(2000);\r\n      setCapaPrioridadTiendaDestinoSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadFechaDesdeSearsh(1500);\r\n      setCapaPrioridadViewTiendasSearsh(1000);\r\n      setCapaPrioridadViewFechaSearsh(500);\r\n    } else if (prioridad === \"TiendaDestinoSearsh\") {\r\n      setCapaPrioridadTiendaOrigenSearsh(1500);\r\n      setCapaPrioridadTiendaDestinoSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadFechaDesdeSearsh(1500);\r\n      setCapaPrioridadViewTiendasSearsh(1000);\r\n      setCapaPrioridadViewFechaSearsh(500);\r\n    } else if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadTiendaOrigenSearsh(1500);\r\n      setCapaPrioridadTiendaDestinoSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadFechaDesdeSearsh(2000);\r\n      setCapaPrioridadViewTiendasSearsh(500);\r\n      setCapaPrioridadViewFechaSearsh(1000);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadTiendaOrigenSearsh(1500);\r\n      setCapaPrioridadTiendaDestinoSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n      setCapaPrioridadFechaDesdeSearsh(1500);\r\n      setCapaPrioridadViewTiendasSearsh(500);\r\n      setCapaPrioridadViewFechaSearsh(1000);\r\n    }\r\n\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadViewFechaDetails(2000);\r\n      setCapaPrioridadViewTiendasDetails(1000);\r\n    } else if (prioridad === \"TiendasDetails\") {\r\n      setCapaPrioridadViewFechaDetails(1000);\r\n      setCapaPrioridadViewTiendasDetails(2000);\r\n      setCapaPrioridadViewProductosDetails(1000);\r\n    } else if (prioridad === \"ProductosDetails\") {\r\n      setCapaPrioridadViewFechaDetails(1000);\r\n      setCapaPrioridadViewTiendasDetails(1000);\r\n      setCapaPrioridadViewProductosDetails(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalMovimientosDates, setModalMovimientosDates } =\r\n    useModalMovimientosDates();\r\n  const { SortMovimientosDates, setSortMovimientosDates } =\r\n    useSortMovimientosDates();\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n  const options = [\r\n    { label: \"Ayer\", value: \"ayer\" },\r\n    { label: \"Hoy\", value: \"hoy\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"hoy\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"ayer\") {\r\n      // Restar 1 día a la fecha actual\r\n      const yesterdayDate = new Date(currentDate);\r\n      yesterdayDate.setDate(currentDate.getDate() - 1);\r\n      const yesterdayYear = String(yesterdayDate.getFullYear());\r\n      const yesterdayMonth = String(yesterdayDate.getMonth() + 1).padStart(\r\n        2,\r\n        \"0\"\r\n      );\r\n      const yesterdayDay = String(yesterdayDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${yesterdayYear}-${yesterdayMonth}-${yesterdayDay}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 7);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarMovimientos(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idMovimientoDetails, setIdMovimientoDetails] = useState(\"\");\r\n  const [idUsuarioDetails, setIdUsuarioDetails] = useState(\"\");\r\n  const [nombreUsuarioDetails, setNombreUsuarioDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [idTiendaOrigenDetails, setIdTiendaOrigenDetails] = useState(\"\");\r\n  const [idTiendaDestinoDetails, setIdTiendaDestinoDetails] = useState(\"\");\r\n  const [cantidadDetails, setCantidadDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n\r\n  const [isMovimientoEditable, setIsMovimientoEditable] = useState(false);\r\n  const [isMovimientoEliminable, setIsMovimientoEliminable] = useState(false);\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [\r\n    idTiendaOrigenAuxModificarDetails,\r\n    setIdTiendaOrigenAuxModificarDetails,\r\n  ] = useState(\"\");\r\n  const [\r\n    idTiendaDestinoAuxModificarDetails,\r\n    setIdTiendaDestinoAuxModificarDetails,\r\n  ] = useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [isModalChekEliminarVisible, setIsModalChekEliminarVisible] =\r\n    useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  // Controlar el doble clic del boton\r\n    const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n    \r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoEliminarMovimiento, setIsPermisoEliminarMovimiento] =\r\n    React.useState(false);\r\n  const [isPermisoModificarMovimiento, setIsPermisoModificarMovimiento] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultPermisoOptionMoverLocal = await isPermiso(\r\n        usuario.token,\r\n        \"30\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultPermisoOptionMoverGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"31\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      setIsPermisoEliminarMovimiento(true);\r\n      setIsPermisoModificarMovimiento(true);\r\n      setIsPermisoOpcionesDeCeldaMoverLocal(resultPermisoOptionMoverLocal);\r\n      setIsPermisoOpcionesDeCeldaMoverGeneral(resultPermisoOptionMoverGeneral);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Movimiento[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [\r\n    optimizacionAbrirPorMovimientosProPrimeraVes,\r\n    setOptimizacionAbrirPorMovimientosProPrimeraVes,\r\n  ] = useState(false);\r\n  const [dropdownItemsNombreUsuario, setDropDownItemsNombreUsuario] = useState<\r\n    ProveedorPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreUsuarioSearch, setNombreUsuarioSearch] = useState(\"\");\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [cantidadSearch, setCantidadSearch] = useState(\"\");\r\n  const [tiendaOrigenSearch, setTiendaOrigenSearch] = useState(\"\");\r\n  const [tiendaDestinoSearch, setTiendaDestinoSearch] = useState(\"\");\r\n  const [fechaDesdeSearch, setFechaDesdeSearch] = useState(new Date());\r\n  const [fechaHastaSearch, setFechaHastaSearch] = useState(new Date());\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2024\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getUsuariosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllUsuarios(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const usuariosMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_usuario,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreUsuario(usuariosMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Todos los movimientos\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddMovimiento = () => {\r\n    setIdUsuarioDetails(\"\");\r\n    setCantidadDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n\r\n    setModalMovimientosDates({\r\n      id_movimiento: \"\",\r\n      isAddMovimiento: false,\r\n      isModificarMovimiento: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfMovimiento = async () => {\r\n    if (usuario?.token && modalMovimientosDates?.id_movimiento) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getMovimientoById(\r\n        usuario.token,\r\n        modalMovimientosDates.id_movimiento\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.fecha.split(\"T\")[0].split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdMovimientoDetails(result.id_salida);\r\n        setIdUsuarioDetails(result.usuario.id_usuario);\r\n        setIdProductoDetails(result.producto.id_producto);\r\n        setCantidadDetails(result.cantidad);\r\n        setIdTiendaOrigenDetails(result.tienda_origen.id_tienda);\r\n        setIdTiendaDestinoDetails(result.tienda_destino.id_tienda);\r\n        setNombreUsuarioDetails(result.usuario.nombre_usuario);\r\n\r\n        // Variables para si es posible eliminar o modificar el movimiento\r\n        setIsMovimientoEditable(\r\n          result.usuario.id_usuario === usuario.id_usuario\r\n            ? true\r\n            : parseInt(usuario.id_rol) === 1\r\n        );\r\n        setIsMovimientoEliminable(\r\n          result.usuario.id_usuario === usuario.id_usuario\r\n            ? true\r\n            : parseInt(usuario.id_rol) === 1\r\n        );\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares\r\n        setIdProductoAuxModificarDetails(result.producto.id_producto);\r\n        setIdTiendaDestinoAuxModificarDetails(result.tienda_destino.id_tienda);\r\n        setIdTiendaOrigenAuxModificarDetails(result.tienda_origen.id_tienda);\r\n        setCantidadAuxModificarDetails(result.cantidad);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Movimiento[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const resultPermisoOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        let result;\r\n        if (resultPermisoOptionMoverGeneral) {\r\n          result = await filtrarMovimientos(\r\n            usuario.token,\r\n            nombreUsuarioSearch,\r\n            nombreProductoSearch,\r\n            cantidadSearch,\r\n            fechaDesde,\r\n            fechaHasta,\r\n            resultPermisoOptionMoverGeneral\r\n              ? tiendaOrigenSearch\r\n              : usuario.id_tienda,\r\n            tiendaDestinoSearch\r\n          );\r\n        } else {\r\n          result = await filtrarMovimientosEspecial(\r\n            usuario.token,\r\n            nombreUsuarioSearch,\r\n            nombreProductoSearch,\r\n            cantidadSearch,\r\n            fechaDesde,\r\n            fechaHasta,\r\n            usuario.id_tienda,\r\n            tiendaOrigenSearch,\r\n            tiendaDestinoSearch\r\n          );\r\n        }\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Movimiento[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              return {\r\n                id_Movimiento: element.id_salida,\r\n                id_TiendaOrigen: element.tienda_origen.id_tienda,\r\n                id_TiendaDestino: element.tienda_destino.id_tienda,\r\n                id_Producto: element.producto.id_producto,\r\n                nombreTiendaOrigen: element.tienda_origen.nombre,\r\n                nombreTiendaDestino: element.tienda_destino.nombre,\r\n                nombre_Usuario: element.usuario.nombre,\r\n                nombre_Producto: element.producto.nombre,\r\n                cantidad: element.cantidad,\r\n                fecha: element.fecha,\r\n              };\r\n            })\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optimizacionAbrirPorMovimientosProPrimeraVes) {\r\n      cargarDetailsOfMovimiento();\r\n    }\r\n  }, [modalMovimientosDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosMovimientos = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllMovimientos(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: Movimiento[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Movimiento: element.id_salida,\r\n                id_TiendaOrigen: element.tienda_origen.id_tienda,\r\n                id_TiendaDestino: element.tienda_destino.id_tienda,\r\n                id_Producto: element.producto.id_producto,\r\n                nombreTiendaOrigen: element.tienda_origen.nombre,\r\n                nombreTiendaDestino: element.tienda_destino.nombre,\r\n                nombre_Usuario: element.usuario.nombre,\r\n                nombre_Producto: element.producto.nombre,\r\n                cantidad: element.cantidad,\r\n                fecha: element.fecha,\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron entradas.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener las entradas o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de las entradas\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        getUsuariosPikerDetails();\r\n        getProductosPikerDetails();\r\n        getTiendasPikerDetails();\r\n        filtrarYOrdenarMovimientos(\r\n          `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n          `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n        );\r\n        setOptimizacionAbrirPorMovimientosProPrimeraVes(true);\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n  // Filtrar y ordenar movimientos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarMovimientos = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let MovimientosFiltradas: Movimiento[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (\r\n          SortMovimientosDates?.criterioOrden &&\r\n          SortMovimientosDates.tipoOrden\r\n        ) {\r\n          MovimientosFiltradas = await ordenarMovimientos(\r\n            usuario.token,\r\n            MovimientosFiltradas,\r\n            SortMovimientosDates.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        } else {\r\n          MovimientosFiltradas = await ordenarMovimientos(\r\n            usuario.token,\r\n            MovimientosFiltradas,\r\n            \"option6\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(MovimientosFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    if (optimizacionAbrirPorMovimientosProPrimeraVes) {\r\n      filtrarYOrdenarMovimientos(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  }, [SortMovimientosDates, selectedOptionTipoOrden]);\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    if (optimizacionAbrirPorMovimientosProPrimeraVes) {\r\n      setSelecterActivoDetails(\"\");\r\n    }\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ]);\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProductoSearch(\"\");\r\n    setNombreUsuarioSearch(\"\");\r\n    setCantidadSearch(\"\");\r\n    setTiendaOrigenSearch(\"\");\r\n    setTiendaDestinoSearch(\"\");\r\n    setFechaAnnoDesdeSearch(\"2024\");\r\n    setFechaMesdesdeSearch(\"1\");\r\n    setFechaDiaDesdeSearch(\"1\");\r\n    setFechaAnnoHastaSearch(String(parseInt(year)));\r\n    setFechaMesHastaSearch(String(parseInt(month)));\r\n    setFechaDiaHastaSearch(String(parseInt(day)));\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewEntrada = async () => {\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR ENTRADA. Porfavor verifique los siguientes campos:\\n\";\r\n\r\n      if (idUsuarioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaOrigenDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await addEntrada(\r\n          usuario.token,\r\n          costoDetails,\r\n          cantidadDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          parseInt(idUsuarioDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaOrigenDetails)\r\n        );\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaOrigenDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(cantidadDetails)\r\n        );\r\n        setModalMensaje(`La entrada fue insertada con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdUsuarioDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setIdTiendaOrigenDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarMovimientos(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para actualizar los datos de un producto\r\n  const modificarMovimiento = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando movimiento. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR MOVIMIENTO. Compruebe los siguientes campos:\\n\";\r\n      const resultOrigen = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaOrigenAuxModificarDetails\r\n      );\r\n      const resultDestino = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaDestinoAuxModificarDetails\r\n      );\r\n      const resultNuevoOrigen = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaOrigenDetails\r\n      );\r\n      const resultNuevoProductoOrigen = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaOrigenAuxModificarDetails\r\n      );\r\n      const resultNuevoProductoNuevoOrigen = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaOrigenDetails\r\n      );\r\n      let cantidadNueva: number = parseInt(cantidadDetails);\r\n      let cantidadVieja: number = parseInt(cantidadAuxModificarDetails);\r\n      let cantidadEnOrigen: number = resultOrigen\r\n        ? parseInt(resultOrigen.cantidad)\r\n        : 0;\r\n      let cantidadEnDestino: number = resultDestino\r\n        ? parseInt(resultDestino.cantidad)\r\n        : 0;\r\n      let cantidadEnNuevoOrigen: number = resultNuevoOrigen\r\n        ? parseInt(resultNuevoOrigen.cantidad)\r\n        : 0;\r\n      let cantidadNPOrigen: number = resultNuevoProductoOrigen\r\n        ? parseInt(resultNuevoProductoOrigen.cantidad)\r\n        : 0;\r\n      let cantidadNPOEnTiendaNuevoOrigen: number =\r\n        resultNuevoProductoNuevoOrigen\r\n          ? parseInt(resultNuevoProductoNuevoOrigen.cantidad)\r\n          : 0;\r\n\r\n      // Validar campos\r\n      // Caso solo se halla cambiado la cantidad\r\n      if (\r\n        idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n        idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails &&\r\n        idProductoDetails === idProductoAuxModificarDetails &&\r\n        cantidadNueva !== cantidadVieja\r\n      ) {\r\n        // La cantidad aumentó (Hoja: 1)\r\n        if (cantidadNueva >= cantidadVieja) {\r\n          if (cantidadNueva - cantidadVieja > cantidadEnOrigen) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No hay suficientes productos en la tienda origen para agregar a la tienda destino.\\n\";\r\n          }\r\n          // Si la cantidad disminuyó (Hoja: 2)\r\n        } else {\r\n          if (cantidadVieja - cantidadNueva > cantidadEnDestino) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No hay suficientes productos en la tienda destino para agregar a la tienda origen.\\n\";\r\n          }\r\n        }\r\n        // Caso que solo se halla cambiado la tiendaDestino\r\n      } else if (\r\n        idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n        idProductoDetails === idProductoAuxModificarDetails &&\r\n        idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails\r\n      ) {\r\n        // Caso en que se halla cambiado la tienda destino y la cantidad\r\n        if (cantidadNueva !== cantidadVieja) {\r\n          // La cantidad aumentó (Hoja: 3)\r\n          // La cantidad disminuyó (Hoja: 4)\r\n          if (cantidadNueva > cantidadEnDestino) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. La vieja tienda destino no tiene suficientes productos para darle a la nueva tienda destino.\\n\";\r\n          }\r\n          // Caso en que solo se halla cambiado la tienda destino sin modificar la cantidad (Hoja: 5)\r\n        } else {\r\n          if (cantidadEnDestino - cantidadVieja < 0) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No hay suficientes productos en la tienda destino vieja para pasarle a la nueva.\\n\";\r\n          }\r\n        }\r\n        // Caso que solo se halla cambiado la tiendaOrigen\r\n      } else if (\r\n        idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n        idProductoDetails === idProductoAuxModificarDetails &&\r\n        idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails\r\n      ) {\r\n        // Caso en que se halla cambiado la tienda origen y la cantidad\r\n        if (cantidadNueva !== cantidadVieja) {\r\n          // La cantidad aumentó (Hoja: 6)\r\n          // La cantidad disminuyó (Hoja: 7)\r\n          if (cantidadNueva > cantidadEnOrigen) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. La vieja tienda origen no tiene sificientes productos para darle a la nueva tienda destino.\\n\";\r\n          }\r\n          // Caso en que se halla cambiado la tienda origen sin modificar la camtidad (Hoja: 8)\r\n        } else {\r\n          if (cantidadEnOrigen - cantidadVieja < 0) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No hay suficientes productos en la tienda origen vieja para pasarle a la nueva.\\n\";\r\n          }\r\n        }\r\n        // Caso que se halla cambiado la tienda origen y la tienda destino\r\n      } else if (\r\n        idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n        idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails &&\r\n        idProductoDetails === idProductoAuxModificarDetails\r\n      ) {\r\n        // Caso que se halla cambiado la cantantidad, tienda origen y tienda destino\r\n        if (cantidadNueva !== cantidadVieja) {\r\n          // La cantidad aumentó (Hoja: 9)\r\n          // La cantidad disminuyó (Hoja: 10)\r\n          if (\r\n            cantidadVieja > cantidadEnDestino ||\r\n            cantidadNueva > cantidadEnNuevoOrigen\r\n          ) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No se puede restablecer la cantidad dada de los en las tiendas originales o no hay productos suficientes en la nueva tienda de origen para asignar a la nueva tienda destino.\\n\";\r\n          }\r\n          // Caso que se halla cambiado tienda origen y tienda destino sin cambiar la cantidad (Hoja: 11)\r\n        } else {\r\n          if (\r\n            cantidadVieja > cantidadEnDestino ||\r\n            cantidadVieja > cantidadEnNuevoOrigen\r\n          ) {\r\n            flag = false;\r\n            validarCampos +=\r\n              \"-Operación inválida. No se puede restablecer los prouductos en las tiendas originales o no hay productos suficientes en la tienda de origen para asignar a la nueva tienda destino.\\n\";\r\n          }\r\n        }\r\n      } else if (idProductoDetails !== idProductoAuxModificarDetails) {\r\n        // Caso en que halla cambiado el producto\r\n\r\n        if (cantidadVieja > cantidadNPOrigen) {\r\n          // Esta condición es generica simepre que se modifique algo con el producto\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Operación inválida. No hay suficientes productos viejos en la tienda vieja para modificar el producto a uno nuevo.\\n\";\r\n        } else {\r\n          if (\r\n            idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n            idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails &&\r\n            cantidadNueva === cantidadVieja\r\n          ) {\r\n            if (cantidadVieja > cantidadNPOrigen) {\r\n              // Solamente ha cambido el producto y nada más (Hoja 12)\r\n              flag = false;\r\n              validarCampos +=\r\n                \"-Operación inválida. No hay suficientes productos nuevos en la tienda vieja para modificar el producto a uno nuevo.\\n\";\r\n            }\r\n          } else if (cantidadVieja !== cantidadNueva) {\r\n            if (\r\n              idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n              idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails &&\r\n              cantidadNueva !== cantidadVieja\r\n            ) {\r\n              if (cantidadNueva > cantidadNPOrigen) {\r\n                // Cambió solo la cantidad y el producto(Hoja 16)\r\n                flag = false;\r\n                validarCampos +=\r\n                  \"-Operación inválida. No hay sificientes productos en la tienda origen con la cantidad dada.\\n\";\r\n              }\r\n            } else if (\r\n              idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n              idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails &&\r\n              cantidadNueva !== cantidadVieja\r\n            ) {\r\n              if (cantidadNueva > cantidadNPOEnTiendaNuevoOrigen) {\r\n                // Cambió la cantidad y el origen (Hoja 17)\r\n                flag = false;\r\n                validarCampos +=\r\n                  \"-Operación inválida. No hay esa cantidad de productos en la tienda origen especificada.\\n\";\r\n              }\r\n            } else if (\r\n              idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n              idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails &&\r\n              cantidadNueva !== cantidadVieja\r\n            ) {\r\n              if (cantidadNueva > cantidadNPOrigen) {\r\n                // Cambió la cantidad y el origen (Hoja 19)\r\n                flag = false;\r\n                validarCampos +=\r\n                  \"-Operación inválida. No hay esa cantidad de productos en la tienda origen seleccionada.\\n\";\r\n              }\r\n            } else if (\r\n              idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n              idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails &&\r\n              cantidadNueva !== cantidadVieja\r\n            ) {\r\n              if (cantidadNueva > cantidadNPOEnTiendaNuevoOrigen) {\r\n                // Cambió la cantidad, tienda origen, tienda destino, todo (Hoja 18)\r\n                flag = false;\r\n                validarCampos +=\r\n                  \"-Operación inválida. No hay esa cantidad de productos en la tienda origen seleccionada.\\n\";\r\n              }\r\n            }\r\n          } else {\r\n            if (\r\n              idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails ||\r\n              idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails\r\n            ) {\r\n              // Se cambió el producto y alguna tienda\r\n              if (\r\n                idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n                idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails\r\n              ) {\r\n                // Se cambió la tienda origen y destino y el producto\r\n                if (cantidadVieja > cantidadNPOEnTiendaNuevoOrigen) {\r\n                  // Se cambiaron el origen y el destino (Hoja 13)\r\n                  flag = false;\r\n                  validarCampos +=\r\n                    \"-Operación inválida. No hay sificintes productos nuevos en la nueva tienda origen.\\n\";\r\n                }\r\n              } else if (\r\n                idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n                idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails\r\n              ) {\r\n                if (cantidadVieja > cantidadNPOEnTiendaNuevoOrigen) {\r\n                  // Se cambió la tienda origen y el producto (Hoja 14)\r\n                  flag = false;\r\n                  validarCampos +=\r\n                    \"-Operación inválida. No hay sificintes productos nuevos en la nueva tienda origen.\\n\";\r\n                }\r\n              } else {\r\n                if (cantidadVieja > cantidadNPOEnTiendaNuevoOrigen) {\r\n                  // Se cambió la tienda destino y el producto (Hoja 15)\r\n                  flag = false;\r\n                  validarCampos +=\r\n                    \"-Operación inválida. No hay sificintes productos nuevos en la nueva tienda origen.\\n\";\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (idTiendaDestinoDetails === idTiendaOrigenDetails) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-La tienda origen no puede ser igual a la tienda destino.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaOrigenDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda Origen.\\n\";\r\n      }\r\n      if (idTiendaDestinoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda Destino.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n\r\n      ///////////////////////////\r\n      if (flag) {\r\n        await updateMovimiento(\r\n          usuario.token,\r\n          idMovimientoDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          idTiendaOrigenDetails,\r\n          idTiendaDestinoDetails,\r\n          cantidadDetails,\r\n          idProductoDetails,\r\n          idUsuarioDetails\r\n        );\r\n\r\n        if (\r\n          idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n          idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails &&\r\n          idProductoDetails === idProductoAuxModificarDetails &&\r\n          cantidadNueva !== cantidadVieja\r\n        ) {\r\n          // La cantidad aumentó (Hoja: 1)\r\n          // Si la cantidad disminuyó (Hoja: 2)\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            String(cantidadNueva - cantidadVieja)\r\n          );\r\n\r\n          // Caso que solo se halla cambiado la tiendaDestino\r\n        } else if (\r\n          idTiendaOrigenDetails === idTiendaOrigenAuxModificarDetails &&\r\n          idProductoDetails === idProductoAuxModificarDetails &&\r\n          idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails\r\n        ) {\r\n          // La cantidad aumentó (Hoja: 3)\r\n          // La cantidad disminuyó (Hoja: 4)\r\n          await createProductoInTienda(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDestinoDetails\r\n          );\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            String(cantidadVieja)\r\n          );\r\n\r\n          // Nuevo movimiento\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            idTiendaDestinoDetails,\r\n            String(cantidadNueva)\r\n          );\r\n\r\n          // Caso que solo se halla cambiado la tiendaOrigen\r\n        } else if (\r\n          idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n          idProductoDetails === idProductoAuxModificarDetails &&\r\n          idTiendaDestinoDetails === idTiendaDestinoAuxModificarDetails\r\n        ) {\r\n          // La cantidad aumentó (Hoja: 6)\r\n          // La cantidad disminuyó (Hoja: 7)\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            String(cantidadVieja)\r\n          );\r\n\r\n          // Nuevo movimiento\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaOrigenDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            String(cantidadNueva)\r\n          );\r\n\r\n          // Caso que se halla cambiado la tienda origen y la tienda destino\r\n        } else if (\r\n          idTiendaOrigenDetails !== idTiendaOrigenAuxModificarDetails &&\r\n          idTiendaDestinoDetails !== idTiendaDestinoAuxModificarDetails &&\r\n          idProductoDetails === idProductoAuxModificarDetails\r\n        ) {\r\n          // La cantidad aumentó (Hoja: 9)\r\n          // La cantidad disminuyó (Hoja: 10)\r\n          await createProductoInTienda(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDestinoDetails\r\n          );\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            String(cantidadVieja)\r\n          );\r\n\r\n          // Nuevo movimiento\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaOrigenDetails,\r\n            idTiendaDestinoDetails,\r\n            String(cantidadNueva)\r\n          );\r\n        } else if (idProductoDetails !== idProductoAuxModificarDetails) {\r\n          // Caso en que halla cambiado el producto\r\n          await createProductoInTienda(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDestinoDetails\r\n          );\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoAuxModificarDetails,\r\n            idTiendaDestinoAuxModificarDetails,\r\n            idTiendaOrigenAuxModificarDetails,\r\n            String(cantidadVieja)\r\n          );\r\n\r\n          // Nuevo movimiento\r\n          await moverProducto(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaOrigenDetails,\r\n            idTiendaDestinoDetails,\r\n            String(cantidadNueva)\r\n          );\r\n        }\r\n\r\n        const auxNombreProductoAccion = dropdownItemsNombreproducto.find(\r\n          (element) => {\r\n            return (\r\n              parseInt(element.value) ===\r\n              parseInt(idProductoAuxModificarDetails)\r\n            );\r\n          }\r\n        );\r\n        // Agregar Acción de usuario eliminar producto\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó un movimiento de productos que originalmente tenía un nombre ${auxNombreProductoAccion.lavel}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          2\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El movimiento se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setModalMovimientosDates(false)\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para eliminar proveedor\r\n  const eliminarMovimiento = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando movimiento. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL TRATAR DE ELIMINAR EL MOVIMIENTO. Motivos:\\n\";\r\n      const resultDestino = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaDestinoAuxModificarDetails\r\n      );\r\n      let cantidadEnTiendaDestino: number = resultDestino\r\n        ? parseInt(resultDestino.cantidad)\r\n        : 0;\r\n      let cantidadVieja: number = parseInt(cantidadAuxModificarDetails);\r\n\r\n      if (cantidadVieja > cantidadEnTiendaDestino) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No hay suficientes productos en la tienda destino para devolver la operación.\\n\";\r\n      }\r\n      if (flag) {\r\n        await moverProducto(\r\n          usuario.token,\r\n          idProductoAuxModificarDetails,\r\n          idTiendaDestinoAuxModificarDetails,\r\n          idTiendaOrigenAuxModificarDetails,\r\n          String(cantidadVieja)\r\n        );\r\n\r\n        await deleteMovimiento(usuario.token, idMovimientoDetails);\r\n\r\n        const auxNombreProductoAccion = dropdownItemsNombreproducto.find(\r\n          (element) => {\r\n            return (\r\n              parseInt(element.value) ===\r\n              parseInt(idProductoAuxModificarDetails)\r\n            );\r\n          }\r\n        );\r\n        const auxNombreTiendaOrigen = dropdownItemsNombreTienda.find(\r\n          (element) => {\r\n            return parseInt(element.value) === parseInt(idTiendaOrigenDetails);\r\n          }\r\n        );\r\n        const auxNombreTiendaDestino = dropdownItemsNombreTienda.find(\r\n          (element) => {\r\n            return parseInt(element.value) === parseInt(idTiendaDestinoDetails);\r\n          }\r\n        );\r\n        // Agregar Acción de usuario eliminar producto\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó el movimiento del producto ${auxNombreProductoAccion?.label} con cantidad ${cantidadDetails} y tienda origen ${auxNombreTiendaOrigen?.label} y una tienda destino ${auxNombreTiendaDestino?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          2\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El movimiento se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Usuario\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Tienda Origen\",\r\n    \"Tienda Destino\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Usuario\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Tienda Origen\",\r\n    \"Tienda Destino\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableMovimientos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                    <Text style={styles.textSearchMovil}>\r\n                      Nombre del Usuario:\r\n                    </Text>\r\n                  )}\r\n                  {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFullMovil}\r\n                      placeholder=\"Nombre del usuario\"\r\n                      value={nombreUsuarioSearch}\r\n                      onKeyPress={handleKeyPress}\r\n                      onChangeText={setNombreUsuarioSearch}\r\n                    />\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                    <View style={styles.separatorBlanco} />\r\n                  )}\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Cantidad:</Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Cantidad\"\r\n                    value={cantidadSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setCantidadSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadViewTiendasSearsh,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        flex: 1,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 22,\r\n                          fontWeight: \"bold\",\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Tienda:\r\n                      </Text>\r\n                    </View>\r\n\r\n                    {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                      <Text style={styles.textSearchMovil}>Origen:</Text>\r\n                    )}\r\n                    {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n                      <View\r\n                        style={{\r\n                          width: \"100%\",\r\n                          zIndex: capaPrioridadTiendaOrigenSearsh,\r\n                          position: \"relative\",\r\n                        }}\r\n                      >\r\n                        <CustomDropdown\r\n                          value={tiendaOrigenSearch}\r\n                          placeholder=\"Tienda Origen\"\r\n                          setValue={setTiendaOrigenSearch}\r\n                          items={dropdownItemsNombreTienda}\r\n                          searchable={true}\r\n                          onDropdownOpen={() =>\r\n                            controlarCapas(\"TiendaOrigenSearsh\")\r\n                          }\r\n                        />\r\n                      </View>\r\n                    )}\r\n\r\n                    <Text style={styles.textSearchMovil}>Destino:</Text>\r\n                    <View\r\n                      style={{\r\n                        width: \"100%\",\r\n                        zIndex: capaPrioridadTiendaDestinoSearsh,\r\n                        position: \"relative\",\r\n                      }}\r\n                    >\r\n                      <CustomDropdown\r\n                        value={tiendaDestinoSearch}\r\n                        placeholder=\"Tienda Destino\"\r\n                        setValue={setTiendaDestinoSearch}\r\n                        items={dropdownItemsNombreTienda}\r\n                        searchable={true}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"TiendaDestinoSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\"\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadViewTiendasSearsh,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 20,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                      />\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 20,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarMovimientos(\r\n                            `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                            `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                          );\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalMovimientosDates?.isAddMovimiento ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddMovimiento}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddMovimiento}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalMovimientosDates?.id_movimiento === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos del Movimiento\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View style={{ width: \"100%\" }}>\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Usuario\r\n                  </Text>\r\n                </View>\r\n                <View style={{ width: \"100%\" }}>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 16,\r\n                      marginTop: \"3%\",\r\n                      marginLeft: \"6%\",\r\n                      fontWeight: \"bold\",\r\n                      color: Colors.negro, // Color del texto\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                    }}\r\n                  >\r\n                    {nombreUsuarioDetails}\r\n                  </Text>\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Productos\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    searchable={true}\r\n                    readOnly={!isMovimientoEditable}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor Tieda Origen y Teinda Destino */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1200, position: \"relative\" }}\r\n                ></View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalMovil}>\r\n                      Tienda Origen\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaOrigenDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setIdTiendaOrigenDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      searchable={true}\r\n                      readOnly={\r\n                        !(\r\n                          isMovimientoEditable &&\r\n                          isPermisoOpcionesDeCeldaMoverGeneral\r\n                        )\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalMovil}>\r\n                      Tienda Destino\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDestinoDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setIdTiendaDestinoDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      searchable={true}\r\n                      readOnly={!isMovimientoEditable}\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad*/}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalMovil}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isPermisoModificarMovimiento}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n                <View style={{ height: 100 }}>\r\n                  {isDateLoaded && (\r\n                    <MyDateInput\r\n                      dayValue={fechaDiaDetails}\r\n                      monthValue={fechaMesDetails}\r\n                      yearValue={fechaAnnoDetails}\r\n                      onDayChange={setFechaDiaDetails}\r\n                      onMonthChange={setFechaMesDetails}\r\n                      onYearChange={setFechaAnnoDetails}\r\n                      style={{ margin: 20 }}\r\n                      styleText={styles.labelTextModalMovil}\r\n                      isReadOnly={!isMovimientoEditable}\r\n                    />\r\n                  )}\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar movimiento */}\r\n                  {isPermisoModificarMovimiento &&\r\n                    isMovimientoEditable &&\r\n                    modalMovimientosDates?.id_movimiento !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este movimiento?`\r\n                          );\r\n                          setModalMovimientosDates({\r\n                            id_movimiento: \"\",\r\n                            isAddMovimiento: false,\r\n                            isModificarMovimiento: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Movimiento\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar movimiento */}\r\n                  {isPermisoEliminarMovimiento &&\r\n                    isMovimientoEliminable &&\r\n                    modalMovimientosDates?.id_movimiento !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR este movimiento?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalMovimientosDates({\r\n                            id_movimiento: \"\",\r\n                            isAddMovimiento: false,\r\n                            isModificarMovimiento: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Movimiento\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarMovimiento()\r\n                      : modificarMovimiento()\r\n                  }\r\n                  disabled={isButtonDisabled}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Entradas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n              <Text style={styles.textSearchDesktop}>Nombre del Usuario:</Text>\r\n            )}\r\n            {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFullDesktop}\r\n                placeholder=\"Nombre del usuario\"\r\n                onKeyPress={handleKeyPress}\r\n                value={nombreUsuarioSearch}\r\n                onChangeText={setNombreUsuarioSearch}\r\n              />\r\n            )}\r\n\r\n            {isPermisoOpcionesDeCeldaMoverGeneral && (\r\n              <View style={styles.separatorBlanco} />\r\n            )}\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Cantidad:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Cantidad\"\r\n              value={cantidadSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setCantidadSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                position: \"relative\",\r\n                zIndex: capaPrioridadViewTiendasSearsh,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    fontWeight: \"bold\",\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Tienda:\r\n                </Text>\r\n              </View>\r\n\r\n              <Text style={styles.textSearchDesktop}>Origen:</Text>\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  zIndex: capaPrioridadTiendaOrigenSearsh,\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <CustomDropdown\r\n                  value={tiendaOrigenSearch}\r\n                  placeholder=\"Tienda Origen\"\r\n                  setValue={setTiendaOrigenSearch}\r\n                  items={dropdownItemsNombreTienda}\r\n                  direction=\"BOTTOM\"\r\n                  onDropdownOpen={() => controlarCapas(\"TiendaOrigenSearsh\")}\r\n                />\r\n              </View>\r\n\r\n              <Text style={styles.textSearchDesktop}>Destino:</Text>\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  zIndex: capaPrioridadTiendaDestinoSearsh,\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <CustomDropdown\r\n                  value={tiendaDestinoSearch}\r\n                  placeholder=\"Tienda Destino\"\r\n                  setValue={setTiendaDestinoSearch}\r\n                  items={dropdownItemsNombreTienda}\r\n                  direction=\"BOTTOM\"\r\n                  onDropdownOpen={() => controlarCapas(\"TiendaDestinoSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\"\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                zIndex: capaPrioridadViewFechaSearsh,\r\n                position: \"relative\",\r\n                marginTop: \"2%\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => {\r\n                    filtrarYOrdenarMovimientos(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    );\r\n                  }}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableMovimientos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalMovimientosDates?.isAddMovimiento ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddMovimiento}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddMovimiento}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalMovimientosDates?.id_movimiento === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos del Movimiento\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View style={{ width: \"100%\" }}>\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Usuario\r\n                  </Text>\r\n                </View>\r\n                <View style={{ width: \"100%\" }}>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 16,\r\n                      marginTop: \"3%\",\r\n                      marginLeft: \"6%\",\r\n                      fontWeight: \"bold\",\r\n                      color: Colors.negro, // Color del texto\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                    }}\r\n                  >\r\n                    {nombreUsuarioDetails}\r\n                  </Text>\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadViewProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadViewProductosDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Productos\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    readOnly={!isMovimientoEditable}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"ProductosDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor Tieda Origen y Teinda Destino */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                ></View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadViewTiendasDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda Origen\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaOrigenDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setIdTiendaOrigenDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={\r\n                        !(\r\n                          isMovimientoEditable &&\r\n                          isPermisoOpcionesDeCeldaMoverGeneral\r\n                        )\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() => controlarCapas(\"TiendasDetails\")}\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda Destino\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDestinoDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setIdTiendaDestinoDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={!isMovimientoEditable}\r\n                      searchable={true}\r\n                      onDropdownOpen={() => controlarCapas(\"TiendasDetails\")}\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad*/}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadViewFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isMovimientoEditable}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Fecha */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadViewFechaDetails,\r\n                    }}\r\n                  >\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        isReadOnly={!isMovimientoEditable}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 10, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar movimiento */}\r\n                  {isPermisoModificarMovimiento &&\r\n                    isMovimientoEditable &&\r\n                    modalMovimientosDates?.id_movimiento !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este movimiento?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Movimiento\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Botón para eliminar movimiento */}\r\n                  {isPermisoEliminarMovimiento &&\r\n                    isMovimientoEliminable &&\r\n                    modalMovimientosDates?.id_movimiento !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR este movimiento?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalMovimientosDates({\r\n                            id_movimiento: \"\",\r\n                            isAddMovimiento: false,\r\n                            isModificarMovimiento: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Movimiento\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarMovimiento()\r\n                      : modificarMovimiento()\r\n                  }\r\n                  disabled={isButtonDisabled}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Movimientos\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { UsuarioTabla } from '../components/MyDateTableUsuarios';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortUsuarios {\r\n  items: UsuarioTabla[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortUsuariosContextType {\r\n  sortUsuarios: SortUsuarios | null;\r\n  setSortUsuarios: (sortUsuarios: SortUsuarios | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortUsuariosContext = createContext<SortUsuariosContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortUsuariosProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortUsuarios, setSortUsuarios] = useState<SortUsuarios | null>(null);\r\n\r\n  return (\r\n    <SortUsuariosContext.Provider value={{ sortUsuarios: sortUsuarios, setSortUsuarios: setSortUsuarios }}>\r\n      {children}\r\n    </SortUsuariosContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortUsuarios = () => {\r\n  const context = React.useContext(SortUsuariosContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortUsuarios debe usarse dentro de un SortUsuarios');\r\n  }\r\n  return context;\r\n};","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { TiendaShowModal } from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\nimport { useSortUsuarios } from \"../contexts/AuxiliarSortUsuarios\";\r\n\r\nexport interface UsuarioTabla {\r\n  id_Usuario: string;\r\n  nombre: string;\r\n  nombre_Usuario: string;\r\n  correo?: string;\r\n  telefono?: string;\r\n  direccion?: string;\r\n  carnet_Identidad?: string;\r\n  detalle_bancario?: string;\r\n  id_rol: string;\r\n  nombre_rol: string;\r\n  id_tienda: string;\r\n  nombre_tienda: string;\r\n  salario_CUP: string;\r\n}\r\n\r\nexport interface ProveedorPiker {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface Props {\r\n  items: UsuarioTabla[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableProveedorModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableUsuarios: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n  const { sortUsuarios, setSortUsuarios } = useSortUsuarios();\r\n  const { usuario, setUsuario } = useUsuario();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(10);\r\n  const [displayedItems, setDisplayedItems] = React.useState<UsuarioTabla[]>(\r\n    []\r\n  ); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_producto: string) => {\r\n    setModalProveedoresDates({\r\n      id_proveedor: id_producto,\r\n      isAddProveedor: true,\r\n      fileEditable: false,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: true,\r\n      isDetallesProveedores: true,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  const resultadoCondicionalOpcionesDeCelda = (item: UsuarioTabla) => {\r\n    if (usuario?.id_rol) {\r\n      return (usuario.id_rol == \"1\" && isPermisoOpcionesDeCelda) ||\r\n        (usuario.id_rol == \"2\" && isPermisoOpcionesDeCelda)\r\n        ? true\r\n        : item.telefono && isPermisoOpcionesDeCelda\r\n        ? true\r\n        : false;\r\n    }\r\n  };\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Correo\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Teléfono\") {\r\n      aux = \"option5\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortUsuarios({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre\" ||\r\n                column === \"Correo\" ||\r\n                column === \"Teléfono\") && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Suave,\r\n                    marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                    width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                    height: 24, // Asegúrate de que tenga tamaño consistente\r\n                    justifyContent: \"center\", // Centrar contenido del botón\r\n                    alignItems: \"center\", // Centrar contenido del botón\r\n                    borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                    marginBottom: 4, // Elevar el botón del borde inferior\r\n                    paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                  }}\r\n                  onPress={() => sortEntradasAux(column)}\r\n                >\r\n                  <Image\r\n                    source={require(\"../images/ordenar.png\")}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </TouchableOpacity>\r\n              )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idProductoOption, setIdProductoOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdProductoOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalProveedoresDates({\r\n        id_proveedor: idProductoOption,\r\n        isAddProveedor: true,\r\n        fileEditable: true,\r\n        isModificarProveedor: true,\r\n        isAddProductoShowProveedoresTiendas: true,\r\n        isDetallesProveedores: true,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Usuario !== idProductoOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idProductoOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Usuario}\r\n                onPress={() => detailsModalView(item.id_Usuario)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.telefono}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - SalarioCUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    justifyContent: \"center\", // Centrar horizontalmente\r\n                    alignItems: \"center\", // Centrar verticalmente\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text>{item.salario_CUP}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Rol */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombre_rol}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Tienda */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombre_tienda}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idProductoOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Usuario}\r\n                onPress={() => detailsModalView(item.id_Usuario)}\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.telefono}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - SalarioCUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    justifyContent: \"center\", // Centrar horizontalmente\r\n                    alignItems: \"center\", // Centrar verticalmente\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text>{item.salario_CUP}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Rol */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    justifyContent: \"center\", // Centrar horizontalmente\r\n                    alignItems: \"center\", // Centrar verticalmente\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text>{item.nombre_rol}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Tienda */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    justifyContent: \"center\", // Centrar horizontalmente\r\n                    alignItems: \"center\", // Centrar verticalmente\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text>{item.nombre_tienda}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 16,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport {\r\n  PanGestureHandler,\r\n  PanGestureHandlerGestureEvent,\r\n} from \"react-native-gesture-handler\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { getAllRol, isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\nimport {\r\n  EntradaShowModal,\r\n  MyDateTableModalShowDatesEntradas,\r\n} from \"../components/MyDateTableModalShowDatesEntradas\";\r\nimport { getAllEntradasByProveedorId } from \"../services/EntradaServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  MyDateTableUsuarios,\r\n  UsuarioTabla,\r\n} from \"../components/MyDateTableUsuarios\";\r\nimport {\r\n  actualizarUsuarioConContraseña,\r\n  actualizarUsuarioSinContraseña,\r\n  addUsuario,\r\n  deleteUsuario,\r\n  filtrarUsuario,\r\n  getAllUsuarios,\r\n  getUsuarioById,\r\n  ordenarUsuarios,\r\n} from \"../services/UsuarioServices\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport { HomeScreen } from \"./HomeScreen\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useSortUsuarios } from \"../contexts/AuxiliarSortUsuarios\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\nimport React from \"react\";\r\n\r\nexport default function UsuariosView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables auxiliares para controlar el despliege de los dropDownsPiers\r\n  const [capaPrioridadTiendasSearsh, setCapaPrioridadTiendasSearsh] =\r\n    useState(500);\r\n  const [capaPrioridadRolesSearsh, setCapaPrioridadRolesSearsh] = useState(500);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    if (prioridad === \"TiendasSearsh\") {\r\n      setCapaPrioridadRolesSearsh(1500);\r\n      setCapaPrioridadTiendasSearsh(2000);\r\n    } else if (prioridad === \"RolesSearsh\") {\r\n      setCapaPrioridadRolesSearsh(2000);\r\n      setCapaPrioridadTiendasSearsh(1500);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortUsuarios } = useSortUsuarios();\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar proovedores y ver datos\r\n  const [dropdownItemsTiendasDetails, setDropDownItemsTiendasDetails] =\r\n    useState<TiendaPiker[]>([]);\r\n  const [dropdownItemsRolesDetails, setDropDownItemsRolesDetails] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [idUsuarioDetails, setIdusuarioDetails] = useState(\"\");\r\n  const [nombreDelUsuarioDetails, setNombreDelUsuarioDetails] = useState(\"\");\r\n  const [nombreUsuarioDetails, setNombreUsuarioDetails] = useState(\"\");\r\n  const [salario_CUPDetails, setsalario_CUPDetails] = useState(\"\");\r\n  const [nombreUsuarioDetailsOriginal, setNombreUsuarioDetailsOriginal] =\r\n    useState(\"\");\r\n  const [correoEmailUsuarioDetails, setCorreoEmailUsuarioDetails] =\r\n    useState(\"\");\r\n  const [contrasennaUsuarioDetails, setContrasennaUsuarioDetails] =\r\n    useState(\"\");\r\n  const [CarnetIdentidadUsuarioDetails, setCarnetIdentidadUsuarioDetails] =\r\n    useState(\"\");\r\n  const [direccionUsuarioDetails, setDireccionUsuarioDetails] = useState(\"\");\r\n  const [telefonoUsuarioDetails, setTelefonoUsuarioDetails] = useState(\"\");\r\n  const [detallesBancariosUsuarioDetils, setDetallesBancariosUsuarioDetils] =\r\n    useState(\"\");\r\n  const [tiendaUsuarioDetails, setTiendaUsuarioDetails] = useState(\"\");\r\n  const [rolUsuarioDetails, setRolUsuarioDetails] = useState(\"\");\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n\r\n  const options = [\r\n    { label: \"Permitido\", value: \"permitido\" },\r\n    { label: \"Denegado\", value: \"denegado\" },\r\n  ];\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [isModalChekEliminarVisible, setIsModalChekEliminarVisible] =\r\n    useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarProveedor, setIsPermisoAgregarProveedor] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarProveedor, setIsPermisoEliminarProveedor] =\r\n    React.useState(false);\r\n  const [isPermisoModificarProveedor, setIsPermisoModificarProveedor] =\r\n    React.useState(false);\r\n  const [isPermisoModificarGerarquico, setIsPermisoModificarGerarquico] =\r\n    useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarUsuario = await isPermiso(\r\n        usuario.token,\r\n        \"1\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultEliminarUsuario = await isPermiso(\r\n        usuario.token,\r\n        \"3\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarUsuario = await isPermiso(\r\n        usuario.token,\r\n        \"2\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      setIsPermisoAgregarProveedor(resultAgregarUsuario);\r\n      setIsPermisoEliminarProveedor(resultEliminarUsuario);\r\n      setIsPermisoModificarProveedor(resultModificarUsuario);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [entradasByProveedor, setEntradasByProveedor] = useState<\r\n    EntradaShowModal[]\r\n  >([]);\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<UsuarioTabla[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsTiendasSearsh, setDropDownItemsTiendasSearsh] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [dropdownItemsRolesSearsh, setDropDownItemsRolesSearsh] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [tiendaNombreSeleccionadaSearch, setTiendaNombreSeleccionadaSearch] =\r\n    useState(\"\");\r\n  const [rolNombreSeleccionadoSearsh, setRolNombreSeleccionadoSearsh] =\r\n    useState(\"\");\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreUsuarioSearch, setNombreUsuarioSearch] = useState(\"\");\r\n  const [correoEmyleSearch, setCorreoEmyleSearch] = useState(\"\");\r\n  const [telefonoSearch, setTelefonoSearch] = useState(\"\");\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getDatesTiendaPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsTiendasSearsh([\r\n          { label: \"Seleccione una tienda\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getDatesRolesPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllRol(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const rolesMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_rol,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsRolesSearsh([\r\n          { label: \"Seleccione un rol\", value: \"\" },\r\n          ...rolesMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getDatesTiendasAndRolesParaAgregarUsuario = async () => {\r\n    // Cargar datos de los dropDown\r\n    if (usuario?.token != undefined) {\r\n      const resultTiendas = await getAllTiendas(usuario.token);\r\n      const resultRoles = await getAllRol(usuario.token);\r\n\r\n      if (\r\n        resultTiendas &&\r\n        Array.isArray(resultTiendas.data) &&\r\n        resultRoles &&\r\n        Array.isArray(resultRoles)\r\n      ) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          resultTiendas.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n        const rolesMapeados: TiendaPiker[] = await Promise.all(\r\n          resultRoles\r\n            .filter((element: any) => {\r\n              if (parseInt(usuario.id_rol) === 1) {\r\n                return parseInt(element.id_rol) !== 1;\r\n              } else if (parseInt(usuario.id_rol) === 2) {\r\n                return (\r\n                  parseInt(element.id_rol) !== 1 &&\r\n                  parseInt(element.id_rol) !== 2\r\n                );\r\n              } else if (parseInt(usuario.id_rol) === 3) {\r\n                return (\r\n                  parseInt(element.id_rol) !== 1 &&\r\n                  parseInt(element.id_rol) !== 2 &&\r\n                  parseInt(element.id_rol) !== 3\r\n                );\r\n              }\r\n              return true; // Si el rol es diferente de 1, 2 o 3, no se aplica ningún filtro\r\n            })\r\n            .map(async (element: any) => ({\r\n              label: element.nombre,\r\n              value: element.id_rol,\r\n            }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsTiendasDetails(tiendasMapeados);\r\n        setDropDownItemsRolesDetails(rolesMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = async () => {\r\n    setNombreDelUsuarioDetails(\"\");\r\n    setNombreUsuarioDetails(\"\");\r\n    setNombreUsuarioDetailsOriginal(\"\");\r\n    setDireccionUsuarioDetails(\"\");\r\n    setTelefonoUsuarioDetails(\"\");\r\n    setCarnetIdentidadUsuarioDetails(\"\");\r\n    setCorreoEmailUsuarioDetails(\"\");\r\n    setDetallesBancariosUsuarioDetils(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: false,\r\n      isModificarProveedor: false,\r\n      fileEditable: true,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n  };\r\n  const cargarDetailsOfUsuario = async () => {\r\n    if (usuario?.token && modalProveedoresDates?.id_proveedor) {\r\n      const result = await getUsuarioById(\r\n        usuario.token,\r\n        modalProveedoresDates.id_proveedor\r\n      );\r\n\r\n      if (result) {\r\n        setIdusuarioDetails(result.data.id_usuario);\r\n        setNombreUsuarioDetails(result.data.nombre_usuario);\r\n        setNombreUsuarioDetailsOriginal(result.data.nombre_usuario);\r\n        setNombreDelUsuarioDetails(result.data.nombre);\r\n        setDireccionUsuarioDetails(result.data.direccion || \"\");\r\n        setTelefonoUsuarioDetails(result.data.telefono || \"\");\r\n        setCarnetIdentidadUsuarioDetails(result.data.carnet_identidad || \"\");\r\n        setCorreoEmailUsuarioDetails(result.data.email || \"\");\r\n        setDetallesBancariosUsuarioDetils(result.data.detalle_bancario || \"\");\r\n        setsalario_CUPDetails(result.data.salario_CUP);\r\n        setSelecterActivoDetails(result.data.activo ? \"permitido\" : \"denegado\");\r\n\r\n        // Cargar datos de los dropDown\r\n        if (usuario?.token != undefined) {\r\n          const resultTiendas = await getAllTiendas(usuario.token);\r\n          const resultRoles = await getAllRol(usuario.token);\r\n\r\n          if (\r\n            resultTiendas &&\r\n            Array.isArray(resultTiendas.data) &&\r\n            resultRoles &&\r\n            Array.isArray(resultRoles)\r\n          ) {\r\n            const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n              resultTiendas.data.map(async (element: any) => ({\r\n                label: element.nombre,\r\n                value: element.id_tienda,\r\n              }))\r\n            );\r\n\r\n            if (\r\n              !(parseInt(usuario.id_rol) >= parseInt(result.data.rol.id_rol))\r\n            ) {\r\n              const rolesMapeados: TiendaPiker[] = await Promise.all(\r\n                resultRoles\r\n                  .filter((element: any) => {\r\n                    if (parseInt(usuario.id_rol) === 1) {\r\n                      return parseInt(element.id_rol) !== 1;\r\n                    } else if (parseInt(usuario.id_rol) === 2) {\r\n                      return (\r\n                        parseInt(element.id_rol) !== 1 &&\r\n                        parseInt(element.id_rol) !== 2\r\n                      );\r\n                    } else if (parseInt(usuario.id_rol) === 3) {\r\n                      return (\r\n                        parseInt(element.id_rol) !== 1 &&\r\n                        parseInt(element.id_rol) !== 2 &&\r\n                        parseInt(element.id_rol) !== 3\r\n                      );\r\n                    }\r\n                    return true; // Si el rol es diferente de 1, 2 o 3, no se aplica ningún filtro\r\n                  })\r\n                  .map(async (element: any) => ({\r\n                    label: element.nombre,\r\n                    value: element.id_rol,\r\n                  }))\r\n              );\r\n\r\n              setDropDownItemsRolesDetails(rolesMapeados);\r\n            } else {\r\n              const rolesMapeados: TiendaPiker[] = await Promise.all(\r\n                resultRoles.map(async (element: any) => ({\r\n                  label: element.nombre,\r\n                  value: element.id_rol,\r\n                }))\r\n              );\r\n\r\n              setDropDownItemsRolesDetails(rolesMapeados);\r\n            }\r\n\r\n            // Agregar un valor adicional para el valor inicial\r\n            setDropDownItemsTiendasDetails(tiendasMapeados);\r\n          }\r\n\r\n          setTiendaUsuarioDetails(result.data.tienda.id_tienda);\r\n          setRolUsuarioDetails(result.data.rol.id_rol);\r\n\r\n          if (parseInt(usuario.id_rol) >= parseInt(result.data.rol.id_rol)) {\r\n            setIsPermisoModificarGerarquico(false);\r\n          } else {\r\n            setIsPermisoModificarGerarquico(true);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<UsuarioTabla[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarUsuario(\r\n          usuario.token,\r\n          nombreUsuarioSearch,\r\n          correoEmyleSearch,\r\n          telefonoSearch,\r\n          rolNombreSeleccionadoSearsh,\r\n          tiendaNombreSeleccionadaSearch\r\n        );\r\n\r\n        if (result) {\r\n          const usuariosMapeados: UsuarioTabla[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Usuario: element.id_usuario,\r\n              nombre: element.nombre,\r\n              nombre_Usuario: element.nombre_usuario,\r\n              correo: element.email ?? \"\",\r\n              telefono: element.telefono ?? \"\",\r\n              direccion: element.direccion ?? \"\",\r\n              carnet_Identidad: element.carnet_identidad ?? \"\",\r\n              detalle_bancario: element.detalle_bancario ?? \"\",\r\n              id_rol: element.rol.id_rol,\r\n              nombre_rol: element.rol.nombre,\r\n              id_tienda: element.tienda.id_tienda,\r\n              nombre_tienda: element.tienda.nombre,\r\n              salario_CUP: element.salario_CUP\r\n            }))\r\n          );\r\n          return usuariosMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    filtrarYOrdenarUsuarios();\r\n  }, [sortUsuarios, selectedOptionTipoOrden]);\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfUsuario();\r\n  }, [modalProveedoresDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosUsuarios = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllUsuarios(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: UsuarioTabla[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Usuario: element.id_usuario,\r\n                nombre: element.nombre,\r\n                nombre_Usuario: element.nombre_usuario,\r\n                correo: element.email || \"\",\r\n                telefono: element.telefono || \"\",\r\n                direccion: element.direccion || \"\",\r\n                carnet_Identidad: element.carnet_identidad || \"\",\r\n                detalle_bancario: element.detalles_bancarios || \"\",\r\n                id_rol: element.rol.id_rol,\r\n                nombre_rol: element.rol.nombre,\r\n                id_tienda: element.tienda.id_tienda,\r\n                nombre_tienda: element.tienda.nombre,\r\n                salario_CUP: element.salario_CUP\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron proveedoress.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener los proveedores o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de los proveedores\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de los proovedores\"\r\n      );\r\n    }\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarUsuarios();\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosUsuarios();\r\n        getDatesTiendaPiker();\r\n        getDatesRolesPiker();\r\n        getDatesTiendasAndRolesParaAgregarUsuario();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarUsuarios = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let productosFiltrados: UsuarioTabla[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortUsuarios?.criterioOrden && sortUsuarios.tipoOrden) {\r\n          productosFiltrados = await ordenarUsuarios(\r\n            usuario.token,\r\n            productosFiltrados,\r\n            sortUsuarios.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(productosFiltrados);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const auxSetModalProovedoresDates = async () => {\r\n    setNombreUsuarioDetails(\"\");\r\n    setNombreUsuarioDetailsOriginal(\"\");\r\n    setCorreoEmailUsuarioDetails(\"\");\r\n    setDireccionUsuarioDetails(\"\");\r\n    setTelefonoUsuarioDetails(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: true,\r\n      fileEditable: true,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n\r\n    if (usuario?.token) {\r\n      const resultRoles = await getAllRol(usuario.token);\r\n      const rolesMapeados: TiendaPiker[] = await Promise.all(\r\n        resultRoles\r\n          .filter((element: any) => {\r\n            if (parseInt(usuario.id_rol) === 1) {\r\n              return parseInt(element.id_rol) !== 1;\r\n            } else if (parseInt(usuario.id_rol) === 2) {\r\n              return (\r\n                parseInt(element.id_rol) !== 1 && parseInt(element.id_rol) !== 2\r\n              );\r\n            } else if (parseInt(usuario.id_rol) === 3) {\r\n              return (\r\n                parseInt(element.id_rol) !== 1 &&\r\n                parseInt(element.id_rol) !== 2 &&\r\n                parseInt(element.id_rol) !== 3\r\n              );\r\n            }\r\n            return true; // Si el rol es diferente de 1, 2 o 3, no se aplica ningún filtro\r\n          })\r\n          .map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_rol,\r\n          }))\r\n      );\r\n\r\n      setDropDownItemsRolesDetails(rolesMapeados);\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreUsuarioSearch(\"\");\r\n    setCorreoEmyleSearch(\"\");\r\n    setTelefonoSearch(\"\");\r\n    setRolNombreSeleccionadoSearsh(\"\");\r\n    setTiendaNombreSeleccionadaSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewUsuario = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando usuario. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL AGREGAR USUARIO. Por favor verifique los siguientes campos:\\n\";\r\n      const resultUsuarios = await getAllUsuarios(usuario.token);\r\n      for (let item of resultUsuarios) {\r\n        if (item.nombre_usuario === nombreUsuarioDetails) {\r\n          validarCampos += `-Ya existe un usuario con el nombreUsuario ${nombreUsuarioDetails}.\\n`;\r\n          flag = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (nombreDelUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombre del usuario no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (correoEmailUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El correo electrónico no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (contrasennaUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-La contraseña no puede ser vacía.\\n\";\r\n        flag = false;\r\n      } else if (contrasennaUsuarioDetails.trim().length < 6) {\r\n        validarCampos += \"-La contraseña tiene que tener 6 o más caracteres.\\n\";\r\n        flag = false;\r\n      }\r\n      if (nombreUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombreUsuario no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (salario_CUPDetails === \"\") {\r\n        validarCampos += \"-El salario del trabajador no puede ser vacío.\\n\"\r\n        flag = false;\r\n      }\r\n      if (tiendaUsuarioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No ha seleccionado la tienda donde trabajará el usuario.\\n\";\r\n      }\r\n      if (rolUsuarioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-No ha seleccionado un rol para el usuario.\\n\";\r\n      }\r\n      if (CarnetIdentidadUsuarioDetails.trim() !== \"\") {\r\n        if (CarnetIdentidadUsuarioDetails.trim().length !== 11) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-El carnet de identidad del usuario deve tener 11 dígitos. \\n\";\r\n        }\r\n      }\r\n\r\n      if (flag) {\r\n        await addUsuario(\r\n          usuario.token,\r\n          nombreDelUsuarioDetails,\r\n          nombreUsuarioDetails,\r\n          contrasennaUsuarioDetails,\r\n          correoEmailUsuarioDetails,\r\n          telefonoUsuarioDetails,\r\n          direccionUsuarioDetails,\r\n          CarnetIdentidadUsuarioDetails,\r\n          detallesBancariosUsuarioDetils,\r\n          rolUsuarioDetails,\r\n          tiendaUsuarioDetails,\r\n          salario_CUPDetails\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó al sistema al usuario ${nombreUsuarioDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          5\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(\r\n          `El Usuario \"${nombreUsuarioDetails}\" fue insertado con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreDelUsuarioDetails(\"\");\r\n        setNombreUsuarioDetails(\"\");\r\n        setNombreUsuarioDetailsOriginal(\"\");\r\n        setContrasennaUsuarioDetails(\"\");\r\n        setDireccionUsuarioDetails(\"\");\r\n        setTelefonoUsuarioDetails(\"\");\r\n        setCarnetIdentidadUsuarioDetails(\"\");\r\n        setCorreoEmailUsuarioDetails(\"\");\r\n        setDetallesBancariosUsuarioDetils(\"\");\r\n        setDropDownItemsRolesDetails([]);\r\n        setDropDownItemsTiendasDetails([]);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setReflechModalMensajeView(false);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarUsuario = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando usuario. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR USUARIO. Compruebe los siguientes campos:\\n\";\r\n\r\n      const resultUsuarios = await getAllUsuarios(usuario.token);\r\n      for (let item of resultUsuarios) {\r\n        if (\r\n          item.nombre_usuario === nombreUsuarioDetails &&\r\n          nombreUsuarioDetailsOriginal !== nombreUsuarioDetails\r\n        ) {\r\n          validarCampos += `-Ya existe un usuario con el nombreUsuario ${nombreUsuarioDetails}.\\n`;\r\n          flag = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (nombreDelUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombre del usuario no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (correoEmailUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El correo electrónico no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (contrasennaUsuarioDetails.trim() !== \"\") {\r\n        if (contrasennaUsuarioDetails.trim().length < 6) {\r\n          validarCampos +=\r\n            \"-La contraseña tiene que tener 6 o más caracteres.\\n\";\r\n          flag = false;\r\n        }\r\n      }\r\n      if (salario_CUPDetails === \"\") {\r\n        validarCampos += \"-El salario del trabajador no puede ser vacío.\\n\"\r\n        flag = false;\r\n      }\r\n      if (nombreUsuarioDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombreUsuario no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (tiendaUsuarioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No ha seleccionado la tienda donde trabajará el usuario.\\n\";\r\n      }\r\n      if (rolUsuarioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-No ha seleccionado un rol para el usuario.\\n\";\r\n      }\r\n      if (CarnetIdentidadUsuarioDetails.trim() !== \"\") {\r\n        if (CarnetIdentidadUsuarioDetails.trim().length !== 11) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-El carnet de identidad del usuario deve tener 11 dígitos. \\n\";\r\n        }\r\n      }\r\n\r\n      if (flag) {\r\n        if (contrasennaUsuarioDetails.trim() === \"\") {\r\n          await actualizarUsuarioSinContraseña(\r\n            usuario.token,\r\n            idUsuarioDetails,\r\n            nombreDelUsuarioDetails,\r\n            nombreUsuarioDetails,\r\n            correoEmailUsuarioDetails,\r\n            telefonoUsuarioDetails,\r\n            direccionUsuarioDetails,\r\n            CarnetIdentidadUsuarioDetails,\r\n            detallesBancariosUsuarioDetils,\r\n            rolUsuarioDetails,\r\n            tiendaUsuarioDetails,\r\n            selecterActivoDetails === \"permitido\" ? true : false,\r\n            salario_CUPDetails\r\n          );\r\n        } else {\r\n          await actualizarUsuarioConContraseña(\r\n            usuario.token,\r\n            idUsuarioDetails,\r\n            nombreDelUsuarioDetails,\r\n            nombreUsuarioDetails,\r\n            contrasennaUsuarioDetails,\r\n            correoEmailUsuarioDetails,\r\n            telefonoUsuarioDetails,\r\n            direccionUsuarioDetails,\r\n            CarnetIdentidadUsuarioDetails,\r\n            detallesBancariosUsuarioDetils,\r\n            rolUsuarioDetails,\r\n            tiendaUsuarioDetails,\r\n            selecterActivoDetails === \"permitido\" ? true : false,\r\n            salario_CUPDetails\r\n          );\r\n        }\r\n\r\n        // Agregar Acción de usuario modificar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó al usuario ${nombreUsuarioDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          5\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(\r\n          `El Usuario \"${nombreUsuarioDetails}\" se modificó con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar proveedor\r\n  const eliminarUsuario = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando usuario. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL TRATAR DE ELIMINAR EL USUARIO. Motivos:\\n\";\r\n\r\n      if (flag) {\r\n        const resultDeleteUsuario = await deleteUsuario(\r\n          usuario.token,\r\n          idUsuarioDetails\r\n        );\r\n\r\n        if (resultDeleteUsuario) {\r\n          // Agregar Acción de usuario agregar proveedor\r\n\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó al usuario ${nombreUsuarioDetails}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            5\r\n          );\r\n\r\n          setIsBotonModalMesajeVisible(true);\r\n          setModalMensaje(\r\n            `El Usuario \"${nombreUsuarioDetails}\" se eliminó con éxito`\r\n          );\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(true);\r\n        } else {\r\n          validarCampos +=\r\n            \"-El usuario ya ha echo operaciones en el sistema.\\n\";\r\n          setModalMensaje(validarCampos);\r\n          setReflechModalMensajeView;\r\n          setModalMensajeView(true);\r\n        }\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Teléfono\",\r\n    \"Salario CUP\",\r\n    \"Rol\",\r\n    \"Tienda\",\r\n  ];\r\n  const columnasMyDateTableEntradaModal = [\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Costo\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Teléfono\",\r\n    \"Rol\",\r\n    \"Tienda\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Teléfono\",\r\n    \"Salario CUP\",\r\n    \"Rol\",\r\n    \"Tienda\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarProveedor && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Usuario</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableUsuarios\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>Nombre de Usuario:</Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del proveedor\"\r\n                    value={nombreUsuarioSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreUsuarioSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Correo del Usuario:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Correo del Proveedor\"\r\n                    value={correoEmyleSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setCorreoEmyleSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Número de Teléfono:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Número de Teléfono\"\r\n                    value={telefonoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setTelefonoSearch}\r\n                  />\r\n\r\n                  <Text style={styles.textSearchMovil}>Rol:</Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadRolesSearsh,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={rolNombreSeleccionadoSearsh}\r\n                      placeholder=\"Roles\"\r\n                      setValue={setRolNombreSeleccionadoSearsh}\r\n                      items={dropdownItemsRolesSearsh}\r\n                      direction=\"BOTTOM\"\r\n                      onDropdownOpen={() => controlarCapas(\"RolesSearsh\")}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Tienda:</Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadTiendasSearsh,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={tiendaNombreSeleccionadaSearch}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setTiendaNombreSeleccionadaSearch}\r\n                      items={dropdownItemsTiendasSearsh}\r\n                      direction=\"BOTTOM\"\r\n                      onDropdownOpen={() => controlarCapas(\"TiendasSearsh\")}\r\n                    />\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => filtrarYOrdenarUsuarios()}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Usuario\"\r\n                  : \"Agregar Usuario\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={nombreDelUsuarioDetails}\r\n                  onChangeText={setNombreDelUsuarioDetails}\r\n                  placeholder=\"Nombre del usuario\"\r\n                />\r\n\r\n                {/* Nombre Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={nombreUsuarioDetails}\r\n                  onChangeText={setNombreUsuarioDetails}\r\n                  placeholder=\"Nombre usuario\"\r\n                />\r\n\r\n                {/*Contraseña */}\r\n                {(modalProveedoresDates?.id_proveedor === \"\"\r\n                  ? true\r\n                  : parseInt(usuario?.id_rol) === 1) && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {modalProveedoresDates?.id_proveedor === \"\"\r\n                        ? \"Contraseña\"\r\n                        : \"Cambiar Contraseña\"}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                {(modalProveedoresDates?.id_proveedor === \"\"\r\n                  ? true\r\n                  : parseInt(usuario?.id_rol) === 1) && (\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    editable={\r\n                      modalProveedoresDates?.id_proveedor === \"\"\r\n                        ? true\r\n                        : isPermisoModificarProveedor &&\r\n                          isPermisoModificarGerarquico\r\n                    }\r\n                    value={contrasennaUsuarioDetails}\r\n                    onChangeText={setContrasennaUsuarioDetails}\r\n                    placeholder=\"Nueva contraseña del usuario\"\r\n                  />\r\n                )}\r\n\r\n                {/* Dirección del Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección del Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={direccionUsuarioDetails}\r\n                  onChangeText={setDireccionUsuarioDetails}\r\n                  placeholder=\"Dirección del Usuario    \"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y Carnet de Identidad */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoUsuarioDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtrar solo números del 0 al 9\r\n                        const filteredText = text.replace(/[^0-9]/g, \"\");\r\n                        setTelefonoUsuarioDetails(filteredText);\r\n                      }}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Carnet de Identidad */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Carnet de Identidad\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={CarnetIdentidadUsuarioDetails}\r\n                      onChangeText={(text) => {\r\n                        // Validar que el texto solo contenga números del 1 al 9\r\n                        const regex = /^[0-9]*$/; // Expresión regular para solo permitir números del 1 al 9\r\n\r\n                        // Verificar longitud y si el texto cumple con la expresión regular\r\n                        if (text.length <= 11 && regex.test(text)) {\r\n                          setCarnetIdentidadUsuarioDetails(text); // Actualiza el estado solo si es válido\r\n                        }\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"CarnetIdentidad\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailUsuarioDetails}\r\n                      onChangeText={setCorreoEmailUsuarioDetails}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosUsuarioDetils}\r\n                      onChangeText={setDetallesBancariosUsuarioDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: 1000,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Tienda */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Roles</Text>\r\n                    <CustomDropdownDetails\r\n                      value={rolUsuarioDetails}\r\n                      placeholder=\"Roles\"\r\n                      setValue={setRolUsuarioDetails}\r\n                      items={dropdownItemsRolesDetails}\r\n                      readOnly={\r\n                        !(modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico)\r\n                      }\r\n                      searchable={true}\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Rol */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Tiendas</Text>\r\n                    <CustomDropdownDetails\r\n                      value={tiendaUsuarioDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setTiendaUsuarioDetails}\r\n                      items={dropdownItemsTiendasDetails}\r\n                      readOnly={\r\n                        !(modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico)\r\n                      }\r\n                      searchable={true}\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campo de los check bootom */}\r\n                {modalProveedoresDates?.id_proveedor !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        marginTop: \"3%\",\r\n                        color: Colors.negro, // Color del texto\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Acceso al Sistema\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                {modalProveedoresDates?.id_proveedor !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => {\r\n                          if (\r\n                            modalProveedoresDates?.id_proveedor === \"\"\r\n                              ? true\r\n                              : isPermisoModificarProveedor &&\r\n                                isPermisoModificarGerarquico\r\n                          ) {\r\n                            setSelecterActivoDetails(option.value);\r\n                          }\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n                )}\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarProveedor &&\r\n                    isPermisoModificarGerarquico &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos proveedor ${nombreUsuarioDetails}?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al proveedor ${nombreUsuarioDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarProveedor &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewUsuario()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarUsuario()\r\n                      : modificarUsuario()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Usuarios\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {(isPermisoAgregarProveedor ||\r\n            isPermisoModificarProveedor ||\r\n            isPermisoEliminarProveedor) && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Usuario\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre de Usuario:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del proveedor\"\r\n              value={nombreUsuarioSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreUsuarioSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Correo del Usuario:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Correo del Proveedor\"\r\n              value={correoEmyleSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setCorreoEmyleSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Número de Teléfono:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Número de Teléfono\"\r\n              value={telefonoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setTelefonoSearch}\r\n            />\r\n\r\n            <Text style={styles.textSearchDesktop}>Rol:</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                zIndex: capaPrioridadRolesSearsh,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={rolNombreSeleccionadoSearsh}\r\n                placeholder=\"Roles\"\r\n                setValue={setRolNombreSeleccionadoSearsh}\r\n                items={dropdownItemsRolesSearsh}\r\n                direction=\"BOTTOM\"\r\n                onDropdownOpen={() => controlarCapas(\"RolesSearsh\")}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                zIndex: capaPrioridadTiendasSearsh,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={tiendaNombreSeleccionadaSearch}\r\n                placeholder=\"Tiendas\"\r\n                setValue={setTiendaNombreSeleccionadaSearch}\r\n                items={dropdownItemsTiendasSearsh}\r\n                direction=\"BOTTOM\"\r\n                onDropdownOpen={() => controlarCapas(\"TiendasSearsh\")}\r\n              />\r\n            </View>\r\n            <View\r\n              style={{ width: \"100%\", flexDirection: \"row\", marginTop: \"5%\" }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarUsuarios()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableUsuarios\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Usuario\"\r\n                  : \"Agregar Usuario\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={nombreDelUsuarioDetails}\r\n                  onChangeText={setNombreDelUsuarioDetails}\r\n                  placeholder=\"Nombre del usuario\"\r\n                />\r\n\r\n                {/* Nombre Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={nombreUsuarioDetails}\r\n                  onChangeText={setNombreUsuarioDetails}\r\n                  placeholder=\"Nombre usuario\"\r\n                />\r\n\r\n                {/*Contraseña */}\r\n                {(modalProveedoresDates?.id_proveedor === \"\"\r\n                  ? true\r\n                  : parseInt(usuario?.id_rol) === 1) && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {modalProveedoresDates?.id_proveedor === \"\"\r\n                        ? \"Contraseña\"\r\n                        : \"Cambiar Contraseña\"}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                {(modalProveedoresDates?.id_proveedor === \"\"\r\n                  ? true\r\n                  : parseInt(usuario?.id_rol) === 1) && (\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    editable={\r\n                      modalProveedoresDates?.id_proveedor === \"\"\r\n                        ? true\r\n                        : isPermisoModificarProveedor &&\r\n                          isPermisoModificarGerarquico\r\n                    }\r\n                    value={contrasennaUsuarioDetails}\r\n                    onChangeText={setContrasennaUsuarioDetails}\r\n                    placeholder=\"Nueva contraseña del usuario\"\r\n                  />\r\n                )}\r\n\r\n                {/* Dirección del Usuario */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección del Usuario\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={\r\n                    modalProveedoresDates?.id_proveedor === \"\"\r\n                      ? true\r\n                      : isPermisoModificarProveedor &&\r\n                        isPermisoModificarGerarquico\r\n                  }\r\n                  value={direccionUsuarioDetails}\r\n                  onChangeText={setDireccionUsuarioDetails}\r\n                  placeholder=\"Dirección del Usuario    \"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y Carnet de Identidad */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoUsuarioDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtrar solo números del 0 al 9\r\n                        const filteredText = text.replace(/[^0-9]/g, \"\");\r\n                        setTelefonoUsuarioDetails(filteredText);\r\n                      }}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Carnet de Identidad */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Carnet de Identidad\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={CarnetIdentidadUsuarioDetails}\r\n                      onChangeText={(text) => {\r\n                        // Validar que el texto solo contenga números del 1 al 9\r\n                        const regex = /^[0-9]*$/; // Expresión regular para solo permitir números del 1 al 9\r\n\r\n                        // Verificar longitud y si el texto cumple con la expresión regular\r\n                        if (text.length <= 11 && regex.test(text)) {\r\n                          setCarnetIdentidadUsuarioDetails(text); // Actualiza el estado solo si es válido\r\n                        }\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"CarnetIdentidad\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailUsuarioDetails}\r\n                      onChangeText={setCorreoEmailUsuarioDetails}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosUsuarioDetils}\r\n                      onChangeText={setDetallesBancariosUsuarioDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles Salario y null */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo salario_CUP */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Salario diario en CUP\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={salario_CUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setsalario_CUPDetails(validNumericValue)\r\n                      }}\r\n                      editable={\r\n                        modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico\r\n                      }\r\n                      placeholder=\"Salario diario en CUP\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo null */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: 1000,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Tienda */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTiendasSearsh,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Roles</Text>\r\n                    <CustomDropdownDetails\r\n                      value={rolUsuarioDetails}\r\n                      placeholder=\"Roles\"\r\n                      setValue={setRolUsuarioDetails}\r\n                      items={dropdownItemsRolesDetails}\r\n                      readOnly={\r\n                        !(modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico)\r\n                      }\r\n                      searchable={true}\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Rol */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadRolesSearsh,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Tiendas</Text>\r\n                    <CustomDropdownDetails\r\n                      value={tiendaUsuarioDetails}\r\n                      placeholder=\"Tiendas\"\r\n                      setValue={setTiendaUsuarioDetails}\r\n                      items={dropdownItemsTiendasDetails}\r\n                      readOnly={\r\n                        !(modalProveedoresDates?.id_proveedor === \"\"\r\n                          ? true\r\n                          : isPermisoModificarProveedor &&\r\n                            isPermisoModificarGerarquico)\r\n                      }\r\n                      searchable={true}\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campo de los check bootom */}\r\n                {modalProveedoresDates?.id_proveedor !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        marginTop: \"3%\",\r\n                        color: Colors.negro, // Color del texto\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Acceso al Sistema\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                {modalProveedoresDates?.id_proveedor !== \"\" && (\r\n                  <View\r\n                    style={{\r\n                      padding: 20,\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => {\r\n                          if (\r\n                            modalProveedoresDates?.id_proveedor === \"\"\r\n                              ? true\r\n                              : isPermisoModificarProveedor &&\r\n                                isPermisoModificarGerarquico\r\n                          ) {\r\n                            setSelecterActivoDetails(option.value);\r\n                          }\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n                )}\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarProveedor &&\r\n                    isPermisoModificarGerarquico &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos proveedor ${nombreUsuarioDetails}?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarProveedor &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al proveedor ${nombreUsuarioDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarProveedor &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewUsuario()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Usuario\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarUsuario()\r\n                      : modificarUsuario()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Usuarios\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\n\r\nexport interface Tienda {\r\n  id_Tienda: string;\r\n  nombre: string;\r\n  direccion: string;\r\n  comicion: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Tienda[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableTiendasView: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortEntradas, setSortEntradas} = useSortEntradas();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(10);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Tienda[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre Proveedor\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Producto\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Costo Por Unidad\") {\r\n      aux = \"option5\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option6\";\r\n    }\r\n\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Proveedor\" ||\r\n              column === \"Nombre Producto\" ||\r\n              column === \"Costo Por Unidad\" ||\r\n              column === \"Fecha\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortEntradasAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n          <DataTable style={{ width: \"100%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Tienda}\r\n                onPress={() => detailsModalView(item.id_Tienda)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.direccion}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.comicion}%\r\n                  </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Tienda}\r\n                onPress={() => detailsModalView(item.id_Tienda)}\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.direccion}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.comicion}%\r\n                  </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Tiendas\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import React, { forwardRef } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport DateTimePicker from 'react-datepicker';\r\n\r\ninterface CustomDateTimePickerProps {\r\n  selected: Date;\r\n  onChange: (date: Date) => void;\r\n  style: any;\r\n  placeholder?: string;\r\n  editable?: boolean;\r\n  cursorColor?: string;\r\n}\r\n\r\nconst CustomDateTimePicker = forwardRef<DateTimePicker, CustomDateTimePickerProps>(\r\n  (\r\n    {\r\n      selected,\r\n      onChange,\r\n      style,\r\n      placeholder,\r\n      editable,\r\n      cursorColor,\r\n    },\r\n    ref\r\n  ) => {\r\n    return (\r\n      <View style={style}>\r\n        <DateTimePicker\r\n          ref={ref}\r\n          selected={selected}\r\n          onChange={onChange}\r\n          showTimeSelect\r\n          showTimeSelectOnly\r\n          timeIntervals={15}\r\n          timeCaption=\"Hora\"\r\n          dateFormat=\"h:mm aa\"\r\n          placeholderText={placeholder}\r\n          editable={editable}\r\n          cursorColor={cursorColor}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n);\r\n\r\nexport default CustomDateTimePicker;","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  addTienda,\r\n  deleteTienda,\r\n  getAllTiendas,\r\n  getTiendaById,\r\n  isProductoInTienda,\r\n  updateTienda,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  MyDateTableTiendasView,\r\n  Tienda,\r\n} from \"../components/MyDateTableTiendasView\";\r\nimport CustomDateTimePicker from \"../components/CustomDateTimePiker\";\r\n\r\nexport default function TiendasView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  const crearHora = (hora: number, minutos: number) => {\r\n    return new Date(\r\n      new Date().getFullYear(),\r\n      new Date().getMonth(),\r\n      new Date().getDate(),\r\n      hora,\r\n      minutos,\r\n      0\r\n    );\r\n  };\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortEntradas, setSortEntradas } = useSortEntradas();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [nombreTiendaDetails, setNombreTiendaDetails] = useState(\"\");\r\n  const [direccionTiendaDetails, setDireccionTiendaDetails] = useState(\"\");\r\n  const [comicionTiendaDetails, setComicionTiendaDetails] = useState(\"0%\");\r\n  const [horaApertura, setHoraApertura] = React.useState(crearHora(9, 0));\r\n  const [horaCierre, setHoraCierre] = React.useState(crearHora(16, 0));\r\n  const nombreProductoRef = useRef(null);\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarEntrada, setIsPermisoAgregarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarEntrada, setIsPermisoEliminarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoModificarEntrada, setIsPermisoModificarEntrada] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      setIsPermisoAgregarEntrada(parseInt(usuario.id_rol) === 1);\r\n      setIsPermisoEliminarEntrada(parseInt(usuario.id_rol) === 1);\r\n      setIsPermisoModificarEntrada(parseInt(usuario.id_rol) === 1);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Tienda[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreProveedor, setDropDownItemsNombreProveedor] =\r\n    useState<ProveedorPiker[]>([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProveedorSearch, setNombreProveedorSearch] = useState(\"\");\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [costoDesdeSearch, setCostoDesdeSearch] = useState(\"\");\r\n  const [costoHastaSearch, setCostohastaSearch] = useState(\"\");\r\n  const [fechaDesdeSearch, setFechaDesdeSearch] = useState(new Date());\r\n  const [fechaHastaSearch, setFechaHastaSearch] = useState(new Date());\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2000\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getProveedoresPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProveedores(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_proveedor,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProveedor(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setNombreTiendaDetails(\"\");\r\n    setDireccionTiendaDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfTienda = async () => {\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getTiendaById(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Actualizamos los detalles\r\n        setIdTiendaDetails(result.id_tienda);\r\n        setNombreTiendaDetails(result.nombre);\r\n        setDireccionTiendaDetails(result.direccion);\r\n        setComicionTiendaDetails(`${result.comicion}%`);\r\n\r\n        // Actualizamos las horas de apertura y cierre\r\n        const horaApertura = new Date();\r\n        horaApertura.setHours(parseInt(result.hora_apertura.split(\":\")[0]));\r\n        horaApertura.setMinutes(parseInt(result.hora_apertura.split(\":\")[1]));\r\n        horaApertura.setSeconds(parseInt(result.hora_apertura.split(\":\")[2]));\r\n        setHoraApertura(horaApertura);\r\n\r\n        const horaCierre = new Date();\r\n        horaCierre.setHours(parseInt(result.hora_cierre.split(\":\")[0]));\r\n        horaCierre.setMinutes(parseInt(result.hora_cierre.split(\":\")[1]));\r\n        horaCierre.setSeconds(parseInt(result.hora_cierre.split(\":\")[2]));\r\n        setHoraCierre(horaCierre);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<Tienda[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarEntrada(\r\n          usuario.token,\r\n          nombreProveedorSearch,\r\n          nombreProductoSearch,\r\n          costoDesdeSearch,\r\n          costoHastaSearch,\r\n          `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n          `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Tienda[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Entrada: element.id_entrada,\r\n              id_Proveedor: element.proveedor.id_proveedor,\r\n              id_Producto: element.producto.id_producto,\r\n              nombre_Proveedor: element.proveedor.nombre,\r\n              nombre_Producto: element.producto.nombre,\r\n              cantidad: element.cantidad,\r\n              costo: element.costo,\r\n              fecha: element.fecha,\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfTienda();\r\n  }, [modalEntradasDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodasLasTiendas = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllTiendas(usuario.token);\r\n\r\n        if (result && Array.isArray(result.data)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const TiendasMapeados: Tienda[] = await Promise.all(\r\n            result.data.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Tienda: element.id_tienda,\r\n                nombre: element.nombre,\r\n                direccion: element.direccion,\r\n                comicion: element.comicion\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(TiendasMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron entradas.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener las entradas o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de las entradas\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodasLasTiendas();\r\n        getProveedoresPikerDetails();\r\n        getProductosPikerDetails();\r\n        getTiendasPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarEntradas = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let EntradasFiltradas: Tienda[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        /*\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortEntradas?.criterioOrden && sortEntradas.tipoOrden) {\r\n          EntradasFiltradas = await ordenarEntradas(\r\n            usuario.token,\r\n            EntradasFiltradas,\r\n            sortEntradas.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n        */\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(EntradasFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setNombreTiendaDetails(\"\");\r\n    setDireccionTiendaDetails(\"\");\r\n    setIdTiendaDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarEntradas();\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProveedorSearch(\"\");\r\n    setNombreProductoSearch(\"\");\r\n    setCostoDesdeSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewTienda = async () => {\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR TIENDA. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (nombreTiendaDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombre de la tienda no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (horaApertura.getTime() > horaCierre.getTime()) {\r\n        validarCampos +=\r\n          \"-La hora de apertura no puede ser más tarde que la hora de cierre.\\n\";\r\n        flag = false;\r\n      }\r\n      if (comicionTiendaDetails.includes(\"%\")) {\r\n        const partes = comicionTiendaDetails.split(\"%\");\r\n        if (partes[0].trim() === \"\") {\r\n          // No hay nada a la izquierda del %\r\n          validarCampos += \"-La comición no puede ser vacío.\\n\";\r\n          flag = false;\r\n        }\r\n      } else {\r\n        // No hay % en la cadena\r\n        validarCampos += \"-Deve poner el % a la derecha de la comición.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (flag) {\r\n        await addTienda(\r\n          usuario.token,\r\n          nombreTiendaDetails,\r\n          direccionTiendaDetails,\r\n          comicionTiendaDetails.split(\"%\")[0],\r\n          horaApertura.toLocaleTimeString(),\r\n          horaCierre.toLocaleTimeString()\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó la tienda ${nombreTiendaDetails}.`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          6\r\n        );\r\n\r\n        setModalMensaje(`La tienda fue insertada con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreTiendaDetails(\"\");\r\n        setDireccionTiendaDetails(\"\");\r\n        setIdTiendaDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR TIENDA. Compruebe los siguientes campos:\\n\";\r\n\r\n      if (nombreTiendaDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombre de la tienda no puede ser vacío.\\n\";\r\n        flag = false;\r\n      }\r\n      if (horaApertura.getTime() > horaCierre.getTime()) {\r\n        validarCampos +=\r\n          \"-La hora de apertura no puede ser más tarde que la hora de cierre.\\n\";\r\n        flag = false;\r\n      }\r\n      if (comicionTiendaDetails.includes(\"%\")) {\r\n        const partes = comicionTiendaDetails.split(\"%\");\r\n        if (partes[0].trim() === \"\") {\r\n          // No hay nada a la izquierda del %\r\n          validarCampos += \"-La comición no puede ser vacío.\\n\";\r\n          flag = false;\r\n        }\r\n      } else {\r\n        // No hay % en la cadena\r\n        validarCampos += \"-Deve poner el % a la derecha de la comición.\\n\";\r\n        flag = false;\r\n      }\r\n\r\n      if (flag) {\r\n        await updateTienda(\r\n          usuario.token,\r\n          idTiendaDetails,\r\n          nombreTiendaDetails,\r\n          direccionTiendaDetails,\r\n          comicionTiendaDetails.split(\"%\")[0],\r\n          horaApertura.toLocaleTimeString(),\r\n          horaCierre.toLocaleTimeString()\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó la tienda ${nombreTiendaDetails}.`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          6\r\n        );\r\n\r\n        setModalMensaje(`La tienda se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreTiendaDetails(\"\");\r\n        setDireccionTiendaDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(false);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR ENTRADA. Compruebe los siguientes parámetros:\\n\";\r\n\r\n      if (flag) {\r\n        const result = await deleteTienda(usuario.token, idTiendaDetails);\r\n\r\n        if (result) {\r\n          // Agregar Acción de usuario agregar proveedor\r\n\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la tienda ${nombreTiendaDetails}.`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            6\r\n          );\r\n\r\n          setModalMensaje(`La tienda se eliminó con éxito`);\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(true);\r\n          setNombreTiendaDetails(\"\");\r\n          setDireccionTiendaDetails(\"\");\r\n        } else {\r\n          validarCampos += \"-Ya se han echo operaciones en la tienda.\\n\";\r\n          setModalMensaje(validarCampos);\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(false);\r\n        }\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\"Nombre\", \"Dirección\", \"Comición\"];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\",];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\"Nombre\", \"Dirección\", , \"Comición\"];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarEntrada && (\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                setModalEntradasDates({\r\n                  id_entrada: \"\",\r\n                  isAddEntrada: true,\r\n                  fileEditable: true,\r\n                  isModificarEntrada: false,\r\n                })\r\n              }\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Tienda</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableTiendasView\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre de la tienda */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={true}\r\n                  value={nombreTiendaDetails}\r\n                  onChangeText={setNombreTiendaDetails}\r\n                  placeholder=\"Nombre de la tienda\"\r\n                />\r\n\r\n                {/* Dirección */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={true}\r\n                  value={direccionTiendaDetails}\r\n                  onChangeText={setDireccionTiendaDetails}\r\n                  placeholder=\"Dirección de la tienda\"\r\n                />\r\n\r\n                {/* Comición */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Comición de los trabajadores en %\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={true}\r\n                  value={comicionTiendaDetails}\r\n                  onChangeText={(text) => {\r\n                    // Permite solo números y un punto decimal\r\n                    const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                    // Asegura que solo haya un punto decimal\r\n                    const validNumericValue =\r\n                      numericValue.split(\".\").length > 2\r\n                        ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                        : numericValue;\r\n\r\n                    // Verifica si el valor numérico es mayor que 100\r\n                    if (parseFloat(validNumericValue) > 100) {\r\n                      return;\r\n                    }\r\n\r\n                    // Agrega el símbolo de porcentaje (%) al final del texto\r\n                    const formattedValue = `${validNumericValue}%`;\r\n\r\n                    // Verifica si el usuario está intentando borrar el símbolo de porcentaje (%)\r\n                    if (text.length < comicionTiendaDetails.length) {\r\n                      const newValue = comicionTiendaDetails.slice(0, -1);\r\n                      setComicionTiendaDetails(newValue);\r\n                    } else {\r\n                      setComicionTiendaDetails(formattedValue);\r\n                    }\r\n                  }}\r\n                  placeholder=\"Comición de los trabajadores en %\"\r\n                />\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo Hora apertura */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"5%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Apertura</Text>\r\n                    <CustomDateTimePicker\r\n                      selected={horaApertura}\r\n                      onChange={setHoraApertura}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: 40,\r\n                        paddingHorizontal: 10,\r\n                        paddingVertical: 5,\r\n                        borderRadius: 5,\r\n                        backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n                        borderColor: \"rgba(0, 0, 0, 0.2)\",\r\n                        borderWidth: 1,\r\n                        shadowColor: \"rgba(0, 0, 0, 0.2)\",\r\n                        shadowOffset: { width: 0, height: 2 },\r\n                        shadowOpacity: 0.5,\r\n                        shadowRadius: 2,\r\n                      }}\r\n                      placeholder=\"Selecciona una hora\"\r\n                      editable={true}\r\n                      cursorColor=\"rgba(0, 0, 0, 0.8)\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Hora cierre */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginRight: \"5%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Cierre</Text>\r\n                    <CustomDateTimePicker\r\n                      selected={horaCierre}\r\n                      onChange={setHoraCierre}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: 40,\r\n                        paddingHorizontal: 10,\r\n                        paddingVertical: 5,\r\n                        borderRadius: 5,\r\n                        backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n                        borderColor: \"rgba(0, 0, 0, 0.2)\",\r\n                        borderWidth: 1,\r\n                        shadowColor: \"rgba(0, 0, 0, 0.2)\",\r\n                        shadowOffset: { width: 0, height: 2 },\r\n                        shadowOpacity: 0.5,\r\n                        shadowRadius: 2,\r\n                      }}\r\n                      placeholder=\"Selecciona una hora\"\r\n                      editable={true}\r\n                      cursorColor=\"rgba(0, 0, 0, 0.8)\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {modalEntradasDates?.id_entrada !== \"\" && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        marginLeft: \"5%\",\r\n                        shadowColor: \"#000\",\r\n                        shadowOffset: { width: 3, height: 4 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        marginTop: \"3%\", // Margen adicional entre botones\r\n                      }}\r\n                      onPress={() => {\r\n                        setIsModalChekVisible(true);\r\n                        setIsModalChekEliminarEntrada(false);\r\n                        setMesajeModalChek(\r\n                          `¿Estás seguro que deseas MODIFICAR los datos de esta tienda?`\r\n                        );\r\n                        setModalEntradasDates({\r\n                          id_entrada: \"\",\r\n                          isAddEntrada: false,\r\n                          isModificarEntrada: false,\r\n                          fileEditable: true,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Modificar Tienda\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {modalEntradasDates?.id_entrada === \"\" && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        borderRadius: 15,\r\n                        width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: \"#000\",\r\n                        marginLeft: \"5%\",\r\n                        shadowOffset: { width: 3, height: 4 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        marginTop: \"3%\", // Margen adicional entre botones\r\n                      }}\r\n                      onPress={() => addNewTienda()}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Agregar Tienda\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {modalEntradasDates?.id_entrada !== \"\" && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: \"#000\",\r\n                        marginRight: \"5%\",\r\n                        shadowOffset: { width: 3, height: 4 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        marginTop: \"3%\", // Margen adicional entre botones\r\n                      }}\r\n                      onPress={() => {\r\n                        setIsModalChekVisible(true);\r\n                        setIsModalChekEliminarEntrada(true);\r\n                        setMesajeModalChek(\r\n                          `¿Estás seguro que deseas ELIMINAR al esta tienda?`\r\n                        );\r\n                        setModalEntradasDates({\r\n                          id_entrada: \"\",\r\n                          isAddEntrada: false,\r\n                          isModificarEntrada: false,\r\n                          fileEditable: true,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Eliminar Tienda\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarEntradaFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Tiendas\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarEntrada && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Tienda\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          ></LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableTiendasView\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Tienda\"\r\n                  : \"Datos de la Tienda\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre de la tienda */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={true}\r\n                  value={nombreTiendaDetails}\r\n                  onChangeText={setNombreTiendaDetails}\r\n                  placeholder=\"Nombre de la tienda\"\r\n                />\r\n\r\n                {/* Dirección */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Dirección de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={true}\r\n                  value={direccionTiendaDetails}\r\n                  onChangeText={setDireccionTiendaDetails}\r\n                  placeholder=\"Dirección de la tienda\"\r\n                />\r\n\r\n                {/* Comición */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Comición de los trabajadores en %\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  ref={nombreProductoRef}\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={true}\r\n                  value={comicionTiendaDetails}\r\n                  onChangeText={(text) => {\r\n                    // Permite solo números y un punto decimal\r\n                    const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                    // Asegura que solo haya un punto decimal\r\n                    const validNumericValue =\r\n                      numericValue.split(\".\").length > 2\r\n                        ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                        : numericValue;\r\n\r\n                    // Verifica si el valor numérico es mayor que 100\r\n                    if (parseFloat(validNumericValue) > 100) {\r\n                      return;\r\n                    }\r\n\r\n                    // Agrega el símbolo de porcentaje (%) al final del texto\r\n                    const formattedValue = `${validNumericValue}%`;\r\n\r\n                    // Verifica si el usuario está intentando borrar el símbolo de porcentaje (%)\r\n                    if (text.length < comicionTiendaDetails.length) {\r\n                      const newValue = comicionTiendaDetails.slice(0, -1);\r\n                      setComicionTiendaDetails(newValue);\r\n                    } else {\r\n                      setComicionTiendaDetails(formattedValue);\r\n                    }\r\n                  }}\r\n                  placeholder=\"Comición de los trabajadores en %\"\r\n                />\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo Hora apertura */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"5%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Apertura</Text>\r\n                    <CustomDateTimePicker\r\n                      selected={horaApertura}\r\n                      onChange={setHoraApertura}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: 40,\r\n                        paddingHorizontal: 10,\r\n                        paddingVertical: 5,\r\n                        borderRadius: 5,\r\n                        backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n                        borderColor: \"rgba(0, 0, 0, 0.2)\",\r\n                        borderWidth: 1,\r\n                        shadowColor: \"rgba(0, 0, 0, 0.2)\",\r\n                        shadowOffset: { width: 0, height: 2 },\r\n                        shadowOpacity: 0.5,\r\n                        shadowRadius: 2,\r\n                      }}\r\n                      placeholder=\"Selecciona una hora\"\r\n                      editable={true}\r\n                      cursorColor=\"rgba(0, 0, 0, 0.8)\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Hora cierre */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginRight: \"5%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Cierre</Text>\r\n                    <CustomDateTimePicker\r\n                      selected={horaCierre}\r\n                      onChange={setHoraCierre}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: 40,\r\n                        paddingHorizontal: 10,\r\n                        paddingVertical: 5,\r\n                        borderRadius: 5,\r\n                        backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n                        borderColor: \"rgba(0, 0, 0, 0.2)\",\r\n                        borderWidth: 1,\r\n                        shadowColor: \"rgba(0, 0, 0, 0.2)\",\r\n                        shadowOffset: { width: 0, height: 2 },\r\n                        shadowOpacity: 0.5,\r\n                        shadowRadius: 2,\r\n                      }}\r\n                      placeholder=\"Selecciona una hora\"\r\n                      editable={true}\r\n                      cursorColor=\"rgba(0, 0, 0, 0.8)\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {modalEntradasDates?.id_entrada !== \"\" && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        marginLeft: \"5%\",\r\n                        shadowColor: \"#000\",\r\n                        shadowOffset: { width: 3, height: 4 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        marginTop: \"3%\", // Margen adicional entre botones\r\n                      }}\r\n                      onPress={() => {\r\n                        setIsModalChekVisible(true);\r\n                        setIsModalChekEliminarEntrada(false);\r\n                        setMesajeModalChek(\r\n                          `¿Estás seguro que deseas MODIFICAR los datos de esta tienda?`\r\n                        );\r\n                        setModalEntradasDates({\r\n                          id_entrada: \"\",\r\n                          isAddEntrada: false,\r\n                          isModificarEntrada: false,\r\n                          fileEditable: true,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Modificar Tienda\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {modalEntradasDates?.id_entrada === \"\" && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        borderRadius: 15,\r\n                        width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: \"#000\",\r\n                        marginLeft: \"5%\",\r\n                        shadowOffset: { width: 3, height: 4 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        marginTop: \"3%\", // Margen adicional entre botones\r\n                      }}\r\n                      onPress={() => addNewTienda()}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Agregar Tienda\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {modalEntradasDates?.id_entrada !== \"\" && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: \"#000\",\r\n                        marginRight: \"5%\",\r\n                        shadowOffset: { width: 3, height: 4 },\r\n                        shadowOpacity: 0.3,\r\n                        shadowRadius: 5,\r\n                        marginTop: \"3%\", // Margen adicional entre botones\r\n                      }}\r\n                      onPress={() => {\r\n                        setIsModalChekVisible(true);\r\n                        setIsModalChekEliminarEntrada(true);\r\n                        setMesajeModalChek(\r\n                          `¿Estás seguro que deseas ELIMINAR al esta tienda?`\r\n                        );\r\n                        setModalEntradasDates({\r\n                          id_entrada: \"\",\r\n                          isAddEntrada: false,\r\n                          isModificarEntrada: false,\r\n                          fileEditable: true,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Eliminar Tienda\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarEntradaFunction()\r\n                      : modificarEntradaFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Tiendas\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Accion } from '../components/MyDateTableAcciones';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortAcciones {\r\n  items: Accion[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortAccionesContextType {\r\n  sortAcciones: SortAcciones | null;\r\n  setSortAcciones: (sortEntradas: SortAcciones | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortAccionesContext = createContext<SortAccionesContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortAccionesProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortAcciones, setSortAcciones] = useState<SortAcciones | null>(null);\r\n\r\n  return (\r\n    <SortAccionesContext.Provider value={{ sortAcciones: sortAcciones, setSortAcciones: setSortAcciones }}>\r\n      {children}\r\n    </SortAccionesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortAcciones = () => {\r\n  const context = React.useContext(SortAccionesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortAcciones debe usarse dentro de un SortAcciones');\r\n  }\r\n  return context;\r\n};","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { useSortAcciones } from \"../contexts/AuxiliarSortAcciones\";\r\n\r\nexport interface Accion {\r\n  id_Accion: string;\r\n  id_Usuario: string;\r\n  nombre_Usuario: string;\r\n  descripcion: string;\r\n  fecha: string;\r\n  id_TipoAccion: string;\r\n  nombre_TipoAccion: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Accion[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableAcciones: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortAcciones, setSortAcciones} = useSortAcciones();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(10);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Accion[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre Usuario\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option4\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortAcciones({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Usuario\" ||\r\n              column === \"Fecha\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortEntradasAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Usuario !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Accion}\r\n                onPress={() => detailsModalView(item.id_Accion)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.descripcion}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombre_TipoAccion}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Accion}\r\n                onPress={() => detailsModalView(item.id_Accion)}\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Usuario}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.descripcion}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.nombre_TipoAccion}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getAllTiendas, isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport {\r\n  addAccionUsuario,\r\n  filtrarAcciones,\r\n  getAccionByID,\r\n  getAllAcciones,\r\n  getAllTiposAccion,\r\n  ordenarAcciones,\r\n} from \"../services/AccionesUsuarioServices\";\r\nimport { Accion, MyDateTableAcciones } from \"../components/MyDateTableAcciones\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport { useSortAcciones } from \"../contexts/AuxiliarSortAcciones\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\n\r\nexport default function AccionesView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTipoAccionSearsh, setCapaPrioridadTipoAccionSearsh] =\r\n    useState(500);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTipoAccionSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n      setCapaPrioridadTipoAccionSearsh(1500);\r\n    } else if (prioridad === \"TipoAccionSearch\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTipoAccionSearsh(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortAcciones, setSortAcciones } = useSortAcciones();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idAccionDetails, setIdAccionDetails] = useState(\"\");\r\n  const [idUsuarioAccionDetails, setIdUsuarioAccionDetails] = useState(\"\");\r\n  const [idTipoAccionDetails, setTipoAccionDetails] = useState(\"\");\r\n  const [nombreUsuarioAccionDetails, setNombreUsuarioAccionDetails] =\r\n    useState(\"\");\r\n  const [nombreTipoAccionDetails, setNombreTipoAccionDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarEntrada, setIsPermisoAgregarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarEntrada, setIsPermisoEliminarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoModificarEntrada, setIsPermisoModificarEntrada] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarEntrada = await isPermiso(\r\n        usuario.token,\r\n        \"10\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultEliminarEntrada = await isPermiso(\r\n        usuario.token,\r\n        \"12\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarEntrada = await isPermiso(\r\n        usuario.token,\r\n        \"11\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      setIsPermisoAgregarEntrada(resultAgregarEntrada);\r\n      setIsPermisoEliminarEntrada(resultEliminarEntrada);\r\n      setIsPermisoModificarEntrada(resultModificarEntrada);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Accion[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreProveedor, setDropDownItemsNombreProveedor] =\r\n    useState<ProveedorPiker[]>([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreUsuarioSearch, setNombreUsuarioSearch] = useState(\"\");\r\n  const [descripcionSearch, setDescripcionSearch] = useState(\"\");\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2024\");\r\n  const [selectedValueNombreTipoAccion, setSelectedValueNombreTipoAccion] =\r\n    useState<string | null>(null);\r\n  const [dropdownItemsTipoAccion, setDropDownItemsTipoAccion] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n\r\n  const options = [\r\n    { label: \"Día\", value: \"dia\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n    { label: \"Mes\", value: \"mes\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"dia\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 6);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else if (value === \"mes\") {\r\n      // Restar 1 mes a la fecha actual\r\n      const lastMonthDate = new Date(currentDate);\r\n      lastMonthDate.setMonth(currentDate.getMonth() - 1);\r\n      const monthYear = String(lastMonthDate.getFullYear());\r\n      const monthMonth = String(lastMonthDate.getMonth() + 1).padStart(2, \"0\");\r\n      const monthDay = String(lastMonthDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${monthYear}-${monthMonth}-${monthDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarAcciones(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdUsuarioAccionDetails(\"\");\r\n    setNombreUsuarioAccionDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfAccion = async () => {\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getAccionByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        /*\r\n        const [idAccionDetails, setIdAccionDetails] = useState(\"\");\r\n  const [idUsuarioAccionDetails, setIdUsuarioAccionDetails] = useState(\"\");\r\n  const [idTipoAccionDetails, setTipoAccionDetails] = useState(\"\");\r\n  const [nombreUsuarioAccionDetails, setNombreUsuarioAccionDetails] = useState(\"\");\r\n  const [nombreTipoAccionDetails, setNombreTipoAccionDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [costoDetails, setCostoDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n        */\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.fecha.split(\"T\")[0].split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdAccionDetails(result.id_accion);\r\n        setIdUsuarioAccionDetails(result.usuario.id_usuario);\r\n        setTipoAccionDetails(result.tipo_accion.id_tipo_accion);\r\n        setNombreUsuarioAccionDetails(result.usuario.nombre);\r\n        setDescripcionDetails(result.descripcion);\r\n        setNombreTipoAccionDetails(result.tipo_accion.nombre);\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares\r\n        setIdProductoAuxModificarDetails(result.producto.id_producto);\r\n        setIdTiendaAuxModificarDetails(result.tienda.id_tienda);\r\n        setCantidadAuxModificarDetails(result.cantidad);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Accion[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarAcciones(\r\n          usuario.token,\r\n          selectedValueNombreTipoAccion ?? \"\",\r\n          nombreUsuarioSearch,\r\n          descripcionSearch,\r\n          fechaDesde,\r\n          fechaHasta\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Accion[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Accion: element.id_accion,\r\n              id_Usuario: element.usuario.id_usuario,\r\n              nombre_Usuario: element.usuario.nombre_usuario,\r\n              descripcion: element.descripcion,\r\n              fecha: element.fecha,\r\n              id_TipoAccion: element.tipo_accion.id_tipo_accion,\r\n              nombre_TipoAccion: element.tipo_accion.nombre,\r\n            }))\r\n          );\r\n\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los acciones:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfAccion();\r\n  }, [modalEntradasDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodasLasAcciones = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllAcciones(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: Accion[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Accion: element.id_accion,\r\n                id_Usuario: element.usuario.id_usuario,\r\n                nombre_Usuario: element.usuario.nombre_usuario,\r\n                descripcion: element.descripcion,\r\n                fecha: element.fecha,\r\n                id_TipoAccion: element.tipo_accion.id_tipo_accion,\r\n                nombre_TipoAccion: element.tipo_accion.nombre,\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron entradas.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener las entradas o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de las entradas\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const getDatesTipoAccionPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiposAccion(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const TipoAccionMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tipo_accion,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsTipoAccion([\r\n          { label: \"Todos los tipos de acción\", value: \"\" },\r\n          ...TipoAccionMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await getDatesTipoAccionPiker();\r\n        getProductosPikerDetails();\r\n        getTiendasPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarAcciones = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let AccionesFiltradas: Accion[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortAcciones?.criterioOrden && sortAcciones.tipoOrden) {\r\n          AccionesFiltradas = await ordenarAcciones(\r\n            usuario.token,\r\n            AccionesFiltradas,\r\n            sortAcciones.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }else{\r\n          AccionesFiltradas = await ordenarAcciones(\r\n            usuario.token,\r\n            AccionesFiltradas,\r\n            \"option4\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(AccionesFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarAcciones(\r\n      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n    );\r\n  }, [\r\n    sortAcciones,\r\n  ]);\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    setSelecterActivoDetails(\"\");\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ]);\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarAcciones(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreUsuarioSearch(\"\");\r\n    setDescripcionSearch(\"\");\r\n    setSelectedValueNombreTipoAccion(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n  /*\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewEntrada = async () => {\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR ENTRADA. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (idUsuarioAccionDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (nombreUsuarioAccionDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo del producto por unidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await addEntrada(\r\n          usuario.token,\r\n          costoDetails,\r\n          nombreUsuarioAccionDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          parseInt(idUsuarioAccionDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails)\r\n        );\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(nombreUsuarioAccionDetails)\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó una entrada de ${nombreUsuarioAccionDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        await createProductoInTienda(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          idTiendaDetails\r\n        );\r\n        setModalMensaje(`La entrada fue insertado con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdUsuarioAccionDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setIdTiendaDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setNombreUsuarioAccionDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR ENTRADA. Compruebe los siguientes campos:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      const resultViejo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaAuxModificarDetails\r\n      );\r\n\r\n      if (\r\n        idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n        idProductoAuxModificarDetails !== idProductoDetails\r\n      ) {\r\n        if (\r\n          parseInt(resultViejo.cantidad ?? 0) -\r\n            parseInt(cantidadAuxModificarDetails) <\r\n          0\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Operación inválida. No se dispone de sificientes productos para realizar la operoción.\";\r\n        }\r\n      }\r\n      if (\r\n        parseInt(cantidadAuxModificarDetails) - parseInt(nombreUsuarioAccionDetails) >\r\n        parseInt(resultNuevo.cantidad ?? 0)\r\n      ) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n      if (idUsuarioAccionDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (nombreUsuarioAccionDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo del producto por unidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await modificarEntrada(\r\n          usuario.token,\r\n          idAccionDetails,\r\n          costoDetails,\r\n          nombreUsuarioAccionDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          parseInt(idUsuarioAccionDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails)\r\n        );\r\n\r\n        if (\r\n          idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n          idProductoAuxModificarDetails !== idProductoDetails\r\n        ) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaAuxModificarDetails),\r\n            parseInt(idProductoAuxModificarDetails),\r\n            parseInt(cantidadAuxModificarDetails) * -1\r\n          );\r\n\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(nombreUsuarioAccionDetails)\r\n          );\r\n        } else if (cantidadAuxModificarDetails !== nombreUsuarioAccionDetails) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(nombreUsuarioAccionDetails) - parseInt(cantidadAuxModificarDetails)\r\n          );\r\n        }\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó una entrada de originalmente ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setModalMensaje(`La entrada se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdUsuarioAccionDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setNombreUsuarioAccionDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR ENTRADA. Compruebe los siguientes parámetros:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n\r\n      if (parseInt(nombreUsuarioAccionDetails) > parseInt(resultNuevo.cantidad ?? 0)) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n\r\n      if (flag) {\r\n        await deleteEntrada(usuario.token, idAccionDetails);\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(nombreUsuarioAccionDetails) * -1\r\n        );\r\n\r\n        // Actualizar productos en 0 en productoTienda\r\n        await deleteFromProductoTiendaIn_0(usuario.token);\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la entrada con una cantidad de ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setModalMensaje(`La entrada se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdUsuarioAccionDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setNombreUsuarioAccionDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  */\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre Usuario\",\r\n    \"Descripción\",\r\n    \"Tipo de Acción\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre Usuario\",\r\n    \"Descripción\",\r\n    \"Tipo de Acción\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableAcciones\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>Nombre Usuario:</Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre usuario\"\r\n                    value={nombreUsuarioSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreUsuarioSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Descripción:</Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Descripción\"\r\n                    value={descripcionSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setDescripcionSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Tipo de Acción:</Text>\r\n                  <View\r\n                    style={{\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoAccionSearsh,\r\n                      height: 100,\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={selectedValueNombreTipoAccion}\r\n                      placeholder=\"Tipo de acción\"\r\n                      setValue={setSelectedValueNombreTipoAccion}\r\n                      items={dropdownItemsTipoAccion}\r\n                      onDropdownOpen={() => controlarCapas(\"TipoAccionSearch\")}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 1800,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaDesdeSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaHastaSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() =>\r\n                          filtrarYOrdenarAcciones(\r\n                            `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                            `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                          )\r\n                        }\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\"\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Usuario */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Usuario\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={nombreUsuarioAccionDetails}\r\n                    onChangeText={(text) => setNombreUsuarioAccionDetails(text)}\r\n                    editable={false}\r\n                    placeholder=\"Nombre Usuario\"\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la Tipo Accion y Fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Tipo Accion */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo Acción\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={nombreTipoAccionDetails}\r\n                      onChangeText={(text) => setNombreTipoAccionDetails(text)}\r\n                      editable={false}\r\n                      placeholder=\"Tipo accion\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Fecha */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={`${fechaAnnoDetails}-${fechaMesDetails}-${fechaDiaDetails}`}\r\n                      onChangeText={(text) => {}}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={false}\r\n                      placeholder=\"fecha\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={false}\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                {false && (\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"flex-end\",\r\n                      width: \"100%\",\r\n                      justifyContent: \"space-between\",\r\n                      marginTop: 20, // Espacio superior adicional\r\n                    }}\r\n                  >\r\n                    {/* Botón para modificar proveedor */}\r\n                    {isPermisoModificarEntrada &&\r\n                      modalEntradasDates?.id_entrada !== \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.azul_Oscuro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            marginLeft: \"5%\",\r\n                            shadowColor: \"#000\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => {\r\n                            setIsModalChekVisible(true);\r\n                            setIsModalChekEliminarEntrada(false);\r\n                            setMesajeModalChek(\r\n                              `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                            );\r\n                            setModalEntradasDates({\r\n                              id_entrada: \"\",\r\n                              isAddEntrada: false,\r\n                              isModificarEntrada: false,\r\n                              fileEditable: true,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Modificar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n\r\n                    {/* Botón para agregar proveedor */}\r\n                    {isPermisoAgregarEntrada &&\r\n                      modalEntradasDates?.id_entrada === \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.azul_Claro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            shadowColor: \"#000\",\r\n                            marginLeft: \"5%\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => addNewEntrada()}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Agregar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                    {/* Botón para eliminar proveedor */}\r\n                    {isPermisoEliminarEntrada &&\r\n                      modalEntradasDates?.id_entrada !== \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.rojo_oscuro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            shadowColor: \"#000\",\r\n                            marginRight: \"5%\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => {\r\n                            setIsModalChekVisible(true);\r\n                            setIsModalChekEliminarEntrada(true);\r\n                            setMesajeModalChek(\r\n                              `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                            );\r\n                            setModalEntradasDates({\r\n                              id_entrada: \"\",\r\n                              isAddEntrada: false,\r\n                              isModificarEntrada: false,\r\n                              fileEditable: true,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Eliminar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                  </View>\r\n                )}\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarEntradaFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Entradas\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre Usuario:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre usuario\"\r\n              value={nombreUsuarioSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreUsuarioSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Descripción:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Descripción\"\r\n              value={descripcionSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setDescripcionSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Tipo de Acción:</Text>\r\n            <View\r\n              style={{\r\n                position: \"relative\",\r\n                zIndex: capaPrioridadTipoAccionSearsh,\r\n                height: 100,\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={selectedValueNombreTipoAccion}\r\n                placeholder=\"Tipo de acción\"\r\n                setValue={setSelectedValueNombreTipoAccion}\r\n                items={dropdownItemsTipoAccion}\r\n                onDropdownOpen={() => controlarCapas(\"TipoAccionSearch\")}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1800,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() =>\r\n                    filtrarYOrdenarAcciones(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    )\r\n                  }\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableAcciones\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\"\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                Datos de la Acción\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Usuario */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Usuario\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    value={nombreUsuarioAccionDetails}\r\n                    onChangeText={(text) => setNombreUsuarioAccionDetails(text)}\r\n                    editable={false}\r\n                    placeholder=\"Nombre Usuario\"\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la Tipo Accion y Fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Tipo Accion */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo Acción\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={nombreTipoAccionDetails}\r\n                      onChangeText={(text) => setNombreTipoAccionDetails(text)}\r\n                      editable={false}\r\n                      placeholder=\"Tipo accion\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Fecha */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={`${fechaAnnoDetails}-${fechaMesDetails}-${fechaDiaDetails}`}\r\n                      onChangeText={(text) => {}}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={false}\r\n                      placeholder=\"fecha\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del producto\"\r\n                  multiline={true}\r\n                  editable={false}\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                {false && (\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"flex-end\",\r\n                      width: \"100%\",\r\n                      justifyContent: \"space-between\",\r\n                      marginTop: 20, // Espacio superior adicional\r\n                    }}\r\n                  >\r\n                    {/* Botón para modificar proveedor */}\r\n                    {isPermisoModificarEntrada &&\r\n                      modalEntradasDates?.id_entrada !== \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.azul_Oscuro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            marginLeft: \"5%\",\r\n                            shadowColor: \"#000\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => {\r\n                            setIsModalChekVisible(true);\r\n                            setIsModalChekEliminarEntrada(false);\r\n                            setMesajeModalChek(\r\n                              `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                            );\r\n                            setModalEntradasDates({\r\n                              id_entrada: \"\",\r\n                              isAddEntrada: false,\r\n                              isModificarEntrada: false,\r\n                              fileEditable: true,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Modificar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n\r\n                    {/* Botón para agregar proveedor */}\r\n                    {isPermisoAgregarEntrada &&\r\n                      modalEntradasDates?.id_entrada === \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.azul_Claro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            shadowColor: \"#000\",\r\n                            marginLeft: \"5%\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => addNewEntrada()}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Agregar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                    {/* Botón para eliminar proveedor */}\r\n                    {isPermisoEliminarEntrada &&\r\n                      modalEntradasDates?.id_entrada !== \"\" && (\r\n                        <TouchableOpacity\r\n                          style={{\r\n                            backgroundColor: Colors.rojo_oscuro,\r\n                            borderRadius: 15,\r\n                            width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                            height: 50, // Altura fija para pantallas de escritorio\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            shadowColor: \"#000\",\r\n                            marginRight: \"5%\",\r\n                            shadowOffset: { width: 3, height: 4 },\r\n                            shadowOpacity: 0.3,\r\n                            shadowRadius: 5,\r\n                            marginTop: \"3%\", // Margen adicional entre botones\r\n                          }}\r\n                          onPress={() => {\r\n                            setIsModalChekVisible(true);\r\n                            setIsModalChekEliminarEntrada(true);\r\n                            setMesajeModalChek(\r\n                              `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                            );\r\n                            setModalEntradasDates({\r\n                              id_entrada: \"\",\r\n                              isAddEntrada: false,\r\n                              isModificarEntrada: false,\r\n                              fileEditable: true,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"white\",\r\n                              fontSize: 16,\r\n                            }}\r\n                          >\r\n                            Eliminar Entrada\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                  </View>\r\n                )}\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarEntradaFunction()\r\n                      : modificarEntradaFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Entradas\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\n\r\nexport interface Permiso {\r\n  id_Entrada: string;\r\n  id_Proveedor: string;\r\n  id_Producto: string;\r\n  nombre_Proveedor: string;\r\n  nombre_Producto: string;\r\n  cantidad: string;\r\n  costo: string;\r\n  fecha: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Permiso[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTablePermisos: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortEntradas, setSortEntradas} = useSortEntradas();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(10);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Permiso[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"7\"\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"8\"\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"30\"\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          usuario.id_rol,\r\n          \"31\"\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre Proveedor\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Producto\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Costo Por Unidad\") {\r\n      aux = \"option5\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option6\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortEntradas({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Proveedor\" ||\r\n              column === \"Nombre Producto\" ||\r\n              column === \"Costo Por Unidad\" ||\r\n              column === \"Fecha\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortEntradasAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Proveedor !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Entrada}\r\n                onPress={() => detailsModalView(item.id_Entrada)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Proveedor}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo por unidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.costo}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Entrada}\r\n                onPress={() => detailsModalView(item.id_Entrada)}\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Proveedor}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_Producto}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Cantidad */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.cantidad}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Costo */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.costo}\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getAllTiendas, isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport { MyDateTablePermisos, Permiso } from \"../components/MyDateTablePermisos\";\r\n\r\nexport default function PermisosView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortEntradas, setSortEntradas } = useSortEntradas();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idEntradaDetails, setIdEntradaDetails] = useState(\"\");\r\n  const [idProveedorDetails, setIdProveedorDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [cantidadDetails, setCantidadDetails] = useState(\"\");\r\n  const [costoDetails, setCostoDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarEntrada, setIsPermisoAgregarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarEntrada, setIsPermisoEliminarEntrada] =\r\n    React.useState(false);\r\n  const [isPermisoModificarEntrada, setIsPermisoModificarEntrada] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarEntrada = await isPermiso(\r\n        usuario.token,\r\n        usuario.id_rol,\r\n        \"10\"\r\n      );\r\n      const resultEliminarEntrada = await isPermiso(\r\n        usuario.token,\r\n        usuario.id_rol,\r\n        \"12\"\r\n      );\r\n      const resultModificarEntrada = await isPermiso(\r\n        usuario.token,\r\n        usuario.id_rol,\r\n        \"11\"\r\n      );\r\n\r\n      setIsPermisoAgregarEntrada(resultAgregarEntrada);\r\n      setIsPermisoEliminarEntrada(resultEliminarEntrada);\r\n      setIsPermisoModificarEntrada(resultModificarEntrada);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Permiso[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreProveedor, setDropDownItemsNombreProveedor] =\r\n    useState<ProveedorPiker[]>([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreProveedorSearch, setNombreProveedorSearch] = useState(\"\");\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [costoDesdeSearch, setCostoDesdeSearch] = useState(\"\");\r\n  const [costoHastaSearch, setCostohastaSearch] = useState(\"\");\r\n  const [fechaDesdeSearch, setFechaDesdeSearch] = useState(new Date());\r\n  const [fechaHastaSearch, setFechaHastaSearch] = useState(new Date());\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2000\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getProveedoresPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProveedores(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_proveedor,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProveedor(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdProveedorDetails(\"\");\r\n    setCostoDetails(\"\");\r\n    setCantidadDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfEntradas = async () => {\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getEntradaByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.fecha.split(\"T\")[0].split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdEntradaDetails(result.id_entrada);\r\n        setIdProveedorDetails(result.proveedor.id_proveedor);\r\n        setIdProductoDetails(result.producto.id_producto);\r\n        setCantidadDetails(result.cantidad);\r\n        setIdTiendaDetails(result.tienda.id_tienda);\r\n        setCostoDetails(result.costo);\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares\r\n        setIdProductoAuxModificarDetails(result.producto.id_producto);\r\n        setIdTiendaAuxModificarDetails(result.tienda.id_tienda);\r\n        setCantidadAuxModificarDetails(result.cantidad);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<Permiso[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarEntrada(\r\n          usuario.token,\r\n          nombreProveedorSearch,\r\n          nombreProductoSearch,\r\n          costoDesdeSearch,\r\n          costoHastaSearch,\r\n          `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n          `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Permiso[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Entrada: element.id_entrada,\r\n              id_Proveedor: element.proveedor.id_proveedor,\r\n              id_Producto: element.producto.id_producto,\r\n              nombre_Proveedor: element.proveedor.nombre,\r\n              nombre_Producto: element.producto.nombre,\r\n              cantidad: element.cantidad,\r\n              costo: element.costo,\r\n              fecha: element.fecha,\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfEntradas();\r\n  }, [modalEntradasDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosProveedores = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllEntradas(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: Permiso[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Entrada: element.id_entrada,\r\n                id_Proveedor: element.proveedor.id_proveedor,\r\n                id_Producto: element.producto.id_producto,\r\n                nombre_Proveedor: element.proveedor.nombre,\r\n                nombre_Producto: element.producto.nombre,\r\n                cantidad: element.cantidad,\r\n                costo: element.costo,\r\n                fecha: element.fecha,\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron entradas.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener las entradas o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de las entradas\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosProveedores();\r\n        getProveedoresPikerDetails();\r\n        getProductosPikerDetails();\r\n        getTiendasPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarEntradas = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let EntradasFiltradas: Permiso[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortEntradas?.criterioOrden && sortEntradas.tipoOrden) {\r\n          EntradasFiltradas = await ordenarEntradas(\r\n            usuario.token,\r\n            EntradasFiltradas,\r\n            sortEntradas.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(EntradasFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarEntradas();\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n    sortEntradas,\r\n  ]);\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setIdProveedorDetails(\"\");\r\n    setIdProductoDetails(\"\");\r\n    setIdTiendaDetails(\"\");\r\n    setCantidadDetails(\"\");\r\n    setCostoDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Extraemos el año, mes y día de la fecha actual\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    setFechaDiaDetails(String(parseInt(day)));\r\n    setFechaMesDetails(String(parseInt(month)));\r\n    setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarEntradas();\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreProveedorSearch(\"\");\r\n    setNombreProductoSearch(\"\");\r\n    setCostoDesdeSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewEntrada = async () => {\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR ENTRADA. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (idProveedorDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo del producto por unidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await addEntrada(\r\n          usuario.token,\r\n          costoDetails,\r\n          cantidadDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          parseInt(idProveedorDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails)\r\n        );\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(cantidadDetails)\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó una entrada de ${cantidadDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        await createProductoInTienda(\r\n          usuario.token,\r\n          idProductoDetails,\r\n          idTiendaDetails\r\n        );\r\n        setModalMensaje(`La entrada fue insertado con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdProveedorDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setIdTiendaDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR ENTRADA. Compruebe los siguientes campos:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      const resultViejo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoAuxModificarDetails,\r\n        idTiendaAuxModificarDetails\r\n      );\r\n\r\n      if (\r\n        idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n        idProductoAuxModificarDetails !== idProductoDetails\r\n      ) {\r\n        if (\r\n          parseInt(resultViejo.cantidad ?? 0) -\r\n            parseInt(cantidadAuxModificarDetails) <\r\n          0\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Operación inválida. No se dispone de sificientes productos para realizar la operoción.\";\r\n        }\r\n      }\r\n      if (\r\n        parseInt(cantidadAuxModificarDetails) - parseInt(cantidadDetails) >\r\n        parseInt(resultNuevo.cantidad ?? 0)\r\n      ) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n      if (idProveedorDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un proveedor.\\n\";\r\n      }\r\n      if (idProductoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione un producto.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (cantidadDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese una cantidad.\\n\";\r\n      }\r\n      if (costoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Ingrese el costo del producto por unidad.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await modificarEntrada(\r\n          usuario.token,\r\n          idEntradaDetails,\r\n          costoDetails,\r\n          cantidadDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          parseInt(idProveedorDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(idTiendaDetails)\r\n        );\r\n\r\n        if (\r\n          idTiendaAuxModificarDetails !== idTiendaDetails ||\r\n          idProductoAuxModificarDetails !== idProductoDetails\r\n        ) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaAuxModificarDetails),\r\n            parseInt(idProductoAuxModificarDetails),\r\n            parseInt(cantidadAuxModificarDetails) * -1\r\n          );\r\n\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(cantidadDetails)\r\n          );\r\n        } else if (cantidadAuxModificarDetails !== cantidadDetails) {\r\n          await addProductoEntrada(\r\n            usuario.token,\r\n            parseInt(idTiendaDetails),\r\n            parseInt(idProductoDetails),\r\n            parseInt(cantidadDetails) - parseInt(cantidadAuxModificarDetails)\r\n          );\r\n        }\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó una entrada de originalmente ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setModalMensaje(`La entrada se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdProveedorDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarEntradaFunction = async () => {\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR ENTRADA. Compruebe los siguientes parámetros:\\n\";\r\n      const resultNuevo = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n\r\n      if (parseInt(cantidadDetails) > parseInt(resultNuevo.cantidad ?? 0)) {\r\n        flag = false;\r\n        validarCampos += `-Operación inválida. La cantidad del producto excede la cantidad en la tienda\\n.`;\r\n      }\r\n\r\n      if (flag) {\r\n        await deleteEntrada(usuario.token, idEntradaDetails);\r\n\r\n        await addProductoEntrada(\r\n          usuario.token,\r\n          parseInt(idTiendaDetails),\r\n          parseInt(idProductoDetails),\r\n          parseInt(cantidadDetails) * -1\r\n        );\r\n\r\n        // Actualizar productos en 0 en productoTienda\r\n        await deleteFromProductoTiendaIn_0(usuario.token);\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la entrada con una cantidad de ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          4\r\n        );\r\n\r\n        setModalMensaje(`La entrada se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdProveedorDetails(\"\");\r\n        setCostoDetails(\"\");\r\n        setIdProductoDetails(\"\");\r\n        setCantidadDetails(\"\");\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre Proveedor\",\r\n    \"Nombre Producto\",\r\n    \"Cantidad\",\r\n    \"Costo Por Unidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre Proveedor\",\r\n    \"Nombre Producto\",\r\n    \"Cantidad\",\r\n    \"Costo Por Unidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTablePermisos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Proveedor:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del proveedor\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={nombreProveedorSearch}\r\n                    onChangeText={setNombreProveedorSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del Producto\"\r\n                    value={nombreProductoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Rango de Costo en USD:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={idProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setIdProductoDetails(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={idProductoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setIdProductoDetails(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.blanco,\r\n                        fontSize: 18,\r\n                        justifyContent: \"center\",\r\n                        marginRight: \"25%\",\r\n                        fontWeight: \"bold\", // Para negritas\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Desde\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.blanco,\r\n                        fontSize: 18,\r\n                        marginLeft: \"12%\",\r\n                        justifyContent: \"center\",\r\n                        fontWeight: \"bold\", // Para negritas\r\n                        textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                        textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                        textShadowRadius: 2, // Difuminado de la sombra\r\n                      }}\r\n                    >\r\n                      Hasta\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 500\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={()=> controlarCapas(\"FechaDesdeSearsh\")}\r\n                      />\r\n                    </View>\r\n\r\n                    <View\r\n                      style={{\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchMovil}\r\n                        onDropdownOpen={()=> controlarCapas(\"FechaHastaSearsh\")}\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProveedorDetails}\r\n                    placeholder=\"Proveedores\"\r\n                    setValue={setIdProveedorDetails}\r\n                    items={dropdownItemsNombreProveedor}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Productos\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre de la Tienda */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idTiendaDetails}\r\n                    placeholder=\"Tiendas\"\r\n                    setValue={setIdTiendaDetails}\r\n                    items={dropdownItemsNombreTienda}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalMovil}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalMovil}>Costo en USD</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={costoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Costo en USD\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{ width: \"90%\", marginLeft: \"2%\", marginRight: \"2%\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalMovil}>Fecha</Text>\r\n                  {isDateLoaded && (\r\n                    <MyDateInput\r\n                      dayValue={fechaDiaDetails}\r\n                      monthValue={fechaMesDetails}\r\n                      yearValue={fechaAnnoDetails}\r\n                      onDayChange={setFechaDiaDetails}\r\n                      onMonthChange={setFechaMesDetails}\r\n                      onYearChange={setFechaAnnoDetails}\r\n                      style={{ margin: 20 }}\r\n                      styleText={styles.labelTextModalMovil}\r\n                    />\r\n                  )}\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar entrada */}\r\n                  {isPermisoModificarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar entrada */}\r\n                  {isPermisoAgregarEntrada &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewEntrada()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarEntradaFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Permisos\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Proveedor:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del proveedor\"\r\n              value={nombreProveedorSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProveedorSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del Producto\"\r\n              value={nombreProductoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Rango de Costo en USD:</Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={costoDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostoDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={costoHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostohastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarEntradas()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTablePermisos\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Entrada\"\r\n                  : \"Datos de la Entrada\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Proveedor\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 2000, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProveedorDetails}\r\n                    placeholder=\"Proveedores\"\r\n                    setValue={setIdProveedorDetails}\r\n                    items={dropdownItemsNombreProveedor}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre del Producto */}\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Producto\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{ width: \"100%\", zIndex: 1500, position: \"relative\" }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idProductoDetails}\r\n                    placeholder=\"Productos\"\r\n                    setValue={setIdProductoDetails}\r\n                    items={dropdownItemsNombreproducto}\r\n                    searchable={true}\r\n                  />\r\n                </View>\r\n\r\n                {/* Nombre de la Tienda */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTiendasDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre de la Tienda\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadTiendasDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idTiendaDetails}\r\n                    placeholder=\"Tiendas\"\r\n                    setValue={setIdTiendaDetails}\r\n                    items={dropdownItemsNombreTienda}\r\n                    searchable={true}\r\n                    onDropdownOpen={() => controlarCapas(\"TiendaDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Cantidad</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={cantidadDetails}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCantidadDetails(numericValue);\r\n                      }}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Cantidad\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Costo en USD\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={costoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoDetails(validNumericValue);\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarEntrada ? true : false}\r\n                      placeholder=\"Costo en USD\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarEntrada &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewEntrada()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarEntrada &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta entrada?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Entrada\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarEntradaFunction()\r\n                      : modificarEntradaFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Permisos\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\n\r\nexport interface TipoServicio {\r\n  id_TipoServicio: string;\r\n  nombre_TipoServicio: string;\r\n  costo: string;\r\n}\r\n\r\ninterface Props {\r\n  items: TipoServicio[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableTipoServicio: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortEntradas, setSortEntradas} = useSortEntradas();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<TipoServicio[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre Proveedor\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Producto\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Costo Por Unidad\") {\r\n      aux = \"option5\";\r\n    } else if (column === \"Fecha\") {\r\n      aux = \"option6\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    /*\r\n    setSortEntradas({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n    */\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Proveedor\" ||\r\n              column === \"Nombre Producto\" ||\r\n              column === \"Costo Por Unidad\" ||\r\n              column === \"Fecha\") && (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                  width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                  height: 24, // Asegúrate de que tenga tamaño consistente\r\n                  justifyContent: \"center\", // Centrar contenido del botón\r\n                  alignItems: \"center\", // Centrar contenido del botón\r\n                  borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                  marginBottom: 4, // Elevar el botón del borde inferior\r\n                  paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                }}\r\n                onPress={() => sortEntradasAux(column)}\r\n              >\r\n                <Image\r\n                  source={require(\"../images/ordenar.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n          <DataTable style={{ width: \"100%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_TipoServicio}\r\n                onPress={() => detailsModalView(item.id_TipoServicio)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre_TipoServicio}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.costo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Tipo de Servicio\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_TipoServicio}\r\n                onPress={() => detailsModalView(item.id_TipoServicio)}\r\n              >\r\n                {/* Primera celda - Nombre Proveedor*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre_TipoServicio}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Producto */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.costo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Tipo de Servicio\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { getAllTiendas, isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport {\r\n  getAllProductos,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  MyDateTableTipoServicio,\r\n  TipoServicio,\r\n} from \"../components/MyDateTableTipoServicio\";\r\nimport {\r\n  addTipoServicio,\r\n  deleteTipoServicio,\r\n  filtrarTipoSrvicio,\r\n  getAllTipoServicios,\r\n  getTipoServicioByID,\r\n  modificarTipoServicio,\r\n} from \"../services/TipoServiciosServices\";\r\n\r\nexport default function TipoServicioView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortEntradas, setSortEntradas } = useSortEntradas();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idTipoServicioDetails, setIdTipoServicioDetails] = useState(\"\");\r\n  const [nombreTipoServicioDetails, setNombreTipoServicioDetails] =\r\n    useState(\"\");\r\n  const [costoDetails, setCostoDetails] = useState(\"\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] = useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarTipoServicio, setIsPermisoAgregarTipoServicio] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarTipoServicio, setIsPermisoEliminarTipoServicio] =\r\n    React.useState(false);\r\n  const [isPermisoModificarTipoServicio, setIsPermisoModificarTipoServicio] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarTipoServicioView = await isPermiso(\r\n        usuario.token,\r\n        \"20\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarTipoServicioView = await isPermiso(\r\n        usuario.token,\r\n        \"21\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultEliminarTipoServicioView = await isPermiso(\r\n        usuario.token,\r\n        \"22\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      setIsPermisoAgregarTipoServicio(resultAgregarTipoServicioView);\r\n      setIsPermisoEliminarTipoServicio(resultEliminarTipoServicioView);\r\n      setIsPermisoModificarTipoServicio(resultModificarTipoServicioView);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<string | null>(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<TipoServicio[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreProveedor, setDropDownItemsNombreProveedor] =\r\n    useState<ProveedorPiker[]>([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreTipoServicioSearch, setNombreTipoServicioSearch] = useState(\"\");\r\n  const [nombreProductoSearch, setNombreProductoSearch] = useState(\"\");\r\n  const [costoDesdeSearch, setCostoDesdeSearch] = useState(\"\");\r\n  const [costoHastaSearch, setCostohastaSearch] = useState(\"\");\r\n  const [fechaDesdeSearch, setFechaDesdeSearch] = useState(new Date());\r\n  const [fechaHastaSearch, setFechaHastaSearch] = useState(new Date());\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2000\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getProveedoresPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProveedores(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_proveedor,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProveedor(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllProductos(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: ProductoPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_producto,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreProducto(tiendasMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([...tiendasMapeados]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setNombreTipoServicioDetails(\"\");\r\n    setCostoDetails(\"\");\r\n    setCostoDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  const cargarDetailsOfEntradas = async () => {\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getTipoServicioByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Actualizamos los detalles\r\n        setIdTipoServicioDetails(result.id_tipo_servicio);\r\n        setNombreTipoServicioDetails(result.nombre);\r\n        setCostoDetails(result.costo);\r\n\r\n        // Actualizamos los valores auxiliares\r\n        setIdProductoAuxModificarDetails(result.producto.id_producto);\r\n        setIdTiendaAuxModificarDetails(result.tienda.id_tienda);\r\n        setCantidadAuxModificarDetails(result.cantidad);\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<TipoServicio[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarTipoSrvicio(\r\n          usuario.token,\r\n          nombreTipoServicioSearch,\r\n          costoDesdeSearch,\r\n          costoHastaSearch\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: TipoServicio[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_TipoServicio: element.id_tipo_servicio,\r\n              nombre_TipoServicio: element.nombre,\r\n              costo: element.costo,\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfEntradas();\r\n  }, [modalEntradasDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosTipoServicios = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener tipos de servicios\r\n        const result = await getAllTipoServicios(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const proveedoresMapeados: TipoServicio[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_TipoServicio: element.id_tipo_servicio,\r\n                nombre_TipoServicio: element.nombre,\r\n                costo: element.costo,\r\n              };\r\n            })\r\n          );\r\n\r\n          setFilterItems(proveedoresMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron Tipos de Servicios.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener los Tipos de Servicios o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\r\n          \"Ocurrió un problema al cargar los datos de lo Tipos de Servicios\"\r\n        );\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de las entradas\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosTipoServicios();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarTipoServicio = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let EntradasFiltradas: TipoServicio[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        /*\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortEntradas?.criterioOrden && sortEntradas.tipoOrden) {\r\n          EntradasFiltradas = await ordenarEntradas(\r\n            usuario.token,\r\n            EntradasFiltradas,\r\n            sortEntradas.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n          */\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(EntradasFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarTipoServicio();\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n    sortEntradas,\r\n    selectedOptionTipoOrden,\r\n  ]);\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setNombreTipoServicioDetails(\"\");\r\n    setCostoDetails(\"0\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarTipoServicio();\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreTipoServicioSearch(\"\");\r\n    setNombreProductoSearch(\"\");\r\n    setCostoDesdeSearch(\"\");\r\n    setCostohastaSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewTipoServicio = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Agregando tipo de servicio. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR TIPO DE SERVICIO. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (nombreTipoServicioDetails.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-El nombre del tipo de servicio no puede ser vacio.\\n\";\r\n      }\r\n      if (costoDetails.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-El costo del tipo de servicio no puede ser vacio.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await addTipoServicio(\r\n          usuario.token,\r\n          nombreTipoServicioDetails,\r\n          costoDetails\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un nuevo tipo de servicio: ${nombreTipoServicioDetails} con un costo de ${costoDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          7\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(\r\n          `Se ha creado el tipo de servicio ${nombreTipoServicioDetails}`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreTipoServicioDetails(\"\");\r\n        setCostoDetails(\"\");\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para actualizar los datos de un tipo de servicio\r\n  const modificarTipoServicioFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Modificando tipo de servicio. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR TIPO DE SERVICIO. Compruebe los siguientes campos:\\n\";\r\n\r\n      if (nombreTipoServicioDetails.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-El nombre del tipo de servicio no puede ser vacio.\\n\";\r\n      }\r\n      if (costoDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-El costo del tipo de servicio no puede ser vacio.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        await modificarTipoServicio(\r\n          usuario.token,\r\n          idTipoServicioDetails,\r\n          nombreTipoServicioDetails,\r\n          costoDetails\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó el tipo de servicio: ${nombreTipoServicioDetails} con un costo de ${costoDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          7\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(`El tipo de servicio se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para elimºinar los datos de un producto\r\n  const eliminarEntradaFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false)\r\n    setModalMensaje(\"Eliminando tipo de servicio. Espere por favor\")\r\n    setModalMensajeView(true)\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR TIPO DE SERVICIO. Compruebe los siguientes parámetros:\\n\";\r\n\r\n      // Combrovar tipos de servicios longevos\r\n      \r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 25 ||\r\n        parseInt(idTipoServicioDetails) === 26\r\n      ) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No es posible eliminar este tipo de servicio ya que se usa en la lógica del software.\\n\";\r\n      }\r\n\r\n      if (flag) {\r\n        const resultDelete = await deleteTipoServicio(\r\n          usuario.token,\r\n          idTipoServicioDetails\r\n        );\r\n        if (resultDelete) {\r\n          // Agregar Acción de usuario agregar proveedor\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó el tipo de servicio ${nombreTipoServicioDetails}.`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            7\r\n          );\r\n\r\n          setIsBotonModalMesajeVisible(true)\r\n          setModalMensaje(`El tipo de servicio se eliminó con éxito`);\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(true);\r\n          setNombreTipoServicioDetails(\"\");\r\n          setCostoDetails(\"\");\r\n        } else {\r\n          setModalMensaje(validarCampos);\r\n          setModalMensajeView(true);\r\n        }\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true)\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\"Tipo de Servicio\", \"Costo\"];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\"Tipo de Servicio\", \"Costo\"];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarTipoServicio && (\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                setModalEntradasDates({\r\n                  id_entrada: \"\",\r\n                  isAddEntrada: true,\r\n                  fileEditable: true,\r\n                  isModificarEntrada: false,\r\n                })\r\n              }\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>\r\n                Agregar Tipo de Servicio\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableTipoServicio\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Nombre del tipo de Servicio:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del tipo de Servicio\"\r\n                    value={nombreTipoServicioSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreTipoServicioSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>Rango de Costo:</Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={costoDesdeSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCostoDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={costoHastaSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setCostohastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      marginTop: \"10%\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => filtrarYOrdenarTipoServicio()}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\"\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Tipo de Servicio\"\r\n                  : \"Datos del Tipo de Servicio\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    marginLeft: \"2%\",\r\n                    marginRight: \"2%\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Tipo de Servicio\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    value={nombreTipoServicioDetails}\r\n                    onChangeText={(text) => {\r\n                      setNombreTipoServicioDetails(text);\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    editable={isPermisoModificarTipoServicio ? true : false}\r\n                    placeholder=\"Nombre Tipo de Servicio\"\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Costo</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={costoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoDetails(validNumericValue);\r\n                      }}\r\n                      editable={isPermisoModificarTipoServicio ? true : false}\r\n                      placeholder=\"Costo\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"43%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este Tipo de Servicio?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"43%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewTipoServicio()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"43%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR este Tipo de Servicio?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarTipoServicioFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (<TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Tipo de Servicio\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>)}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarTipoServicio && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Tipo de Servicio\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>\r\n              Nombre del tipo de Servicio:\r\n            </Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del tipo de Servicio\"\r\n              value={nombreTipoServicioSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreTipoServicioSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Rango de Costo:</Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={costoDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostoDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={costoHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setCostohastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                marginTop: \"10%\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarTipoServicio()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableTipoServicio\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\"\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Agregar Tipo de Servicio\"\r\n                  : \"Datos del Tipo de Servicio\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    marginLeft: \"2%\",\r\n                    marginRight: \"2%\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre Tipo de Servicio\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.textImputModal}\r\n                    value={nombreTipoServicioDetails}\r\n                    onChangeText={(text) => {\r\n                      setNombreTipoServicioDetails(text);\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    editable={isPermisoModificarTipoServicio ? true : false}\r\n                    placeholder=\"Nombre Tipo de Servicio\"\r\n                  />\r\n                </View>\r\n\r\n                {/* Contenedor para la cantidad y el costo */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Cantidad */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Costo</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={costoDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        setCostoDetails(validNumericValue);\r\n                      }}\r\n                      editable={isPermisoModificarTipoServicio ? true : false}\r\n                      placeholder=\"Costo\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Costo */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de este Tipo de Servicio?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewTipoServicio()}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarTipoServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR este Tipo de Servicio?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Tipo de Servicio\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarEntradaFunction()\r\n                      : modificarTipoServicioFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (<TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() =>\r\n                  isReflechModalMensajeView\r\n                    ? navigation.replace(\"Tipo de Servicio\")\r\n                    : setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>)}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\nimport { cambiarValorMonedaUSD, getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\n\r\nexport default function CambiarMonedaView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n  const { usuario, setUsuario } = useUsuario();\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [cambioMoneda, setCambioMoneda] = useState(\"\");\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        if (usuario?.token) {\r\n            const result = await getValorMonedaUSD(usuario.token);\r\n            setCambioMoneda(result);\r\n        }\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  // Cambiar moneda function\r\n  const cambiarMoneda = async () =>{\r\n    if (usuario?.token) {\r\n        await cambiarValorMonedaUSD(usuario.token, cambioMoneda);\r\n        setModalMensajeView(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      {/*Barra superior*/}\r\n      <Navbar />\r\n      {/* Vista animada que se despliega hacia la izquierda */}\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"flex-start\",\r\n          marginTop: \"10%\",\r\n        }}\r\n      >\r\n        <View style={{ width: \"20%\", marginLeft: \"40%\", }}>\r\n          <Text style={styles.labelTextModalDesktop}>\r\n            {\"Cambio de moneda de USD -> CUP\"}\r\n          </Text>\r\n          <CustomTextImputSearch\r\n            style={styles.textImputModal}\r\n            cursorColor={Colors.azul_Oscuro}\r\n            value={cambioMoneda}\r\n            onChangeText={(text) => {\r\n              // Permite solo números y un punto decimal\r\n              const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n              // Asegura que solo haya un punto decimal\r\n              const validNumericValue =\r\n                numericValue.split(\".\").length > 2\r\n                  ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                  : numericValue;\r\n\r\n              setCambioMoneda(validNumericValue);\r\n            }}\r\n            placeholder=\"Digite un número\"\r\n          />\r\n        </View>\r\n        <View style={{ width: \"20%\", marginLeft: \"41%\" }}>\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Oscuro,\r\n              borderRadius: 15,\r\n              width: \"80%\", // Ancho fijo para pantallas de escritorio\r\n              height: 30, // Altura fija para pantallas de escritorio\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginLeft: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n              marginTop: \"3%\", // Margen adicional entre botones\r\n            }}\r\n            onPress={() => {cambiarMoneda()}}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: \"white\",\r\n                fontSize: 16,\r\n              }}\r\n            >\r\n              Cambiar Moneda\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      {/*Modal mensaje */}\r\n      <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Se ha cambiado el valor de la moneda a ${cambioMoneda}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  padding: 10,\r\n                  borderRadius: 8,\r\n                  width: \"48%\", // Ajusta el ancho de los botones\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onPress={() => setModalMensajeView(!isModalMensajeView)\r\n                }\r\n              >\r\n                <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n    </View>\r\n  );\r\n}\r\n","import React, { createContext, useState, ReactNode } from 'react';\r\nimport { Cliente } from '../components/MyDateTableClientes';\r\n\r\n// Define la interfaz del Usuario\r\nexport interface SortClientes {\r\n  items: Cliente[];\r\n  criterioOrden: string;\r\n  tipoOrden: string;\r\n}\r\n\r\n// Define la interfaz del contexto\r\ninterface SortClientesContextType {\r\n  sortClientes: SortClientes | null;\r\n  setSortClientes: (sortClientes: SortClientes | null) => void;\r\n}\r\n\r\n// Crea el contexto\r\nconst SortClientesContext = createContext<SortClientesContextType | undefined>(undefined);\r\n\r\n// Define el proveedor\r\nexport const SortClientesProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [sortClientes, setSortClientes] = useState<SortClientes | null>(null);\r\n\r\n  return (\r\n    <SortClientesContext.Provider value={{ sortClientes: sortClientes, setSortClientes: setSortClientes }}>\r\n      {children}\r\n    </SortClientesContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useSortClientes = () => {\r\n  const context = React.useContext(SortClientesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSortEntradas debe usarse dentro de un SortClientes');\r\n  }\r\n  return context;\r\n};","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useSortProductos } from \"../contexts/AuxiliarSortProductos\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\nimport { useSortClientes } from \"../contexts/AuxiliarSortClientes\";\r\n\r\nexport interface Cliente {\r\n  id_Cliente: string;\r\n  nombre: string;\r\n  correo?: string;\r\n  telefono?: string;\r\n  nota?: string;\r\n  cif?: string;\r\n  detalle_bancario?: string;\r\n  descripcion?: string;\r\n}\r\n\r\nexport interface ClientesPiker {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Cliente[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableProveedorModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableClientes: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n  const { sortProductos, setSortProductos } = useSortProductos();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortClientes, setSortClientes } = useSortClientes();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Cliente[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_producto: string) => {\r\n    setModalProveedoresDates({\r\n      id_proveedor: id_producto,\r\n      isAddProveedor: true,\r\n      fileEditable: false,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: true,\r\n      isDetallesProveedores: true,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  const resultadoCondicionalOpcionesDeCelda = (item: Cliente) => {\r\n    if (usuario?.id_rol) {\r\n      return (usuario.id_rol == \"1\" && isPermisoOpcionesDeCelda) ||\r\n        (usuario.id_rol == \"2\" && isPermisoOpcionesDeCelda)\r\n        ? true\r\n        : item.telefono && isPermisoOpcionesDeCelda\r\n        ? true\r\n        : false;\r\n    }\r\n  };\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    checkPermiso(); // Llama a la función al montar el componente\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n    // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Nombre\") {\r\n      aux = \"option3\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortClientes({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n  \r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre\") && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Suave,\r\n                    marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                    width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                    height: 24, // Asegúrate de que tenga tamaño consistente\r\n                    justifyContent: \"center\", // Centrar contenido del botón\r\n                    alignItems: \"center\", // Centrar contenido del botón\r\n                    borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                    marginBottom: 4, // Elevar el botón del borde inferior\r\n                    paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                  }}\r\n                  onPress={() => sortEntradasAux(column)}\r\n                >\r\n                  <Image\r\n                    source={require(\"../images/ordenar.png\")}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </TouchableOpacity>\r\n              )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idProductoOption, setIdProductoOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdProductoOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalProveedoresDates({\r\n        id_proveedor: idProductoOption,\r\n        isAddProveedor: true,\r\n        fileEditable: true,\r\n        isModificarProveedor: true,\r\n        isAddProductoShowProveedoresTiendas: true,\r\n        isDetallesProveedores: true,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Cliente !== idProductoOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idProductoOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Cliente}\r\n                onPress={() => detailsModalView(item.id_Cliente)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Primera celda - CIF */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.cif}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.detalle_bancario}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Teléfono */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.telefono}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idProductoOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Productos\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Cliente}\r\n                onPress={() => detailsModalView(item.id_Cliente)}\r\n              >\r\n                {/* Primera celda - Nombre */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombre}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Primera celda - CIF */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.cif}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Correo */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      textAlignVertical: \"center\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.correo}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Detalle Bancario */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.detalle_bancario}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Teléfono */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={{\r\n                    flex: 1.5,\r\n                    justifyContent: \"center\", // Centrar horizontalmente\r\n                    alignItems: \"center\", // Centrar verticalmente\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Text>{item.telefono}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 16,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport {\r\n  actualizarProveedor,\r\n  addProveedor,\r\n  deleteProveedor,\r\n  filtrarProveedor,\r\n  getAllProveedores,\r\n  getProveedorById,\r\n} from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getAllTiendasByProduct,\r\n  getTiendaById,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport {\r\n  PanGestureHandler,\r\n  PanGestureHandlerGestureEvent,\r\n} from \"react-native-gesture-handler\";\r\nimport {\r\n  MyDateTableModalShowDatesTienda,\r\n  TiendaShowModal,\r\n} from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport {\r\n  MyDateTableModalShowDateProveedores,\r\n  ProveedoresShowModal,\r\n} from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { useModalProveedoresDates } from \"../contexts/AuxiliarContextFromModalProveedores\";\r\nimport {\r\n  EntradaShowModal,\r\n  MyDateTableModalShowDatesEntradas,\r\n} from \"../components/MyDateTableModalShowDatesEntradas\";\r\nimport { getAllEntradasByProveedorId } from \"../services/EntradaServices\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  Cliente,\r\n  MyDateTableClientes,\r\n} from \"../components/MyDateTableClientes\";\r\nimport {\r\n  actualizarCliente,\r\n  addCliente,\r\n  deleteCliente,\r\n  filtrarCliente,\r\n  getAllClientes,\r\n  getClienteById,\r\n  ordenarClientes,\r\n} from \"../services/clienteServices\";\r\nimport { useSortClientes } from \"../contexts/AuxiliarSortClientes\";\r\n\r\nexport default function ClientesView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortClientes, setSortClientes } = useSortClientes();\r\n  const { modalProveedoresDates, setModalProveedoresDates } =\r\n    useModalProveedoresDates();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n\r\n  // Variables para controlar los campos de los formularios de agregar proovedores y ver datos\r\n  const [idClienteDetails, setIdClienteDetails] = useState(\"\");\r\n  const [nombreClienteDetails, setNombreClienteDetails] = useState(\"\");\r\n  const [correoEmailClienteDetails, setCorreoEmailClienteDetails] =\r\n    useState(\"\");\r\n  const [telefonoClienteDetails, setTelefonoClienteDetails] = useState(\"\");\r\n  const [notaClienteDetails, setNotaClienteDetails] = useState(\"\");\r\n  const [descripcionClienteDetails, setDescripcionClienteDetails] =\r\n    useState(\"\");\r\n  const [cfiClienteDetails, setCfiClienteDetails] = useState(\"\");\r\n  const [detallesBancariosClienteDetils, setDetallesBancariosProveedorDetils] =\r\n    useState(\"\");\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [isModalChekEliminarVisible, setIsModalChekEliminarVisible] =\r\n    useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  // Controlar el doble clic del boton\r\n    const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarCliente, setIsPermisoAgregarCliente] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarCliente, setIsPermisoEliminarCliente] =\r\n    React.useState(false);\r\n  const [isPermisoModificarCliente, setIsPermisoModificarCliente] =\r\n    React.useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultEliminarClienteView = await isPermiso(\r\n        usuario.token,\r\n        \"18\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarClienteView = await isPermiso(\r\n        usuario.token,\r\n        \"17\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultAgregarClienteView = await isPermiso(\r\n        usuario.token,\r\n        \"16\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      setIsPermisoAgregarCliente(resultAgregarClienteView);\r\n      setIsPermisoEliminarCliente(resultEliminarClienteView);\r\n      setIsPermisoModificarCliente(resultModificarClienteView);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [entradasByProveedor, setEntradasByProveedor] = useState<\r\n    EntradaShowModal[]\r\n  >([]);\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Cliente[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItems, setDropDownItems] = useState<TiendaPiker[]>([]);\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreClienteSearch, setNombreClienteSearch] = useState(\"\");\r\n  const [cifSearch, setCifSearch] = useState(\"\");\r\n  const [telefonoSearch, setTelefonoSearch] = useState(\"\");\r\n  const [detallesBancariosSearch, setDetallesBancariosSearch] = useState(\"\");\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getDatesTiendaPiker = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItems([{ label: \"Tiendas\", value: \"\" }, ...tiendasMapeados]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setNombreClienteDetails(\"\");\r\n    setCfiClienteDetails(\"\");\r\n    setNotaClienteDetails(\"\");\r\n    setTelefonoClienteDetails(\"\");\r\n    setDescripcionClienteDetails(\"\");\r\n    setCorreoEmailClienteDetails(\"\");\r\n    setDetallesBancariosProveedorDetils(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: false,\r\n      isModificarProveedor: false,\r\n      fileEditable: true,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n  };\r\n  const cargarDetailsOfCliente = async () => {\r\n    if (usuario?.token && modalProveedoresDates?.id_proveedor) {\r\n      const result = await getClienteById(\r\n        usuario.token,\r\n        modalProveedoresDates.id_proveedor\r\n      );\r\n      if (result) {\r\n        setIdClienteDetails(modalProveedoresDates.id_proveedor);\r\n        setNombreClienteDetails(result.nombre);\r\n        setCorreoEmailClienteDetails(result.email || \"\");\r\n        setDescripcionClienteDetails(result.descripcion || \"\");\r\n        setTelefonoClienteDetails(result.telefono || \"\");\r\n        setNotaClienteDetails(result.nota || \"\");\r\n        setCfiClienteDetails(result.Cif || \"\");\r\n        setDetallesBancariosProveedorDetils(result.detalles_bancarios || \"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (): Promise<Cliente[] | null> => {\r\n    if (usuario?.token) {\r\n      try {\r\n        const result = await filtrarCliente(\r\n          usuario.token,\r\n          nombreClienteSearch,\r\n          telefonoSearch,\r\n          cifSearch,\r\n          detallesBancariosSearch\r\n        );\r\n\r\n        if (result) {\r\n          const proveedoresMapeados: Cliente[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Proveedor: element.id_proveedor,\r\n              nombre: element.nombre,\r\n              correo: element.email || \"\",\r\n              direccion: element.direccion || \"\",\r\n              telefono: element.telefono || \"\",\r\n              nota: element.nota || \"\",\r\n              cif: element.Cif || \"\",\r\n              detalle_bancario: element.detalles_bancarios || \"\",\r\n              descripcion: element.descripcion || \"\",\r\n            }))\r\n          );\r\n          return proveedoresMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    filtrarYOrdenarClientes();\r\n  }, [selectedOptionTipoOrden, sortClientes]);\r\n\r\n  useEffect(() => {\r\n    cargarDetailsOfCliente();\r\n  }, [modalProveedoresDates]);\r\n  // Para filtrar y/o ordenar los datos según se halla digitado o seleccionado\r\n  const obtenerTodosLosClientes = async () => {\r\n    if (usuario?.token != undefined) {\r\n      try {\r\n        // Obtener proovedores desde la tabla\r\n        const result = await getAllClientes(usuario.token);\r\n\r\n        if (result && Array.isArray(result)) {\r\n          // Mapeamos los proovedores y obtenemos tanto la cantidadTotal como si tienen opciones\r\n          const clientesMapeados: Cliente[] = await Promise.all(\r\n            result.map(async (element: any) => {\r\n              // Mapeamos a la interfaz Proveedor\r\n              return {\r\n                id_Cliente: element.id_cliente, // Mapea 'id_proovedor' a 'id_Proveedor'\r\n                nombre: element.nombre, // Mapea 'nombre' directamente\r\n                correo: element.email || \"\", // Asume que hay un campo 'correo' o usa un valor por defecto\r\n                detalle_bancario: element.detalles_bancarios || \"\", // Asume que hay un campo 'detalle_bancario' o usa un valor por defecto\r\n                telefono: element.telefono || \"\", // Mapea un teléfono o usa un valor por defecto\r\n                nota: element.nota || \"\",\r\n                cif: element.Cif || \"\",\r\n                descripcion: element.descripcion || \"\",\r\n              };\r\n            })\r\n          );\r\n\r\n          // Actualizamos el estado de filterItems con los productos mapeados\r\n          setFilterItems(clientesMapeados);\r\n        } else {\r\n          console.log(\"No se encontraron proveedoress.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error al obtener los proveedores o verificar permisos:\",\r\n          error\r\n        );\r\n        alert(\"Ocurrió un problema al cargar los datos de los proveedores\");\r\n      }\r\n    } else {\r\n      alert(\r\n        \"Ocurrió un problema al obtener el token de identificación del usuario para cargar los datos de los proovedores\"\r\n      );\r\n    }\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarClientes();\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        await checkPermiso();\r\n        await obtenerTodosLosClientes();\r\n        getDatesTiendaPiker();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarClientes = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let productosFiltrados: Cliente[] =\r\n          (await auxiliarFunctionFilter()) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortClientes?.criterioOrden && sortClientes.tipoOrden) {\r\n          productosFiltrados = await ordenarClientes(\r\n            usuario.token,\r\n            productosFiltrados,\r\n            sortClientes.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(productosFiltrados);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setNombreClienteDetails(\"\");\r\n    setCorreoEmailClienteDetails(\"\");\r\n    setDescripcionClienteDetails(\"\");\r\n    setTelefonoClienteDetails(\"\");\r\n    setNotaClienteDetails(\"\");\r\n\r\n    setModalProveedoresDates({\r\n      id_proveedor: \"\",\r\n      isAddProveedor: true,\r\n      fileEditable: true,\r\n      isModificarProveedor: false,\r\n      isAddProductoShowProveedoresTiendas: false,\r\n      isDetallesProveedores: false,\r\n    });\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreClienteSearch(\"\");\r\n    setCifSearch(\"\");\r\n    setDetallesBancariosSearch(\"\");\r\n    setTelefonoSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n  };\r\n\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewCliente = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando cliente. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL AGREGAR CLIENTE. Por favor verifique los siguientes campos:\\n\";\r\n\r\n      if (nombreClienteDetails.trim() === \"\") {\r\n        validarCampos += \"-El nombre del cliente no puede ser vacío\";\r\n        flag = false;\r\n      }\r\n\r\n      if (flag) {\r\n        await addCliente(\r\n          usuario.token,\r\n          nombreClienteDetails,\r\n          correoEmailClienteDetails,\r\n          telefonoClienteDetails,\r\n          descripcionClienteDetails,\r\n          notaClienteDetails,\r\n          cfiClienteDetails,\r\n          detallesBancariosClienteDetils\r\n        );\r\n\r\n        // Agregar Acción de usuario agregar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó al sistema al cliente ${nombreClienteDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          8\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(\r\n          `El Cliente \"${nombreClienteDetails}\" fue insertado con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setNombreClienteDetails(\"\");\r\n        setTelefonoClienteDetails(\"\");\r\n        setCorreoEmailClienteDetails(\"\");\r\n        setDescripcionClienteDetails(\"\");\r\n        setNotaClienteDetails(\"\");\r\n        setCfiClienteDetails(\"\");\r\n        setDetallesBancariosProveedorDetils(\"\");\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para actualizar los datos de un producto\r\n  const modificarProveedor = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando cliente. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR CLIENTE. Compruebe los siguientes campos:\\n\";\r\n\r\n      if (nombreClienteDetails.trim() === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-El nombre del cliente no puede ser vacío\";\r\n      }\r\n      if (parseInt(idClienteDetails) === 1) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No se puede modificar al cliente Anónimo ya que se usa en la lógica del software\";\r\n      }\r\n\r\n      if (flag) {\r\n        await actualizarCliente(\r\n          usuario.token,\r\n          idClienteDetails,\r\n          nombreClienteDetails,\r\n          correoEmailClienteDetails,\r\n          telefonoClienteDetails,\r\n          descripcionClienteDetails,\r\n          notaClienteDetails,\r\n          cfiClienteDetails,\r\n          detallesBancariosClienteDetils\r\n        );\r\n        // Agregar Acción de usuario modificar proveedor\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó al cliente ${nombreClienteDetails}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          8\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(\r\n          `El Cliente \"${nombreClienteDetails}\" se modificó con éxito`\r\n        );\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n  // Método para eliminar proveedor\r\n  const eliminarProveedor = async () => {\r\n    if (isButtonDisabled) return; // Si el botón está deshabilitado, no hacer nada\r\n\r\n    setIsButtonDisabled(true); // Deshabilitar el botón\r\n\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando cliente. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL TRATAR DE ELIMINAR EL CLIENTE. Motivos:\\n\";\r\n\r\n      if (parseInt(idClienteDetails) === 1) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-No se puede eliminar al cliente Anónimo ya que se usa en la lógica del software\";\r\n      }\r\n\r\n      if (flag) {\r\n        const resulDeletProveedor = await deleteCliente(\r\n          usuario.token,\r\n          idClienteDetails\r\n        );\r\n        if (resulDeletProveedor) {\r\n          // Agregar Acción de usuario agregar proveedor\r\n\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó al cliente ${nombreClienteDetails}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            8\r\n          );\r\n\r\n          setIsBotonModalMesajeVisible(true);\r\n          setModalMensaje(\r\n            `El Cliente \"${nombreClienteDetails}\" se eliminó con éxito`\r\n          );\r\n          setModalMensajeView(true);\r\n          setReflechModalMensajeView(true);\r\n        } else {\r\n          setIsBotonModalMesajeVisible(true);\r\n          validarCampos +=\r\n            \"-Ya se han echo operaciones en el sistema con este cliente.\\n\";\r\n          setModalMensaje(validarCampos);\r\n          setModalMensajeView(true);\r\n        }\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n    setIsButtonDisabled(false);\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Nombre\",\r\n    \"CIF / CI\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n  const columnasMyDateTableEntradaModal = [\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Costo\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"CIF / CI\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"telefono\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isPermisoAgregarCliente && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 40,\r\n                width: \"50%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginRight: \"5%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text style={styles.radioButtonTextMovil}>Agregar Cliente</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableClientes\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Nombre del Cliente:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Nombre del cliente\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={nombreClienteSearch}\r\n                    onChangeText={setNombreClienteSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    CIF / Carnet Identidad:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"CIF / Carnet Identidad\"\r\n                    value={cifSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setCifSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Detalles Bancarios:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Detalles Bancarios\"\r\n                    onKeyPress={handleKeyPress}\r\n                    value={detallesBancariosSearch}\r\n                    onChangeText={setDetallesBancariosSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Número de Teléfono:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullMovil}\r\n                    placeholder=\"Número de Teléfono\"\r\n                    value={telefonoSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setTelefonoSearch}\r\n                  />\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 50, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 16,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() => {\r\n                          filtrarYOrdenarClientes();\r\n                          setIsExpanded(false);\r\n                        }}\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Proveedor\"\r\n                  : \"Agregar Proveedor\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  value={nombreClienteDetails}\r\n                  onChangeText={setNombreClienteDetails}\r\n                  placeholder=\"Nombre del cliente\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y CIF */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoClienteDetails}\r\n                      onChangeText={setTelefonoClienteDetails}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CIF */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Código de Identificación Fiscal (CIF)\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={cfiClienteDetails}\r\n                      onChangeText={setCfiClienteDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Código de Identificación Fiscal\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailClienteDetails}\r\n                      onChangeText={setCorreoEmailClienteDetails}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosClienteDetils}\r\n                      onChangeText={setDetallesBancariosProveedorDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  value={notaClienteDetails}\r\n                  onChangeText={setNotaClienteDetails}\r\n                  placeholder=\"Nota\"\r\n                />\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del cliente\"\r\n                  multiline={true}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  numberOfLines={5}\r\n                  value={descripcionClienteDetails}\r\n                  onChangeText={setDescripcionClienteDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarCliente &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos cliente ${nombreClienteDetails}?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarCliente &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al cliente ${nombreClienteDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarCliente &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"40%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewCliente()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarProveedor()\r\n                      : modificarProveedor()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Clientes\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {(isPermisoAgregarCliente ||\r\n            isPermisoModificarCliente ||\r\n            isPermisoEliminarCliente) && (\r\n            <TouchableOpacity\r\n              onPress={() => auxSetModalProovedoresDates()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 30,\r\n                width: \"12%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                shadowColor: Colors.azul_Oscuro, // Color de la sombra\r\n                shadowOffset: { width: 0, height: 0 },\r\n                shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                shadowRadius: 14, // Difuminado\r\n                borderColor: Colors.azul_Claro,\r\n                borderWidth: 3,\r\n                padding: 10,\r\n                borderRadius: 10,\r\n                marginTop: \"1%\",\r\n                marginHorizontal: \"1%\",\r\n                backgroundColor: Colors.azul_Claro, // Color de fondo del botón\r\n              }}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.radioButtonTextDesktop,\r\n                  selectedOptionTipoOrden === \"option1\" &&\r\n                    styles.radioButtonSelected &&\r\n                    styles.radioButtonTextSelected,\r\n                ]}\r\n              >\r\n                Agregar Cliente\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Cliente:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del Cliente\"\r\n              value={nombreClienteSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreClienteSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              CIF / Carnet Identidad:\r\n            </Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"CIF / Carnet Identidad\"\r\n              value={cifSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setCifSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Detalles Bancarios:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Detalles Bancarios\"\r\n              value={detallesBancariosSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setDetallesBancariosSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Número de Teléfono:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Número de Teléfono\"\r\n              value={telefonoSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setTelefonoSearch}\r\n            />\r\n\r\n            <View\r\n              style={{ width: \"100%\", flexDirection: \"row\", marginTop: \"5%\" }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() => filtrarYOrdenarClientes()}\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableClientes\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableProveedorModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableEntradaModal}\r\n              tiendasByProducto={[]}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalProveedoresDates?.isAddProveedor ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalProveedoresDates?.isModificarProveedor ?? false\r\n                  ? \"Modificar Producto\"\r\n                  : modalProveedoresDates?.isAddProductoShowProveedoresTiendas ??\r\n                    false\r\n                  ? \"Datos del Cliente\"\r\n                  : \"Agregar Cliente\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  value={nombreClienteDetails}\r\n                  onChangeText={setNombreClienteDetails}\r\n                  placeholder=\"Nombre del cliente\"\r\n                />\r\n\r\n                {/* Contenedor para los campos Número de Teléfono y CIF */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Número de Teléfono */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Número de Teléfono\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={telefonoClienteDetails}\r\n                      onChangeText={setTelefonoClienteDetails}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Número de Teléfono\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CIF */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Código de Identificación Fiscal (CIF)\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={cfiClienteDetails}\r\n                      onChangeText={setCfiClienteDetails}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Código de Identificación Fiscal\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {/*Campos de detalles vancarios y de email */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo Correo Electrónico */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Correo Electrónico\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={correoEmailClienteDetails}\r\n                      onChangeText={setCorreoEmailClienteDetails}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Correo Electrónico\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Detalles Bancarios */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Detalles Bancarios\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      value={detallesBancariosClienteDetils}\r\n                      onChangeText={setDetallesBancariosProveedorDetils}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={isPermisoModificarCliente ? true : false}\r\n                      placeholder=\"Detalles Bancarios\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                </View>\r\n                <CustomTextImputSearch\r\n                  style={styles.textImputModal}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  value={notaClienteDetails}\r\n                  onChangeText={setNotaClienteDetails}\r\n                  placeholder=\"Nota\"\r\n                />\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del cliente\"\r\n                  multiline={true}\r\n                  editable={isPermisoModificarCliente ? true : false}\r\n                  numberOfLines={5}\r\n                  value={descripcionClienteDetails}\r\n                  onChangeText={setDescripcionClienteDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarCliente &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarVisible(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos cliente ${nombreClienteDetails}?`\r\n                          );\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarCliente &&\r\n                    modalProveedoresDates?.isDetallesProveedores && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al cliente ${nombreClienteDetails}?`\r\n                          );\r\n                          setIsModalChekEliminarVisible(true);\r\n                          setModalProveedoresDates({\r\n                            id_proveedor: \"\",\r\n                            isAddProveedor: false,\r\n                            isModificarProveedor: false,\r\n                            fileEditable: true,\r\n                            isAddProductoShowProveedoresTiendas: false,\r\n                            isDetallesProveedores: false,\r\n                          });\r\n                        }}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarCliente &&\r\n                    modalProveedoresDates?.id_proveedor === \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => addNewCliente()}\r\n                        disabled={isButtonDisabled}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar Cliente\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarVisible\r\n                      ? eliminarProveedor()\r\n                      : modificarProveedor()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Clientes\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { TiendaShowModal } from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport interface Garantia {\r\n  id_Servicio: string;\r\n  id_Cliente: string;\r\n  id_Tienda: string;\r\n  id_Tipo_servicio: string;\r\n  id_Deuda: string;\r\n  id_Garantia: string;\r\n  fecha: string;\r\n  precio: string;\r\n  nota: string;\r\n  descripcion: string;\r\n  nombreCliente: string;\r\n  nombreTienda: string;\r\n  nombreTipoServicio: string;\r\n  nombreProducto?: string;\r\n  cantidad?: string;\r\n  devuelto: boolean;\r\n  duracion: string;\r\n}\r\n\r\ninterface Props {\r\n  items: Garantia[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableGarantias: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Garantia[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    const obtenerCambioPrecio = async () => {\r\n      if (usuario?.token) {\r\n        // Obtener alro de oneda de cambio\r\n        setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n      }\r\n    };\r\n\r\n    obtenerCambioPrecio();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Este métodod devuelve el mensaje el fodo de la tabla con los parámetros requeridos\r\n  const mensajeOfEndTable = () => {\r\n    let mensaje = \"Suma de precios de servicios minoristas filtrados:   \";\r\n    let sumaMinoristaUSD = 0;\r\n    let sumaMayoristaUSD = 0;\r\n\r\n    items.forEach((item) => {\r\n      if (!item.devuelto) {\r\n        if (parseInt(item.id_Tipo_servicio) === 25) {\r\n          sumaMayoristaUSD +=\r\n            parseFloat(item.precio) *\r\n            (item.cantidad ? parseInt(item.cantidad ?? \"0\") : 0);\r\n        } else {\r\n          sumaMinoristaUSD +=\r\n            parseFloat(item.precio) *\r\n            (item.cantidad ? parseInt(item.cantidad ?? \"0\") : 0);\r\n        }\r\n      }\r\n    });\r\n\r\n    mensaje += `USD: ${sumaMinoristaUSD.toFixed(4)}   CUP: ${(\r\n      sumaMinoristaUSD * cambioMoneda\r\n    ).toFixed(\r\n      0\r\n    )}      Suma de precios de servicios mayoristas filtrados:  CUP: ${(\r\n      sumaMayoristaUSD * cambioMoneda\r\n    ).toFixed(0)} `;\r\n    return String(mensaje);\r\n  };\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Fecha\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Cliente\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Precio\") {\r\n      aux = \"option5\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortServicios({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {(column === \"Nombre Cliente\" ||\r\n                column === \"Precio\" ||\r\n                column === \"Fecha\") && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Suave,\r\n                    marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                    width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                    height: 24, // Asegúrate de que tenga tamaño consistente\r\n                    justifyContent: \"center\", // Centrar contenido del botón\r\n                    alignItems: \"center\", // Centrar contenido del botón\r\n                    borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                    marginBottom: 4, // Elevar el botón del borde inferior\r\n                    paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                  }}\r\n                  onPress={() => sortEntradasAux(column)}\r\n                >\r\n                  <Image\r\n                    source={require(\"../images/ordenar.png\")}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </TouchableOpacity>\r\n              )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Cliente !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Garantia}\r\n                onPress={() => detailsModalView(item.id_Garantia)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Precio USD */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar contenido\r\n                >\r\n                  {item.duracion}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >{parseFloat(item.precio).toFixed(4)}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(parseFloat(item.precio) * cambioMoneda).toFixed(0)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Cantidad Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.cantidad ? item.cantidad : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Servicios\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Garantia}\r\n                onPress={() => detailsModalView(item.id_Garantia)}\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Tercera celda - Duaración Garantia */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  {item.duracion}\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio USD */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {parseFloat(item.precio).toFixed(4)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(parseFloat(item.precio) * cambioMoneda).toFixed(0)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Cantidad Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.cantidad ? item.cantidad : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getCantidadProductoInTiendaEspecifica,\r\n  isProductoInTienda,\r\n  tienda_Realizarventa,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getAllEntradasByProductoId,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n  getProductoById,\r\n  getProductoCantidadTotal,\r\n  updateProductoTienda,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  addServicio,\r\n  deleteServicio,\r\n  filtrarSrvicio,\r\n  getAllServicios,\r\n  getServicioByID,\r\n  modificarServicio,\r\n  ordenarServicios,\r\n} from \"../services/ServiciosServices\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport { getAllTipoServicios } from \"../services/TipoServiciosServices\";\r\nimport { getAllClientes } from \"../services/clienteServices\";\r\nimport {\r\n  addVenta,\r\n  deleteVenta,\r\n  getAllVentas,\r\n  getVentaByIDOfServicio,\r\n} from \"../services/ventasServices\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\nimport {\r\n  Garantia,\r\n  MyDateTableGarantias,\r\n} from \"../components/MyDateTableGarantias\";\r\nimport {\r\n  deleteGarantia,\r\n  filtrarGarantia,\r\n  getAllGarantias,\r\n  getGarantiaByID,\r\n  modificarGarantia,\r\n} from \"../services/GarantiaServices\";\r\n\r\nexport default function GarantiasView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n  const [\r\n    capaPrioridadTipoServicioDetails,\r\n    setCapaPrioridadTipoServicioDetails,\r\n  ] = useState(1000);\r\n  const [capaPrioridadProductoDetails, setCapaPrioridadProductoDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadClienteDetails, setCapaPrioridadClienteDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTipoServicioSearsh, setCapaPrioridadTipoServicioSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendaSearsh, setCapaPrioridadTiendaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"TipoServicioDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ProductoDetails\") {\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(2000);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ClienteDetails\") {\r\n      setCapaPrioridadClienteDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"TipoServicioSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(2000);\r\n    } else if (prioridad === \"TiendaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(2000);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n\r\n  const [idFirstTimeProducto, setIdFirsTimeProducto] = useState(\"\");\r\n  const [auxOptimizacion, setAuxOptimizacion] = useState(false);\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idServicioDetails, setIdServicioDetails] = useState(\"\");\r\n  const [idGarantiaDetails, setIdGarantiaDetaisl] = useState(\"\");\r\n  const [idClienteDetails, setIdClienteDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [idTipoServicioDetails, setIdTipoServicioDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [cantidadProductoDetails, setCantidadProductoDetails] = useState(\"1\");\r\n  const [costoPromedioProductoCUPDetails, setCostoPromedioProductoCUPDetails] =\r\n    useState(\"0\");\r\n  const [costoPromedioProductoUSDDetails, setCostoPromedioProductoUSDDetails] =\r\n    useState(\"0\");\r\n  const [precioUSDDetails, setPrecioUSDDetails] = useState(\"\");\r\n  const [devueltoDetails, setDevueltoDetails] = useState(\"sin Devolver\");\r\n  const [precioCUPDetails, setPrecioCUPDetails] = useState(\"\");\r\n  const [notaDetails, setNotaDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n  const [duracionGarantiaDetails, setDuracionGarantiaDetails] = useState(\"\");\r\n\r\n  // Variable auxiliar para el redondeo de memerio\r\n  const [auxRedondeo, setAuxRedondeo] = useState(\"\");\r\n\r\n  // Variables axiliares para lavalidación de campos\r\n  const [idTiendaDetailsViejo, setIdTiendaDetailsViejo] = useState(\"\");\r\n  const [idProductoDetailsViejo, setIdProductoDetailsViejo] = useState(\"\");\r\n  const [cantidadProductoDetailsViejo, setCantidadProductoDetailsViejo] =\r\n    useState(\"\");\r\n  const [idTipoServicioDetailsViejo, setIdTipoServicioDetailsViejo] =\r\n    useState(\"\");\r\n  const [devueltoDetailsViejo, setDevueltoDetailsViejo] =\r\n    useState(\"sin Devolver\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  // Variable que controla si se está haciendo una venta o se hizo una venta\r\n  const [isVentaProducto, setIsVentaProducto] = useState(false);\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoModificarGarantia, setIsPermisoModificarGarantia] =\r\n    React.useState(false);\r\n\r\n  const [isPermisoVerCostoVenta, setIsPermisoVerCostoVenta] = useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultModificarGarantia = await isPermiso(\r\n        usuario.token,\r\n        \"33\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      // cargar cambio de moneda\r\n      setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n\r\n      setIsPermisoModificarGarantia(resultModificarGarantia);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Garantia[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreCliente, setDropDownItemsNombreCliente] = useState<\r\n    ProveedorPiker[]\r\n  >([]);\r\n  const [nombreProductoVentaDetails, setNombreProductoVentaDetails] =\r\n    useState(String);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreTipoServicio, setDropDownItemsNombreTipoServicio] =\r\n    useState<ProductoPiker[]>([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreClienteSearch, setNombreClienteSearch] = useState(\"\");\r\n  const [nombreProductoSearsh, setNombreProductoSearch] = useState(\"\");\r\n  const [idTipoServicioSearch, setIdTipoServicioSearch] = useState(\"\");\r\n  const [idTiendaSearch, setIdTiendaSearch] = useState(\"\");\r\n  const [rangoPrecioDesdeSearch, setRangoPrecioDesdeSearch] = useState(\"\");\r\n  const [rangoPrecioHastaSearch, setRangoPrecioHastaSearch] = useState(\"\");\r\n  const [rangoDuracionDesdeSearch, setRangoDuracionDesdeSearch] = useState(\"\");\r\n  const [rangoDuracionHastaSearch, setRangoDuracionHastaSearch] = useState(\"\");\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2024\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n\r\n  const options = [\r\n    { label: \"Día\", value: \"dia\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n    { label: \"Mes\", value: \"mes\" },\r\n  ];\r\n\r\n  const optionsDevueltoDetails = [\r\n    { label: \"Devolver\", value: \"devolver\" },\r\n    { label: \"Sin Devolver\", value: \"sin devolver\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"dia\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 6);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else if (value === \"mes\") {\r\n      // Restar 1 mes a la fecha actual\r\n      const lastMonthDate = new Date(currentDate);\r\n      lastMonthDate.setMonth(currentDate.getMonth() - 1);\r\n      const monthYear = String(lastMonthDate.getFullYear());\r\n      const monthMonth = String(lastMonthDate.getMonth() + 1).padStart(2, \"0\");\r\n      const monthDay = String(lastMonthDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${monthYear}-${monthMonth}-${monthDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarGarantias(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getTipoServicioPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTipoServicios(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const tipoServiciosMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tipo_servicio,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTipoServicio([\r\n          { label: \"Todos los tipos de servicios\", value: \"\" },\r\n          ...tipoServiciosMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getClientesPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllClientes(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const ClientesMapeados: ProductoPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_cliente,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreCliente(ClientesMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Todas las tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setIdTipoServicioDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  // Cargar todos los datos de el servicio pro primera ves que se abre el servicio\r\n  const cargarDetailsOfGarantia = async () => {\r\n    setAuxOptimizacion(false);\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getGarantiaByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.servicio.fecha\r\n          .split(\"T\")[0]\r\n          .split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdServicioDetails(result.servicio.id_servicio);\r\n        setIdGarantiaDetaisl(result.id_garantia);\r\n        setIdClienteDetails(result.servicio.cliente.id_cliente);\r\n        setIdTipoServicioDetails(\r\n          result.servicio.tipo_servicio.id_tipo_servicio\r\n        );\r\n        setNotaDetails(result.servicio.nota);\r\n        setDescripcionDetails(result.servicio.descripcion);\r\n        setDevueltoDetails(\r\n          result.servicio.devuelto ? \"devolver\" : \"sin devolver\"\r\n        );\r\n        setDuracionGarantiaDetails(result.duracion);\r\n\r\n        // Actualizar variables para la validación de campos\r\n        setDevueltoDetailsViejo(\r\n          result.servicio.devuelto ? \"devolver\" : \"sin devolver\"\r\n        );\r\n        // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n        if (\r\n          parseInt(result.servicio.tipo_servicio.id_tipo_servicio) === 2 ||\r\n          parseInt(result.servicio.tipo_servicio.id_tipo_servicio) === 4 ||\r\n          parseInt(result.servicio.tipo_servicio.id_tipo_servicio) === 25\r\n        ) {\r\n          const resultventa = await getVentaByIDOfServicio(\r\n            usuario.token,\r\n            result.servicio.id_servicio\r\n          );\r\n          // Obtener entradas del produto para calcular datos del producto\r\n\r\n          // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n          if (resultventa) {\r\n            // Obtener entradas del produto para calcular datos del producto\r\n            const entradas = await getAllEntradasByProductoId(\r\n              usuario?.token,\r\n              resultventa.producto.id_producto\r\n            );\r\n            const cantidadTotalProducto = await getProductoCantidadTotal(\r\n              usuario.token,\r\n              resultventa.producto.id_producto\r\n            );\r\n\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setNombreProductoVentaDetails(resultventa.producto.nombre);\r\n            setIdProductoDetails(resultventa.producto.id_producto);\r\n            setCantidadProductoDetails(resultventa.cantidad);\r\n            setIdTiendaDetails(result.servicio.tienda.id_tienda);\r\n            setPrecioUSDDetails(result.servicio.precio);\r\n            setPrecioCUPDetails(\r\n              String(parseFloat(result.servicio.precio) * cambioMoneda)\r\n            );\r\n            setCostoPromedioProductoUSDDetails(result.producto.costo_acumulado);\r\n          } else {\r\n            // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setIdProductoDetails(\"\");\r\n            setCantidadProductoDetails(\"\");\r\n            setIdTiendaDetails(\"\");\r\n            setPrecioUSDDetails(\"\");\r\n            setPrecioCUPDetails(\"\");\r\n            setCostoPromedioProductoUSDDetails(\"\");\r\n          }\r\n        } else {\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(false);\r\n          setPrecioUSDDetails(result.servicio.precio);\r\n          setPrecioCUPDetails(\r\n            String(parseInt(result.servicio.precio) * cambioMoneda)\r\n          );\r\n          setCostoPromedioProductoUSDDetails(result.servicio.costo);\r\n        }\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares;\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n    setAuxOptimizacion(true);\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Garantia[] | null> => {\r\n    if (usuario?.token) {\r\n      // FALAT LA TIENDA EN EL FILTRADO\r\n      try {\r\n        const result = await filtrarGarantia(\r\n          usuario.token,\r\n          nombreClienteSearch,\r\n          rangoDuracionHastaSearch,\r\n          rangoDuracionDesdeSearch,\r\n          nombreProductoSearsh,\r\n          fechaDesde,\r\n          fechaHasta,\r\n          idTiendaSearch\r\n        );\r\n\r\n        if (result) {\r\n          const serviciosMapeados: Garantia[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Servicio: element.servicio.id_servicio,\r\n              id_Cliente: element.servicio.cliente.id_cliente,\r\n              id_Tienda: element.servicio.tienda.id_tienda,\r\n              id_Tipo_servicio: \"\",\r\n              id_Deuda: \"\",\r\n              id_Garantia: element.id_garantia,\r\n              fecha: element.servicio.fecha,\r\n              precio: element.servicio.precio,\r\n              nota: element.servicio.nota,\r\n              descripcion: element.servicio.descripcion,\r\n              nombreCliente: element.servicio.cliente.nombre,\r\n              nombreTienda: element.servicio.tienda.nombre,\r\n              nombreTipoServicio: \"\",\r\n              nombreProducto: element.servicio.venta\r\n                ? element.servicio.venta.producto.nombre\r\n                : \"\", // Verifica si 'venta' no es null\r\n              cantidad: element.servicio.venta\r\n                ? element.servicio.venta.cantidad\r\n                : \"\", // Verifica si 'venta' no es null\r\n              devuelto: element.servicio.devuelto,\r\n              duracion: element.duracion,\r\n            }))\r\n          );\r\n          return serviciosMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Cargar datos del servicio cuando se seleccionado en la tabla\r\n  useEffect(() => {\r\n    cargarDetailsOfGarantia();\r\n  }, [modalEntradasDates]);\r\n\r\n  useEffect(() => {\r\n    if (auxRedondeo === \"PrecioCUP\") {\r\n      setPrecioUSDDetails(parseFloat(precioUSDDetails).toFixed(4));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"PrecioUSD\") {\r\n      setPrecioCUPDetails(parseFloat(precioCUPDetails).toFixed(0));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoCUP\") {\r\n      setCostoPromedioProductoUSDDetails(\r\n        parseFloat(costoPromedioProductoUSDDetails).toFixed(4)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoUSD\") {\r\n      setCostoPromedioProductoCUPDetails(\r\n        parseFloat(costoPromedioProductoCUPDetails).toFixed(0)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    }\r\n    setAuxRedondeo(\"\");\r\n  }, [auxRedondeo]);\r\n\r\n  useEffect(() => {\r\n    if (auxOptimizacion) {\r\n      if (\r\n        idProductoDetails !== \"\" &&\r\n        idProductoDetails !== idFirstTimeProducto &&\r\n        usuario?.token\r\n      ) {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n        const auxiliarAsyncFuncion = async () => {\r\n          const resultProdcuto = await getProductoById(\r\n            usuario.token,\r\n            idProductoDetails\r\n          );\r\n\r\n          // Cargar el costo promedio del producto seleccionado\r\n          setCostoPromedioProductoUSDDetails(resultProdcuto.costo_acumulado);\r\n          // Cargar precio del producto seleccioando en USD y CUP\r\n          setPrecioUSDDetails(resultProdcuto.precio ?? 0);\r\n          setPrecioCUPDetails(\r\n            String(parseFloat(resultProdcuto.precio) * cambioMoneda) ?? 0\r\n          );\r\n        };\r\n        auxiliarAsyncFuncion();\r\n      } else {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n      }\r\n    }\r\n  }, [idProductoDetails]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        setAuxOptimizacion(false);\r\n        await checkPermiso();\r\n        await getTipoServicioPikerDetails();\r\n        await getClientesPikerDetails();\r\n        await getTiendasPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarGarantias = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let serviciosFiltradas: Garantia[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortServicios?.criterioOrden && sortServicios.tipoOrden) {\r\n          serviciosFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            serviciosFiltradas,\r\n            sortServicios.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        } else {\r\n          serviciosFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            serviciosFiltradas,\r\n            \"option3\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(serviciosFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarGarantias(\r\n      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n    );\r\n  }, [sortServicios, selectedOptionTipoOrden]);\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    setSelecterActivoDetails(\"\");\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ]);\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setIdTiendaDetails(usuario?.id_tienda);\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setPrecioCUPDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setCostoPromedioProductoUSDDetails(\"\");\r\n    setIdTipoServicioDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setNotaDetails(\"\");\r\n    setDescripcionDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Extraemos el año, mes y día de la fecha actual\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    setFechaDiaDetails(String(parseInt(day)));\r\n    setFechaMesDetails(String(parseInt(month)));\r\n    setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarGarantias(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreClienteSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n    setIdTiendaSearch(\"\");\r\n    setIdTipoServicioSearch(\"\");\r\n    setRangoPrecioDesdeSearch(\"\");\r\n    setRangoPrecioHastaSearch(\"\");\r\n    setSelecterActivoDetails(\"\");\r\n  };\r\n\r\n  // Método para actualizar los datos de un producto\r\n  const modificarGarantiaFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando garantía. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR EL GARANTÍA. Compruebe los siguientes campos:\\n\";\r\n      if (duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (flag) {\r\n        await modificarGarantia(\r\n          usuario.token,\r\n          duracionGarantiaDetails,\r\n          idServicioDetails,\r\n          idGarantiaDetails\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La garantía se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarGarantiaFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando servicio. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR SERVICIO. Compruebe los siguientes parámetros:\\n\";\r\n\r\n      if (flag) {\r\n        await deleteGarantia(usuario.token, idGarantiaDetails);\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La garantía se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setDuracionGarantiaDetails(\"\");\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setPrecioCUPDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setCostoPromedioProductoUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setNotaDetails(\"\");\r\n        setDescripcionDetails(\"\");\r\n\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTableDesktop = [\r\n    \"Cliente\",\r\n    \"Tienda\",\r\n    \"Duración\",\r\n    \"USD\",\r\n    \"CUP\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Cliente\",\r\n    \"Tienda\",\r\n    \"Duración\",\r\n    \"USD\",\r\n    \"CUP\",\r\n    \"Producto\",\r\n    \"Cantidad\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableGarantias\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearsh}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Cliente:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del cliente\"\r\n                    value={nombreClienteSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreClienteSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadTiendaSearsh,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={idTiendaSearch}\r\n                      placeholder=\"Seleccione un tienda\"\r\n                      setValue={setIdTiendaSearch}\r\n                      items={dropdownItemsNombreTienda}\r\n                      direction=\"BOTTOM\"\r\n                      onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchMovil}>\r\n                    Rango de Duración en Dias\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Desde\"\r\n                      value={rangoDuracionDesdeSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoDuracionDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyMovil}\r\n                      placeholder=\"Hasta\"\r\n                      value={rangoDuracionHastaSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoDuracionHastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaDesdeSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaHastaSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() =>\r\n                          filtrarYOrdenarGarantias(\r\n                            `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                            `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                          )\r\n                        }\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Servicio\"\r\n                  : \"Datos del Servicio\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.textLabelAsInput}>\r\n                    {dropdownItemsNombreCliente.find(\r\n                      (element) => element.value === idClienteDetails\r\n                    )?.label || \"Cliente no encontrado\"}\r\n                  </Text>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTienda.find(\r\n                        (element) => element.value === idTiendaDetails\r\n                      )?.label || \"Tienda no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTipoServicio.find(\r\n                        (element) => element.value === idTipoServicioDetails\r\n                      )?.label || \"Tipo de Servicio no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Garantías */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 100,\r\n                    }}\r\n                  >\r\n                    <View style={{ marginTop: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Duración en días:\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={duracionGarantiaDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          setDuracionGarantiaDetails(numericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={isPermisoModificarGarantia}\r\n                        placeholder=\"Duracion En días\"\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  {/*  */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {nombreProductoVentaDetails}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {cantidadProductoDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en USD\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {precioUSDDetails}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {parseFloat(precioUSDDetails) * cambioMoneda}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Campo fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    marginLeft: \"2%\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                  {isDateLoaded && (\r\n                    <MyDateInput\r\n                      dayValue={fechaDiaDetails}\r\n                      monthValue={fechaMesDetails}\r\n                      yearValue={fechaAnnoDetails}\r\n                      onDayChange={setFechaDiaDetails}\r\n                      onMonthChange={setFechaMesDetails}\r\n                      onYearChange={setFechaAnnoDetails}\r\n                      style={{ margin: 20 }}\r\n                      styleText={styles.labelTextModalDesktop}\r\n                      onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                      isReadOnly={!false}\r\n                    />\r\n                  )}\r\n                </View>\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginLeft: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <Text style={styles.textLabelAsInput}>{notaDetails}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <Text style={styles.textDescroptionLabelAsInput}>\r\n                  {descripcionDetails}\r\n                </Text>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarGarantia &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"35%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta garantía?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Garantía\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                    {/* Botón para eliminar proveedor */}\r\n                  {isPermisoModificarGarantia &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"35%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR esta garantía?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Garantía\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => isModalChekEliminarEntrada\r\n                    ? eliminarGarantiaFunction()\r\n                    : modificarGarantiaFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Garantías\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearsh}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Cliente:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del cliente\"\r\n              value={nombreClienteSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreClienteSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n            <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                zIndex: capaPrioridadTiendaSearsh,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={idTiendaSearch}\r\n                placeholder=\"Seleccione un tienda\"\r\n                setValue={setIdTiendaSearch}\r\n                items={dropdownItemsNombreTienda}\r\n                direction=\"BOTTOM\"\r\n                onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              Rango de Duración en Dias\r\n            </Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={rangoDuracionDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoDuracionDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={rangoDuracionHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoDuracionHastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() =>\r\n                    filtrarYOrdenarGarantias(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    )\r\n                  }\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableGarantias\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Garantía\"\r\n                  : \"Datos del Garantía\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.textLabelAsInput}>\r\n                    {dropdownItemsNombreCliente.find(\r\n                      (element) => element.value === idClienteDetails\r\n                    )?.label || \"Cliente no encontrado\"}\r\n                  </Text>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTienda.find(\r\n                        (element) => element.value === idTiendaDetails\r\n                      )?.label || \"Tienda no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTipoServicio.find(\r\n                        (element) => element.value === idTipoServicioDetails\r\n                      )?.label || \"Tipo de Servicio no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Garantías */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 100,\r\n                    }}\r\n                  >\r\n                    <View style={{ marginTop: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Duración en días:\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={duracionGarantiaDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          setDuracionGarantiaDetails(numericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={isPermisoModificarGarantia}\r\n                        placeholder=\"Duracion En días\"\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  {/*  */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {nombreProductoVentaDetails}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {cantidadProductoDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en USD\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {precioUSDDetails}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {parseFloat(precioUSDDetails) * cambioMoneda}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={!false}\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"3%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <Text style={styles.textLabelAsInput}>{notaDetails}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <Text style={styles.textDescroptionLabelAsInput}>\r\n                  {descripcionDetails}\r\n                </Text>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para modificar proveedor */}\r\n                  {isPermisoModificarGarantia &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(false);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas MODIFICAR los datos de esta garantía?`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Modificar Garantía\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoModificarGarantia &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          marginRight: \"5%\",\r\n                          shadowColor: \"#000\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR esta garantía?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Garantía\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarGarantiaFunction()\r\n                      : modificarGarantiaFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Garantías\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  Button,\r\n  Animated,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { TiendaShowModal } from \"./MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"./MyDateTableModalShowDateProveedores\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport { isProductoInTienda } from \"../services/TiendaServices\";\r\nimport { deleteProducto } from \"../services/ProductoServices\";\r\nimport CustomTextImputSearch from \"./CustomTextImputSearch\";\r\nimport {\r\n  MyDateTableModalDataMoverTiendas,\r\n  TiendaMoverShowModal,\r\n} from \"./MyDateTableModalDataMoverTiendas\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { useSortEntradas } from \"../contexts/AuxiliarSortEntradas\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\n\r\nexport interface Deuda {\r\n  id_Servicio: string;\r\n  id_Cliente: string;\r\n  id_Tienda: string;\r\n  id_Tipo_servicio: string;\r\n  id_Deuda: string;\r\n  id_Garantia: string;\r\n  fecha: string;\r\n  precio: string;\r\n  nota: string;\r\n  descripcion: string;\r\n  nombreCliente: string;\r\n  nombreTienda: string;\r\n  nombreTipoServicio: string;\r\n  nombreProducto?: string;\r\n  cantidad?: string;\r\n  devuelto: boolean;\r\n  deuda: string;\r\n  pagos_deuda: any[];\r\n  total_pagado: number;\r\n  cantidad_restante: number;\r\n\r\n}\r\n\r\ninterface Props {\r\n  items: Deuda[];\r\n  columns: string[];\r\n  isMobile: boolean;\r\n  columnasMyDateTableEntradaModal: string[];\r\n  columnasMyDateTableTiendaModal: string[];\r\n  tiendasByProducto: TiendaShowModal[];\r\n  proveedorByProducto: ProveedoresShowModal[];\r\n}\r\n\r\nexport const MyDateTableDeudas: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  isMobile,\r\n}) => {\r\n  const navigation = useNavigation();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Estilos condicionales\r\n  const containterStyles = isMobile\r\n    ? styles.containerMovil\r\n    : styles.containerDesktop;\r\n\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(20);\r\n  const [displayedItems, setDisplayedItems] = React.useState<Deuda[]>([]); // Estado para los elementos mostrados\r\n\r\n  const [isModalVisible, setModalVisible] = React.useState(false);\r\n  const [isModalModificarVisible, setModalModificarVisible] =\r\n    React.useState(false);\r\n  const [isModalEliminarVisible, setModalEliminarVisible] =\r\n    React.useState(false);\r\n  const [isModalMoverVisible, setModalMoverVisible] = React.useState(false);\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\n\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n\r\n  const columnasParaLaTablaMoverProducto = [\"Nombre\"];\r\n  const [tiendasByProducto, setTiendasByProducto] = React.useState<\r\n    TiendaMoverShowModal[]\r\n  >([\r\n    { id_tienda: \"1\", nombre: \"Tienda 1\" },\r\n    { id_tienda: \"2\", nombre: \"Tienda 2\" },\r\n    { id_tienda: \"3\", nombre: \"Tienda 3\" },\r\n  ]);\r\n\r\n  const detailsModalView = (id_entrada: string) => {\r\n    setModalEntradasDates({\r\n      id_entrada: id_entrada,\r\n      isAddEntrada: true,\r\n      fileEditable: false,\r\n      isModificarEntrada: false,\r\n    });\r\n  };\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoOpcionesDeCelda, setIsPermisoOpcionesDeCelda] =\r\n    React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaModificar,\r\n    setIsPermisoOpcionesDeCeldaModificar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaEliminar,\r\n    setIsPermisoOpcionesDeCeldaEliminar,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverLocal,\r\n    setIsPermisoOpcionesDeCeldaMoverLocal,\r\n  ] = React.useState(false);\r\n  const [\r\n    isPermisoOpcionesDeCeldaMoverGeneral,\r\n    setIsPermisoOpcionesDeCeldaMoverGeneral,\r\n  ] = React.useState(false);\r\n\r\n  // Constante para almacenar la cantidad de productos a mover\r\n  const [cantidadMoverProducto, setCantidadMoverProducto] = React.useState(\"\");\r\n  // Codógp dodne se llama a los permisos de el usuario\r\n  React.useEffect(() => {\r\n    const checkPermiso = async () => {\r\n      if (usuario?.token) {\r\n        const resultPermisoButonOptionModificar = await isPermiso(\r\n          usuario.token,\r\n          \"7\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionEliminar = await isPermiso(\r\n          usuario.token,\r\n          \"8\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverLocal = await isPermiso(\r\n          usuario.token,\r\n          \"30\",\r\n          usuario.id_usuario\r\n        );\r\n        const resultPermisoButonOptionMoverGeneral = await isPermiso(\r\n          usuario.token,\r\n          \"31\",\r\n          usuario.id_usuario\r\n        );\r\n\r\n        // Actualiza el estado con los resultado\r\n        setIsPermisoOpcionesDeCeldaModificar(resultPermisoButonOptionModificar);\r\n        setIsPermisoOpcionesDeCeldaEliminar(resultPermisoButonOptionEliminar);\r\n        setIsPermisoOpcionesDeCeldaMoverLocal(\r\n          resultPermisoButonOptionMoverLocal\r\n        );\r\n        setIsPermisoOpcionesDeCeldaMoverGeneral(\r\n          resultPermisoButonOptionMoverGeneral\r\n        );\r\n        setIsPermisoOpcionesDeCelda(\r\n          resultPermisoButonOptionEliminar ||\r\n            resultPermisoButonOptionModificar ||\r\n            resultPermisoButonOptionMoverLocal ||\r\n            resultPermisoButonOptionMoverGeneral\r\n        );\r\n      }\r\n    };\r\n\r\n    const obtenerCambioPrecio = async () => {\r\n      if (usuario?.token) {\r\n        // Obtener alro de oneda de cambio\r\n        setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n      }\r\n    };\r\n\r\n    obtenerCambioPrecio();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza los elementos mostrados al cambiar de página\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n    // Limpia los elementos actuales antes de actualizar\r\n    setDisplayedItems([]); // Limpia los elementos de la tabla\r\n    setTimeout(() => {\r\n      setDisplayedItems(items.slice(from, to)); // Muestra los nuevos elementos después de un breve intervalo\r\n    }, 0); // Opcional: puedes ajustar este tiempo si quieres un pequeño retraso visual\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage); // Cambia de página si es válido\r\n    }\r\n  };\r\n\r\n  // Metodo para calcular si la deuda está saldada o no\r\n  const isDeudaSaldadaFromTable = (pago_deudas: any[], deuda: string) =>{\r\n    let suma: number = 0.0;\r\n    if (pago_deudas) {\r\n      pago_deudas.forEach((pago) => {\r\n        suma += parseFloat(pago.pagada);\r\n      })\r\n      if (parseFloat(deuda) === suma) {\r\n        return <Image source={require(\"../images/aprobado.png\")} style={{width: 20, height: 20}} />\r\n      }else{\r\n        return <Image source={require(\"../images/candelado.png\")} style={{width: 20, height: 20}} />\r\n      }\r\n    }else{\r\n      return <Image source={require(\"../images/candelado.png\")} style={{width: 20, height: 20}} />\r\n    }\r\n  }\r\n\r\n  // Auxliliar para ordenar entradas\r\n  const sortEntradasAux = (column: string) => {\r\n    let aux = \"\";\r\n\r\n    // Lógica para determinar el criterioOrden\r\n    if (column === \"Fecha\") {\r\n      aux = \"option3\";\r\n    } else if (column === \"Nombre Cliente\") {\r\n      aux = \"option4\";\r\n    } else if (column === \"Precio\") {\r\n      aux = \"option5\";\r\n    }\r\n\r\n    // Llamamos a setSortProductos con el nuevo valor\r\n    setSortServicios({\r\n      items: items,\r\n      criterioOrden: aux,\r\n      tipoOrden: \"option1\", // Alterna entre \"option1\" y \"option2\"\r\n    });\r\n  };\r\n\r\n  // Función para mostrar las columnas de la tabla\r\n  const showTableColumns = () => {\r\n    return (\r\n      <DataTable.Header>\r\n        {columns.map((column, index) => (\r\n          <DataTable.Title\r\n            key={index}\r\n            style={[\r\n              styles.headerColumn,\r\n              {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            numeric={index > 1}\r\n          >\r\n            <Text\r\n              style={\r\n                isMobile ? styles.headerTextMovil : styles.headerTextDesktop\r\n              }\r\n            >\r\n              {column}\r\n              {column === \"Fecha\" && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Suave,\r\n                    marginLeft: 10, // Cambiar porcentaje a píxeles o usar un valor numérico para más control\r\n                    width: 24, // Cambia este tamaño a un valor fijo que funcione bien visualmente\r\n                    height: 24, // Asegúrate de que tenga tamaño consistente\r\n                    justifyContent: \"center\", // Centrar contenido del botón\r\n                    alignItems: \"center\", // Centrar contenido del botón\r\n                    borderRadius: 6, // Para darle forma de botón circular si lo deseas\r\n                    marginBottom: 4, // Elevar el botón del borde inferior\r\n                    paddingTop: 2, // Ajustar ligeramente la posición interna del contenido\r\n                  }}\r\n                  onPress={() => sortEntradasAux(column)}\r\n                >\r\n                  <Image\r\n                    source={require(\"../images/ordenar.png\")}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </TouchableOpacity>\r\n              )}\r\n            </Text>\r\n          </DataTable.Title>\r\n        ))}\r\n      </DataTable.Header>\r\n    );\r\n  };\r\n  const onPressIn = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1.5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const onPressOut = () => {\r\n    Animated.spring(scale, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const [idEntradaOption, setIdEntradaOption] = React.useState(\"\");\r\n  const [option, setOption] = React.useState(\"\");\r\n  // Capturar el id del producto que se quiere hacer algo con el\r\n  // Función para abrir/cerrar el modal\r\n  const toggleModal = (id_producto: string) => {\r\n    setIdEntradaOption(id_producto);\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n  const toggleModalOption = (option: string) => {\r\n    setOption(option);\r\n    setModalVisible(!isModalVisible);\r\n    if (option === \"Modificar\") {\r\n      setModalEntradasDates({\r\n        id_entrada: idEntradaOption,\r\n        isAddEntrada: true,\r\n        fileEditable: true,\r\n        isModificarEntrada: false,\r\n      });\r\n      if (usuario?.token) {\r\n        const result = \"\"; // Quieri para todas las tiendas en las que no se encuentra el usuario\r\n      }\r\n    } else if (option === \"Eliminar\") {\r\n      setModalEliminarVisible(!isModalEliminarVisible);\r\n    } else if (option == \"Mover\") {\r\n      setModalMoverVisible(!isModalMoverVisible);\r\n    }\r\n  };\r\n\r\n  const auxDeleteProductoById = async () => {\r\n    const aux = await deleteProductoById();\r\n    setModalEliminarVisible(!isModalEliminarVisible);\r\n    if (aux) {\r\n      const nuevosProductos = displayedItems.filter(\r\n        (producto) => producto.id_Cliente !== idEntradaOption\r\n      );\r\n      setDisplayedItems(nuevosProductos);\r\n      setModalMensaje(\"Producto eliminado con éxito\");\r\n      setModalMensajeView(true);\r\n    } else {\r\n      setModalMensaje(\r\n        \"ERROR AL ELIMINAR: Ya se han echo operaciones con el producto o ya está en una tieda\"\r\n      );\r\n      setModalMensajeView(true);\r\n    }\r\n  };\r\n  const deleteProductoById = async () => {\r\n    if (usuario?.token) {\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idEntradaOption,\r\n        usuario.id_tienda\r\n      );\r\n      if (result == 0) {\r\n        const auxDelete = await deleteProducto(usuario.token, idEntradaOption);\r\n        if (auxDelete) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log(\"Huvo un problema al comprobar la tienda del producto\");\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          <DataTable style={{ width: \"150%\" }}>\r\n            {showTableColumns()}\r\n\r\n            {displayedItems.map((item) => (\r\n              <DataTable.Row\r\n                key={item.id_Deuda}\r\n                onPress={() => detailsModalView(item.id_Deuda)}\r\n                style={{ justifyContent: \"space-around\" }} // Mantiene el espaciado entre las celdas\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center' para centrar el texto\r\n                    }}\r\n                    numberOfLines={2} // Limita a 2 líneas\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(parseFloat(item.precio) * parseInt(item.cantidad)).toFixed(5)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {((parseFloat(item.precio) * parseInt(item.cantidad)) * cambioMoneda).toFixed(2)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Cantidad Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.total_pagado.toFixed(5)}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Deuda*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{(item.total_pagado * cambioMoneda).toFixed(2)}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Saldada*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{isDeudaSaldadaFromTable(item.pagos_deuda, item.deuda)}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n            {/* Modal con las opciones de Mover, Modificar, Eliminar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalVisible}\r\n              animationType=\"fade\"\r\n              onRequestClose={() => toggleModal(\"\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Opciones\r\n                  </Text>\r\n\r\n                  {isPermisoOpcionesDeCeldaModificar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Modificar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/edit.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\", fontSize: 16 }}>\r\n                        Modificar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {isPermisoOpcionesDeCeldaEliminar && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Eliminar\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/delete.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Eliminar</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {(isPermisoOpcionesDeCeldaMoverGeneral ||\r\n                    isPermisoOpcionesDeCeldaMoverLocal) && (\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Claro,\r\n                        flex: 1,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        marginBottom: 10,\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\", // Alinea el contenido al inicio del botón\r\n                      }}\r\n                      onPress={() => {\r\n                        toggleModalOption(\"Mover\");\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../images/mover.png\")}\r\n                        style={{\r\n                          height: 26, // Ajusta el tamaño según lo necesites\r\n                          width: 26, // Ajusta el tamaño según lo necesites\r\n                          marginRight: 10, // Espacio entre la imagen y el texto\r\n                        }}\r\n                      />\r\n                      <Text style={{ color: \"white\" }}>Mover</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n\r\n                  {/* Botón para cerrar el modal */}\r\n                  <TouchableOpacity\r\n                    onPress={() => toggleModal(\"\")}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cerrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para comprbar el Modificar */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalModificarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {idEntradaOption}\r\n                    {option}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalModificarVisible(!isModalModificarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Eliminar*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalEliminarVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 350,\r\n                    height: 200,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    ¿Estás seguro de que deseas eliminar este producto?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\", // Espacio entre los botones\r\n                      width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.rojo_oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() => auxDeleteProductoById()}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>Sí</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        padding: 10,\r\n                        borderRadius: 8,\r\n                        width: \"48%\", // Ajusta el ancho de los botones\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onPress={() =>\r\n                        setModalEliminarVisible(!isModalEliminarVisible)\r\n                      }\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>No</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      setModalEliminarVisible(!isModalEliminarVisible)\r\n                    }\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal para el Mover*/}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMoverVisible}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 400, // Ajusta el ancho del modal a un porcentaje del ancho de la pantalla\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    Mover Producto a Tienda\r\n                  </Text>\r\n\r\n                  <Text style={{ fontSize: 16, marginBottom: 10 }}>\r\n                    La cantidad que desea mover\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={{\r\n                      height: 50,\r\n                      borderColor: Colors.azul_Oscuro,\r\n                      borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                      shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                      shadowOffset: { width: 0, height: 0 },\r\n                      shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                      shadowRadius: 14, // Difuminado\r\n                      width: \"90%\",\r\n                      marginTop: \"2%\",\r\n                      backgroundColor: Colors.blanco_Suave,\r\n                      borderRadius: 13,\r\n                      fontSize: 18, // Tamaño de letra más grande\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                      textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                      textShadowRadius: 2, // Difuminado de la sombra\r\n                      fontWeight: \"bold\", // Letra en negritas\r\n                      paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                    }}\r\n                    cursorColor={Colors.azul_Oscuro}\r\n                    placeholder=\"Cantidad a mover\"\r\n                    value={cantidadMoverProducto}\r\n                    onChangeText={(text) => {\r\n                      const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                      setCantidadMoverProducto(numericValue);\r\n                    }}\r\n                  />\r\n\r\n                  <Text\r\n                    style={{ fontSize: 16, marginBottom: 5, marginTop: 10 }}\r\n                  >\r\n                    Tiendas para mover los productos\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {/* Este View se asegura que la tabla ocupe el 100% */}\r\n                    <MyDateTableModalDataMoverTiendas\r\n                      columns={columnasParaLaTablaMoverProducto}\r\n                      items={tiendasByProducto} // Asegura que la tabla ocupe el 100% del ancho del contenedor\r\n                    />\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => alert(\"Not Suport yet\")}\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Claro,\r\n                      borderRadius: 15,\r\n                      width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                      height: 50, // Altura fija para pantallas de escritorio\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      shadowColor: \"#000\",\r\n                      shadowOffset: { width: 3, height: 4 },\r\n                      shadowOpacity: 0.3,\r\n                      shadowRadius: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: Colors.blanco }}>Mover</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalMoverVisible(!isModalMoverVisible)}\r\n                    style={{ marginTop: 20, alignItems: \"center\" }}\r\n                  >\r\n                    <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/*Modal mensaje */}\r\n            <Modal\r\n              transparent={true}\r\n              visible={isModalMensajeView}\r\n              animationType=\"fade\"\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: 250,\r\n                    padding: 20,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 10,\r\n                    alignItems: \"center\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: { width: 0, height: 2 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 5,\r\n                    elevation: 5,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: 20,\r\n                    }}\r\n                  >\r\n                    {modalMensaje}\r\n                  </Text>\r\n\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      backgroundColor: Colors.azul_Oscuro,\r\n                      padding: 10,\r\n                      borderRadius: 8,\r\n                      width: \"48%\", // Ajusta el ancho de los botones\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    onPress={() => navigation.replace(\"Servicios\")}\r\n                  >\r\n                    <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            <View style={styles.paginationContainer}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  page === 0 && styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page - 1)}\r\n                disabled={page === 0} // Desactiva el botón si es la primera página\r\n              >\r\n                <Text style={styles.paginationLabel}>Anterior</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.paginationLabel}>\r\n                {`${page * itemsPerPage + 1}-${Math.min(\r\n                  (page + 1) * itemsPerPage,\r\n                  items.length\r\n                )} de ${items.length}`}\r\n              </Text>\r\n\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.paginationButtonMovil,\r\n                  (page + 1) * itemsPerPage >= items.length &&\r\n                    styles.disabledButton,\r\n                ]}\r\n                onPress={() => handleChangePage(page + 1)}\r\n                disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n              >\r\n                <Text style={styles.paginationLabel}>Próxima</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </DataTable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={containterStyles}>\r\n        <DataTable>\r\n          {showTableColumns()}\r\n\r\n          {displayedItems.map((item) => {\r\n            return (\r\n              <DataTable.Row\r\n                key={item.id_Deuda}\r\n                onPress={() => detailsModalView(item.id_Deuda)}\r\n              >\r\n                {/* Primera celda - Nombre Cliente*/}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreCliente}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Segunda celda - Nombre Tienda */}\r\n                <DataTable.Cell style={styles.handerRow}>\r\n                  <Text\r\n                    style={{\r\n                      flexWrap: \"wrap\",\r\n                      width: \"100%\",\r\n                      textAlign: \"center\", // Cambiado a 'center'\r\n                    }}\r\n                    numberOfLines={2}\r\n                  >\r\n                    {item.nombreTienda}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.nombreProducto ? item.nombreProducto : \"\"}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio USD */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" }, // Centrar contenido\r\n                  ]}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {(parseFloat(item.precio) * parseInt(item.cantidad)).toFixed(5)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Precio CUP */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: item.devuelto ? Colors.gris_claro : Colors.negro,\r\n                    }}\r\n                  >\r\n                    {((parseFloat(item.precio) * parseInt(item.cantidad)) * cambioMoneda).toFixed(2)}\r\n                  </Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Cuarta celda - Cantidad Producto */}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.total_pagado.toFixed(5)}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Deuda*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{(item.total_pagado * cambioMoneda).toFixed(2)}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Saldada*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{isDeudaSaldadaFromTable(item.pagos_deuda, item.deuda)}</Text>\r\n                </DataTable.Cell>\r\n\r\n                {/* Quinta celda - Fecha*/}\r\n                <DataTable.Cell\r\n                  numeric\r\n                  style={[\r\n                    styles.handerRow,\r\n                    { justifyContent: \"center\", alignItems: \"center\" },\r\n                  ]} // Centrar el texto\r\n                >\r\n                  <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            );\r\n          })}\r\n\r\n          {/*Modal mensaje */}\r\n          <Modal\r\n            transparent={true}\r\n            visible={isModalMensajeView}\r\n            animationType=\"fade\"\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 400,\r\n                  padding: 20,\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 10,\r\n                  alignItems: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 0, height: 2 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                  elevation: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n                >\r\n                  {modalMensaje}\r\n                </Text>\r\n\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => navigation.replace(\"Productos\")}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <View style={styles.paginationContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                page === 0 && styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page - 1)}\r\n              disabled={page === 0} // Desactiva el botón si es la primera página\r\n            >\r\n              <Text style={styles.paginationLabel}>Anterior</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paginationLabel}>\r\n              {`${page * itemsPerPage + 1}-${Math.min(\r\n                (page + 1) * itemsPerPage,\r\n                items.length\r\n              )} of ${items.length}`}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.paginationButtonDesktop,\r\n                (page + 1) * itemsPerPage >= items.length &&\r\n                  styles.disabledButton,\r\n              ]}\r\n              onPress={() => handleChangePage(page + 1)}\r\n              disabled={(page + 1) * itemsPerPage >= items.length} // Desactiva si es la última página\r\n            >\r\n              <Text style={styles.paginationLabel}>Próxima</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </DataTable>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginTop: \"2%\",\r\n  },\r\n  containerMovil: {\r\n    flex: 1,\r\n    marginTop: \"2%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerTextMovil: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonDesktop: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"15%\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: Colors.azul_Suave,\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 14,\r\n    elevation: 3,\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  Animated,\r\n} from \"react-native\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { useFocusEffect } from \"@react-navigation/native\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\n\r\nexport interface PagoDeudaShowModal {\r\n  id_pago_deuda: string;\r\n  pagada: string;\r\n  fecha: string;\r\n}\r\n\r\ninterface Props {\r\n  items: PagoDeudaShowModal[];\r\n  columns: string[];\r\n  onButtonPress: (item: PagoDeudaShowModal) => void;\r\n}\r\n\r\nexport const MyDateTablePagoDeudaWithButton: React.FC<Props> = ({\r\n  items,\r\n  columns,\r\n  onButtonPress,\r\n}) => {\r\n  const [cambioMoneda, setCambioMoneda] = React.useState(0);\r\nconst { usuario, setUsuario } = useUsuario();\r\n  const [scale] = React.useState(new Animated.Value(1));\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState<number>(5);\r\n  const [displayedItems, setDisplayedItems] = React.useState<PagoDeudaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    const from = page * itemsPerPage;\r\n    const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n    setDisplayedItems(items.slice(from, to));\r\n  }, [page, items, itemsPerPage]);\r\n\r\n  useFocusEffect(\r\n      React.useCallback(() => {\r\n        const runEffects = async () => {\r\n          // cargar cambio de moneda\r\n          setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n        };\r\n        runEffects();\r\n  \r\n        return () => {\r\n          // Código que se ejecuta cuando se cierra la interfaz\r\n        };\r\n      }, [])\r\n    );\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    if (newPage >= 0 && newPage * itemsPerPage < items.length) {\r\n      setPage(newPage);\r\n    }\r\n  };\r\n\r\n  const showTableColumns = () => (\r\n    <DataTable.Header style={{ justifyContent: \"space-between\" }}>\r\n      {columns.map((column, index) => (\r\n        <DataTable.Title\r\n          key={index}\r\n          style={[styles.headerColumn, { flex: 1 }]}\r\n          numeric={index > 1}\r\n        >\r\n          <Text style={styles.headerTextDesktop}>{column}</Text>\r\n        </DataTable.Title>\r\n      ))}\r\n      <DataTable.Title style={styles.headerColumn}>\r\n        <Text style={styles.headerTextDesktop}>Acción</Text>\r\n      </DataTable.Title>\r\n    </DataTable.Header>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.containerDesktop}>\r\n      <DataTable style={{ width: \"100%\" }}>\r\n        {showTableColumns()}\r\n\r\n        {displayedItems.map((item) => (\r\n          <DataTable.Row key={item.id_pago_deuda}>\r\n            <DataTable.Cell numeric style={styles.handerRow}>\r\n              {parseFloat(item.pagada).toFixed(5)}\r\n            </DataTable.Cell>\r\n            <DataTable.Cell numeric style={styles.handerRow}>\r\n              {(parseFloat(item.pagada) * cambioMoneda).toFixed(2)}\r\n            </DataTable.Cell>\r\n            <DataTable.Cell numeric style={styles.handerRow}>\r\n              <Text>{item.fecha.split(\"T\")[0]}</Text>\r\n            </DataTable.Cell>\r\n            <DataTable.Cell style={styles.actionColumn}>\r\n              <TouchableOpacity\r\n                style={styles.actionButton}\r\n                onPress={() => onButtonPress(item)}\r\n              >\r\n                <Text style={styles.actionButtonText}>Eliminar</Text>\r\n              </TouchableOpacity>\r\n            </DataTable.Cell>\r\n          </DataTable.Row>\r\n        ))}\r\n\r\n        <View style={styles.paginationContainer}>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.paginationButtonMovil,\r\n              page === 0 && styles.disabledButton,\r\n            ]}\r\n            onPress={() => handleChangePage(page - 1)}\r\n            disabled={page === 0}\r\n          >\r\n            <Text style={styles.paginationLabel}>Anterior</Text>\r\n          </TouchableOpacity>\r\n\r\n          <Text style={styles.paginationLabel}>\r\n            {`${page * itemsPerPage + 1}-${Math.min(\r\n              (page + 1) * itemsPerPage,\r\n              items.length\r\n            )} of ${items.length}`}\r\n          </Text>\r\n\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.paginationButtonMovil,\r\n              (page + 1) * itemsPerPage >= items.length &&\r\n                styles.disabledButton,\r\n            ]}\r\n            onPress={() => handleChangePage(page + 1)}\r\n            disabled={(page + 1) * itemsPerPage >= items.length}\r\n          >\r\n            <Text style={styles.paginationLabel}>Próxima</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </DataTable>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerDesktop: {\r\n    flex: 1,\r\n    padding: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    marginTop: \"2%\",\r\n  },\r\n  headerTextDesktop: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  headerColumn: {\r\n    justifyContent: \"center\",\r\n  },\r\n  handerRow: {\r\n    fontSize: 14,\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  actionColumn: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  actionButton: {\r\n    backgroundColor: Colors.rojo_oscuro,\r\n    borderRadius: 10,\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 10,\r\n  },\r\n  actionButtonText: {\r\n    color: Colors.blanco,\r\n    fontWeight: \"bold\",\r\n    fontSize: 14,\r\n  },\r\n  paginationContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  paginationButtonMovil: {\r\n    backgroundColor: Colors.azul_Suave,\r\n    borderRadius: 20,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginHorizontal: \"3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paginationLabel: {\r\n    fontSize: 14,\r\n    color: Colors.negro,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: Colors.blanco_Suave,\r\n  },\r\n});\r\n","import Navbar from \"../components/Navbar\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { styles } from \"../styles/Styles\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"; // userState es un hook que permite manejar el estado en componentes\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getAllProveedores } from \"../services/ProveedorServices\";\r\nimport CustomTextImputSearch from \"../components/CustomTextImputSearch\";\r\n\r\nimport { useUsuario } from \"../contexts/UsuarioContext\";\r\nimport {\r\n  getAllTiendas,\r\n  getCantidadProductoInTiendaEspecifica,\r\n  isProductoInTienda,\r\n  tienda_Realizarventa,\r\n} from \"../services/TiendaServices\";\r\nimport { TiendaPiker } from \"../components/MyDateTableTiendas\";\r\nimport { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\r\nimport { TiendaShowModal } from \"../components/MyDateTableModalShowDatesTienda\";\r\nimport { ProveedoresShowModal } from \"../components/MyDateTableModalShowDateProveedores\";\r\nimport { isPermiso } from \"../services/RolPermisosAndRol\";\r\nimport {\r\n  addEntrada,\r\n  deleteEntrada,\r\n  filtrarEntrada,\r\n  getAllEntradas,\r\n  getAllEntradasByProductoId,\r\n  getEntradaByID,\r\n  modificarEntrada,\r\n  ordenarEntradas,\r\n} from \"../services/EntradaServices\";\r\nimport { ProveedorPiker } from \"../components/MyDateTableProveedores\";\r\nimport CustomDropdownDetails from \"../components/CustomDropDownDetails\";\r\nimport {\r\n  addProductoEntrada,\r\n  createProductoInTienda,\r\n  deleteFromProductoTiendaIn_0,\r\n  getAllProductos,\r\n  getProductoById,\r\n  getProductoCantidadTotal,\r\n  getRelacionProductoByTienda,\r\n  updateProductoTienda,\r\n} from \"../services/ProductoServices\";\r\nimport { ProductoPiker } from \"../components/MyDateTableProductos\";\r\nimport { useModalEntradasDates } from \"../contexts/AuxiliarContextModalEntradas\";\r\nimport { MyDateInput } from \"../components/MyDateInput\";\r\nimport { addAccionUsuario } from \"../services/AccionesUsuarioServices\";\r\nimport {\r\n  addServicio,\r\n  deleteServicio,\r\n  filtrarSrvicio,\r\n  getAllServicios,\r\n  getServicioByID,\r\n  modificarServicio,\r\n  ordenarServicios,\r\n} from \"../services/ServiciosServices\";\r\nimport CustomDropdown from \"../components/CustomDropDownPicker\";\r\nimport { getAllTipoServicios } from \"../services/TipoServiciosServices\";\r\nimport { getAllClientes } from \"../services/clienteServices\";\r\nimport {\r\n  addVenta,\r\n  deleteVenta,\r\n  getAllVentas,\r\n  getVentaByIDOfServicio,\r\n} from \"../services/ventasServices\";\r\nimport { useSortServicios } from \"../contexts/AuxiliarSortServicios\";\r\nimport { getValorMonedaUSD } from \"../services/MonedaService\";\r\nimport CustomRadioButton from \"../components/CustomRadioButtonsSearch\";\r\nimport CustomRadioButtonSingle from \"../components/CustomRadioButtonSearch\";\r\nimport {\r\n  addGarantia,\r\n  deleteGarantia,\r\n  modificarGarantia,\r\n} from \"../services/GarantiaServices\";\r\nimport {\r\n  addEncargo,\r\n  deleteEncargo,\r\n  modificarEncargo,\r\n} from \"../services/EncargoServices\";\r\nimport { Deuda, MyDateTableDeudas } from \"../components/MydateTableDeudas\";\r\nimport {\r\n  deleteDeuda,\r\n  filtrarDeudas,\r\n  getDeudaByID,\r\n} from \"../services/DeudasServices\";\r\nimport {\r\n  MyDateTablePagoDeudaWithButton,\r\n  PagoDeudaShowModal,\r\n} from \"../components/MyDateTableShowPagoDeudas\";\r\nimport { addPagoDeuda, deletePagoDeuda } from \"../services/PagoDeudaServices\";\r\n\r\nexport default function DeudasView() {\r\n  const navigation = useNavigation();\r\n  const { width } = useWindowDimensions(); // Obtiene el ancho de la ventana\r\n  // Define el umbral para identificar si es un dispositivo móvil\r\n  const isMobile = width < 930; // Puedes ajustar este umbral según sea necesario\r\n\r\n  // Variables para cntrolar las capas visuales de las listas desplegables\r\n  const [capaPrioridadFechaDetails, setCapaPrioridadFechaDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendasDetails, setCapaPrioridadTiendasDetails] =\r\n    useState(1000);\r\n  const [\r\n    capaPrioridadTipoServicioDetails,\r\n    setCapaPrioridadTipoServicioDetails,\r\n  ] = useState(1000);\r\n  const [capaPrioridadProductoDetails, setCapaPrioridadProductoDetails] =\r\n    useState(1000);\r\n  const [capaPrioridadClienteDetails, setCapaPrioridadClienteDetails] =\r\n    useState(1000);\r\n\r\n  const [capaPrioridadFechaDesdeSearsh, setCapaPrioridadFechaDesteSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadFechaHastaSearsh, setCapaPrioridadFechaHastaSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTipoServicioSearsh, setCapaPrioridadTipoServicioSearsh] =\r\n    useState(1000);\r\n  const [capaPrioridadTiendaSearsh, setCapaPrioridadTiendaSearsh] =\r\n    useState(1000);\r\n\r\n  // Método para controlar las capas desplegables\r\n  const controlarCapas = (prioridad: string) => {\r\n    // Prioridades para los campos de detalles\r\n    if (prioridad === \"FechaDetails\") {\r\n      setCapaPrioridadFechaDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n    } else if (prioridad === \"TiendaDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"TipoServicioDetails\") {\r\n      setCapaPrioridadTiendasDetails(2000);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(2000);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ProductoDetails\") {\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(2000);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n      setCapaPrioridadClienteDetails(1500);\r\n    } else if (prioridad === \"ClienteDetails\") {\r\n      setCapaPrioridadClienteDetails(2000);\r\n      setCapaPrioridadTiendasDetails(1500);\r\n      setCapaPrioridadFechaDetails(1500);\r\n      setCapaPrioridadProductoDetails(1500);\r\n      setCapaPrioridadTipoServicioDetails(1500);\r\n    }\r\n\r\n    // Prioridades para el searsh\r\n    if (prioridad === \"FechaDesdeSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(2000);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"FechaHastaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(2000);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    } else if (prioridad === \"TipoServicioSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(1500);\r\n      setCapaPrioridadTipoServicioSearsh(2000);\r\n    } else if (prioridad === \"TiendaSearsh\") {\r\n      setCapaPrioridadFechaDesteSearsh(1500);\r\n      setCapaPrioridadFechaHastaSearsh(1500);\r\n      setCapaPrioridadTiendaSearsh(2000);\r\n      setCapaPrioridadTipoServicioSearsh(1500);\r\n    }\r\n  };\r\n\r\n  // Datos del usuario que está logueado\r\n  const { usuario, setUsuario } = useUsuario();\r\n  const { modalEntradasDates, setModalEntradasDates } = useModalEntradasDates();\r\n  const { sortServicios, setSortServicios } = useSortServicios();\r\n\r\n  // Constantes para controlar la animación del boton desplegable\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const animationValue = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const animationValueOptions = useRef(new Animated.Value(0)).current; // Valor animado\r\n  const [cambioMoneda, setCambioMoneda] = useState(0);\r\n\r\n  const [idFirstTimeProducto, setIdFirsTimeProducto] = useState(\"\");\r\n  const [auxOptimizacion, setAuxOptimizacion] = useState(false);\r\n\r\n  // Variables para controlar los campos de los formularios de agregar entradass y ver datos\r\n  const [idDeudaDetails, setIdDeudaDetails] = useState(\"\");\r\n  const [idServicioDetails, setIdServicioDetails] = useState(\"\");\r\n  const [idClienteDetails, setIdClienteDetails] = useState(\"\");\r\n  const [idTiendaDetails, setIdTiendaDetails] = useState(\"\");\r\n  const [idTipoServicioDetails, setIdTipoServicioDetails] = useState(\"\");\r\n  const [idProductoDetails, setIdProductoDetails] = useState(\"\");\r\n  const [cantidadProductoDetails, setCantidadProductoDetails] = useState(\"1\");\r\n  const [costoPromedioProductoCUPDetails, setCostoPromedioProductoCUPDetails] =\r\n    useState(\"0\");\r\n  const [costoPromedioProductoUSDDetails, setCostoPromedioProductoUSDDetails] =\r\n    useState(\"0\");\r\n  const [precioUSDDetails, setPrecioUSDDetails] = useState(\"\");\r\n  const [devueltoDetails, setDevueltoDetails] = useState(\"sin Devolver\");\r\n  const [precioCUPDetails, setPrecioCUPDetails] = useState(\"\");\r\n  const [notaDetails, setNotaDetails] = useState(\"\");\r\n  const [descripcionDetails, setDescripcionDetails] = useState(\"\");\r\n  const [fechaDiaDetails, setFechaDiaDetails] = useState(\"\");\r\n  const [fechaMesDetails, setFechaMesDetails] = useState(\"\");\r\n  const [fechaAnnoDetails, setFechaAnnoDetails] = useState(\"\");\r\n  const [fechaDiaDetailsEncargo, setFechaDiaDetailsEncargo] = useState(\"\");\r\n  const [fechaMesDetailsEncargo, setFechaMesDetailsEncargo] = useState(\"\");\r\n  const [fechaAnnoDetailsEncargo, setFechaAnnoDetailsEncargo] = useState(\"\");\r\n  const [adelantoEncargo, setAdelantoEncargo] = useState(\"\");\r\n  const [isGarantiaDetails, setIsGarantiaDetails] = useState(false);\r\n  const [isGarantiaDetailsViejo, setIsGarantiaDetailsViejo] = useState(false);\r\n  const [idGarantiaDetails, setIdGarantiaDetails] = useState(\"\");\r\n  const [duracionGarantiaDetails, setDuracionGarantiaDetails] = useState(\"\");\r\n  const [duracionGarantiaDetailsVieja, setDuracionGarantiaDetailsVieja] =\r\n    useState(\"\");\r\n  const [pagoDeudaByDeudaDetails, setPagoDeudaByDeudaDetails] = useState<\r\n    PagoDeudaShowModal[]\r\n  >([]);\r\n  const [idEncargoDetails, setIdEncargoDetails] = useState(\"\");\r\n\r\n  // Variable auxiliar para el redondeo de memerio\r\n  const [auxRedondeo, setAuxRedondeo] = useState(\"\");\r\n\r\n  // Variables axiliares para lavalidación de campos\r\n  const [idTiendaDetailsViejo, setIdTiendaDetailsViejo] = useState(\"\");\r\n  const [idProductoDetailsViejo, setIdProductoDetailsViejo] = useState(\"\");\r\n  const [cantidadProductoDetailsViejo, setCantidadProductoDetailsViejo] =\r\n    useState(\"\");\r\n  const [idTipoServicioDetailsViejo, setIdTipoServicioDetailsViejo] =\r\n    useState(\"\");\r\n  const [devueltoDetailsViejo, setDevueltoDetailsViejo] =\r\n    useState(\"sin Devolver\");\r\n\r\n  const [isDateLoaded, setIsDateLoaded] = useState(false);\r\n\r\n  const [idProductoAuxModificarDetails, setIdProductoAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [idTiendaAuxModificarDetails, setIdTiendaAuxModificarDetails] =\r\n    useState(\"\");\r\n  const [cantidadAuxModificarDetails, setCantidadAuxModificarDetails] =\r\n    useState(\"\");\r\n\r\n  // Variable que controla si se está haciendo una venta o se hizo una venta\r\n  const [isVentaProducto, setIsVentaProducto] = useState(false);\r\n  const [isEncargoProducto, setIsEncargoProducto] = useState<boolean>(false);\r\n\r\n  const [isModalMensajeView, setModalMensajeView] = React.useState(false);\r\n  const [isModalAddPagoDeudaView, setIsModalAddPagoDeudaView] =\r\n    React.useState(false);\r\n  const [cantidadUSDAddPagoDeuda, setCantidadUSDAddPagoDeuda] = React.useState(\"\");\r\n  const [cantidadCUPAddPagoDeuda, setCantidadCUPAddPagoDeuda] = React.useState(\"\");\r\n  const [total_pagado, setTotal_pagado] = React.useState(\"\");\r\n  const [cantidad_restante, setCantidad_restante] = React.useState(\"\");\r\n  const [modalMensaje, setModalMensaje] = React.useState(\"\");\r\n  const [isReflechModalMensajeView, setReflechModalMensajeView] =\r\n    React.useState(false);\r\n  const [isBotonModalMesajeVisible, setIsBotonModalMesajeVisible] =\r\n    useState(false);\r\n\r\n  const [isModalChekEliminarEntrada, setIsModalChekEliminarEntrada] =\r\n    useState(false);\r\n  const [isModalChekVisible, setIsModalChekVisible] = useState(false);\r\n  const [mesajeModalChek, setMesajeModalChek] = useState(\"\");\r\n\r\n  // Condicionales para mostrar según los permisos\r\n  const [isPermisoAgregarServicio, setIsPermisoAgregarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoEliminarServicio, setIsPermisoEliminarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoModificarServicio, setIsPermisoModificarServicio] =\r\n    React.useState(false);\r\n  const [isPermisoServicioLocal, setIsPermisoServicioLocal] =\r\n    React.useState(false);\r\n  const [isPermisoServicioGeneral, setIsPermisoServicioGeneral] =\r\n    React.useState(false);\r\n\r\n  const [isPermisoVerCostoVenta, setIsPermisoVerCostoVenta] = useState(false);\r\n\r\n  const checkPermiso = async () => {\r\n    if (usuario?.token) {\r\n      const resultAgregarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultEliminarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"25\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultModificarServicio = await isPermiso(\r\n        usuario.token,\r\n        \"24\",\r\n        usuario.id_usuario\r\n      );\r\n      const resulServicioLocal = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      // cargar cambio de moneda\r\n      setCambioMoneda(await getValorMonedaUSD(usuario.token));\r\n\r\n      setIsPermisoServicioLocal(resulServicioLocal);\r\n      setIsPermisoServicioGeneral(resultServicioGeneral);\r\n      setIsPermisoAgregarServicio(resultAgregarServicio);\r\n      setIsPermisoEliminarServicio(resultEliminarServicio);\r\n      setIsPermisoModificarServicio(resultModificarServicio);\r\n    }\r\n  };\r\n\r\n  const onDrop = (event: PanGestureHandlerGestureEvent) => {\r\n    // Aquí puedes agregar la lógica para procesar los archivos\r\n  };\r\n\r\n  // Estado para controlar la opción seleccionada de los RadioButons de filtrado\r\n  const [selectedOptionTipoOrden, setSelectedOptionTipoOrden] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const [tiendasByProducto, setTiendasByProducto] = useState<TiendaShowModal[]>(\r\n    []\r\n  );\r\n\r\n  // Función para manejar la selección de los RadioButins de filtrado\r\n  const handleSelectTipoOrden = (value: string) => {\r\n    setSelectedOptionTipoOrden(value);\r\n  };\r\n\r\n  // Función para manejar la expansión/contracción con animación\r\n  const toggleExpansion = () => {\r\n    if (isExpanded) {\r\n      // Si está expandido, animamos para contraer\r\n      Animated.timing(animationValue, {\r\n        toValue: 0, // Altura 0 (cerrado)\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo porque vamos a animar el tamaño\r\n      }).start(() => setIsExpanded(false)); // Cambia el estado después de la animación\r\n    } else {\r\n      setIsExpanded(true); // Cambia el estado primero para renderizar el contenido\r\n      Animated.timing(animationValue, {\r\n        toValue: 400, // Altura máxima cuando esté expandido\r\n        duration: 300, // Duración de la animación en milisegundos\r\n        useNativeDriver: false, // No usar driver nativo\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  // Definir el estilo animado para la altura del componente\r\n  const animatedStyle = {\r\n    height: animationValue,\r\n  };\r\n  const animatedStyleOptions = {\r\n    height: animationValueOptions,\r\n  };\r\n\r\n  // Variable para filtrar items\r\n  const [filterItems, setFilterItems] = useState<Deuda[]>([]);\r\n\r\n  const [proveedorByProducto, setProveedorByProducto] = useState<\r\n    ProveedoresShowModal[]\r\n  >([\r\n    { id_proveedor: \"1\", nombre: \"Pepe\", cantidad: \"12\", costoPorUnidad: 20.3 },\r\n    { id_proveedor: \"2\", nombre: \"Juan\", cantidad: \"1\", costoPorUnidad: 21.3 },\r\n    {\r\n      id_proveedor: \"3\",\r\n      nombre: \"Adolfo\",\r\n      cantidad: \"100\",\r\n      costoPorUnidad: 20.0,\r\n    },\r\n    {\r\n      id_proveedor: \"4\",\r\n      nombre: \"Jailer\",\r\n      cantidad: \"23\",\r\n      costoPorUnidad: 22.3,\r\n    },\r\n    { id_proveedor: \"5\", nombre: \"Ana\", cantidad: \"42\", costoPorUnidad: 18.0 },\r\n    {\r\n      id_proveedor: \"6\",\r\n      nombre: \"Rodrigo\",\r\n      cantidad: \"11\",\r\n      costoPorUnidad: 23.3,\r\n    },\r\n    {\r\n      id_proveedor: \"7\",\r\n      nombre: \"Juan Lís de la Caridad Santos\",\r\n      cantidad: \"20\",\r\n      costoPorUnidad: 20.3,\r\n    },\r\n  ]);\r\n\r\n  const [dropdownItemsNombreCliente, setDropDownItemsNombreCliente] = useState<\r\n    ProveedorPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreproducto, setDropDownItemsNombreProducto] =\r\n    useState<ProductoPiker[]>([]);\r\n  const [dropdownItemsNombreTienda, setDropDownItemsNombreTienda] = useState<\r\n    TiendaPiker[]\r\n  >([]);\r\n  const [dropdownItemsNombreTipoServicio, setDropDownItemsNombreTipoServicio] =\r\n    useState<ProductoPiker[]>([]);\r\n\r\n  const currentDate = new Date();\r\n\r\n  // Extraemos el año, mes y día de la fecha actual\r\n  const year = String(currentDate.getFullYear());\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n  //Variables Para los datos de busqueda\r\n  const [nombreClienteSearch, setNombreClienteSearch] = useState(\"\");\r\n  const [nombreProductoSearsh, setNombreProductoSearch] = useState(\"\");\r\n  const [idTipoServicioSearch, setIdTipoServicioSearch] = useState(\"\");\r\n  const [idTiendaSearch, setIdTiendaSearch] = useState(\"\");\r\n  const [isDeudaSaldadaSearsh, setIsDeudaSaldadaSearsh] = useState(true);\r\n  const [rangoDeudaDesdeSearch, setRangoPrecioDesdeSearch] = useState(\"\");\r\n  const [rangoDeudaHastaSearch, setRangoPrecioHastaSearch] = useState(\"\");\r\n  const [fechaDiaDesdeSearch, setFechaDiaDesdeSearch] = useState(\"1\");\r\n  const [fechaMesDesdeSearch, setFechaMesdesdeSearch] = useState(\"1\");\r\n  const [fechaAnnoDesdeSearch, setFechaAnnoDesdeSearch] = useState(\"2024\");\r\n\r\n  const [fechaDiaHastaSearch, setFechaDiaHastaSearch] = useState(\r\n    String(parseInt(day))\r\n  );\r\n  const [fechaMesHastaSearch, setFechaMesHastaSearch] = useState(\r\n    String(parseInt(month))\r\n  );\r\n  const [fechaAnnoHastaSearch, setFechaAnnoHastaSearch] = useState(\r\n    String(parseInt(year))\r\n  );\r\n\r\n  // Opciones de radio burron para la fecha serash\r\n  const [selecterActivoDetails, setSelecterActivoDetails] = useState(\"\");\r\n  const [selecterEstadoDeudaSearch, setSelecterEstadoDeudaSearsh] =\r\n    useState(\"ninguna\");\r\n\r\n  const options = [\r\n    { label: \"Día\", value: \"dia\" },\r\n    { label: \"Semana\", value: \"semana\" },\r\n    { label: \"Mes\", value: \"mes\" },\r\n  ];\r\n\r\n  const optionsEstadoDeuda = [\r\n    { label: \"Ninguna\", value: \"ninguna\" },\r\n    { label: \"Saldada\", value: \"saldada\" },\r\n    { label: \"Sin Saldar\", value: \"sin_saldar\" },\r\n  ];\r\n\r\n  const optionsDevueltoDetails = [\r\n    { label: \"Devolver\", value: \"devolver\" },\r\n    { label: \"Sin Devolver\", value: \"sin devolver\" },\r\n  ];\r\n\r\n  const handleRadioButtonPress = (value: string) => {\r\n    setSelecterActivoDetails(value);\r\n\r\n    // Crear una fecha a partir de la fecha actual\r\n    const currentDate = new Date();\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    let fechaDesde: string = ``;\r\n\r\n    // Asegúrate de que newDate se inicialice en todos los casos\r\n    if (value === \"dia\") {\r\n      fechaDesde = `${year}-${month}-${day}`;\r\n    } else if (value === \"semana\") {\r\n      // Restar 7 días a la fecha actual\r\n      const lastWeekDate = new Date(currentDate);\r\n      lastWeekDate.setDate(currentDate.getDate() - 6);\r\n      const weekYear = String(lastWeekDate.getFullYear());\r\n      const weekMonth = String(lastWeekDate.getMonth() + 1).padStart(2, \"0\");\r\n      const weekDay = String(lastWeekDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${weekYear}-${weekMonth}-${weekDay}`;\r\n    } else if (value === \"mes\") {\r\n      // Restar 1 mes a la fecha actual\r\n      const lastMonthDate = new Date(currentDate);\r\n      lastMonthDate.setMonth(currentDate.getMonth() - 1);\r\n      const monthYear = String(lastMonthDate.getFullYear());\r\n      const monthMonth = String(lastMonthDate.getMonth() + 1).padStart(2, \"0\");\r\n      const monthDay = String(lastMonthDate.getDate()).padStart(2, \"0\");\r\n      fechaDesde = `${monthYear}-${monthMonth}-${monthDay}`;\r\n    } else {\r\n      console.error(\"Valor no válido para el radio button:\", value);\r\n      return; // Manejo de error: si el valor no es válido, no se hace nada\r\n    }\r\n\r\n    // llamar al filtrar con los nuevos parametros\r\n    filtrarYOrdenarDeudas(fechaDesde, `${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Variable visual para la carga de datos en la tabla\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getProductosPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      let result: any;\r\n\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n      const resulServicioLocal = await isPermiso(\r\n        usuario.token,\r\n        \"26\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      if (resultServicioGeneral) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          usuario.id_tienda\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      } else if (resulServicioLocal) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          usuario.id_tienda\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTipoServicioPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTipoServicios(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const tipoServiciosMapeados: TiendaPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tipo_servicio,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTipoServicio([\r\n          { label: \"Todos los tipos de servicios\", value: \"\" },\r\n          ...tipoServiciosMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getClientesPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllClientes(usuario.token);\r\n\r\n      if (result && Array.isArray(result)) {\r\n        const ClientesMapeados: ProductoPiker[] = await Promise.all(\r\n          result.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_cliente,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreCliente(ClientesMapeados);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTiendasPikerDetails = async () => {\r\n    if (usuario?.token != undefined) {\r\n      const result = await getAllTiendas(usuario.token);\r\n\r\n      if (result && Array.isArray(result.data)) {\r\n        const tiendasMapeados: TiendaPiker[] = await Promise.all(\r\n          result.data.map(async (element: any) => ({\r\n            label: element.nombre,\r\n            value: element.id_tienda,\r\n          }))\r\n        );\r\n\r\n        // Agregar un valor adicional para el valor inicial\r\n        setDropDownItemsNombreTienda([\r\n          { label: \"Todas las tiendas\", value: \"\" },\r\n          ...tiendasMapeados,\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método auxiliar para llamar al modal de agregar proovedor\r\n  const callModalAddProveedor = () => {\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setIdTipoServicioDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: false,\r\n      isModificarEntrada: false,\r\n      fileEditable: true,\r\n    });\r\n  };\r\n\r\n  // Cargar datos de lprodcut o del servicio de venta\r\n  const cargarDetailsOfProductoVenta = async () => {\r\n    if (usuario?.token) {\r\n      const resultDeuda = await getDeudaByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        const resultventa = await getVentaByIDOfServicio(\r\n          usuario.token,\r\n          idServicioDetails\r\n        );\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(true);\r\n\r\n        // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n        if (resultventa) {\r\n          // Actualizar variables para la validación de campos\r\n          setIdProductoDetailsViejo(resultventa.producto.id_producto);\r\n          setCantidadProductoDetailsViejo(resultventa.cantidad);\r\n          setIdTiendaDetailsViejo(resultDeuda.deuda.servicio.tienda.id_tienda);\r\n\r\n          setIdProductoDetails(resultventa.producto.id_producto);\r\n          setIdFirsTimeProducto(resultventa.producto.id_producto);\r\n          setCantidadProductoDetails(resultventa.cantidad);\r\n          setIdTiendaDetails(resultDeuda.deuda.servicio.tienda.id_tienda);\r\n          setPrecioUSDDetails(resultDeuda.deuda.servicio.precio);\r\n          setPrecioCUPDetails(\r\n            String(parseFloat(resultDeuda.deuda.servicio.precio) * cambioMoneda)\r\n          );\r\n          setCostoPromedioProductoUSDDetails(resultventa.producto.costo_acumulado);\r\n        } else {\r\n          // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(true);\r\n\r\n          setIdProductoDetails(\"\");\r\n          setCantidadProductoDetails(\"\");\r\n          setPrecioUSDDetails(\"\");\r\n          setPrecioCUPDetails(\"\");\r\n          setCostoPromedioProductoUSDDetails(\"\");\r\n        }\r\n      } else {\r\n        // Actualizar variable para mostrar venta de producto\r\n        setIsVentaProducto(false);\r\n        setPrecioUSDDetails(resultDeuda.deuda.servicio.precio);\r\n        setPrecioCUPDetails(\r\n          String(parseInt(resultDeuda.deuda.servicio.precio) * cambioMoneda)\r\n        );\r\n        setCostoPromedioProductoUSDDetails(resultDeuda.deuda.servicio.costo);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Cargar todos los datos de el servicio pro primera ves que se abre el servicio\r\n  const cargarDetailsOfDeuda = async () => {\r\n    setAuxOptimizacion(false);\r\n    if (usuario?.token && modalEntradasDates?.id_entrada) {\r\n      // Reinicia los datos de la fecha antes de realizar la carga de datos\r\n      setIsDateLoaded(false); // Para asegurarte de que el componente no use los datos antiguos\r\n\r\n      const result = await getDeudaByID(\r\n        usuario.token,\r\n        modalEntradasDates.id_entrada\r\n      );\r\n\r\n      if (result) {\r\n        // Extraemos los datos de fecha de result.fecha\r\n        const [year, month, day] = result.deuda.servicio.fecha\r\n          .split(\"T\")[0]\r\n          .split(\"-\");\r\n\r\n        // Actualizamos los detalles\r\n        setIdDeudaDetails(result.deuda.id_deuda);\r\n        setCantidad_restante(result.cantidad_restante);\r\n        setTotal_pagado(result.total_pagado);\r\n        setIdServicioDetails(result.deuda.servicio.id_servicio);\r\n        setIdClienteDetails(result.deuda.servicio.cliente.id_cliente);\r\n        setIdTipoServicioDetails(\r\n          result.deuda.servicio.tipo_servicio.id_tipo_servicio\r\n        );\r\n        setNotaDetails(result.deuda.servicio.nota);\r\n        setDescripcionDetails(result.deuda.servicio.descripcion);\r\n        setDevueltoDetails(\r\n          result.deuda.servicio.devuelto ? \"devolver\" : \"sin devolver\"\r\n        );\r\n        setIsGarantiaDetails(result.deuda.servicio.garantia !== null);\r\n\r\n        // Actualizar variables para la validación de campos\r\n        setIdTipoServicioDetailsViejo(\r\n          result.deuda.servicio.tipo_servicio.id_tipo_servicio\r\n        );\r\n        // Cargar pagos deuda\r\n        setPagoDeudaByDeudaDetails(result.deuda.pagos_deuda);\r\n        // Si es un tip de servicios de venta se carga el producto que se halla vendiod o que se esté vendiendo con todos su datos\r\n        if (\r\n          parseInt(result.deuda.servicio.tipo_servicio.id_tipo_servicio) ===\r\n            2\r\n        ) {\r\n          const resultventa = await getVentaByIDOfServicio(\r\n            usuario.token,\r\n            idServicioDetails\r\n          );\r\n          // Obtener entradas del produto para calcular datos del producto\r\n\r\n          // Comprobar si el servicio era de venta y si es así cargar datos de este\r\n          if (resultventa) {\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setIdProductoDetails(resultventa.producto.id_producto);\r\n            setCantidadProductoDetails(resultventa.cantidad);\r\n            setIdTiendaDetails(result.deuda.servicio.tienda.id_tienda);\r\n            setPrecioUSDDetails(result.deuda.servicio.precio);\r\n            setPrecioCUPDetails(\r\n              String(parseFloat(result.deuda.servicio.precio) * cambioMoneda)\r\n            );\r\n            setCostoPromedioProductoUSDDetails(resultventa.producto.costo_acumulado);\r\n          } else {\r\n            // Cargar datos vacios para ingrezar un nuevo producto\r\n\r\n            // Actualizar variable para mostrar venta de producto\r\n            setIsVentaProducto(true);\r\n\r\n            setIdProductoDetails(\"\");\r\n            setCantidadProductoDetails(\"\");\r\n            setIdTiendaDetails(\"\");\r\n            setPrecioUSDDetails(\"\");\r\n            setPrecioCUPDetails(\"\");\r\n            setCostoPromedioProductoUSDDetails(\"\");\r\n          }\r\n        } else {\r\n          // Actualizar variable para mostrar venta de producto\r\n          setIsVentaProducto(false);\r\n          setPrecioUSDDetails(result.deuda.servicio.precio);\r\n          setPrecioCUPDetails(\r\n            String(parseInt(result.deuda.servicio.precio) * cambioMoneda)\r\n          );\r\n          setCostoPromedioProductoUSDDetails(result.deuda.servicio.costo);\r\n        }\r\n\r\n        // Actualizamos las fechas (nuevos datos)\r\n        setFechaDiaDetails(String(parseInt(day)));\r\n        setFechaMesDetails(String(parseInt(month)));\r\n        setFechaAnnoDetails(String(parseInt(year)));\r\n        // Actualizar fechas para el encargo\r\n        setFechaDiaDetailsEncargo(String(parseInt(day)));\r\n        setFechaMesDetailsEncargo(String(parseInt(month)));\r\n        setFechaAnnoDetailsEncargo(String(parseInt(year)));\r\n\r\n        // Actualizamos los valores auxiliares;\r\n\r\n        // Marcamos los datos como cargados al final del proceso\r\n        setIsDateLoaded(true);\r\n      }\r\n    }\r\n    setAuxOptimizacion(true);\r\n  };\r\n\r\n  const auxiliarFunctionFilter = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ): Promise<Deuda[] | null> => {\r\n    if (usuario?.token) {\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n\r\n      try {\r\n        const result = await filtrarDeudas(\r\n          usuario.token,\r\n          nombreProductoSearsh,\r\n          nombreClienteSearch,\r\n          rangoDeudaDesdeSearch,\r\n          rangoDeudaHastaSearch,\r\n          fechaDesde,\r\n          fechaHasta,\r\n          idTiendaSearch,\r\n          idTipoServicioSearch,\r\n          selecterEstadoDeudaSearch === \"ninguna\"\r\n            ? undefined\r\n            : selecterEstadoDeudaSearch === \"saldada\"\r\n            ? true\r\n            : false\r\n        );\r\n\r\n        if (result) {\r\n          const serviciosMapeados: Deuda[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              id_Servicio: element.deuda.servicio.id_servicio,\r\n              id_Cliente: element.deuda.servicio.cliente.id_cliente,\r\n              id_Tienda: element.deuda.servicio.tienda.id_tienda,\r\n              id_Tipo_servicio:\r\n                element.deuda.servicio.tipo_servicio.id_tipo_servicio,\r\n              id_Deuda: element.deuda.id_deuda,\r\n              id_Garantia: \"\",\r\n              fecha: element.deuda.servicio.fecha,\r\n              precio: element.deuda.servicio.precio,\r\n              nota: element.deuda.servicio.nota,\r\n              descripcion: element.deuda.servicio.descripcion,\r\n              nombreCliente: element.deuda.servicio.cliente.nombre,\r\n              nombreTienda: element.deuda.servicio.tienda.nombre,\r\n              nombreTipoServicio: element.deuda.servicio.tipo_servicio.nombre,\r\n              nombreProducto: element.deuda.servicio.venta\r\n                ? element.deuda.servicio.venta.producto.nombre\r\n                : \"\", // Verifica si 'venta' no es null\r\n              cantidad: element.deuda.servicio.venta\r\n                ? element.deuda.servicio.venta.cantidad\r\n                : \"\", // Verifica si 'venta' no es null\r\n              devuelto: element.deuda.servicio.devuelto,\r\n              deuda: element.deuda.deuda,\r\n              pagos_deuda: element.deuda.pagos_deuda,\r\n              total_pagado: element.total_pagado,\r\n              cantidad_restante: element.cantidad_restante,\r\n            }))\r\n          );\r\n          return serviciosMapeados;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al filtrar los proveedoress:\", error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Cargar datos del servicio cuando se seleccionado en la tabla\r\n  useEffect(() => {\r\n    cargarDetailsOfDeuda();\r\n  }, [modalEntradasDates]);\r\n\r\n  // Cargar datos de el producto si es que es seleccioando una venta de algun tipoServicio\r\n  useEffect(() => {\r\n    // Actualizar si es Encargo\r\n    if (parseInt(idTipoServicioDetails) === 26) {\r\n      setIsEncargoProducto(true);\r\n    } else {\r\n      setIsEncargoProducto(false);\r\n    }\r\n    cargarDetailsOfProductoVenta();\r\n  }, [idTipoServicioDetails]);\r\n  useEffect(() => {\r\n    if (auxRedondeo === \"PrecioCUP\") {\r\n      setPrecioUSDDetails(parseFloat(precioUSDDetails).toFixed(5));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"PrecioUSD\") {\r\n      setPrecioCUPDetails(parseFloat(precioCUPDetails).toFixed(2));\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoCUP\") {\r\n      setCostoPromedioProductoUSDDetails(\r\n        parseFloat(costoPromedioProductoUSDDetails).toFixed(5)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    } else if (auxRedondeo === \"CostoUSD\") {\r\n      setCostoPromedioProductoCUPDetails(\r\n        parseFloat(costoPromedioProductoCUPDetails).toFixed(2)\r\n      );\r\n      setAuxRedondeo(\"\");\r\n    }\r\n    setAuxRedondeo(\"\");\r\n  }, [auxRedondeo]);\r\n\r\n  useEffect(() => {\r\n    const auxiliar = async () => {\r\n      if (usuario?.token) {\r\n        const result = await getRelacionProductoByTienda(\r\n          usuario.token,\r\n          idTiendaDetails\r\n        );\r\n        if (result && Array.isArray(result)) {\r\n          const productosMapeados: ProductoPiker[] = await Promise.all(\r\n            result.map(async (element: any) => ({\r\n              label: element.producto.nombre,\r\n              value: element.id_producto,\r\n            }))\r\n          );\r\n\r\n          // Agregar un valor adicional para el valor inicial\r\n          setDropDownItemsNombreProducto(productosMapeados);\r\n        }\r\n      }\r\n    };\r\n    auxiliar();\r\n  }, [idTiendaDetails]);\r\n  useEffect(() => {\r\n    if (auxOptimizacion) {\r\n      if (\r\n        idProductoDetails !== \"\" &&\r\n        idProductoDetails !== idFirstTimeProducto &&\r\n        usuario?.token\r\n      ) {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n        const auxiliarAsyncFuncion = async () => {\r\n          const resultProdcuto = await getProductoById(\r\n            usuario.token,\r\n            idProductoDetails\r\n          );\r\n\r\n          // Cargar el costo promedio del producto seleccionado\r\n          setCostoPromedioProductoUSDDetails(resultProdcuto.costo_acumulado);\r\n          // Cargar precio del producto seleccioando en USD y CUP\r\n          setPrecioUSDDetails(resultProdcuto.precio ?? 0);\r\n          setPrecioCUPDetails(\r\n            String(parseFloat(resultProdcuto.precio) * cambioMoneda) ?? 0\r\n          );\r\n        };\r\n        auxiliarAsyncFuncion();\r\n      } else {\r\n        setIdFirsTimeProducto(idProductoDetails);\r\n      }\r\n    }\r\n  }, [idProductoDetails]);\r\n\r\n  // Funcion para controlar la vicion del campo de costo del servicio y del producto\r\n  const isCampoCostoVisible = async () => {\r\n    if (usuario?.token && usuario?.id_usuario) {\r\n      const resultServicioGeneral = await isPermiso(\r\n        usuario.token,\r\n        \"27\",\r\n        usuario.id_usuario\r\n      );\r\n      const resultado =\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n          ? isPermisoServicioGeneral\r\n          : true;\r\n      return resultado;\r\n    }\r\n    return false;\r\n  };\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const runEffects = async () => {\r\n        setAuxOptimizacion(false);\r\n        await checkPermiso();\r\n        await getTipoServicioPikerDetails();\r\n        await getClientesPikerDetails();\r\n        await getTiendasPikerDetails();\r\n        await getProductosPikerDetails();\r\n      };\r\n      runEffects();\r\n\r\n      return () => {\r\n        // Código que se ejecuta cuando se cierra la interfaz\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const [auxOrdenar, setAxuOrdenar] = useState(false);\r\n\r\n  // Filtrar y ordenar productos cada vez que se haga un cambio en los datos.\r\n  const filtrarYOrdenarDeudas = async (\r\n    fechaDesde: string,\r\n    fechaHasta: string\r\n  ) => {\r\n    setLoading(true);\r\n    try {\r\n      if (usuario?.token) {\r\n        // Ejecutar la función auxiliar de filtrado para obtener los productos filtrados\r\n        let deudasFiltradas: Deuda[] =\r\n          (await auxiliarFunctionFilter(fechaDesde, fechaHasta)) || [];\r\n\r\n        setAxuOrdenar(auxOrdenar ? false : true);\r\n\r\n        // Si hay criterios de ordenamiento, aplicarlos sobre los productos filtrados\r\n        if (sortServicios?.criterioOrden && sortServicios.tipoOrden) {\r\n          deudasFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            deudasFiltradas,\r\n            sortServicios.criterioOrden,\r\n            auxOrdenar\r\n          );\r\n        }else{\r\n          deudasFiltradas = await ordenarServicios(\r\n            usuario.token,\r\n            deudasFiltradas,\r\n            \"option3\",\r\n            auxOrdenar\r\n          );\r\n        }\r\n\r\n        // Actualizar el estado con los productos filtrados (y ordenados si corresponde)\r\n        setFilterItems(deudasFiltradas);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al filtrar y ordenar los proovedores:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Llamar a la función cuando alguna de las dependencias cambie\r\n    filtrarYOrdenarDeudas(\r\n      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n    );\r\n  }, [\r\n    sortServicios,\r\n    selectedOptionTipoOrden,\r\n  ]);\r\n  useEffect(() =>{\r\n    setSelecterActivoDetails(\"\")\r\n  }, [\r\n    fechaDiaDesdeSearch,\r\n    fechaMesDesdeSearch,\r\n    fechaAnnoDesdeSearch,\r\n    fechaDiaHastaSearch,\r\n    fechaMesHastaSearch,\r\n    fechaAnnoHastaSearch,\r\n  ])\r\n\r\n  const auxSetModalProovedoresDates = () => {\r\n    setIsDateLoaded(false);\r\n    setIdTiendaDetails(usuario?.id_tienda);\r\n    setIdClienteDetails(\"\");\r\n    setPrecioUSDDetails(\"\");\r\n    setPrecioCUPDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setCostoPromedioProductoUSDDetails(\"\");\r\n    setIdTipoServicioDetails(\"\");\r\n    setCantidadProductoDetails(\"\");\r\n    setNotaDetails(\"\");\r\n    setDescripcionDetails(\"\");\r\n\r\n    setModalEntradasDates({\r\n      id_entrada: \"\",\r\n      isAddEntrada: true,\r\n      fileEditable: true,\r\n      isModificarEntrada: false,\r\n    });\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Extraemos el año, mes y día de la fecha actual\r\n    const year = String(currentDate.getFullYear());\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n    setFechaDiaDetails(String(parseInt(day)));\r\n    setFechaMesDetails(String(parseInt(month)));\r\n    setFechaAnnoDetails(String(parseInt(year)));\r\n\r\n    setFechaDiaDetailsEncargo(String(parseInt(day)));\r\n    setFechaMesDetailsEncargo(String(parseInt(month)));\r\n    setFechaAnnoDetailsEncargo(String(parseInt(year)));\r\n\r\n    setIsDateLoaded(true);\r\n  };\r\n\r\n  // Función para cuando precione la tecla enter\r\n  const handleKeyPress = (event: any) => {\r\n    if (event.nativeEvent.key === \"Enter\") {\r\n      // Aquí ejecutas la función que deseas\r\n      filtrarYOrdenarDeudas(\r\n        `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n        `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Método para limpiar campos del buscador\r\n  const clearFields = () => {\r\n    setNombreClienteSearch(\"\");\r\n    setSelectedOptionTipoOrden(\"\");\r\n    setIdTiendaSearch(\"\");\r\n    setIdTipoServicioSearch(\"\");\r\n    setRangoPrecioDesdeSearch(\"\");\r\n    setRangoPrecioHastaSearch(\"\");\r\n    setSelecterActivoDetails(\"\");\r\n  };\r\n\r\n  // Metodo para eliminar un pago deuda de una deuda\r\n  const deletePagoDeudaFronTabla = async (item: any) => {\r\n    if (usuario?.token) {\r\n      await deletePagoDeuda(usuario.token, item.id_pago_deuda);\r\n      setPagoDeudaByDeudaDetails((prevPagoDeuda) =>\r\n        prevPagoDeuda.filter(\r\n          (pago) => pago.id_pago_deuda !== item.id_pago_deuda\r\n        )\r\n      );\r\n      setModalMensajeView(true);\r\n      setModalMensaje(\"Pago de deuda eliminado\");\r\n      setReflechModalMensajeView(true);\r\n      setIsBotonModalMesajeVisible(true);\r\n    }\r\n  };\r\n  // Método para agregar un nuevo producto al sistema\r\n  const addNewDeuda = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Agregando Pago de Deuda. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    // Comprobar campos para agregar el producto\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL INGRESAR PAGO DE DEUDA. Por favor verifique los siguientes campos:\\n\";\r\n      \r\n      if (flag) {\r\n          const currentDate = new Date();\r\n          const year = String(currentDate.getFullYear());\r\n          const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n          const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n\r\n          const resultPagoDeuda = await addPagoDeuda(usuario.token, cantidadUSDAddPagoDeuda, `${year}-${month}-${day}`, idDeudaDetails);\r\n          pagoDeudaByDeudaDetails.push(resultPagoDeuda);\r\n\r\n          let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} agregó un pago de deuda de una cantidad de ${cantidadUSDAddPagoDeuda}`;\r\n          await addAccionUsuario(\r\n            usuario.token,\r\n            auxAddAccionUsuarioDescripcion,\r\n            `${year}-${month}-${day}`,\r\n            usuario.id_usuario,\r\n            8\r\n          );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El Pago de Deuda se agregó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n      } else {\r\n        setModalMensaje(validarCampos);\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Método para actualizar los datos de un producto\r\n  const modificarServicioFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Modificando servicio. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let cantidadEnTiendaNueva: number = 0;\r\n      const result = await isProductoInTienda(\r\n        usuario.token,\r\n        idProductoDetails,\r\n        idTiendaDetails\r\n      );\r\n      if (result) {\r\n        cantidadEnTiendaNueva = result.cantidad;\r\n      }\r\n\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL MODIFICAR EL SERVICIO. Compruebe los siguientes campos:\\n\";\r\n\r\n      if (idClienteDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione un cliente. Si no hay datos del cliente seleccione anonimo\\n\";\r\n      }\r\n      if (idTipoServicioDetails === \"\") {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-Seleccione el tipo de servicio que está ofreciendo.\\n\";\r\n      }\r\n      if (idTiendaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Seleccione una tienda.\\n\";\r\n      }\r\n      if (isGarantiaDetails && duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (costoPromedioProductoUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Digite el costo del servicio.\\n\";\r\n      }\r\n      if (precioUSDDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina el precio cobrado al cliente.\\n\";\r\n      }\r\n      if (isGarantiaDetails && duracionGarantiaDetails === \"\") {\r\n        flag = false;\r\n        validarCampos += \"-Defina la duración de la garantía.\\n\";\r\n      }\r\n      if (isGarantiaDetails && parseInt(idClienteDetails) === 1) {\r\n        flag = false;\r\n        validarCampos += \"-El ciente Anónimo no puede tener garantías\";\r\n      }\r\n      // Validacion si es un encargo\r\n      if (parseInt(idTipoServicioDetails) === 26) {\r\n        const fechaBase = new Date(\r\n          `${fechaAnnoDetails}-${fechaMesDetails}-${fechaDiaDetails}`\r\n        );\r\n        const fechaEncargo = new Date(\r\n          `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`\r\n        );\r\n\r\n        if (parseInt(idClienteDetails) === 1) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-No se puede hacer un encargo al cliente Anónimo.\\n\";\r\n        }\r\n        if (fechaEncargo < fechaBase) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La fecha del encargo no puede ser menor que la fecha del servicio.\\n\";\r\n        }\r\n      }\r\n      // Validaciones si es una venta\r\n      if (\r\n        parseInt(idTipoServicioDetails) === 2 ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        if (idProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos += \"-Seleccione un producto para vender.\\n\";\r\n        }\r\n        if (cantidadProductoDetails === \"\") {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-Defina la cantidad que desea vender del producto.\\n\";\r\n        }\r\n      }\r\n      // validación de campos avanzada\r\n      if (\r\n        cantidadEnTiendaNueva + parseInt(cantidadProductoDetailsViejo) <\r\n        parseInt(cantidadProductoDetails)\r\n      ) {\r\n        flag = false;\r\n        validarCampos +=\r\n          \"-La cantidad que desea modificar es mayor que la cantidad que hay en la tienda.\\n\";\r\n      }\r\n      // se modificó solo la cantidad del producto\r\n      if (\r\n        (cantidadProductoDetails !== cantidadProductoDetailsViejo &&\r\n          idProductoDetails === idProductoDetailsViejo &&\r\n          idTiendaDetails === idTiendaDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 2) ||\r\n        parseInt(idTipoServicioDetails) === 25\r\n      ) {\r\n        if (\r\n          cantidadEnTiendaNueva + parseInt(cantidadProductoDetailsViejo) <\r\n          parseInt(cantidadProductoDetailsViejo) -\r\n            parseInt(cantidadProductoDetails)\r\n        ) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que hay en la tienda no es suficiente para modificar la venta del producto.\\n\";\r\n        }\r\n      } else if (\r\n        idProductoDetails !== idProductoDetailsViejo ||\r\n        idTiendaDetails !== idTiendaDetailsViejo\r\n      ) {\r\n        if (cantidadEnTiendaNueva < parseInt(cantidadProductoDetails)) {\r\n          flag = false;\r\n          validarCampos +=\r\n            \"-La cantidad que hay en la tienda no es suficiente para modificar la venta del producto.\\n\";\r\n        }\r\n      }\r\n      if (flag) {\r\n        await modificarServicio(\r\n          usuario.token,\r\n          idServicioDetails,\r\n          `${fechaMesDetails}-${fechaDiaDetails}-${fechaAnnoDetails}`,\r\n          precioUSDDetails,\r\n          notaDetails,\r\n          idTiendaDetails,\r\n          idTipoServicioDetails,\r\n          devueltoDetails === \"devolver\",\r\n          idClienteDetails,\r\n          \"Not suport yet\",\r\n          \"not suport yet\"\r\n        );\r\n\r\n        // Actualizar Garantía\r\n        if (\r\n          isGarantiaDetails !== isGarantiaDetailsViejo ||\r\n          duracionGarantiaDetails !== duracionGarantiaDetailsVieja\r\n        ) {\r\n          if (isGarantiaDetails) {\r\n            if (idGarantiaDetails !== \"\") {\r\n              await modificarGarantia(\r\n                usuario.token,\r\n                duracionGarantiaDetails,\r\n                idServicioDetails,\r\n                idGarantiaDetails\r\n              );\r\n            } else {\r\n              await addGarantia(\r\n                usuario.token,\r\n                duracionGarantiaDetails,\r\n                idServicioDetails\r\n              );\r\n            }\r\n          } else {\r\n            await deleteGarantia(usuario.token, idGarantiaDetails);\r\n          }\r\n        }\r\n        // Actualizar encargo\r\n        if (\r\n          idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetailsViejo) === 26\r\n        ) {\r\n          await deleteEncargo(usuario.token, idEncargoDetails);\r\n        } else if (\r\n          idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 26\r\n        ) {\r\n          await addEncargo(\r\n            usuario.token,\r\n            adelantoEncargo,\r\n            `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`,\r\n            idServicioDetails\r\n          );\r\n        } else if (\r\n          idTipoServicioDetails === idTipoServicioDetailsViejo &&\r\n          parseInt(idTipoServicioDetails) === 26\r\n        ) {\r\n          await modificarEncargo(\r\n            usuario.token,\r\n            adelantoEncargo,\r\n            `${fechaAnnoDetailsEncargo}-${fechaMesDetailsEncargo}-${fechaDiaDetailsEncargo}`,\r\n            idServicioDetails,\r\n            idEncargoDetails\r\n          );\r\n        }\r\n        // Si se cambio de tipo de servicio venta a otro\r\n        if (\r\n          (parseInt(idTipoServicioDetailsViejo) === 2) &&\r\n          parseInt(idTipoServicioDetails) !== 2 &&\r\n          parseInt(idTipoServicioDetails) !== 4\r\n        ) {\r\n          // Se suma la cantidad de la venta pasada en la tienda\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // Se elimina la venta\r\n          await deleteVenta(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idServicioDetails\r\n          );\r\n        }\r\n\r\n        // Comprobar si solamente se cambio la cantidad si es que el tip ode sericio viejo era ya una venta\r\n        if (\r\n          cantidadProductoDetails !== cantidadProductoDetailsViejo &&\r\n          idProductoDetails === idProductoDetailsViejo &&\r\n          idTiendaDetails === idTiendaDetailsViejo\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${\r\n              parseInt(cantidadProductoDetails) -\r\n              parseInt(cantidadProductoDetailsViejo)\r\n            }`\r\n          );\r\n          // Agregar o sobreescrivir la venta\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // Si no es el caso se modificó el id del producto o l tienda volviendo para atras la venta a la tienda y haciendola denuevo con lso nuevos datos de la venta\r\n        } else if (\r\n          (idTipoServicioDetails !== idTipoServicioDetailsViejo &&\r\n            parseInt(idTipoServicioDetails) === 2) ||\r\n          parseInt(idTipoServicioDetails) === 25\r\n        ) {\r\n          // Agregar o sobreescrivir la venta\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // sumar en la tienda la cantidad vieja del producto para volver atras la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // restar en la tienda nueva o vieja donde se este haciendo la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        } else if (\r\n          idTiendaDetails !== idTiendaDetailsViejo ||\r\n          idProductoDetails !== idProductoDetailsViejo\r\n        ) {\r\n          await addVenta(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idServicioDetails,\r\n            cantidadProductoDetails\r\n          );\r\n          // sumar en la tienda la cantidad vieja del producto para volver atras la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetailsViejo,\r\n            idTiendaDetailsViejo,\r\n            `${parseInt(cantidadProductoDetailsViejo) * -1}`\r\n          );\r\n          // restar en la tienda nueva o vieja donde se este haciendo la venta\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        }\r\n\r\n        // Si es una devolucion y ademas el tipo de servicio actual es una venta se devuelve la cantidad a la tienda\r\n        if (\r\n          devueltoDetails !== devueltoDetailsViejo &&\r\n          devueltoDetails === \"devolver\" &&\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 25)\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails) * -1}`\r\n          );\r\n        } else if (\r\n          devueltoDetails !== devueltoDetailsViejo &&\r\n          devueltoDetails === \"sin devolver\" &&\r\n          (parseInt(idTipoServicioDetails) === 2 ||\r\n            parseInt(idTipoServicioDetails) === 25)\r\n        ) {\r\n          await tienda_Realizarventa(\r\n            usuario.token,\r\n            idProductoDetails,\r\n            idTiendaDetails,\r\n            `${parseInt(cantidadProductoDetails)}`\r\n          );\r\n        }\r\n        // Agregar Acción de usuario agregar proveedor\r\n        const nombreTienda = dropdownItemsNombreTienda.find((element) => {\r\n          return element.value === idTiendaAuxModificarDetails;\r\n        });\r\n        const nombreProducto = dropdownItemsNombreproducto.find((element) => {\r\n          return element.value === idProductoAuxModificarDetails;\r\n        });\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} modificó una entrada de originalmente ${cantidadAuxModificarDetails} del producto ${nombreProducto?.label} en la tienda ${nombreTienda?.label}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          7\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`El servicio se modificó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setDuracionGarantiaDetails(\"\");\r\n\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n  // Método para eliminar los datos de un producto\r\n  const eliminarDeudaFunction = async () => {\r\n    setIsBotonModalMesajeVisible(false);\r\n    setModalMensaje(\"Eliminando deuda. Espere por favor\");\r\n    setModalMensajeView(true);\r\n    if (usuario?.token) {\r\n      let flag: boolean = true;\r\n      let validarCampos: string =\r\n        \"ERROR AL ELIMINAR DEUDA. Compruebe los siguientes parámetros:\\n\";\r\n\r\n      if (flag) {\r\n        const resultDeuda = await getDeudaByID(usuario.token, idDeudaDetails);\r\n        if (\r\n          Array.isArray(resultDeuda.deuda.pagos_deuda) &&\r\n          resultDeuda.deuda.pagos_deuda.length > 0\r\n        ) {\r\n          // Eliminar los pagoDeuda\r\n          resultDeuda.deuda.pagos_deuda.map(async (pagoDeuda: any) => {\r\n            await deletePagoDeuda(usuario.token, pagoDeuda.id_pago_deuda);\r\n          });\r\n        }\r\n        await deleteDeuda(usuario.token, idDeudaDetails);\r\n\r\n        const currentDate = new Date();\r\n        const year = String(currentDate.getFullYear());\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Los meses comienzan desde 0, por lo que sumamos 1\r\n        const day = String(currentDate.getDate()).padStart(2, \"0\"); // Aseguramos que siempre haya dos dígitos\r\n        let auxAddAccionUsuarioDescripcion: string = `El usuario ${usuario.nombre} eliminó la deuda del tipo de servicio ${resultDeuda.deuda.servicio.tipo_servicio.nombre} el cual devía ${resultDeuda.cantidad_restante} y se había pagado ${resultDeuda.total_pagado}`;\r\n        await addAccionUsuario(\r\n          usuario.token,\r\n          auxAddAccionUsuarioDescripcion,\r\n          `${year}-${month}-${day}`,\r\n          usuario.id_usuario,\r\n          8\r\n        );\r\n\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(`La deuda se eliminó con éxito`);\r\n        setModalMensajeView(true);\r\n        setReflechModalMensajeView(true);\r\n        setIdClienteDetails(\"\");\r\n        setPrecioUSDDetails(\"\");\r\n        setPrecioCUPDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setCostoPromedioProductoUSDDetails(\"\");\r\n        setIdTipoServicioDetails(\"\");\r\n        setCantidadProductoDetails(\"\");\r\n        setNotaDetails(\"\");\r\n        setDescripcionDetails(\"\");\r\n        setDuracionGarantiaDetails(\"\");\r\n\r\n        setModalEntradasDates({\r\n          id_entrada: \"\",\r\n          isAddEntrada: false,\r\n          fileEditable: true,\r\n          isModificarEntrada: false,\r\n        });\r\n      } else {\r\n        setIsBotonModalMesajeVisible(true);\r\n        setModalMensaje(validarCampos);\r\n        setModalMensajeView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Columnas para llenar la tabla\r\n  const columnasMyDateTablePagoDeudaModal = [\"C.Pagada USD\", \"C.Pagada CUP\", \"Fecha\"];\r\n  const columnasMyDateTableDesktop = [\r\n    \"Cliente\",\r\n    \"Tienda\",\r\n    \"Producto\",\r\n    \"Deuda USD\",\r\n    \"Deuda CUP\",\r\n    \"C.Sal USD\",\r\n    \"C.Sal CUP\",\r\n    \"Saldada\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTableTiendaModal = [\"Nombre\", \"Cantidad\"];\r\n  const columnasMyDateTableProveedorModal = [\r\n    \"Nombre\",\r\n    \"Correo\",\r\n    \"Detalle Bancario\",\r\n    \"Teléfono\",\r\n  ];\r\n\r\n  const columnasMyDateTableMovil = [\r\n    \"Cliente\",\r\n    \"Tienda\",\r\n    \"Producto\",\r\n    \"Deuda USD\",\r\n    \"Deuda CUP\",\r\n    \"C.Sal USD\",\r\n    \"C.Sal CUP\",\r\n    \"Saldada\",\r\n    \"Fecha\",\r\n  ];\r\n  const columnasMyDateTable = isMobile\r\n    ? columnasMyDateTableMovil\r\n    : columnasMyDateTableDesktop;\r\n  // Saver si se está en un movil o en un desktop para cambiar los estilos de los contenedores\r\n  if (isMobile) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n            marginTop: \"3%\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.azul_Claro,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderRadius: 15,\r\n              width: \"90%\", // Ajusta este valor si es necesario\r\n              height: 60, // Valor fijo para mantener consistencia en la altura\r\n              marginTop: \"2%\", // Valor más exacto en píxeles\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { width: 3, height: 4 },\r\n              shadowOpacity: 0.3,\r\n              shadowRadius: 5,\r\n            }}\r\n            onPress={toggleExpansion}\r\n          >\r\n            <Image\r\n              source={require(\"../images/loupe.png\")}\r\n              style={{ width: 45, height: 45 }}\r\n            />\r\n            <Text style={styles.textNavbarMovil}>Opciones de Filtrado</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={100}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableDeudas\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n          {/*Lista que se despliega para filtrar los productos*/}\r\n          {isExpanded && (\r\n            <Animated.View\r\n              style={[\r\n                { overflow: \"hidden\", position: \"absolute\", right: 0 },\r\n                animatedStyle,\r\n              ]}\r\n            >\r\n              <ScrollView contentContainerStyle={{ paddingBottom: 150 }}>\r\n                {/* Llamada a la función para renderizar los botones */}\r\n                {/*Contenedor para las opciones de busqueda del usuario*/}\r\n                <LinearGradient\r\n                  colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n                  start={[0, 0]}\r\n                  end={[1, 0]}\r\n                  style={styles.searchContainerMovil}\r\n                >\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Producto:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del producto\"\r\n                    value={nombreProductoSearsh}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreProductoSearch}\r\n                  />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Nombre del Cliente:\r\n                  </Text>\r\n                  <CustomTextImputSearch\r\n                    style={styles.customTextImputSearchFullDesktop}\r\n                    placeholder=\"Nombre del cliente\"\r\n                    value={nombreClienteSearch}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChangeText={setNombreClienteSearch}\r\n                  />\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Tipo de Servicio:\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadTipoServicioSearsh,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdown\r\n                      value={idTipoServicioSearch}\r\n                      placeholder=\"Seleccione un tipo de servicio\"\r\n                      setValue={setIdTipoServicioSearch}\r\n                      items={dropdownItemsNombreTipoServicio}\r\n                      direction=\"BOTTOM\"\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioSearsh\")\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {isPermisoServicioGeneral && (\r\n                    <View style={styles.separatorBlanco} />\r\n                  )}\r\n\r\n                  {isPermisoServicioGeneral && (\r\n                    <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n                  )}\r\n                  {isPermisoServicioGeneral && (\r\n                    <View\r\n                      style={{\r\n                        width: \"100%\",\r\n                        zIndex: capaPrioridadTiendaSearsh,\r\n                        position: \"relative\",\r\n                      }}\r\n                    >\r\n                      <CustomDropdown\r\n                        value={idTiendaSearch}\r\n                        placeholder=\"Seleccione un tienda\"\r\n                        setValue={setIdTiendaSearch}\r\n                        items={dropdownItemsNombreTienda}\r\n                        direction=\"BOTTOM\"\r\n                        onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <Text style={styles.textSearchDesktop}>\r\n                    Rango del monto de la deuda:\r\n                  </Text>\r\n                  <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyDesktop}\r\n                      placeholder=\"Desde\"\r\n                      value={rangoDeudaDesdeSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioDesdeSearch(numericValue);\r\n                      }}\r\n                    />\r\n                    <CustomTextImputSearch\r\n                      style={styles.customTextImputSearchFiftyDesktop}\r\n                      placeholder=\"Hasta\"\r\n                      value={rangoDeudaHastaSearch}\r\n                      onChangeText={(text) => {\r\n                        // Filtra caracteres no numéricos\r\n                        const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                        setRangoPrecioHastaSearch(numericValue);\r\n                      }}\r\n                    />\r\n                  </View>\r\n\r\n                  <View style={styles.separatorBlanco} />\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      width: \"60%\",\r\n                      marginLeft: \"18%\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    {options.map((option) => (\r\n                      <CustomRadioButton\r\n                        key={option.value}\r\n                        label={option.label}\r\n                        selected={selecterActivoDetails === option.value}\r\n                        onPress={() => handleRadioButtonPress(option.value)}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                      position: \"relative\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaDesdeSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Desde\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDesdeSearch}\r\n                        monthValue={fechaMesDesdeSearch}\r\n                        yearValue={fechaAnnoDesdeSearch}\r\n                        onDayChange={setFechaDiaDesdeSearch}\r\n                        onMonthChange={setFechaMesdesdeSearch}\r\n                        onYearChange={setFechaAnnoDesdeSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaDesdeSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        position: \"relative\",\r\n                        zIndex: capaPrioridadFechaHastaSearsh,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                      >\r\n                        Hasta\r\n                      </Text>\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaHastaSearch}\r\n                        monthValue={fechaMesHastaSearch}\r\n                        yearValue={fechaAnnoHastaSearch}\r\n                        onDayChange={setFechaDiaHastaSearch}\r\n                        onMonthChange={setFechaMesHastaSearch}\r\n                        onYearChange={setFechaAnnoHastaSearch}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.textSearchDesktop}\r\n                        onDropdownOpen={() =>\r\n                          controlarCapas(\"FechaHastaSearsh\")\r\n                        }\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      position: \"relative\",\r\n                      zIndex: 500,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Oscuro,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          marginLeft: \"6%\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={clearFields}\r\n                      >\r\n                        Limpiar Campos\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        backgroundColor: Colors.azul_Suave,\r\n                        borderRadius: 15,\r\n                        width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                        height: 40, // Altura fija para pantallas de escritorio\r\n                        marginLeft: \"5%\",\r\n                        marginBottom: \"7%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                        shadowRadius: 14, // Difuminado\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.blanco,\r\n                          fontSize: 14,\r\n                          justifyContent: \"center\",\r\n                          fontWeight: \"bold\", // Para negritas\r\n                          textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                          textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                          textShadowRadius: 2, // Difuminado de la sombra\r\n                        }}\r\n                        onPress={() =>\r\n                          filtrarYOrdenarDeudas(\r\n                            `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                            `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                          )\r\n                        }\r\n                      >\r\n                        Buscar\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </LinearGradient>\r\n              </ScrollView>\r\n            </Animated.View>\r\n          )}\r\n        </View>\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 4000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Servicio\"\r\n                  : \"Datos del Servicio\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CustomDropdownDetails\r\n                    value={idClienteDetails}\r\n                    placeholder=\"Seleccione un Cliente\"\r\n                    setValue={setIdClienteDetails}\r\n                    items={dropdownItemsNombreCliente}\r\n                    searchable={true}\r\n                    readOnly={\r\n                      !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                    }\r\n                    onDropdownOpen={() => controlarCapas(\"ClienteDetails\")}\r\n                  />\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTiendaDetails}\r\n                      placeholder=\"Seleccione una tienda\"\r\n                      setValue={setIdTiendaDetails}\r\n                      items={dropdownItemsNombreTienda}\r\n                      readOnly={\r\n                        !(isPermisoServicioGeneral &&\r\n                        modalEntradasDates?.id_entrada === \"\"\r\n                          ? true\r\n                          : isPermisoServicioGeneral &&\r\n                            isPermisoModificarServicio)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <CustomDropdownDetails\r\n                      value={idTipoServicioDetails}\r\n                      placeholder=\"Seleccione un tipo de servicio\"\r\n                      setValue={setIdTipoServicioDetails}\r\n                      items={dropdownItemsNombreTipoServicio}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      searchable={true}\r\n                      onDropdownOpen={() =>\r\n                        controlarCapas(\"TipoServicioDetails\")\r\n                      }\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Garantías */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: 100,\r\n                    }}\r\n                  >\r\n                    {true && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Tiene Garantía\r\n                      </Text>\r\n                    )}\r\n                    {true && (\r\n                      <CustomRadioButtonSingle\r\n                        onPress={() => setIsGarantiaDetails(!isGarantiaDetails)}\r\n                        selected={isGarantiaDetails}\r\n                        label=\"Garantía\"\r\n                      />\r\n                    )}\r\n\r\n                    {/*isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Adelanto del encargo\r\n                      </Text>\r\n                    )*/}\r\n                    {/*isEncargoProducto && (\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={adelantoEncargo}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n                          setAdelantoEncargo(validNumericValue);\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={true}\r\n                        placeholder=\"Adelanto del encargo\"\r\n                      />\r\n                    )*/}\r\n\r\n                    {isGarantiaDetails && (\r\n                      <View style={{ marginTop: \"2%\" }}>\r\n                        <Text style={styles.labelTextModalDesktop}>\r\n                          Duración en días:\r\n                        </Text>\r\n                        <CustomTextImputSearch\r\n                          style={styles.textImputModal}\r\n                          value={duracionGarantiaDetails}\r\n                          onChangeText={(text) => {\r\n                            // Permite solo números y un punto decimal\r\n                            const numericValue = text.replace(/[^0-9]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                            // Asegura que solo haya un punto decimal\r\n                            setDuracionGarantiaDetails(numericValue);\r\n                          }}\r\n                          cursorColor={Colors.azul_Oscuro}\r\n                          editable={\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          }\r\n                          placeholder=\"Duracion En días\"\r\n                        />\r\n                      </View>\r\n                    )}\r\n                  </View>\r\n\r\n                  {/*  */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    {/*isDateLoaded && isEncargoProducto && (\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Fecha llegada\r\n                      </Text>\r\n                    )*/}\r\n                    {/*isDateLoaded && isEncargoProducto && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetailsEncargo}\r\n                        monthValue={fechaMesDetailsEncargo}\r\n                        yearValue={fechaAnnoDetailsEncargo}\r\n                        onDayChange={setFechaDiaDetailsEncargo}\r\n                        onMonthChange={setFechaMesDetailsEncargo}\r\n                        onYearChange={setFechaAnnoDetailsEncargo}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )*/}\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <CustomDropdownDetails\r\n                      value={idProductoDetails}\r\n                      placeholder=\"Seleccione un produto\"\r\n                      setValue={setIdProductoDetails}\r\n                      items={dropdownItemsNombreproducto}\r\n                      searchable={true}\r\n                      readOnly={\r\n                        !(isPermisoModificarServicio || isPermisoServicioLocal)\r\n                      }\r\n                      onDropdownOpen={() => controlarCapas(\"ProductoDetails\")}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        value={cantidadProductoDetails}\r\n                        onChangeText={(text) => {\r\n                          // Filtra caracteres no numéricos\r\n                          const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                          setCantidadProductoDetails(numericValue);\r\n                        }}\r\n                        editable={\r\n                          isPermisoModificarServicio || isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Cantidad del producto\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en USD\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoUSDDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoCUPDetails(\r\n                              String(\r\n                                (\r\n                                  parseFloat(validNumericValue) * cambioMoneda\r\n                                ).toFixed(2)\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoCUPDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoUSDDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoUSD\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <CustomTextImputSearch\r\n                        style={styles.textImputModal}\r\n                        value={costoPromedioProductoCUPDetails}\r\n                        onChangeText={(text) => {\r\n                          // Permite solo números y un punto decimal\r\n                          const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                          // Asegura que solo haya un punto decimal\r\n                          const validNumericValue =\r\n                            numericValue.split(\".\").length > 2\r\n                              ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                              : numericValue;\r\n\r\n                          if (validNumericValue !== \"\") {\r\n                            setCostoPromedioProductoUSDDetails(\r\n                              String(\r\n                                parseFloat(validNumericValue) / cambioMoneda\r\n                              )\r\n                            );\r\n                          } else {\r\n                            setCostoPromedioProductoUSDDetails(\"0\");\r\n                          }\r\n                          setCostoPromedioProductoCUPDetails(validNumericValue);\r\n                          setAuxRedondeo(\"CostoCUP\");\r\n                        }}\r\n                        cursorColor={Colors.azul_Oscuro}\r\n                        editable={\r\n                          parseInt(idTipoServicioDetails) === 2 ||\r\n                          parseInt(idTipoServicioDetails) === 25\r\n                            ? false\r\n                            : isPermisoModificarServicio ||\r\n                              isPermisoServicioLocal\r\n                        }\r\n                        placeholder=\"Costo Promedio\"\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={precioUSDDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioCUPDetails(\r\n                            String(\r\n                              (\r\n                                parseFloat(validNumericValue) * cambioMoneda\r\n                              ).toFixed(2)\r\n                            )\r\n                          );\r\n                        } else {\r\n                          setPrecioCUPDetails(\"0\");\r\n                        }\r\n                        setPrecioUSDDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioUSD\");\r\n                      }}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en usd\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModalNOEDITABLE}\r\n                      value={precioCUPDetails}\r\n                      onChangeText={(text) => {\r\n                        // Permite solo números y un punto decimal\r\n                        const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                        // Asegura que solo haya un punto decimal\r\n                        const validNumericValue =\r\n                          numericValue.split(\".\").length > 2\r\n                            ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                            : numericValue;\r\n\r\n                        if (validNumericValue !== \"\") {\r\n                          setPrecioUSDDetails(\r\n                            String(parseFloat(validNumericValue) / cambioMoneda)\r\n                          );\r\n                        } else {\r\n                          setPrecioUSDDetails(\"0\");\r\n                        }\r\n                        setPrecioCUPDetails(validNumericValue);\r\n                        setAuxRedondeo(\"PrecioCUP\");\r\n                      }}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Precio por unidad en cup\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={\r\n                          !(\r\n                            isPermisoModificarServicio || isPermisoServicioLocal\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"90%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <CustomTextImputSearch\r\n                      style={styles.textImputModal}\r\n                      cursorColor={Colors.azul_Oscuro}\r\n                      value={notaDetails}\r\n                      onChangeText={setNotaDetails}\r\n                      editable={\r\n                        isPermisoModificarServicio || isPermisoServicioLocal\r\n                      }\r\n                      placeholder=\"Nota\"\r\n                    />\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  ></View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <CustomTextImputSearch\r\n                  style={{\r\n                    height: 150,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 1,\r\n                    shadowColor: Colors.azul_Suave,\r\n                    shadowOffset: { width: 0, height: 0 },\r\n                    shadowOpacity: 0.6,\r\n                    shadowRadius: 14,\r\n                    width: \"90%\",\r\n                    textAlignVertical: \"top\",\r\n                    padding: 10,\r\n                    marginTop: \"2%\",\r\n                    marginHorizontal: \"5%\",\r\n                    backgroundColor: Colors.blanco_Suave,\r\n                    borderRadius: 13,\r\n                    fontSize: 18,\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 0.5, height: 0.5 },\r\n                    textShadowRadius: 2,\r\n                    fontWeight: \"bold\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                  cursorColor={Colors.azul_Oscuro}\r\n                  placeholder=\"Escribe la descripción del servicio\"\r\n                  multiline={true}\r\n                  editable={\r\n                    isPermisoModificarServicio || isPermisoServicioLocal\r\n                  }\r\n                  numberOfLines={5}\r\n                  value={descripcionDetails}\r\n                  onChangeText={setDescripcionDetails}\r\n                  scrollEnabled={true}\r\n                />\r\n\r\n                <View\r\n                  style={{\r\n                    flex: 1,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 2,\r\n                    marginTop: \"3%\",\r\n                    borderRadius: 15,\r\n                    height: 500,\r\n                    width: \"90%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <MyDateTablePagoDeudaWithButton\r\n                    columns={columnasMyDateTablePagoDeudaModal}\r\n                    items={pagoDeudaByDeudaDetails}\r\n                    onButtonPress={(item: any) =>\r\n                      deletePagoDeudaFronTabla(item)\r\n                    }\r\n                  />\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          if (parseFloat(cantidad_restante) > 0) {\r\n                            setIsModalAddPagoDeudaView(true);\r\n                          } else {\r\n                            setModalMensajeView(true);\r\n                            setModalMensaje(\"La deuda ya está saldada\");\r\n                            setReflechModalMensajeView(false);\r\n                            setIsBotonModalMesajeVisible(true);\r\n                          }\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar pago a la deuda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"45%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta deuda?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Deuda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => modificarServicioFunction()}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal agregar pago deuda*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalAddPagoDeudaView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 400,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Agregar un pago a la deuda.`}\r\n              </Text>\r\n\r\n              <Text\r\n                style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10 }}\r\n              >\r\n                Cantidad a pagar USD\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  marginHorizontal: \"5%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 16, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                value={cantidadUSDAddPagoDeuda}\r\n                onChangeText={(text) => {\r\n                  // Permite solo números y un punto decimal\r\n                  const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                  // Asegura que solo haya un punto decimal\r\n                  const validNumericValue =\r\n                    numericValue.split(\".\").length > 2\r\n                      ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                      : numericValue;\r\n\r\n                  setCantidadUSDAddPagoDeuda(validNumericValue);\r\n                  setCantidadCUPAddPagoDeuda((validNumericValue * cambioMoneda).toFixed(2))\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                editable={true}\r\n                placeholder=\"Cantidad del pago en USD\"\r\n              />\r\n\r\n              <Text\r\n                style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10 }}\r\n              >\r\n                Cantidad a pagar CUP\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  marginHorizontal: \"5%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 16, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                value={cantidadCUPAddPagoDeuda}\r\n                onChangeText={(text) => {\r\n                  // Permite solo números y un punto decimal\r\n                  const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                  // Asegura que solo haya un punto decimal\r\n                  const validNumericValue =\r\n                    numericValue.split(\".\").length > 2\r\n                      ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                      : numericValue;\r\n\r\n                  setCantidadCUPAddPagoDeuda(validNumericValue);\r\n                  setCantidadUSDAddPagoDeuda(String((validNumericValue / cambioMoneda).toFixed(5)));\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                editable={true}\r\n                placeholder=\"Cantidad del pago en CUP\"\r\n              />\r\n\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  if (\r\n                    parseFloat(cantidadUSDAddPagoDeuda) <=\r\n                    parseFloat(cantidad_restante)\r\n                  ) {\r\n                    addNewDeuda()\r\n                  } else {\r\n                    setModalMensaje(\r\n                      `La cantidad de el pago de la deuda ${cantidadUSDAddPagoDeuda} es mayor a la cantidad faltante de la deuda ${cantidad_restante}`\r\n                    );\r\n                    setModalMensajeView(true);\r\n                    setReflechModalMensajeView(false);\r\n                    setIsBotonModalMesajeVisible(true);\r\n                  }\r\n                }}\r\n                style={{\r\n                  backgroundColor: Colors.azul_Claro,\r\n                  borderRadius: 15,\r\n                  marginTop: 30,\r\n                  width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                    color: Colors.blanco_Suave,\r\n                  }}\r\n                >\r\n                  Agregar\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setIsModalAddPagoDeudaView(!isModalAddPagoDeudaView)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 250,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Deudas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {/*Barra superior*/}\r\n        <Navbar />\r\n        {/* Vista animada que se despliega hacia la izquierda */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        ></View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            marginLeft: \"1%\",\r\n          }}\r\n        >\r\n          {/*Contenedor para las opciones de busqueda del paciente*/}\r\n          <LinearGradient\r\n            colors={[Colors.azul_Claro, Colors.azul_Oscuro]} // Gradiente de azul oscuro a azul claro\r\n            start={[0, 0]}\r\n            end={[1, 0]}\r\n            style={styles.searchContainerDesktop}\r\n          >\r\n            <Text style={styles.textSearchDesktop}>Nombre del Producto:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del producto\"\r\n              value={nombreProductoSearsh}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreProductoSearch}\r\n            />\r\n\r\n            <Text style={styles.textSearchDesktop}>Nombre del Cliente:</Text>\r\n            <CustomTextImputSearch\r\n              style={styles.customTextImputSearchFullDesktop}\r\n              placeholder=\"Nombre del cliente\"\r\n              value={nombreClienteSearch}\r\n              onKeyPress={handleKeyPress}\r\n              onChangeText={setNombreClienteSearch}\r\n            />\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Tipo de Servicio:</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                zIndex: capaPrioridadTipoServicioSearsh,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <CustomDropdown\r\n                value={idTipoServicioSearch}\r\n                placeholder=\"Seleccione un tipo de servicio\"\r\n                setValue={setIdTipoServicioSearch}\r\n                items={dropdownItemsNombreTipoServicio}\r\n                direction=\"BOTTOM\"\r\n                onDropdownOpen={() => controlarCapas(\"TipoServicioSearsh\")}\r\n              />\r\n            </View>\r\n\r\n            {isPermisoServicioGeneral && (\r\n              <View style={styles.separatorBlanco} />\r\n            )}\r\n\r\n            {isPermisoServicioGeneral && (\r\n              <Text style={styles.textSearchDesktop}>Tienda:</Text>\r\n            )}\r\n            {isPermisoServicioGeneral && (\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  zIndex: capaPrioridadTiendaSearsh,\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <CustomDropdown\r\n                  value={idTiendaSearch}\r\n                  placeholder=\"Seleccione un tienda\"\r\n                  setValue={setIdTiendaSearch}\r\n                  items={dropdownItemsNombreTienda}\r\n                  direction=\"BOTTOM\"\r\n                  onDropdownOpen={() => controlarCapas(\"TiendaSearsh\")}\r\n                />\r\n              </View>\r\n            )}\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>\r\n              Rango del monto de la deuda:\r\n            </Text>\r\n            <View style={{ alignItems: \"center\", flexDirection: \"row\" }}>\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Desde\"\r\n                value={rangoDeudaDesdeSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioDesdeSearch(numericValue);\r\n                }}\r\n              />\r\n              <CustomTextImputSearch\r\n                style={styles.customTextImputSearchFiftyDesktop}\r\n                placeholder=\"Hasta\"\r\n                value={rangoDeudaHastaSearch}\r\n                onChangeText={(text) => {\r\n                  // Filtra caracteres no numéricos\r\n                  const numericValue = text.replace(/[^0-9]/g, \"\");\r\n                  setRangoPrecioHastaSearch(numericValue);\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <Text style={styles.textSearchDesktop}>Estado de deuda:</Text>\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {optionsEstadoDeuda.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterEstadoDeudaSearch === option.value}\r\n                  onPress={() => setSelecterEstadoDeudaSearsh(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View style={styles.separatorBlanco} />\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                width: \"60%\",\r\n                marginLeft: \"18%\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <CustomRadioButton\r\n                  key={option.value}\r\n                  label={option.label}\r\n                  selected={selecterActivoDetails === option.value}\r\n                  onPress={() => handleRadioButtonPress(option.value)}\r\n                />\r\n              ))}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                position: \"relative\",\r\n                zIndex: 1000,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaDesdeSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Desde\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaDesdeSearch}\r\n                  monthValue={fechaMesDesdeSearch}\r\n                  yearValue={fechaAnnoDesdeSearch}\r\n                  onDayChange={setFechaDiaDesdeSearch}\r\n                  onMonthChange={setFechaMesdesdeSearch}\r\n                  onYearChange={setFechaAnnoDesdeSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaDesdeSearsh\")}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  position: \"relative\",\r\n                  zIndex: capaPrioridadFechaHastaSearsh,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 18,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                >\r\n                  Hasta\r\n                </Text>\r\n                <MyDateInput\r\n                  dayValue={fechaDiaHastaSearch}\r\n                  monthValue={fechaMesHastaSearch}\r\n                  yearValue={fechaAnnoHastaSearch}\r\n                  onDayChange={setFechaDiaHastaSearch}\r\n                  onMonthChange={setFechaMesHastaSearch}\r\n                  onYearChange={setFechaAnnoHastaSearch}\r\n                  style={{ margin: 20 }}\r\n                  styleText={styles.textSearchDesktop}\r\n                  onDropdownOpen={() => controlarCapas(\"FechaHastaSearsh\")}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                position: \"relative\",\r\n                zIndex: 500,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Oscuro,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    marginLeft: \"6%\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={clearFields}\r\n                >\r\n                  Limpiar Campos\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: Colors.azul_Suave,\r\n                  borderRadius: 15,\r\n                  width: \"42.5%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  marginLeft: \"5%\",\r\n                  marginBottom: \"7%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.blanco,\r\n                    fontSize: 14,\r\n                    justifyContent: \"center\",\r\n                    fontWeight: \"bold\", // Para negritas\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                    textShadowOffset: { width: 1, height: 1 }, // Desplazamiento de la sombra\r\n                    textShadowRadius: 2, // Difuminado de la sombra\r\n                  }}\r\n                  onPress={() =>\r\n                    filtrarYOrdenarDeudas(\r\n                      `${fechaAnnoDesdeSearch}-${fechaMesDesdeSearch}-${fechaDiaDesdeSearch}`,\r\n                      `${fechaAnnoHastaSearch}-${fechaMesHastaSearch}-${fechaDiaHastaSearch}`\r\n                    )\r\n                  }\r\n                >\r\n                  Buscar\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </LinearGradient>\r\n          {loading ? (\r\n            <ActivityIndicator\r\n              size={150}\r\n              color=\"#007BFF\"\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"15%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MyDateTableDeudas\r\n              isMobile={isMobile}\r\n              items={filterItems}\r\n              columns={columnasMyDateTable}\r\n              columnasMyDateTableEntradaModal={\r\n                columnasMyDateTableProveedorModal\r\n              }\r\n              columnasMyDateTableTiendaModal={columnasMyDateTableTiendaModal}\r\n              tiendasByProducto={tiendasByProducto}\r\n              proveedorByProducto={proveedorByProducto}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Modal\r\n          transparent={true}\r\n          visible={modalEntradasDates?.isAddEntrada ?? false}\r\n          animationType=\"fade\"\r\n          onRequestClose={callModalAddProveedor}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              zIndex: 5000, // Asegúrate de que el zIndex sea alto\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"90%\",\r\n                backgroundColor: Colors.blanco_Suave,\r\n                borderRadius: 15,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              {/* Botón de cerrar en la esquina superior derecha */}\r\n              <TouchableOpacity\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 10,\r\n                  backgroundColor: Colors.rojo_oscuro,\r\n                  borderRadius: 30,\r\n                  marginRight: \"3%\",\r\n                  height: 40,\r\n                  width: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                onPress={callModalAddProveedor}\r\n              >\r\n                <Text style={{ color: Colors.blanco_Suave }}>X</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.separatorNegro} />\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 26,\r\n                  marginTop: \"1%\",\r\n                  color: Colors.negro,\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                  textShadowOffset: { width: 1, height: 1 },\r\n                  textShadowRadius: 2,\r\n                }}\r\n              >\r\n                {modalEntradasDates?.id_entrada === \"\"\r\n                  ? \"Crear Servicio\"\r\n                  : \"Datos de la Deuda\"}\r\n              </Text>\r\n\r\n              {/* ScrollView para permitir el desplazamiento del contenido */}\r\n              <ScrollView\r\n                style={{ width: \"100%\" }}\r\n                contentContainerStyle={{\r\n                  alignItems: \"center\",\r\n                  paddingBottom: 20, // Espacio al final del contenido\r\n                }}\r\n              >\r\n                {/* Nombre del Proveedor */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.labelTextModalDesktop}>\r\n                    Nombre del Cliente\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    zIndex: capaPrioridadClienteDetails,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <Text style={styles.textLabelAsInput}>\r\n                    {dropdownItemsNombreCliente.find(\r\n                      (element) => element.value === idClienteDetails\r\n                    )?.label || \"Cliente no encontrado\"}\r\n                  </Text>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    position: \"relative\",\r\n                    zIndex: capaPrioridadTipoServicioDetails,\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Tienda dodnde se presto el servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tienda donde se prestó el servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTienda.find(\r\n                        (element) => element.value === idTiendaDetails\r\n                      )?.label || \"Tienda no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Tipo Servicio */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      position: \"relative\",\r\n                      zIndex: capaPrioridadTipoServicioDetails,\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      Tipo de Servicio\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreTipoServicio.find(\r\n                        (element) => element.value === idTipoServicioDetails\r\n                      )?.label || \"Tipo de Servicio no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Nombre Producto */}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Producto</Text>\r\n                  </View>\r\n                )}\r\n                {isVentaProducto && (\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      zIndex: capaPrioridadProductoDetails,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {dropdownItemsNombreproducto.find(\r\n                        (element) => element.value === idProductoDetails\r\n                      )?.label || \"Producto no encontrado\"}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n\r\n                {/* Contenedor para la cantidad y - */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  {isVentaProducto && (\r\n                    <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Cantidad del Producto\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {cantidadProductoDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Costo */}\r\n                  {(isVentaProducto ? isPermisoServicioGeneral : true) && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        {isVentaProducto\r\n                          ? \"Costo promedio del producto en USD\"\r\n                          : \"Costo del servicio en USD\"}\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {!isVentaProducto && (\r\n                    <View\r\n                      style={{\r\n                        width: \"45%\",\r\n                        marginLeft: \"2%\",\r\n                        marginRight: \"2%\",\r\n                      }}\r\n                    >\r\n                      <Text style={styles.labelTextModalDesktop}>\r\n                        Costo del servicio en CUP\r\n                      </Text>\r\n                      <Text style={styles.textLabelAsInput}>\r\n                        {costoPromedioProductoUSDDetails}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Contenedor para los precios en USD y CUP */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                  }}\r\n                >\r\n                  {/* Campo USD */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en USD\"\r\n                        : \"Precio del servicio en USD\"}\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {precioUSDDetails}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Campo CUP */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>\r\n                      {isVentaProducto\r\n                        ? \"Precio por unidad en CUP\"\r\n                        : \"Precio del servicio en CUP\"}\r\n                    </Text>\r\n                    <Text style={styles.textLabelAsInput}>\r\n                      {precioCUPDetails}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {isVentaProducto && <View style={styles.separatorNegro} />}\r\n\r\n                {/* Contenedor para la fecha */}\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\", // Para separar los campos de forma uniforme\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 10,\r\n                    zIndex: capaPrioridadFechaDetails,\r\n                  }}\r\n                >\r\n                  {/* Campo fecha */}\r\n                  <View style={{ width: \"45%\", marginLeft: \"2%\" }}>\r\n                    <Text style={styles.labelTextModalDesktop}>Fecha</Text>\r\n                    {isDateLoaded && (\r\n                      <MyDateInput\r\n                        dayValue={fechaDiaDetails}\r\n                        monthValue={fechaMesDetails}\r\n                        yearValue={fechaAnnoDetails}\r\n                        onDayChange={setFechaDiaDetails}\r\n                        onMonthChange={setFechaMesDetails}\r\n                        onYearChange={setFechaAnnoDetails}\r\n                        style={{ margin: 20 }}\r\n                        styleText={styles.labelTextModalDesktop}\r\n                        onDropdownOpen={() => controlarCapas(\"FechaDetails\")}\r\n                        isReadOnly={!false}\r\n                      />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Campo Nota */}\r\n                  <View\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginLeft: \"2%\",\r\n                      marginRight: \"2%\",\r\n                      marginTop: \"5%\",\r\n                    }}\r\n                  >\r\n                    <Text style={styles.labelTextModalDesktop}>Nota</Text>\r\n                    <Text style={styles.textLabelAsInput}>{notaDetails}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                {/* Descripción */}\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    marginTop: \"1%\",\r\n                    color: Colors.negro,\r\n                    textShadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                    textShadowOffset: { width: 1, height: 1 },\r\n                    textShadowRadius: 2,\r\n                  }}\r\n                >\r\n                  Descripción\r\n                </Text>\r\n                <Text style={styles.textDescroptionLabelAsInput}>\r\n                  {descripcionDetails}\r\n                </Text>\r\n\r\n                <View\r\n                  style={{\r\n                    flex: 1,\r\n                    borderColor: Colors.azul_Oscuro,\r\n                    borderWidth: 2,\r\n                    marginTop: \"3%\",\r\n                    borderRadius: 15,\r\n                    height: 500,\r\n                    width: \"90%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <MyDateTablePagoDeudaWithButton\r\n                    columns={columnasMyDateTablePagoDeudaModal}\r\n                    items={pagoDeudaByDeudaDetails}\r\n                    onButtonPress={(item: any) =>\r\n                      deletePagoDeudaFronTabla(item)\r\n                    }\r\n                  />\r\n                </View>\r\n\r\n                {/*btones para agregar, modificar o elminiar según corresponda */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-end\",\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20, // Espacio superior adicional\r\n                  }}\r\n                >\r\n                  {/* Botón para agregar proveedor */}\r\n                  {isPermisoAgregarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.azul_Claro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginLeft: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          if (parseFloat(cantidad_restante) > 0) {\r\n                            setIsModalAddPagoDeudaView(true);\r\n                          } else {\r\n                            setModalMensajeView(true);\r\n                            setModalMensaje(\"La deuda ya está saldada\");\r\n                            setReflechModalMensajeView(false);\r\n                            setIsBotonModalMesajeVisible(true);\r\n                          }\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Agregar pago a la deuda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  {/* Botón para eliminar proveedor */}\r\n                  {isPermisoEliminarServicio &&\r\n                    modalEntradasDates?.id_entrada !== \"\" && (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          backgroundColor: Colors.rojo_oscuro,\r\n                          borderRadius: 15,\r\n                          width: \"30%\", // Ancho fijo para pantallas de escritorio\r\n                          height: 50, // Altura fija para pantallas de escritorio\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          shadowColor: \"#000\",\r\n                          marginRight: \"5%\",\r\n                          shadowOffset: { width: 3, height: 4 },\r\n                          shadowOpacity: 0.3,\r\n                          shadowRadius: 5,\r\n                          marginTop: \"3%\", // Margen adicional entre botones\r\n                        }}\r\n                        onPress={() => {\r\n                          setIsModalChekVisible(true);\r\n                          setIsModalChekEliminarEntrada(true);\r\n                          setMesajeModalChek(\r\n                            `¿Estás seguro que deseas ELIMINAR al esta deuda?`\r\n                          );\r\n                          setModalEntradasDates({\r\n                            id_entrada: \"\",\r\n                            isAddEntrada: false,\r\n                            isModificarEntrada: false,\r\n                            fileEditable: true,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          Eliminar Deuda\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal para confimar*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalChekVisible}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 200,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"stretch\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {mesajeModalChek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\", // Espacio entre los botones\r\n                  width: \"100%\", // Asegurarse de que el contenedor ocupe todo el ancho\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.rojo_oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isModalChekEliminarEntrada\r\n                      ? eliminarDeudaFunction()\r\n                      : modificarServicioFunction()\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Sí</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>No</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => setIsModalChekVisible(!isModalChekVisible)}\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Modal agregar pago deuda*/}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalAddPagoDeudaView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 350,\r\n                height: 400,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\", // Cambiar a stretch para ocupar todo el ancho\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {`Agregar un pago a la deuda.`}\r\n              </Text>\r\n\r\n              <Text\r\n                style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10 }}\r\n              >\r\n                Cantidad a pagar USD\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  marginHorizontal: \"5%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 16, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                value={cantidadUSDAddPagoDeuda}\r\n                onChangeText={(text) => {\r\n                  // Permite solo números y un punto decimal\r\n                  const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                  // Asegura que solo haya un punto decimal\r\n                  const validNumericValue =\r\n                    numericValue.split(\".\").length > 2\r\n                      ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                      : numericValue;\r\n\r\n                  setCantidadUSDAddPagoDeuda(validNumericValue);\r\n                  setCantidadCUPAddPagoDeuda((validNumericValue * cambioMoneda).toFixed(2))\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                editable={true}\r\n                placeholder=\"Cantidad del pago en USD\"\r\n              />\r\n\r\n              <Text\r\n                style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10 }}\r\n              >\r\n                Cantidad a pagar CUP\r\n              </Text>\r\n              <CustomTextImputSearch\r\n                style={{\r\n                  height: 50,\r\n                  borderColor: Colors.azul_Oscuro,\r\n                  borderWidth: 1, // Ajusta el borde a ser más delgado\r\n                  shadowColor: Colors.azul_Suave, // Color de la sombra\r\n                  shadowOffset: { width: 0, height: 0 },\r\n                  shadowOpacity: 0.6, // Ajusta la opacidad para hacer la sombra más difuminada\r\n                  shadowRadius: 14, // Difuminado\r\n                  width: \"90%\",\r\n                  marginTop: \"2%\",\r\n                  marginHorizontal: \"5%\",\r\n                  backgroundColor: Colors.blanco_Suave,\r\n                  borderRadius: 13,\r\n                  fontSize: 16, // Tamaño de letra más grande\r\n                  textShadowColor: \"rgba(0, 0, 0, 0.5)\", // Sombra oscura suave\r\n                  textShadowOffset: { width: 0.5, height: 0.5 }, // Desplazamiento de la sombra\r\n                  textShadowRadius: 2, // Difuminado de la sombra\r\n                  fontWeight: \"bold\", // Letra en negritas\r\n                  paddingHorizontal: 10, // Espacio interno para que no esté pegado al borde\r\n                }}\r\n                value={cantidadCUPAddPagoDeuda}\r\n                onChangeText={(text) => {\r\n                  // Permite solo números y un punto decimal\r\n                  const numericValue = text.replace(/[^0-9.]/g, \"\"); // Elimina caracteres que no sean dígitos o puntos\r\n                  // Asegura que solo haya un punto decimal\r\n                  const validNumericValue =\r\n                    numericValue.split(\".\").length > 2\r\n                      ? numericValue.replace(/\\.+$/, \"\") // Elimina puntos adicionales al final\r\n                      : numericValue;\r\n\r\n                  setCantidadCUPAddPagoDeuda(validNumericValue);\r\n                  setCantidadUSDAddPagoDeuda(String((validNumericValue / cambioMoneda).toFixed(5)));\r\n                }}\r\n                cursorColor={Colors.azul_Oscuro}\r\n                editable={true}\r\n                placeholder=\"Cantidad del pago en CUP\"\r\n              />\r\n\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  if (\r\n                    parseFloat(cantidadUSDAddPagoDeuda) <=\r\n                    parseFloat(cantidad_restante)\r\n                  ) {\r\n                    addNewDeuda()\r\n                  } else {\r\n                    setModalMensaje(\r\n                      `La cantidad de el pago de la deuda ${cantidadUSDAddPagoDeuda} es mayor a la cantidad faltante de la deuda ${cantidad_restante}`\r\n                    );\r\n                    setModalMensajeView(true);\r\n                    setReflechModalMensajeView(false);\r\n                    setIsBotonModalMesajeVisible(true);\r\n                  }\r\n                }}\r\n                style={{\r\n                  backgroundColor: Colors.azul_Claro,\r\n                  borderRadius: 15,\r\n                  marginTop: 30,\r\n                  width: \"90%\", // Ancho fijo para pantallas de escritorio\r\n                  height: 40, // Altura fija para pantallas de escritorio\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: { width: 3, height: 4 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 5,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                    color: Colors.blanco_Suave,\r\n                  }}\r\n                >\r\n                  Agregar\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  setIsModalAddPagoDeudaView(!isModalAddPagoDeudaView)\r\n                }\r\n                style={{ marginTop: 20, alignItems: \"center\" }}\r\n              >\r\n                <Text style={{ color: Colors.azul_Oscuro }}>Cancelar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/*Modal mensaje */}\r\n        <Modal\r\n          transparent={true}\r\n          visible={isModalMensajeView}\r\n          animationType=\"fade\"\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Fondo semi-transparente\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 650,\r\n                padding: 20,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                alignItems: \"center\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 5,\r\n                elevation: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 20 }}\r\n              >\r\n                {modalMensaje}\r\n              </Text>\r\n\r\n              {isBotonModalMesajeVisible && (\r\n                <TouchableOpacity\r\n                  style={{\r\n                    backgroundColor: Colors.azul_Oscuro,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    width: \"48%\", // Ajusta el ancho de los botones\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  onPress={() =>\r\n                    isReflechModalMensajeView\r\n                      ? navigation.replace(\"Deudas\")\r\n                      : setModalMensajeView(!isModalMensajeView)\r\n                  }\r\n                >\r\n                  <Text style={{ color: \"white\" }}>Aceptar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","// App.tsx\nimport React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport ProductosViwe from \"./Views/ProductosView\";\nimport { HomeScreen } from \"./Views/HomeScreen\";\nimport ServiciosView from \"./Views/ServiciosView\";\nimport LoginView from \"./Views/LoginView\";\nimport { UsuarioProvider } from \"./contexts/UsuarioContext\";\nimport { ModalProductsDatesProvider } from \"./contexts/AuxiliarContextFromModalProductsDates\";\nimport { SortProductosProvider } from \"./contexts/AuxiliarSortProductos\";\nimport { SortMovimientosDatesProvider } from \"./contexts/AuxiliarSortMovimientos\";\nimport { ModalProveedoresDatesProvider } from \"./contexts/AuxiliarContextFromModalProveedores\";\nimport { ModalEntradasDatesProvider } from \"./contexts/AuxiliarContextModalEntradas\";\nimport { SortEntradasProvider } from \"./contexts/AuxiliarSortEntradas\";\nimport { ImagenesDeleteProvider } from \"./contexts/DeleteImagenContext\";\nimport { SelectedButonProvider } from \"./contexts/globalButonNavbarSelected\";\nimport ProveedoresView from \"./Views/ProveedoresView\";\nimport EnMyTiendaView from \"./Views/EnMyTiendaView\";\nimport EntradasView from \"./Views/EntradasView\";\nimport { Administracion } from \"./Views/AdministracionView\";\nimport MovimientosView from \"./Views/MovimientosView\";\nimport { ModalMovimientosDatesProvider } from \"./contexts/AuxiliarContextModalMovimientos\";\nimport { NavigationLostDatesProvider } from \"./contexts/NavigationLostContext\";\nimport UsuariosView from \"./Views/UsuariosView\";\nimport TiendasView from \"./Views/TiendasView\";\nimport { SortUsuariosProvider } from \"./contexts/AuxiliarSortUsuarios\";\nimport AccionesView from \"./Views/AccionesView\";\nimport { SortAccionesProvider } from \"./contexts/AuxiliarSortAcciones\";\nimport PermisosView from \"./Views/PermisosView\";\nimport { PermisosUsuarioProvider } from \"./contexts/PermisosNavbarContext\";\nimport { PaginadoProductosProvider } from \"./contexts/AuxiliarContextPaginadoproductos\";\nimport TipoServicioView from \"./Views/TipoServicioView\";\nimport { SortServiciosProvider } from \"./contexts/AuxiliarSortServicios\";\nimport CambiarMonedaView from \"./Views/CambiarMonedaView\";\nimport ClientesView from \"./Views/ClientesView\";\nimport { SortClientesProvider } from \"./contexts/AuxiliarSortClientes\";\nimport GarantiasView from \"./Views/GarantiasView\";\nimport DeudasView from \"./Views/DeudasView\";\n\n// Importar la referencia de navegación global\nimport { navigationRef } from \"./contexts/navigationRef\";\n\nexport type RootStackParamList = {\n  Login: undefined;\n  Acciones: undefined;\n  HomeScreen: undefined;\n  Productos: undefined;\n  Servicios: undefined;\n  Proveedores: undefined;\n  \"Mi Tienda\": undefined;\n  Entradas: undefined;\n  Movimientos: undefined;\n  Administración: undefined;\n  Usuarios: undefined;\n  Tiendas: undefined;\n  Permisos: undefined;\n  \"Tipo de Servicio\": undefined;\n  \"Cambiar Moneda\": undefined;\n  ClientesView: undefined;\n  Garantias: undefined;\n  DeudasView: undefined;\n};\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction App() {\n  return (\n    <PermisosUsuarioProvider>\n      <SortClientesProvider>\n        <SortServiciosProvider>\n          <PaginadoProductosProvider>\n            <SortAccionesProvider>\n              <SortUsuariosProvider>\n                <NavigationLostDatesProvider>\n                  <SelectedButonProvider>\n                    <ModalMovimientosDatesProvider>\n                      <SortMovimientosDatesProvider>\n                        <ImagenesDeleteProvider>\n                          <SortEntradasProvider>\n                            <ModalEntradasDatesProvider>\n                              <ModalProveedoresDatesProvider>\n                                <SortProductosProvider>\n                                  <ModalProductsDatesProvider>\n                                    <UsuarioProvider>\n                                      <NavigationContainer ref={navigationRef}>\n                                        <Stack.Navigator initialRouteName=\"Login\">\n                                          <Stack.Screen\n                                            name=\"Login\"\n                                            component={LoginView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"HomeScreen\"\n                                            component={HomeScreen}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Productos\"\n                                            component={ProductosViwe}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Ventas\"\n                                            component={ServiciosView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Proveedores\"\n                                            component={ProveedoresView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Mi Tienda\"\n                                            component={EnMyTiendaView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Entradas\"\n                                            component={EntradasView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Movimientos\"\n                                            component={MovimientosView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Administración\"\n                                            component={Administracion}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Usuarios\"\n                                            component={UsuariosView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Tiendas\"\n                                            component={TiendasView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Acciones\"\n                                            component={AccionesView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Permisos\"\n                                            component={PermisosView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Clientes\"\n                                            component={ClientesView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Tipo de Servicio\"\n                                            component={TipoServicioView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Cambiar Moneda\"\n                                            component={CambiarMonedaView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Garantías\"\n                                            component={GarantiasView}\n                                          />\n                                          <Stack.Screen\n                                            name=\"Deudas\"\n                                            component={DeudasView}\n                                          />\n                                        </Stack.Navigator>\n                                      </NavigationContainer>\n                                    </UsuarioProvider>\n                                  </ModalProductsDatesProvider>\n                                </SortProductosProvider>\n                              </ModalProveedoresDatesProvider>\n                            </ModalEntradasDatesProvider>\n                          </SortEntradasProvider>\n                        </ImagenesDeleteProvider>\n                      </SortMovimientosDatesProvider>\n                    </ModalMovimientosDatesProvider>\n                  </SelectedButonProvider>\n                </NavigationLostDatesProvider>\n              </SortUsuariosProvider>\n            </SortAccionesProvider>\n          </PaginadoProductosProvider>\n        </SortServiciosProvider>\n      </SortClientesProvider>\n    </PermisosUsuarioProvider>\n  );\n}\n\nexport default App;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [26], () => (__webpack_require__(5819)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Colors","negro","blanco","azul_Claro","azul_Oscuro","azul_Suave","blanco_Suave","gris_claro","rojo_oscuro","verde_claro","styles","StyleSheet","create","radioButtonDesktop","flexDirection","height","width","alignItems","justifyContent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderColor","borderWidth","padding","borderRadius","marginHorizontal","backgroundColor","radioButtonMovil","marginRight","marginVertical","radioButtonSelected","radioButtonTextDesktop","fontSize","color","textShadowColor","textShadowOffset","textShadowRadius","radioButtonTextMovil","labelTextDesktop","labelTextModalDesktop","marginTop","marginLeft","labelTextModalMovil","labelTextMovil","radioButtonTextSelected","fontWeight","selectedText","navbarDekstop","position","top","zIndex","navbarMobile","menuIcon","left","scrollContainer","flexGrow","paddingVertical","buttonsContainerDesktop","flex","buttonContainterMovile","searchContainerDesktop","loginContainerStilesDesktop","loginContainerStilesMovil","searchContainerMovil","modalViewMesajeContainerDesktop","elevation","modalViewMesajeContainerMovil","textSearchDesktop","textSearchMovil","textNavbarMovil","textImputLogin","paddingHorizontal","textImputModal","textLabelAsInput","lineHeight","textDescroptionLabelAsInput","textImputModalNOEDITABLE","customTextImputSearchFullDesktop","customTextImputSearchFullMovil","customTextImputSearchFiftyDesktop","customTextImputSearchFiftyMovil","movilButtonBusqueda","separatorBlanco","separatorNegro","mobileButton","desktopButton","minWidth","marginBottom","desktopContent","mobileContent","image","text","CustomButtonNavbar","imageSource","onPress","isSelected","scale","useState","Animated","Value","useWindowDimensions","isMobile","buttonStyles","viewStyles","_jsx","TouchableOpacity","style","onPressIn","spring","toValue","useNativeDriver","start","onPressOut","children","View","transform","_jsxs","Image","source","Text","UsuarioContext","createContext","undefined","UsuarioProvider","usuario","setUsuario","Provider","value","useUsuario","context","React","Error","SortEntradasContext","SelectedButonProvider","selectedButon","setSelectedButon","useSelectedButon","modalOverlay","modalContentDesktop","maxHeight","modalContentMovil","option","borderBottomWidth","borderBottomColor","optionImage","tintColor","optionText","CustomDropdown","options","onSelect","modalVisible","setModalVisible","Modal","transparent","animationType","visible","onRequestClose","FlatList","data","keyExtractor","item","renderItem","handleSelect","label","forwardRef","placeholder","autoCapitalize","autoCompleteType","secureTextEntry","keyboardType","cursorColor","onChangeText","onBlur","multiline","numberOfLines","scrollEnabled","editable","onKeyPress","ref","TextInput","placeholderTextColor","autoComplete","cerverHost","cerverHostImages","navigationRef","createRef","navigate","name","params","current","iniciarSecionUser","async","userName","password","response","axios","post","nombre_usuario","contrasenna","msg","error","console","log","addUsuario","token","nombre","email","telefono","direccion","carnet_identidad","detalles_bancarios","rol","tienda","salario_CUP","headers","Authorization","isAxiosError","status","deleteUsuario","id_usuario","delete","actualizarUsuarioConContraseña","activo","put","actualizarUsuarioSinContraseña","getUsuarioById","id_user","get","alert","getAllUsuarios","filtrarUsuario","id_rol","id_tienda","ordenarUsuarios","items","criterio","ascendente","getAccionByID","id_accion","addAccionUsuario","descripcion","fecha","id_tipo_accion","tipo_accion","getAllTiposAccion","filtrarAcciones","fecha_limsup","fecha_liminf","ordenarAcciones","PermisosUsuarioContext","PermisosUsuarioProvider","permisosUsuario","setPermisosUsuario","permisosUsuarioNavbar","setPermisosUsuarioNavbar","usePermisosUsuario","Navbar","navigation","useNavigation","isExpanded","setIsExpanded","animationValue","useRef","modalUsuarioDetails","setModalUsuarioDetails","contrasennaVieja","setContrasennaVieja","contrasennaNueva1","setContrasennaNueva1","contrasennaNueva2","setContrasennaNueva2","hasPermisoViewProducto","setHasPermisoViewProducto","hasPermisoViewTipoServicio","setHasPermisoViewTipoServicio","hasPermisoViewUsuario","setHasPermisoViewUsuario","hasPermisoViewTienda","setHasPermisoViewTienda","hasPermisoViewAccion","setHasPermisoViewAccion","hasPermisoViewEntrada","setHasPermisoViewEntrada","hasPermisoViewProveedor","setHasPermisoViewProveedor","hasPermisoViewMovimiento","setHasPermisoViewMovimiento","hasPermisoViewCliente","setHasPermisoViewCliente","hasPermisoViewGarantia","setHasPermisoViewGarantia","nombreProductoRef","usePermisosUsuarioNavbar","isModalMensajeView","setModalMensajeView","modalMensaje","setModalMensaje","isReflechModalMensajeView","setReflechModalMensajeView","isModalChekEliminarEntrada","setIsModalChekEliminarEntrada","isModalChekVisible","setIsModalChekVisible","mesajeModalChek","setMesajeModalChek","selectedOption","setSelectedOption","butonSelected","setOptions","useEffect","resultEntradaView","resultProductoView","resultProveedorView","resultAccionesView","resultMovimientoLocalView","resultMovimientoGeneralView","resultAgregarUsuario","resultModificarUsuario","resultEliminarUsuario","parseInt","resultClienteView","resultGarantiaView","newOptions","push","require","resultTipoServicio","checkPermiso","buttonsContainerStyles","changePassword","flag","validarCampos","length","trim","contrasenna_vieja","contrasenna_nueva1","contrasenna_nueva2","cambiarContrasennaUsuarios","currentDate","Date","year","String","getFullYear","month","getMonth","padStart","day","getDate","auxAddAccionUsuarioDescripcion","toggleExpansion","timing","duration","animatedStyle","botones","ScrollView","horizontal","contentContainerStyle","showsHorizontalScrollIndicator","CustomDropdownProvicional","LinearGradient","colors","end","overflow","paddingBottom","right","nombre_rol","nombre_tienda","CustomTextImputSearch","_Fragment","container","dropdown","dropdownTextDesktop","dropdownTextMovil","dropdownContainer","setValue","title","searchable","onDropdownOpen","open","setOpen","textStyles","DropDownPicker","val","setItems","textStyle","dropDownContainerStyle","ModalProductsDatesContext","ModalProductsDatesProvider","modalProductsDates","setModalProductsDates","useModalProductsDates","SortProductosContext","SortProductosProvider","sortProductos","setSortProductos","useSortProductos","getAllRol","getPermisosOfRol","isPermiso","id_permiso","tiene","getAllTiendas","addTienda","comicion","hora_apertura","hora_cierre","tienda_Realizarventa","id_producto","cantidadARestar","cantidad","updateTienda","deleteTienda","getTiendaById","getAllTiendasByProduct","isProductoInTienda","getValorMonedaUSD","cambiarValorMonedaUSD","valor","getAllProductos","getAllProductosFromTable","page","getRelacionProductoByTienda","getProductoCantidadTotal","id_Producto","cantidad_total","getProductoById","addProducto","Sku","precio","precio_empresa","isFecha_Vencimiento","addProductoEntrada","addProductoAndImagenes","imagenes","updateProductoCostoAcumulado","costo_acumulado","updateProducto","updateProductoTienda","createProductoInTienda","deleteProducto","deleteFromProductoTiendaIn_0","filterProducts","sku","precio_liminf","precio_limsup","filterProductsEnTienda","ordenarProducts","moverProducto","id_tienda_origen","id_tienda_destino","expedirExelProductosEnMyTienda","productos","valormoneda","formatExel","map","producto","precioUSD","precioCUP","parseFloat","toFixed","precioEmpresaCUP","precioEmpresaUSD","cantidadTotal","responseType","expedirExelProductosConColumnas","columnas","columns","CustomDropDownPikerFromMover","crearimagenUnProducto","selectedImages","nameImagen","url","uri","deleteImagenByProducto","id_imagen","addNewMovimiento","tienda_origen","tienda_destino","getMovimientoById","id_movimiento","updateMovimiento","deleteMovimiento","filtrarMovimientos","nombreUsuario","nombreProducto","fechaDesde","fechaHasta","tiendaOrigen","tiendaDestino","nombre_producto","filtrarMovimientosEspecial","tiendaUsuario","ordenarMovimientos","PaginadoProductosContext","PaginadoProductosProvider","paginadoProductos","setPaginadoProductos","usePaginadoProductos","MyDateTableProductos","imtemsLength","itemsLength","cambioMoneda","setCambioMoneda","containterStyles","containerMovil","containerDesktop","setPage","itemsPerPage","setItemsPerPage","displayedItems","setDisplayedItems","isModalVisible","isModalModificarVisible","setModalModificarVisible","isModalEliminarVisible","setModalEliminarVisible","isModalMesajeMoverVisible","setModalMesajeMoverVisible","isModalMoverVisible","setModalMoverVisible","isRefleshView","setRefleshView","tiendaMoverDesde","setTiendaMoverDesde","tiendaMoverHasta","setTiendaMoverHasta","nombreTiendaUsuarioActual","setNombreTiendaUsuarioActual","cantidadTiendaUsuarioActual","setCantidadTiendaUsuarioActual","tiendasByProductoDesde","setTiendasByProductoDesde","tiendasByProductoHasta","setTiendasByProductoHasta","tiendaNombreEspecificaHasta","setTiendaNombreEspecificoHasta","tiendaNombreEspecificaDesde","setTiendaNombreEspecificoDesde","moverProductoFunction","isButtonDisabled","setIsButtonDisabled","idProductoOption","cantidadMoverProducto","nombreProductoOption","moverProdcutoFunctionValidarCampos","cantidadDelProductoEnLaTiendaDesde","result","encontrado","isPermisoOpcionesDeCeldaMoverGeneral","tiendaEspecificaHasta","find","tiendaEspecificaDesde","resultTienda","resultCantidadEnTienda","cargarVariablesMover","detailsModalView","isAddProducto","fileEditable","isModificarProducto","isAddProductoShowProveedoresTiendas","isAddProductoShowProveedores","isPermisoOpcionesDeCelda","setIsPermisoOpcionesDeCelda","isPermisoOpcionesDeCeldaModificar","setIsPermisoOpcionesDeCeldaModificar","isPermisoOpcionesDeCeldaEliminar","setIsPermisoOpcionesDeCeldaEliminar","isPermisoOpcionesDeCeldaMoverLocal","setIsPermisoOpcionesDeCeldaMoverLocal","setIsPermisoOpcionesDeCeldaMoverGeneral","resultadoCondicionalOpcionesDeCelda","tieneOpciones","setCantidadMoverProducto","resultPermisoButonOptionModificar","resultPermisoButonOptionEliminar","resultPermisoButonOptionMoverLocal","resultPermisoButonOptionMoverGeneral","from","to","Math","min","setTimeout","slice","handleChangePage","newPage","showTableColumns","DataTable","Header","column","index","Title","headerColumn","numeric","headerTextMovil","headerTextDesktop","paddingTop","aux","criterioOrden","tipoOrden","sortProductosAux","setIdProductoOption","setNombreProductoOption","setOption","toggleModal","auxNombreProducto","toggleModalOption","resultTiendas","Array","isArray","allTiendasMapeados","Promise","all","element","auxIdTiendas","auxDataTiendasProducto","forEach","datosTendaExisteProducto","existeTienda","some","cargarDatosTiendaParaMover","auxDeleteProductoById","imagen","substring","deleteProductoById","nuevosProductos","filter","Row","Cell","handerRowMovil","textAlign","textAlignVertical","flexWrap","disabled","numericValue","replace","paginationContainer","paginationButtonMovil","disabledButton","paginationLabel","handerRowDesktop","paginationButtonDesktop","MyDateTableModalShowDatesTienda","handerRow","MyDateTableModalShowDateProveedores","costoPorUnidad","id_proveedor","getAllEntradas","getEntradaByID","id_entrada","addEntrada","costo","fecha_vencimiento","costo_cup","proveedor","getAllEntradasByProductoId","getAllEntradasByProveedorId","modificarEntrada","deleteEntrada","filtrarEntrada","nombre_proveedor","costo_liminf","costo_limsup","ordenarEntradas","NavigationLostDatesContext","NavigationLostDatesProvider","navigationLostDates","setNavigationLostDates","isOnToken","useNavigationLostDates","radioButton","radioButtonText","CustomRadioButton","selected","ProductosViwe","optionsIsFechaVencimiento","selecterActivoDetails","setSelecterActivoDetails","idProductoDetails","setIdProductoDetails","nombreProductoDetails","setNombreProductoDetails","precioProductoUSDDetails","setPrecioProductoUSDDetails","precioProductoCUPDetails","setPrecioProductoCUPDetails","costoPromedio","setCostopromedio","precioEmpresaProductoDetails","setPrecioEmpresaProductoDetails","skuDetails","setSkuDetails","descripcionProductoDetails","setDescripcionProductoDetails","setSelectedImages","deleteImages","setDeleteImages","modificarAddImages","setModificarAddImages","isModalMensajeViewExel","setModalMensajeViewExel","isBotonModalMesajeVisible","setIsBotonModalMesajeVisible","optimizacionAbrirPorPrimeraVesProductosView","setOptimizacionAbrirPorPrimeraVesProductosView","controlFiltrarOPaginar","setControlFiltrarOPaginar","isPermisoButtonAddProducto","setIsPermisoButtonAddProducto","isPermisoHistorialDeProveedores","setIsPermisoHistorialDeProveedores","opcionesDeCelda","onDrop","filterItems","setFilterItems","filterItemsLength","setFilterItemsLength","tiendasByProducto","setTiendasByProducto","proveedorByProducto","setProveedorByProducto","handleKeyPress","event","nativeEvent","key","filtrarYOrdenarProductos","focus","cantidad_total_productos","productosMapeados","tiendas","toString","prevFilterItems","auxiliarPagination","dropdownItems","setDropDownItems","nombreProductoSearch","setNombreProductoSearch","sKUSearch","setSKUSearch","cantidadSearch","setCantidadSearch","rangoPrecioDesdeSearch","setRangoPrecioDesdeSearch","rangoPrecioHastaSearch","setRangoPrecioHastaSearch","selectedValueNombreTienda","setSelectedValueNombreTienda","selectedOptionTipoOrden","setSelectedOptionTipoOrden","loading","setLoading","loadingOfExel","setLoadingOfExel","callModalAddProducto","cargarDetailsOfProducto","getTiendasByProducto","entradas","proveedores","entrada","cargarProveedoresPorProducto","imagesPromises","httpImage","img","id_image","parseHttp","id","images","obtenerProductosConPermisosYDatos","runEffects","resultPermisoButonAddProducto","resultPermisoHistorialDeProveedores","tiendasMapeados","getDatesTiendaPiker","useFocusEffect","useCallback","auxOrdenar","setAxuOrdenar","productosFiltrados","auxiliarFunctionFilter","handleImageUpload","launchImageLibrary","mediaType","quality","includeBase64","selectionLimit","didCancel","errorMessage","assets","processedImages","asset","size","getImageFileSize","fileResponse","fetch","blob","file","File","fileName","type","compressedFile","imageCompression","maxSizeMB","maxWidthOrHeight","useWebWorker","base64","convertFileToBase64","Object","assign","isCompressed","convertUriToBase64","startsWith","resolve","reject","reader","FileReader","onload","onerror","readAsDataURL","handleRemoveImage","updatedImages","_","i","deleteImage","prevImages","clearFields","addNewProducto","validarMesaje","resultAllProductos","nuevoProducto","prevItems","auxDataImagesResponses","cont","entries","resul","modificarProducto","split","columnasMyDateTableTiendaModal","columnasMyDateTableProveedorModal","columnasMyDateTable","ActivityIndicator","validNumericValue","PanGestureHandler","onGestureEvent","resultAllTiendas","itemsFromExel","Nombre","Existencia","Precio_USD","Precio_CUP","Precio_Mayorista","resultProductoTienda","elemen","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","exportarExel","HomeScreen","resultAgregarTipoServicioView","resultModificarTipoServicioView","resultEliminarTipoServicioView","resultEliminarClienteView","resultModificarClienteView","resultAgregarClienteView","cargarPermisosDeUsuario","searchInput","CustomDropdownDetails","readOnly","handleOpen","prevOpen","searchPlaceholder","searchTextInputStyle","ModalEntradasDatesContext","ModalEntradasDatesProvider","modalEntradasDates","setModalEntradasDates","useModalEntradasDates","MyDateInput","dayValue","monthValue","yearValue","onDayChange","onMonthChange","onYearChange","styleText","isReadOnly","setDay","setMonth","setYear","days","setDays","activePicker","setActivePicker","numberOfDays","getDaysInMonth","Number","daysArray","updateDate","newDay","newMonth","newYear","togglePicker","picker","inputWrapper","containerStyle","pickerContainer","dropDownContainer","MyDateTableModalDataMoverTiendas","SortServiciosContext","SortServiciosProvider","sortServicios","setSortServicios","useSortServicios","MyDateTableServicios","columnasParaLaTablaMoverProducto","isAddEntrada","isModificarEntrada","isPermisoServicioGeneral","setIsPermisoServicioGeneral","resultServicioGeneral","obtenerCambioPrecio","mensajeOfEndTable","mensaje","sumaMinoristaUSD","sumaMayoristaUSD","sumaTransferencias","devuelto","cantidad_transferida","id_Tipo_servicio","mensajeOfEndTableGanancia","sumaGanancia","costo_tipo_servicio","sortEntradasAux","idEntradaOption","setIdEntradaOption","id_Servicio","nombreCliente","nombreTienda","nombreTipoServicio","id_Cliente","getServicioByID","id_servicio","addServicio","nota","id_tipo_servicio","id_cliente","id_garantia","id_encargo","tipo_servicio","cliente","garantia","deuda","encargo","modificarServicio","deleteServicio","filtrarSrvicio","nombre_cliente","ordenarServicios","getAllTipoServicios","getTipoServicioByID","id_TipoServicio","addTipoServicio","modificarTipoServicio","deleteTipoServicio","filtrarTipoSrvicio","getAllClientes","getClienteById","addCliente","Cif","actualizarCliente","deleteCliente","filtrarCliente","cif","detalle_bacario","ordenarClientes","addVenta","servicio","deleteVenta","getVentaByIDOfServicio","CustomRadioButtonSingle","getGarantiaByID","addGarantia","duracion","modificarGarantia","deleteGarantia","filtrarGarantia","duracion_limsup","duracion_liminf","addEncargo","adelanto","fecha_final","modificarEncargo","deleteEncargo","getDeudaByID","id_deuda","addDeuda","id_pagos_deuda","pago_deuda","id_pago_deuda","deleteDeuda","filtrarDeudas","deuda_liminf","deuda_limsup","saldada","addPagoDeuda","pagada","deletePagoDeuda","ServiciosView","capaPrioridadFechaDetails","setCapaPrioridadFechaDetails","capaPrioridadTiendasDetails","setCapaPrioridadTiendasDetails","capaPrioridadTipoServicioDetails","setCapaPrioridadTipoServicioDetails","capaPrioridadProductoDetails","setCapaPrioridadProductoDetails","capaPrioridadClienteDetails","setCapaPrioridadClienteDetails","capaPrioridadFechaDesdeSearsh","setCapaPrioridadFechaDesteSearsh","capaPrioridadFechaHastaSearsh","setCapaPrioridadFechaHastaSearsh","capaPrioridadTipoServicioSearsh","setCapaPrioridadTipoServicioSearsh","capaPrioridadTiendaSearsh","setCapaPrioridadTiendaSearsh","controlarCapas","prioridad","idFirstTimeProducto","setIdFirsTimeProducto","auxOptimizacion","setAuxOptimizacion","idServicioDetails","setIdServicioDetails","idClienteDetails","setIdClienteDetails","idTiendaDetails","setIdTiendaDetails","idTipoServicioDetails","setIdTipoServicioDetails","cantidadProductoDetails","setCantidadProductoDetails","costoPromedioProductoCUPDetails","setCostoPromedioProductoCUPDetails","costoPromedioProductoUSDDetails","setCostoPromedioProductoUSDDetails","precioUSDDetails","setPrecioUSDDetails","devueltoDetails","setDevueltoDetails","precioCUPDetails","setPrecioCUPDetails","notaDetails","setNotaDetails","descripcionDetails","setDescripcionDetails","fechaDiaDetails","setFechaDiaDetails","fechaMesDetails","setFechaMesDetails","fechaAnnoDetails","setFechaAnnoDetails","fechaDiaDetailsEncargo","setFechaDiaDetailsEncargo","fechaMesDetailsEncargo","setFechaMesDetailsEncargo","fechaAnnoDetailsEncargo","setFechaAnnoDetailsEncargo","adelantoEncargo","setAdelantoEncargo","isGarantiaDetails","setIsGarantiaDetails","isDeudaDetails","setIsDeudaDetails","isGarantiaDetailsViejo","setIsGarantiaDetailsViejo","idGarantiaDetails","setIdGarantiaDetails","duracionGarantiaDetails","setDuracionGarantiaDetails","cantidadTransferencia","setCantidadTransferencia","adelantoUSDDeudaDetails","setAdelantoUSDDeudaDetails","adelantoCUPDeudaDetails","setAdelantoCUPDeudaDetails","duracionGarantiaDetailsVieja","setDuracionGarantiaDetailsVieja","idEncargoDetails","setIdEncargoDetails","idDeudaDetails","setIdDeudaDetails","auxRedondeo","setAuxRedondeo","idTiendaDetailsViejo","setIdTiendaDetailsViejo","idProductoDetailsViejo","setIdProductoDetailsViejo","cantidadProductoDetailsViejo","setCantidadProductoDetailsViejo","idTipoServicioDetailsViejo","setIdTipoServicioDetailsViejo","devueltoDetailsViejo","setDevueltoDetailsViejo","isDateLoaded","setIsDateLoaded","idProductoAuxModificarDetails","setIdProductoAuxModificarDetails","idTiendaAuxModificarDetails","setIdTiendaAuxModificarDetails","cantidadAuxModificarDetails","setCantidadAuxModificarDetails","isVentaProducto","setIsVentaProducto","isEncargoProducto","setIsEncargoProducto","isPermisoAgregarServicio","setIsPermisoAgregarServicio","isPermisoEliminarServicio","setIsPermisoEliminarServicio","isPermisoModificarServicio","setIsPermisoModificarServicio","isPermisoServicioLocal","setIsPermisoServicioLocal","isPermisoVerCostoVenta","setIsPermisoVerCostoVenta","mensajeSumaVenta","dropdownItemsNombreCliente","setDropDownItemsNombreCliente","dropdownItemsNombreproducto","setDropDownItemsNombreProducto","dropdownItemsNombreTienda","setDropDownItemsNombreTienda","dropdownItemsNombreTipoServicio","setDropDownItemsNombreTipoServicio","nombreClienteSearch","setNombreClienteSearch","nombreProductoSearsh","idTipoServicioSearch","setIdTipoServicioSearch","idTiendaSearch","setIdTiendaSearch","fechaDiaDesdeSearch","setFechaDiaDesdeSearch","fechaMesDesdeSearch","setFechaMesdesdeSearch","fechaAnnoDesdeSearch","setFechaAnnoDesdeSearch","fechaDiaHastaSearch","setFechaDiaHastaSearch","fechaMesHastaSearch","setFechaMesHastaSearch","fechaAnnoHastaSearch","setFechaAnnoHastaSearch","optionsDevueltoDetails","handleRadioButtonPress","lastWeekDate","setDate","lastMonthDate","filtrarYOrdenarServicios","callModalAddProveedor","partes","anio","mes","dia","resultventa","cargarDetailsOfServicio","resultServicio","cargarDetailsOfProductoVenta","auxiliar","resultProdcuto","auxiliarAsyncFuncion","resultAgregarServicio","resultEliminarServicio","resultModificarServicio","resulServicioLocal","tipoServiciosMapeados","getTipoServicioPikerDetails","ClientesMapeados","getClientesPikerDetails","getTiendasPikerDetails","getProductosPikerDetails","serviciosFiltradas","id_Tienda","id_Deuda","id_Garantia","venta","auxSetModalProovedoresDates","addNewServicio","auxIsProductoInTienda","fechaBase","fechaEncargo","resultAddServicio","resultDeuda","modificarServicioFunction","cantidadEnTiendaNueva","eliminarServicioFunction","pagos_deuda","pagoDeuda","columnasMyDateTableEntradaModal","direction","margin","costoCUP","costoUSD","LoginView","ContainerStyle","username","setUsername","pasword","setPasword","iniciarSecion","resultUserAuth","resultUserDates","permisos","bottom","resizeMode","SortMovimientosDatesContext","SortMovimientosDatesProvider","SortMovimientosDates","setSortMovimientosDates","useSortMovimientosDates","ModalProveedoresDatesContext","ModalProveedoresDatesProvider","modalProveedoresDates","setModalProveedoresDates","useModalProveedoresDates","SortEntradasProvider","sortEntradas","setSortEntradas","useSortEntradas","ImagenesDeleteContext","ImagenesDeleteProvider","imagenesDelete","setImagenesDelete","getAllProveedores","getProveedorById","addProveedor","actualizarProveedor","detalle_bancario","deleteProveedor","filtrarProveedor","MyDateTableProveedores","isAddProveedor","isModificarProveedor","isDetallesProveedores","id_Proveedor","correo","MyDateTableModalShowDatesEntradas","ProveedoresView","idProveedorDetails","setIdProveedorDetails","nombreProveedorDetails","setNombreProveedorDetails","correoEmailProveedorDetails","setCorreoEmailProveedorDetails","direccionProveedorDetails","setDireccionProveedorDetails","telefonoProveedorDetails","setTelefonoProveedorDetails","notaProveedorDetails","setNotaProveedorDetails","cfiProveedorDetails","setCfiProveedorDetails","detallesBancariosProveedorDetils","setDetallesBancariosProveedorDetils","isModalChekEliminarVisible","setIsModalChekEliminarVisible","isPermisoAgregarProveedor","setIsPermisoAgregarProveedor","isPermisoEliminarProveedor","setIsPermisoEliminarProveedor","isPermisoModificarProveedor","setIsPermisoModificarProveedor","entradasByProveedor","setEntradasByProveedor","nombreProveedorSearch","setNombreProveedorSearch","correoEmyleSearch","setCorreoEmyleSearch","telefonoSearch","setTelefonoSearch","detallesBancariosSearch","setDetallesBancariosSearch","filtrarYOrdenarProovedores","Cfi","resultEntradasByProveedor","entradasMapeados","cargarDetailsOfProveedores","resultAgregarProveedor","resultEliminarProveedor","resultModificarProveedor","proveedoresMapeados","obtenerTodosLosProveedores","addNewProveedor","modificarProveedor","eliminarProveedor","MyDateTableEnMyTienda","tiendaByProductoSelected","setTiendaByProductoSelected","EnMyTiendaView","optimizacionFirstLoadingData","setOptimizacionFirstLoadingData","setCostoPromedio","precioProductoDetails","setPrecioProductoDetails","isModalMesajeRestarVisible","setModalMesajeRestarVisible","isModalRestarProductos","setModalRestarProductos","isModalVenderProductoVisible","setIsModalVenderProductoVisible","cantidadProductoServicioDetails","setCantidadProductoServicioDetails","cantidadRestarProducto","setCantidadRestarProducto","restarProductosValidarCampos","restarProductosFuction","cantidadNueva","isPermisoMoverGeneral","isPermisoMoverLocal","setIsPermisoMoverLocal","setIsPermisoMoverGeneral","isPermisoRestarProducto","setIsPermisoRestarProducto","resultPermisoVentaGeneral","checkPermisoServicios","resultProducto","auxiliarNombreTiendaPiker","includeExtra","availableSpace","newImages","MyDateTableEntradas","sumaCostos","id_Entrada","nombre_Proveedor","nombre_Producto","MyDateInputVencimiento","EntradasView","capaPrioridadProductosDetails","setCapaPrioridadProductosDetails","capaPrioridadProveedoresDetails","setCapaPrioridadProveedoresDetails","idEntradaDetails","setIdEntradaDetails","cantidadDetails","setCantidadDetails","costoUSDDetails","setCostoUSDDetails","costoCUPDetails","setCostoCUPDetails","fechaVencimientoDiaDetails","setFechaVencimientoDiaDetails","fechaVencimientoMesDetails","setFechaVencimientoMesDetails","fechaVencimientoAnnoDetails","setFechaVencimientoAnnoDetails","isFechaVencimientoDetails","setIsFechaVencimientoDetails","costoAuxModificarDetails","setCostoAuxModificarDetails","isPermisoAgregarEntrada","setIsPermisoAgregarEntrada","isPermisoEliminarEntrada","setIsPermisoEliminarEntrada","isPermisoModificarEntrada","setIsPermisoModificarEntrada","dropdownItemsNombreProveedor","setDropDownItemsNombreProveedor","costoDesdeSearch","setCostoDesdeSearch","costoHastaSearch","setCostohastaSearch","fechaDesdeSearch","setFechaDesdeSearch","fechaHastaSearch","setFechaHastaSearch","filtrarYOrdenarEntradas","yearVencimiento","monthVencimiento","dayVencimiento","cargarDetailsOfEntradas","resultAgregarEntrada","resultEliminarEntrada","resultModificarEntrada","getProveedoresPikerDetails","EntradasFiltradas","obtenerFechaVencimiento","addNewEntrada","productoData","cantidadExistencia","cpp","cant_existencia","CPP_anterior","cant_i","costoUnidad_i","calcularCPP","modificarEntradaFunction","resultNuevo","resultViejo","auxDiferencia","calcularCPPAjustado","eliminarEntradaFunction","movilButton","textDesktop","textMovil","CustomButtonAdministradorView","Administracion","ModalMovimientosDatesContext","ModalMovimientosDatesProvider","modalMovimientosDates","setModalMovimientosDates","useModalMovimientosDates","MyDateTableMovimientos","isAddMovimiento","isModificarMovimiento","id_Movimiento","nombre_Usuario","nombreTiendaOrigen","nombreTiendaDestino","id_TiendaOrigen","MovimientosView","setCapaPrioridadFechaDesdeSearsh","capaPrioridadTiendaOrigenSearsh","setCapaPrioridadTiendaOrigenSearsh","capaPrioridadTiendaDestinoSearsh","setCapaPrioridadTiendaDestinoSearsh","capaPrioridadViewTiendasSearsh","setCapaPrioridadViewTiendasSearsh","capaPrioridadViewFechaSearsh","setCapaPrioridadViewFechaSearsh","capaPrioridadViewFechaDetails","setCapaPrioridadViewFechaDetails","capaPrioridadViewTiendasDetails","setCapaPrioridadViewTiendasDetails","capaPrioridadViewProductosDetails","setCapaPrioridadViewProductosDetails","yesterdayDate","filtrarYOrdenarMovimientos","idMovimientoDetails","setIdMovimientoDetails","idUsuarioDetails","setIdUsuarioDetails","nombreUsuarioDetails","setNombreUsuarioDetails","idTiendaOrigenDetails","setIdTiendaOrigenDetails","idTiendaDestinoDetails","setIdTiendaDestinoDetails","isMovimientoEditable","setIsMovimientoEditable","isMovimientoEliminable","setIsMovimientoEliminable","idTiendaOrigenAuxModificarDetails","setIdTiendaOrigenAuxModificarDetails","idTiendaDestinoAuxModificarDetails","setIdTiendaDestinoAuxModificarDetails","isPermisoEliminarMovimiento","setIsPermisoEliminarMovimiento","isPermisoModificarMovimiento","setIsPermisoModificarMovimiento","optimizacionAbrirPorMovimientosProPrimeraVes","setOptimizacionAbrirPorMovimientosProPrimeraVes","dropdownItemsNombreUsuario","setDropDownItemsNombreUsuario","nombreUsuarioSearch","setNombreUsuarioSearch","tiendaOrigenSearch","setTiendaOrigenSearch","tiendaDestinoSearch","setTiendaDestinoSearch","callModalAddMovimiento","id_salida","cargarDetailsOfMovimiento","resultPermisoOptionMoverLocal","resultPermisoOptionMoverGeneral","usuariosMapeados","getUsuariosPikerDetails","MovimientosFiltradas","id_TiendaDestino","modificarMovimiento","resultOrigen","resultDestino","resultNuevoOrigen","resultNuevoProductoOrigen","resultNuevoProductoNuevoOrigen","cantidadVieja","cantidadEnOrigen","cantidadEnDestino","cantidadEnNuevoOrigen","cantidadNPOrigen","cantidadNPOEnTiendaNuevoOrigen","auxNombreProductoAccion","lavel","eliminarMovimiento","cantidadEnTiendaDestino","auxNombreTiendaOrigen","auxNombreTiendaDestino","SortUsuariosContext","SortUsuariosProvider","sortUsuarios","setSortUsuarios","useSortUsuarios","MyDateTableUsuarios","id_Usuario","UsuariosView","capaPrioridadTiendasSearsh","setCapaPrioridadTiendasSearsh","capaPrioridadRolesSearsh","setCapaPrioridadRolesSearsh","dropdownItemsTiendasDetails","setDropDownItemsTiendasDetails","dropdownItemsRolesDetails","setDropDownItemsRolesDetails","setIdusuarioDetails","nombreDelUsuarioDetails","setNombreDelUsuarioDetails","salario_CUPDetails","setsalario_CUPDetails","nombreUsuarioDetailsOriginal","setNombreUsuarioDetailsOriginal","correoEmailUsuarioDetails","setCorreoEmailUsuarioDetails","contrasennaUsuarioDetails","setContrasennaUsuarioDetails","CarnetIdentidadUsuarioDetails","setCarnetIdentidadUsuarioDetails","direccionUsuarioDetails","setDireccionUsuarioDetails","telefonoUsuarioDetails","setTelefonoUsuarioDetails","detallesBancariosUsuarioDetils","setDetallesBancariosUsuarioDetils","tiendaUsuarioDetails","setTiendaUsuarioDetails","rolUsuarioDetails","setRolUsuarioDetails","isPermisoModificarGerarquico","setIsPermisoModificarGerarquico","dropdownItemsTiendasSearsh","setDropDownItemsTiendasSearsh","dropdownItemsRolesSearsh","setDropDownItemsRolesSearsh","tiendaNombreSeleccionadaSearch","setTiendaNombreSeleccionadaSearch","rolNombreSeleccionadoSearsh","setRolNombreSeleccionadoSearsh","filtrarYOrdenarUsuarios","resultRoles","rolesMapeados","cargarDetailsOfUsuario","carnet_Identidad","obtenerTodosLosUsuarios","getDatesRolesPiker","getDatesTiendasAndRolesParaAgregarUsuario","addNewUsuario","resultUsuarios","modificarUsuario","eliminarUsuario","filteredText","test","MyDateTableTiendasView","onChange","DateTimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","placeholderText","TiendasView","crearHora","hora","minutos","nombreTiendaDetails","setNombreTiendaDetails","direccionTiendaDetails","setDireccionTiendaDetails","comicionTiendaDetails","setComicionTiendaDetails","horaApertura","setHoraApertura","horaCierre","setHoraCierre","setHours","setMinutes","setSeconds","cargarDetailsOfTienda","TiendasMapeados","obtenerTodasLasTiendas","addNewTienda","getTime","includes","toLocaleTimeString","formattedValue","newValue","CustomDateTimePicker","SortAccionesContext","SortAccionesProvider","sortAcciones","setSortAcciones","useSortAcciones","MyDateTableAcciones","id_Accion","nombre_TipoAccion","AccionesView","capaPrioridadTipoAccionSearsh","setCapaPrioridadTipoAccionSearsh","idAccionDetails","setIdAccionDetails","idUsuarioAccionDetails","setIdUsuarioAccionDetails","idTipoAccionDetails","setTipoAccionDetails","nombreUsuarioAccionDetails","setNombreUsuarioAccionDetails","nombreTipoAccionDetails","setNombreTipoAccionDetails","descripcionSearch","setDescripcionSearch","selectedValueNombreTipoAccion","setSelectedValueNombreTipoAccion","dropdownItemsTipoAccion","setDropDownItemsTipoAccion","filtrarYOrdenarAcciones","cargarDetailsOfAccion","TipoAccionMapeados","getDatesTipoAccionPiker","AccionesFiltradas","id_TipoAccion","MyDateTablePermisos","PermisosView","costoDetails","setCostoDetails","MyDateTableTipoServicio","nombre_TipoServicio","TipoServicioView","nombreTipoServicioDetails","setNombreTipoServicioDetails","isPermisoAgregarTipoServicio","setIsPermisoAgregarTipoServicio","isPermisoEliminarTipoServicio","setIsPermisoEliminarTipoServicio","isPermisoModificarTipoServicio","setIsPermisoModificarTipoServicio","nombreTipoServicioSearch","setNombreTipoServicioSearch","obtenerTodosLosTipoServicios","filtrarYOrdenarTipoServicio","addNewTipoServicio","modificarTipoServicioFunction","CambiarMonedaView","cambiarMoneda","SortClientesContext","SortClientesProvider","sortClientes","setSortClientes","useSortClientes","MyDateTableClientes","ClientesView","nombreClienteDetails","setNombreClienteDetails","correoEmailClienteDetails","setCorreoEmailClienteDetails","telefonoClienteDetails","setTelefonoClienteDetails","notaClienteDetails","setNotaClienteDetails","descripcionClienteDetails","setDescripcionClienteDetails","cfiClienteDetails","setCfiClienteDetails","detallesBancariosClienteDetils","isPermisoAgregarCliente","setIsPermisoAgregarCliente","isPermisoEliminarCliente","setIsPermisoEliminarCliente","isPermisoModificarCliente","setIsPermisoModificarCliente","cifSearch","setCifSearch","filtrarYOrdenarClientes","cargarDetailsOfCliente","clientesMapeados","obtenerTodosLosClientes","addNewCliente","MyDateTableGarantias","GarantiasView","setIdGarantiaDetaisl","isPermisoModificarGarantia","setIsPermisoModificarGarantia","nombreProductoVentaDetails","setNombreProductoVentaDetails","rangoDuracionDesdeSearch","setRangoDuracionDesdeSearch","rangoDuracionHastaSearch","setRangoDuracionHastaSearch","filtrarYOrdenarGarantias","cargarDetailsOfGarantia","resultModificarGarantia","modificarGarantiaFunction","eliminarGarantiaFunction","MyDateTableDeudas","isDeudaSaldadaFromTable","pago_deudas","suma","pago","total_pagado","MyDateTablePagoDeudaWithButton","onButtonPress","actionColumn","actionButton","actionButtonText","DeudasView","pagoDeudaByDeudaDetails","setPagoDeudaByDeudaDetails","isModalAddPagoDeudaView","setIsModalAddPagoDeudaView","cantidadUSDAddPagoDeuda","setCantidadUSDAddPagoDeuda","cantidadCUPAddPagoDeuda","setCantidadCUPAddPagoDeuda","setTotal_pagado","cantidad_restante","setCantidad_restante","isDeudaSaldadaSearsh","setIsDeudaSaldadaSearsh","rangoDeudaDesdeSearch","rangoDeudaHastaSearch","selecterEstadoDeudaSearch","setSelecterEstadoDeudaSearsh","optionsEstadoDeuda","filtrarYOrdenarDeudas","cargarDetailsOfDeuda","deudasFiltradas","deletePagoDeudaFronTabla","prevPagoDeuda","addNewDeuda","resultPagoDeuda","columnasMyDateTablePagoDeudaModal","eliminarDeudaFunction","Stack","createStackNavigator","NavigationContainer","Navigator","initialRouteName","Screen","component","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","e","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}